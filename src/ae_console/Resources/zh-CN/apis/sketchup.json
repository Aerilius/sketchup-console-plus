{"UI":{"description":"UI模块包含许多从SketchUp Ruby脚本创建简单UI元素的方法。","name":"UI","namespace":"","path":"UI","type":"module","visibility":"public"},"UI.add_context_menu_handler":{"description":"add_context_menu_handler方法用于用SketchUp注册一个代码块，在显示上下文菜单时将调用该代码块。然后，上下文菜单处理程序可以显示带有已添加项的上下文菜单。\\n \\n请小心在上下文菜单处理程序中执行的操作。如果执行操作需要很长时间，例如遍历模型或在大型模型中选择，则会延迟菜单。\\n \\n有关示例，请参阅Plugins/examples目录中的contextmenu.rb脚本。","name":"add_context_menu_handler","namespace":"UI","path":"UI.add_context_menu_handler","type":"module_function","visibility":"public","return":[["Integer"],"已注册的上下文处理程序数"]},"UI.beep":{"description":"beep方法播放系统蜂鸣音。\\n \\n beep方法不接受任何参数，也不返回任何值。","name":"beep","namespace":"UI","path":"UI.beep","type":"module_function","visibility":"public","return":[["nil"],""]},"UI.create_cursor":{"description":"create_cursor方法用于从指定位置的图像文件创建光标。必须从自定义工具中调用此函数。有关完整的示例，请参见工具类。\\n \\n自SketchUp 2016以来，可以为光标提供矢量图像。\\n Windows的SVG格式和OS X的PDF格式。","name":"create_cursor","namespace":"UI","path":"UI.create_cursor","type":"module_function","visibility":"public","parameters":[["filename",["String"],"图像的文件名。"],["hot_x",["Integer"],"一个x坐标，它是从光标图像的左边缘计算出的光标的“热点”。"],["hot_y",["Integer"],"一个y坐标，它是从光标图像的上边缘计算的光标的“热点”。\\n例如，值（hot_x，hot_y）=（5,10）将识别光标图像左边缘5像素处和光标图像上边缘10像素处的光标热点。"]],"return":[["Integer"],"与光标关联的ID"]},"UI.inputbox":{"description":"创建用于输入用户信息的对话框。对话框包含带有静态文本提示、可选默认值、可选下拉选择和可选标题的输入字段。\\n \\n您也可以使用此方法通过传递可选参数来显示选项的下拉列表。","name":"inputbox","namespace":"UI","path":"UI.inputbox","type":"module_function","visibility":"public","parameters":[["prompts",["Array<String>"],"出现在输入框中与输入字段相邻的提示名称数组。"],["defaults",["Array<String>"],"（可选）输入字段的默认值数组。"],["title",["String"],"（可选）输入框的标题。"],["title_or_list",["String","Array<String>"],"（可选）如果传递了3个参数，则此值是包含输入框标题的字符串。如果总共传递了4个参数，那么这是一个包含管道分隔的选项字符串的数组。"]],"return":[["Array<String>","FalseClass"],"如果用户没有取消对话框，则返回值的数组。如果用户取消了对话框，则返回false。数组中返回的值与输入字段的顺序相同。"]},"UI.inspector_names":{"description":"inspector_names方法用于返回所有检查人员的姓名。Inspectors是各种浮动对话框窗口的另一个名称，您可以通过绘制草图来激活这些窗口，例如“材质”窗口。","name":"inspector_names","namespace":"UI","path":"UI.inspector_names","type":"module_function","visibility":"public","return":[["Array<String>"],"包含检查程序名称的字符串数组。"]},"UI.menu":{"description":"menu方法检索具有给定名称的SketchUp菜单对象。这是向SketchUp菜单底部添加自定义项的第一步。\\n \\n有效的菜单名为：“file”、“edit”、“view”、“camera”、“draw”、“tools”、\\n“window”、“extensions”和“help”。\\n \\n请注意，“扩展”菜单在SketchUp 2015之前被命名为“插件”。\\n对于向后兼容性，“插件”仍然有效。","name":"menu","namespace":"UI","path":"UI.menu","type":"module_function","visibility":"public","parameters":[["menuname",["String"],"可选的。现有菜单的名称。默认菜单为“扩展名”"]],"return":[["Sketchup::Menu"],"菜单对象。"]},"UI.messagebox":{"description":"创建一个包含静态文本的对话框，其中包含供用户选择的一系列按钮。\\n \\n有效的消息框类型为：\\n-+MB_OK+-包含“确定”按钮。\\n-+MB_OKCANCEL+-包含“确定”和“取消”按钮。\\n-+MB_ABORTRETRYIGNORE+-包含abort、retry和ignore按钮。\\n-+MB_YESNOCANCEL+-包含“是”、“否”和“取消”按钮。\\n-+MB_YESNO+-包含“是”和“否”按钮。\\n-+MB_RETRYCANCEL+-包含重试和取消按钮。\\n-+MB_MULTILINE+-包含并确定按钮。\\n \\n传回值可以是下列任何一个值：\\n-+IDOK+ \\n-+IDCANCEL+ \\n-+IDABORT+ \\n-+IDRETRY+ \\n-+IDIGNORE+ \\n-+IDYES+ \\n-+IDNO+ \\n \\n在+MB_MULTILINE+讯息方块中，讯息显示为带滚动条的多行讯息（视需要）。+MB_MULTILNE+还允许使用第三个字符串参数作为MessageBox的标题。","name":"messagebox","namespace":"UI","path":"UI.messagebox","type":"module_function","visibility":"public","parameters":[["message",["String"],"要显示的消息。"],["type",["Integer"],"消息框类型，它将是方法注释列表中的常量。"]],"return":[["Integer"],"与用户所选内容相对应的数字。"]},"UI.model_info_pages":{"description":"model_info_pages方法用于返回所有可用模型信息页的名称。这些包括用户界面窗口，如组件、学分和单位。","name":"model_info_pages","namespace":"UI","path":"UI.model_info_pages","type":"module_function","visibility":"public","return":[["Array<String>"],"包含模型信息页名称的字符串数组。"]},"UI.openURL":{"description":"{.openURL}方法用于将默认Web浏览器打开到URL。","name":"openURL","namespace":"UI","path":"UI.openURL","type":"module_function","visibility":"public","parameters":[["url",["String"],""]],"return":[["Boolean"],""]},"UI.openpanel":{"description":"openpanel方法用于显示“打开”对话框。然后可以在代码中使用返回的路径打开文本或图像文件。\\n有关从磁盘读写的示例，请参阅标准Ruby类文件。\\n \\n在SketchUp 2014中修复了错误：通配符在SU7到SU2013之间无法正常工作。通配符筛选器未填充“文件类型”下拉列表。筛选字符串将显示在“文件名”字段中，其中“*”字符转换为\\n“u”字符。注意，通配符筛选字符串的格式已更改。\\n有关详细信息，请参阅下面的文件名参数说明。","name":"openpanel","namespace":"UI","path":"UI.openpanel","type":"module_function","visibility":"public","parameters":[["title",["String"],"应用于“打开”对话框的标题。"],["directory",["String"],"打开面板的默认目录。"],["filename",["String"],"打开面板的默认文件名。在Windows上，您也可以使用以下格式传递通配符筛选器：UIname|wildcard||。其他筛选器下拉列表\\n可以通过添加额外的筛选器名称对和筛选器添加列表项，如下所示：\\n UIname1|wildcard1|UIname2|wildcard2||。\\n此外，可以使用筛选器字段ui_name|wildcard1;wildcard2||中的分号分隔列表将多个通配符筛选器组合为一行。"]],"return":[["String"],"所选文件的完整路径和名称，如果取消对话框，则为nil。"]},"UI.play_sound":{"description":"play_sound方法用于播放声音文件。有效的声音文件包括\\n Mac上的.wav和.mp3文件以及PC上的.wav文件。","name":"play_sound","namespace":"UI","path":"UI.play_sound","type":"module_function","visibility":"public","parameters":[["filename",["String"],"SketchUp安装目录中文件名的相对路径，或文件的绝对路径。（有关搜索特定文件的方法，请参见Sketchup.find_support_file。）"]],"return":[["nil"],""]},"UI.preferences_pages":{"description":"preferences_pages方法用于返回所有首选项页面的名称。这些包括类似Windows的扩展。","name":"preferences_pages","namespace":"UI","path":"UI.preferences_pages","type":"module_function","visibility":"public","return":[["Array<String>"],"包含前缀名称的字符串数组。"]},"UI.refresh_inspectors":{"description":"通知SketchUp刷新所有检查器，如组件浏览器和大纲视图。当您需要在通过Ruby对文档进行更改后手动强制刷新时，这非常有用。通常，SketchUp会为您保持这些同步，但偶尔会不同步，例如当\\n model.start_operation禁用了UI更新时。","name":"refresh_inspectors","namespace":"UI","path":"UI.refresh_inspectors","type":"module_function","visibility":"public","return":[["nil"],""]},"UI.savepanel":{"description":"savepanel方法用于显示“保存”对话框。然后可以在代码内部使用返回的路径保存文本或图像文件。\\n有关从磁盘读写的示例，请参阅标准Ruby类文件。\\n \\n在SketchUp 2014中修复了错误：通配符在SU7到SU2013之间无法正常工作。以分号分隔的通配符列表未填充“文件类型”下拉列表。筛选字符串将显示在“文件名”字段中，并将“*”\\n个字符转换为“u”个字符。","name":"savepanel","namespace":"UI","path":"UI.savepanel","type":"module_function","visibility":"public","parameters":[["title",["String"],"应用于“保存”对话框的标题。"],["directory",["String"],"保存面板的默认目录。"],["filename",["String"],"保存面板的默认文件名。在Windows上，您也可以传递一个掩码，如“*.txt”，以显示所有的.txt文件。如果希望显示多个文件类型，则可以为文件名提供多个掩码，并用分号分隔它们，如：\\n“*.txt；*.doc”。"]],"return":[["String"],"所选文件的完整路径和名称，如果取消对话框，则为nil。"]},"UI.scale_factor":{"description":"返回SketchUp在高dpi监视器上使用的比例因子。对{Sketchup::View#draw2d}之类的东西有用。","name":"scale_factor","namespace":"UI","path":"UI.scale_factor","type":"module_function","visibility":"public","return":[["Float"],""]},"UI.select_directory":{"description":"select_directory方法用于显示OS对话框，用于从文件系统中选择一个或多个目录。\\n \\n选项：\\n-:title字符串对话框的标题。\\n-:directory字符串强制对话框的起始目录。if\n                             not specified the last chosen directory will be\n                             used\n-:select_multiple布尔值设为真，以允许选择多个项目。","name":"select_directory","namespace":"UI","path":"UI.select_directory","type":"module_function","visibility":"public","parameters":[["options",["Hash"],"哈希（可选）可以通过提供选项的哈希或命名参数来自定义对话框。"]],"return":[["String","Array<String>"],"当:select_multiple选项设置为false时，具有所选目录完整路径的字符串，否则为字符串数组，如果用户取消，则为nil。"]},"UI.set_cursor":{"description":"set_cursor方法用于将光标更改为具有给定光标ID的新光标。有关使用任意光标创建自己的工具的详细信息，请参阅UI.create_cursor和工具类。\\n \\n如果在标准SketchUp工具处于活动状态时调用此函数，则不会看到自定义光标，因为这些工具不断设置自己的光标以指示SketchUp的状态。","name":"set_cursor","namespace":"UI","path":"UI.set_cursor","type":"module_function","visibility":"public","parameters":[["cursor_id",["Integer"],"要显示的光标的ID。"]],"return":[["nil"],""]},"UI.set_toolbar_visible":{"description":"set_toolbar_visible方法用于设置给定工具栏是否可见。请注意，Mac和PC上的工具栏及其名称不同，因此在跨平台脚本中使用此方法时要小心并确保进行测试。","name":"set_toolbar_visible","namespace":"UI","path":"UI.set_toolbar_visible","type":"module_function","visibility":"public","parameters":[["name",["String"],"Ruby工具栏的名称。"],["visible",["Boolean"],"如果为true，则工具栏可见；如果为false，则隐藏工具栏。"]],"return":[["Boolean"],"如果成功则为真，否则为假。"]},"UI.show_extension_manager":{"description":"+show_extension_manager+方法用于显示扩展管理器对话框。","name":"show_extension_manager","namespace":"UI","path":"UI.show_extension_manager","type":"module_function","visibility":"public","return":[["nil"],""]},"UI.show_inspector":{"description":"show_inspector方法用于显示具有给定名称的检查器。您可以获得具有ui.inspector_名称的有效检查器列表。","name":"show_inspector","namespace":"UI","path":"UI.show_inspector","type":"module_function","visibility":"public","parameters":[["name",["String"],"要显示的检查器的名称。"]],"return":[["Boolean"],"成功为真，不成功为假"]},"UI.show_model_info":{"description":"show_model_info方法用于显示特定页面的模型信息对话框。您可以使用ui.model_info_页面获取有效对话框的列表。","name":"show_model_info","namespace":"UI","path":"UI.show_model_info","type":"module_function","visibility":"public","parameters":[["page_name",["String"],"要显示的模型信息对话框的名称。"]],"return":[["Boolean"],"对"]},"UI.show_preferences":{"description":"show_preferences方法用于显示SketchUp首选项对话框。\\n您可以使用ui.preferences页面获取有效对话框的列表。\\n \\n请注意，在OSX下，此方法当前不起作用。","name":"show_preferences","namespace":"UI","path":"UI.show_preferences","type":"module_function","visibility":"public","parameters":[["page_name",["String"],"要显示的首选项对话框的名称。"]],"return":[["Boolean"],"对"]},"UI.start_timer":{"description":"start_timer方法用于启动计时器。这是为任意动画创建重复代码片段的有效方法。\\n \\n有关使用计时器的自定义动画的详细示例，请参阅此日志：\\n http://sketchupapi.blogspot.com/2008/10/animate-yo-cheese.html \\n \\n请注意，存在一个错误，如果在非重复计时器中打开模式窗口，计时器将重复直到窗口关闭。","name":"start_timer","namespace":"UI","path":"UI.start_timer","type":"module_function","visibility":"public","parameters":[["repeat",["Boolean"],"（可选）如果希望计时器重复，则为true；如果不希望计时器重复，则为false \\n（或省略）。"],["seconds",["Numeric"],"调用代码前的时间（秒）。"]],"return":[["Integer"],"计时器ID"]},"UI.stop_timer":{"description":"stop_timer方法用于根据其ID停止计时器。","name":"stop_timer","namespace":"UI","path":"UI.stop_timer","type":"module_function","visibility":"public","parameters":[["id",["Integer"],"要停止的计时器的计时器ID。"]],"return":[["nil"],""]},"UI.toolbar":{"description":"toolbar方法用于按名称获取Ruby工具栏。如果工具栏不存在，将创建一个新的工具栏。","name":"toolbar","namespace":"UI","path":"UI.toolbar","type":"module_function","visibility":"public","parameters":[["name",["String"],"Ruby工具栏的名称。"]],"return":[["UI::Toolbar"],"工具栏对象"]},"UI.toolbar_names":{"description":"toolbar_names方法用于返回所有可用本机工具栏的名称（这在PC和Mac之间有所不同）。这些工具栏名称不包括Ruby工具栏。","name":"toolbar_names","namespace":"UI","path":"UI.toolbar_names","type":"module_function","visibility":"public","return":[["Array<String>"],"表示工具栏名称的字符串数组。"]},"UI.toolbar_visible?":{"description":"toolbar_visible?方法用于确定给定工具栏是否可见。请注意，Mac和PC上的工具栏及其名称不同，因此在跨平台脚本中使用此方法时要小心并确保进行测试。","name":"toolbar_visible?","namespace":"UI","path":"UI.toolbar_visible?","type":"module_function","visibility":"public","parameters":[["name",["String"],"本机工具栏的名称。"]],"return":[["Boolean"],"成功为真，不成功为假"]},"UI::Command":{"description":"命令类是向菜单和Ruby工具栏添加工具的首选类。例如，您可以添加一个菜单项并直接传递一个代码块，或者首先创建一个命令。\\n \\n使用命令可以更好地控制项目在用户界面中的工作方式，并且允许用户界面中的多个点调用相同的代码。例如，您可能需要一个工具栏按钮和一个上下文单击菜单项指向同一个命令，并从代码中的一个点控制工具提示及其“灰色化”。","name":"Command","namespace":"UI","path":"UI::Command","type":"class","visibility":"public"},"UI::Command#large_icon":{"description":"large_icon方法返回命令大图标的图标文件。","name":"large_icon","namespace":"UI::Command","path":"UI::Command#large_icon","type":"instance_method","visibility":"public","return":[["String"],"大图标的路径。"]},"UI::Command#large_icon=":{"description":"large_icon=方法用于标识命令大图标的图标文件。大图标应为24x24像素图像，以获得最佳显示质量。\\n \\n自SketchUp 2016以来，可以为光标提供矢量图像。\\n用于Windows的SVG格式和用于OS X的PDF格式。由于矢量图像可缩放为小图标和大图标大小，因此您可以选择仅对两个变体使用一个矢量图像。","name":"large_icon=","namespace":"UI::Command","path":"UI::Command#large_icon=","type":"instance_method","visibility":"public","parameters":[["path",["String"],"大图标的路径。"]],"return":[["String"],""]},"UI::Command#menu_text":{"description":"menu_text方法返回命令的菜单项名称。","name":"menu_text","namespace":"UI::Command","path":"UI::Command#menu_text","type":"instance_method","visibility":"public","return":[["String"],""]},"UI::Command#menu_text=":{"description":"menu_text=方法用于设置命令的菜单项名称。","name":"menu_text=","namespace":"UI::Command","path":"UI::Command#menu_text=","type":"instance_method","visibility":"public","parameters":[["menuitem",["String"],"表示命令的菜单项的字符串。"]],"return":[["String"],""]},"UI::Command#set_validation_proc":{"description":"{#set_validation_proc}方法允许您根据用户状态更改命令是否已启用、选中等。例如，除非用户有当前选择，否则您可能希望禁用命令。","name":"set_validation_proc","namespace":"UI::Command","path":"UI::Command#set_validation_proc","type":"instance_method","visibility":"public","return":[["UI::Command"],""]},"UI::Command#small_icon":{"description":"small_icon方法返回命令小图标的图标文件。","name":"small_icon","namespace":"UI::Command","path":"UI::Command#small_icon","type":"instance_method","visibility":"public","return":[["String"],"指向小图标的路径"]},"UI::Command#small_icon=":{"description":"small_icon=方法用于标识命令小图标的图标文件。小图标应为16x16像素图像，以获得最佳显示质量。\\n \\n自SketchUp 2016以来，可以为光标提供矢量图像。\\n用于Windows的SVG格式和用于OS X的PDF格式。由于矢量图像可缩放为小图标和大图标大小，因此您可以选择仅对两个变体使用一个矢量图像。","name":"small_icon=","namespace":"UI::Command","path":"UI::Command#small_icon=","type":"instance_method","visibility":"public","parameters":[["path",["String"],"指向小图标的路径。"]],"return":[["String"],""]},"UI::Command#status_bar_text":{"description":"status_bar_text方法返回命令的状态栏文本。","name":"status_bar_text","namespace":"UI::Command","path":"UI::Command#status_bar_text","type":"instance_method","visibility":"public","return":[["String"],"状态栏文本。"]},"UI::Command#status_bar_text=":{"description":"status_bar_text=方法用于设置命令的状态栏文本。","name":"status_bar_text=","namespace":"UI::Command","path":"UI::Command#status_bar_text=","type":"instance_method","visibility":"public","parameters":[["text",["String"],"当光标位于命令菜单项上时，将显示在状态栏上的文本。"]],"return":[["String"],""]},"UI::Command#tooltip":{"description":"tooltip方法返回命令项的工具提示文本。","name":"tooltip","namespace":"UI::Command","path":"UI::Command#tooltip","type":"instance_method","visibility":"public","return":[["String"],"工具提示文本"]},"UI::Command#tooltip=":{"description":"tooltip=方法用于定义命令项的工具提示文本。当命令附加到工具栏上并且用户将光标悬停在图标上时，将显示工具提示。","name":"tooltip=","namespace":"UI::Command","path":"UI::Command#tooltip=","type":"instance_method","visibility":"public","parameters":[["text",["String"],"工具提示的文本。"]],"return":[["String"],""]},"UI::Command.new":{"description":"new方法用于创建新命令。","name":"new","namespace":"UI::Command","path":"UI::Command.new","type":"class_method","visibility":"public","parameters":[["menutext",["String"],"此命令的菜单项出现在菜单上时将显示的文本。"]],"return":[["UI::Command"],"新的命令对象"]},"UI::HtmlDialog":{"description":"Ruby HtmlDialog类允许您从Ruby创建HTML对话框并与之交互。这是在SketchUp中生成复杂的嵌入式UI的最佳方法，但通常需要HTML和JavaScript专业知识。\\n \\n如果您的目标是简单地向用户显示网站，请考虑使用{UI#openURL}，它将在默认浏览器中显示网页，而不是在SketchUp中的对话框中。","name":"HtmlDialog","namespace":"UI","path":"UI::HtmlDialog","type":"class","visibility":"public"},"UI::HtmlDialog#add_action_callback":{"description":"{#add_action_callback}方法建立了一个Ruby回调方法，HTML对话框可以调用该方法来执行某些函数。\\n \\n使用+Sketchup.callback_method_name+从HTML对话框调用回调方法。HTML对话框中的JavaScript将使用相同数量的参数调用回调。\\n \\n呼叫是非同步的。JavaScript调用可能会在Ruby回调之前返回。使用+onCompleted+回调获得完成通知。\\n \\n诸如布尔值、数字、字符串、数组和哈希值等基本类型在Ruby和JavaScript之间自动转换。","name":"add_action_callback","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#add_action_callback","type":"instance_method","visibility":"public","parameters":[["callback_name",["String"],"要从HTML对话框调用的回调方法的名称。"]],"return":[["Boolean"],"如果操作添加成功，则为true，否则为false。"]},"UI::HtmlDialog#bring_to_front":{"description":"{#bring_to_front}方法用于将窗口置于最前面，即使其最小化，也将其置于其他窗口之上。","name":"bring_to_front","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#bring_to_front","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::HtmlDialog#center":{"description":"{#center}方法用于使HtmlDialog相对于活动模型窗口居中。如果没有激活的模型窗口，则此函数不起任何作用。","name":"center","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#center","type":"instance_method","visibility":"public","return":[["true"],""]},"UI::HtmlDialog#close":{"description":"{#close}方法用于关闭对话框。","name":"close","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#close","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::HtmlDialog#execute_script":{"description":"{#execute_script}方法用于异步在HTML对话框上执行JavaScript字符串。","name":"execute_script","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#execute_script","type":"instance_method","visibility":"public","parameters":[["script",["String"],"要在HtmlDialog上执行的JavaScript脚本。"]],"return":[["nil"],""]},"UI::HtmlDialog#initialize":{"description":"new方法用于创建新的HtmlDialog。\\n \\n +properties+哈希接受一个可选键+style+，其中值为以下值之一：\\n \\n[+UI:：HtmlDialog:：STYLE_DIALOG+]menu4停留在SketchUp的顶部。\\n \\n[+UI:：HtmlDialog:：STYLE_WINDOW+]HtmlDialog可以位于SketchUp and\n                                   doesn't disappear when SketchUp looses\n                                   focus.\n之后\\n[+UI:：HtmlDialog:：STYLE_UTILITY+]HtmlDialog以小标题栏显示，并位于SketchUp之上。","name":"initialize","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#initialize","type":"instance_method","visibility":"public","parameters":[["properties",["Hash"],"包含新创建的对话框的初始属性的哈希。"]],"return":[["UI::HtmlDialog"],""]},"UI::HtmlDialog#set_can_close":{"description":"{#set_can_close}方法用于附加一个在关闭前执行的块，该块必须返回一个布尔值，如果块返回false，则关闭将被取消。","name":"set_can_close","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_can_close","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"UI::HtmlDialog#set_file":{"description":"{#set_file}方法用于标识要在HtmlDialog中显示的本地HTML文件。","name":"set_file","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_file","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"HtmlDialog文件的文件名（HTML文件）"]],"return":[["nil"],""]},"UI::HtmlDialog#set_html":{"description":"{#set_html}方法用于使用提供的HTML字符串加载HtmlDialog。","name":"set_html","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_html","type":"instance_method","visibility":"public","parameters":[["html_string",["String"],"要在HtmlDialog中显示的有效HTML字符串。"]],"return":[["nil"],""]},"UI::HtmlDialog#set_on_closed":{"description":"{#set_on_closed}方法用于附加一个块，当对话框已经在关闭过程中时将执行该块，在该块中执行任何最后一分钟的操作，例如保存当前状态。","name":"set_on_closed","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_on_closed","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"UI::HtmlDialog#set_position":{"description":"{#set_position}方法用于设置HtmlDialog相对于屏幕的位置，以像素为单位。","name":"set_position","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_position","type":"instance_method","visibility":"public","parameters":[["left",["Integer"],"从左侧开始的像素数。"],["top",["Integer"],"屏幕顶部的像素数。"]],"return":[["true"],""]},"UI::HtmlDialog#set_size":{"description":"{#set_size}方法用于设置HtmlDialog的大小，以像素为单位。","name":"set_size","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_size","type":"instance_method","visibility":"public","parameters":[["width",["Integer"],"HtmlDialog的宽度。"],["height",["Integer"],"高度为HtmlDialog。"]],"return":[["true"],""]},"UI::HtmlDialog#set_url":{"description":"{#set_url}方法用于在特定URL上加载包含内容的HtmlDialog。此方法允许您在HtmlDialog中加载网站。","name":"set_url","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#set_url","type":"instance_method","visibility":"public","parameters":[["url",["String"],"特定网站的URL。"]],"return":[["nil"],""]},"UI::HtmlDialog#show":{"description":"{#show}方法用于显示非模态对话框。","name":"show","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#show","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::HtmlDialog#show_modal":{"description":"{#show_modal}方法用于显示模式对话框。","name":"show_modal","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#show_modal","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::HtmlDialog#visible?":{"description":"{#visible?}方法可用于判断对话框是否显示且仍处于活动状态，如果对话框最小化或在屏幕上不可见，则仍将返回+true+。","name":"visible?","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果对话框打开，则返回true。"]},"UI::HtmlDialog::STYLE_DIALOG":{"description":"常量","name":"STYLE_DIALOG","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog::STYLE_DIALOG","type":"constant","return":null,"visibility":"public"},"UI::HtmlDialog::STYLE_UTILITY":{"description":"存根值。","name":"STYLE_UTILITY","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog::STYLE_UTILITY","type":"constant","return":null,"visibility":"public"},"UI::HtmlDialog::STYLE_WINDOW":{"description":"存根值。","name":"STYLE_WINDOW","namespace":"UI::HtmlDialog","path":"UI::HtmlDialog::STYLE_WINDOW","type":"constant","return":null,"visibility":"public"},"UI::Notification":{"description":"通知对象允许您在桌面上显示本机通知，它们位于屏幕右上角，可以自定义为具有消息、图标和带有回调块的接受和/或取消按钮。","name":"Notification","namespace":"UI","path":"UI::Notification","type":"class","visibility":"public"},"UI::Notification#icon_name":{"description":"获取图标名，这是用于从文件系统路径获取图标的路径。","name":"icon_name","namespace":"UI::Notification","path":"UI::Notification#icon_name","type":"instance_method","visibility":"public","return":[["String"],""]},"UI::Notification#icon_name=":{"description":"设置图标路径，此图标将从给定的路径加载，路径必须是本地文件系统路径。","name":"icon_name=","namespace":"UI::Notification","path":"UI::Notification#icon_name=","type":"instance_method","visibility":"public","parameters":[["icon_name",["String"],"提供图标文件系统路径的字符串。"]],"return":[["Boolean"],""]},"UI::Notification#icon_tooltip":{"description":"获取图标工具提示，这是鼠标悬停在图标上时显示的字符串。","name":"icon_tooltip","namespace":"UI::Notification","path":"UI::Notification#icon_tooltip","type":"instance_method","visibility":"public","return":[["String"],""]},"UI::Notification#icon_tooltip=":{"description":"设置图标工具提示，当鼠标悬停在图标上时将显示此字符串。","name":"icon_tooltip=","namespace":"UI::Notification","path":"UI::Notification#icon_tooltip=","type":"instance_method","visibility":"public","parameters":[["icon_tooltip",["String"],"提供新图标工具提示的字符串。"]],"return":[["Boolean"],""]},"UI::Notification#initialize":{"description":"new方法用于创建新的{UI::Notification}。\\n \\n要在邮件中插入换行符，您需要使用+\\\\r\\\\n+。","name":"initialize","namespace":"UI::Notification","path":"UI::Notification#initialize","type":"instance_method","visibility":"public","parameters":[["icon_tooltip",["String"],"（可选）设置图像工具提示。"],["icon_name",["String"],"（可选）设置图像的路径。"],["message",["String"],"可选地分配消息。"],["sketchup_extension",["SketchupExtension"],"需要sketchup_extension \\n来识别发件人。"]],"return":[["UI::Notification"],""]},"UI::Notification#message":{"description":"以字符串形式获取消息。","name":"message","namespace":"UI::Notification","path":"UI::Notification#message","type":"instance_method","visibility":"public","return":[["String"],""]},"UI::Notification#message=":{"description":"设置新消息，通知是用于快速和简短消息的，请记住，它们是自动取消的。","name":"message=","namespace":"UI::Notification","path":"UI::Notification#message=","type":"instance_method","visibility":"public","parameters":[["message",["String"],"提供新消息的字符串。"]],"return":[["Boolean"],""]},"UI::Notification#on_accept":{"description":"在通知中显示具有给定标题和回调块的按钮，这两个参数都是必需的。","name":"on_accept","namespace":"UI::Notification","path":"UI::Notification#on_accept","type":"instance_method","visibility":"public","parameters":[["title",["String"],"设置按钮的标题。"],["block",["Block"],"设置操作回调，当用户单击“取消”按钮时将调用此回调。"]],"return":[["Boolean"],""]},"UI::Notification#on_accept_title":{"description":"返回接受的按钮标题。","name":"on_accept_title","namespace":"UI::Notification","path":"UI::Notification#on_accept_title","type":"instance_method","visibility":"public","return":[["String"],""]},"UI::Notification#on_dismiss":{"description":"在通知中显示具有给定标题和回调块的按钮，这两个参数都是必需的。","name":"on_dismiss","namespace":"UI::Notification","path":"UI::Notification#on_dismiss","type":"instance_method","visibility":"public","parameters":[["title",["String"],"设置按钮的标题。"],["block",["Block"],"设置操作回调，当用户单击“取消”按钮时将调用此回调。"]],"return":[["Boolean"],""]},"UI::Notification#on_dismiss_title":{"description":"返回解除的按钮标题。","name":"on_dismiss_title","namespace":"UI::Notification","path":"UI::Notification#on_dismiss_title","type":"instance_method","visibility":"public","return":[["String"],""]},"UI::Notification#show":{"description":"在屏幕右上角显示通知，如果显示多个通知，将从上到下排序通知，如果不采取任何措施，将自动取消通知。","name":"show","namespace":"UI::Notification","path":"UI::Notification#show","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"UI::Toolbar":{"description":"工具栏类包含在Ruby中创建和操作SketchUp工具栏的方法。工具栏是可用于激活自定义工具或Ruby脚本的按钮集合。\\n \\n有关创建可从工具栏调用的“命令”的详细信息，请参见命令对象。","name":"Toolbar","namespace":"UI","path":"UI::Toolbar","type":"class","visibility":"public"},"UI::Toolbar#add_item":{"description":"add_item方法用于向工具栏添加项。","name":"add_item","namespace":"UI::Toolbar","path":"UI::Toolbar#add_item","type":"instance_method","visibility":"public","parameters":[["command",["UI::Command"],"表示要添加到工具栏的命令的命令对象。"]],"return":[["UI::Toolbar"],"刚添加命令的工具栏"]},"UI::Toolbar#add_separator":{"description":"add_separator方法用于向工具栏添加行分隔符。","name":"add_separator","namespace":"UI::Toolbar","path":"UI::Toolbar#add_separator","type":"instance_method","visibility":"public","return":[["UI::Toolbar"],"刚添加行分隔符的工具栏"]},"UI::Toolbar#count":{"description":"{#count}方法继承自+Enumerable+混入模块。","name":"count","namespace":"UI::Toolbar","path":"UI::Toolbar#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"UI::Toolbar#each":{"description":"each方法用于迭代连接到工具栏的所有命令。","name":"each","namespace":"UI::Toolbar","path":"UI::Toolbar#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::Toolbar#get_last_state":{"description":"get_last_state方法用于确定工具栏在上一个SketchUp会话中是隐藏的还是可见的。\\n \\n有效状态为1表示可见，0表示隐藏，1表示以前从未显示。","name":"get_last_state","namespace":"UI::Toolbar","path":"UI::Toolbar#get_last_state","type":"instance_method","visibility":"public","return":[["Boolean"],"工具栏的最后状态（请参见注释）"]},"UI::Toolbar#hide":{"description":"hide方法用于隐藏用户界面上的工具栏。","name":"hide","namespace":"UI::Toolbar","path":"UI::Toolbar#hide","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::Toolbar#length":{"description":"{#length}方法返回工具栏中的项目数。","name":"length","namespace":"UI::Toolbar","path":"UI::Toolbar#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"UI::Toolbar#name":{"description":"name方法返回工具栏的名称。","name":"name","namespace":"UI::Toolbar","path":"UI::Toolbar#name","type":"instance_method","visibility":"public","return":[["String"],"工具栏的名称。"]},"UI::Toolbar#restore":{"description":"restore方法用于将工具栏重新定位到其以前的位置，并显示是否隐藏。","name":"restore","namespace":"UI::Toolbar","path":"UI::Toolbar#restore","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::Toolbar#show":{"description":"show方法用于在用户界面中显示工具栏。","name":"show","namespace":"UI::Toolbar","path":"UI::Toolbar#show","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::Toolbar#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"UI::Toolbar","path":"UI::Toolbar#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"UI::Toolbar#visible?":{"description":"visible?方法用于确定工具栏当前是否可见。","name":"visible?","namespace":"UI::Toolbar","path":"UI::Toolbar#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果可见，则为真"]},"UI::Toolbar.new":{"description":"new方法创建一个新的工具栏对象。","name":"new","namespace":"UI::Toolbar","path":"UI::Toolbar.new","type":"class_method","visibility":"public","parameters":[["toolbarname",["String"],"新工具栏的名称。"]],"return":[["UI::Toolbar"],"新创建的工具栏对象"]},"UI::WebDialog":{"description":"RubyWebDialog类允许您从Ruby创建DHTML对话框并与之交互。\\n \\n如果您的目标是简单地向用户显示网站，请考虑使用ui.geturl，它将在默认浏览器中显示网页，而不是在SketchUp中的对话框中。\\n \\n有关详细的逐步示例，请参阅此日志：\\n http://sketchupapi.blogspot.com/2008/02/sharing-data-between-sketchup-ruby-and.html \\n \\n在Windows下，Web对话框中的IE呈现模式与普通浏览器中的不同。默认情况下，它将选择较旧的渲染模式，不同版本的SketchUp将使用不同的模式。为了可靠地控制Windows下Web对话框的呈现模式，您需要插入一个特殊的META兼容性标记：\\n \n  // To always force the latest version available:\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\n000152\\n从SketchUp 2013开始，您可以在对话框中嵌入一个特殊的HTML链接，该链接将启动扩展仓库并显示指定的扩展页面。\\n如果您的扩展依赖于另一个扩展，并且您希望指导用户安装该扩展，则此操作非常有用。\\n \\n例如，若要启动URL为以下内容的扩展页面，请执行以下操作：http://extension s.Sketchup.com/en/content/advanced-camera-tools：","name":"WebDialog","namespace":"UI","path":"UI::WebDialog","type":"class","visibility":"public"},"UI::WebDialog#add_action_callback":{"description":"add_action_callback方法建立了一个Ruby回调方法，Web对话框可以调用该方法来执行某些函数。\\n \\n使用skp:callback_method_name从WebDialog调用回调方法。WebDialog中的JavaScript将使用表示回调方法参数的字符串调用回调方法。\\n \\n请注意，您正在以单个字符串的形式将数据发送到Ruby，该字符串通过window.location条传递。在PC上的Internet Explorer中，此栏的长度限制为2038个字符，因此如果需要向下传递大数据，可以考虑使用get_element_value \\n从HTML中的隐藏输入字段中提取更长的字符串。","name":"add_action_callback","namespace":"UI::WebDialog","path":"UI::WebDialog#add_action_callback","type":"instance_method","visibility":"public","parameters":[["callback_name",["String"],"要从WebDialog调用的回调方法的名称。"]],"return":[["Boolean"],""]},"UI::WebDialog#allow_actions_from_host":{"description":"默认情况下，只允许在显示WebDialog的主机上执行操作。allow_actions_from_host方法用于有选择地允许在远离WebDialog所在主机的主机上执行操作。如果WebDialog是本地的，则不允许远程主机，除非使用此方法。","name":"allow_actions_from_host","namespace":"UI::WebDialog","path":"UI::WebDialog#allow_actions_from_host","type":"instance_method","visibility":"public","parameters":[["hostname",["String"],"WebDialog可以安全访问的主机名（域）。"]],"return":[["Boolean"],""]},"UI::WebDialog#bring_to_front":{"description":"bring_to_front方法用于将WebDialog置于桌面上所有窗口的前面。参见show_modal了解如何确保您的WedDialogs位于顶部。","name":"bring_to_front","namespace":"UI::WebDialog","path":"UI::WebDialog#bring_to_front","type":"instance_method","visibility":"public","return":[["UI::WebDialog"],""]},"UI::WebDialog#close":{"description":"close方法用于关闭WebDialog。","name":"close","namespace":"UI::WebDialog","path":"UI::WebDialog#close","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::WebDialog#execute_script":{"description":"execute_script方法用于在Web对话框上执行JavaScript字符串。","name":"execute_script","namespace":"UI::WebDialog","path":"UI::WebDialog#execute_script","type":"instance_method","visibility":"public","parameters":[["script",["String"],"要在WebDialog上执行的JavaScript脚本。"]],"return":[["Boolean"],""]},"UI::WebDialog#get_default_dialog_color":{"description":"get_default_dialog_color方法用于获取Web对话框的默认对话框颜色。","name":"get_default_dialog_color","namespace":"UI::WebDialog","path":"UI::WebDialog#get_default_dialog_color","type":"instance_method","visibility":"public","return":[["String"],"代表颜色的六位十六进制数。"]},"UI::WebDialog#get_element_value":{"description":"get_element_value方法用于从Web对话框的DOM获取具有给定元素\\n id的值。","name":"get_element_value","namespace":"UI::WebDialog","path":"UI::WebDialog#get_element_value","type":"instance_method","visibility":"public","parameters":[["element_id",["String"],"HTML代码中元素的名称。"]],"return":[["String"],"包含检索值的字符串。"]},"UI::WebDialog#initialize":{"description":"+new+方法用于创建新的WebDialog。\\n \\n自SU2017起，对话框的位置和大小是DPI感知的-它将自动缩放到监视器的DPI。指定在传统低dpi监视器上的单位。\\n \\n请注意，嵌入在对话框中的浏览器取决于用户的操作系统。在Mac上，Safari是嵌入式的，而在PC上，安装了Internet Explorer的任何版本都将嵌入。","name":"initialize","namespace":"UI::WebDialog","path":"UI::WebDialog#initialize","type":"instance_method","visibility":"public","return":[["WebDialog"],"WebDialog的新实例"]},"UI::WebDialog#max_height":{"description":"max_height方法用于获取允许用户将对话框调整为的最大高度。","name":"max_height","namespace":"UI::WebDialog","path":"UI::WebDialog#max_height","type":"instance_method","visibility":"public","return":[["Integer"],"最大高度（像素）"]},"UI::WebDialog#max_height=":{"description":"max_height=方法用于设置允许用户将对话框大小调整到的最大高度。","name":"max_height=","namespace":"UI::WebDialog","path":"UI::WebDialog#max_height=","type":"instance_method","visibility":"public","parameters":[["height",["Integer"],"最大高度（像素）"]],"return":[["Integer"],""]},"UI::WebDialog#max_width":{"description":"max_width方法用于获取允许用户将对话框调整为的最大宽度。","name":"max_width","namespace":"UI::WebDialog","path":"UI::WebDialog#max_width","type":"instance_method","visibility":"public","return":[["Integer"],"最大宽度（像素）"]},"UI::WebDialog#max_width=":{"description":"max_width=方法用于设置允许用户将对话框大小调整到的最大宽度。","name":"max_width=","namespace":"UI::WebDialog","path":"UI::WebDialog#max_width=","type":"instance_method","visibility":"public","parameters":[["width",["Integer"],"最大宽度（像素）"]],"return":[["Integer"],""]},"UI::WebDialog#min_height":{"description":"min_width方法用于获取允许用户将对话框调整为的最小高度。","name":"min_height","namespace":"UI::WebDialog","path":"UI::WebDialog#min_height","type":"instance_method","visibility":"public","return":[["Integer"],"最小高度（像素）"]},"UI::WebDialog#min_height=":{"description":"min_height=方法用于设置允许用户将对话框调整为的最小高度。","name":"min_height=","namespace":"UI::WebDialog","path":"UI::WebDialog#min_height=","type":"instance_method","visibility":"public","parameters":[["height",["Integer"],"最小高度（像素）"]],"return":[["Integer"],""]},"UI::WebDialog#min_width":{"description":"min_width方法用于获取允许用户将对话框调整为的最小宽度。","name":"min_width","namespace":"UI::WebDialog","path":"UI::WebDialog#min_width","type":"instance_method","visibility":"public","return":[["Integer"],"最小宽度（像素）"]},"UI::WebDialog#min_width=":{"description":"min_width=方法用于设置允许用户将对话框大小调整到的最小宽度。","name":"min_width=","namespace":"UI::WebDialog","path":"UI::WebDialog#min_width=","type":"instance_method","visibility":"public","parameters":[["width",["Integer"],"最小宽度（像素）"]],"return":[["Integer"],""]},"UI::WebDialog#navigation_buttons_enabled=":{"description":"navigation_buttons_enabled=方法用于设置Home、Next、Back按钮是否在Mac上的WebDialog顶部可见。这种方法在电脑上没有用处，因为这些按钮永远不会显示。","name":"navigation_buttons_enabled=","namespace":"UI::WebDialog","path":"UI::WebDialog#navigation_buttons_enabled=","type":"instance_method","visibility":"public","parameters":[["nav_buttons",["Boolean"],"如果为“真”，则隐藏按钮；如果为“假”，则显示按钮。"]],"return":[["Boolean"],""]},"UI::WebDialog#navigation_buttons_enabled?":{"description":"navigation_buttons_enabled?方法用于获取Mac上WebDialog顶部的Home、Next和Back按钮是否可见。这种方法在电脑上没有用处，因为这些按钮永远不会显示。\\n \\n在Mac电脑上，新的WebDialogs预设为true。","name":"navigation_buttons_enabled?","namespace":"UI::WebDialog","path":"UI::WebDialog#navigation_buttons_enabled?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果按钮可见，则为真。"]},"UI::WebDialog#post_url":{"description":"post_url方法用于使用HTTP post方法将数据发送到URL。","name":"post_url","namespace":"UI::WebDialog","path":"UI::WebDialog#post_url","type":"instance_method","visibility":"public","parameters":[["url",["String"],"发送数据的URL。"],["data",["String"],"要发送的数据。"]],"return":[["nil"],""]},"UI::WebDialog#screen_scale_factor":{"description":"对于这个WebDialog当前所在的屏幕，screen_scale_factor方法返回屏幕像素与逻辑窗口单位（在Mac上称为“点”）的比率。在视网膜屏幕Mac上，此比率将大于1.0。\\n在Windows上，此值始终返回1.0。","name":"screen_scale_factor","namespace":"UI::WebDialog","path":"UI::WebDialog#screen_scale_factor","type":"instance_method","visibility":"public","return":[["Float"],"屏幕比例因子"]},"UI::WebDialog#set_background_color":{"description":"set_background_color方法用于设置WebDialog的背景色。","name":"set_background_color","namespace":"UI::WebDialog","path":"UI::WebDialog#set_background_color","type":"instance_method","visibility":"public","parameters":[["color",["String"],"六位数的十六进制颜色。"]],"return":[["nil"],""]},"UI::WebDialog#set_file":{"description":"{set_file}方法用于标识要在WebDialog中显示的本地HTML文件。","name":"set_file","namespace":"UI::WebDialog","path":"UI::WebDialog#set_file","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"WebDialog文件的文件名（HTML文件）。"],["path",["String"],"文件名相对于的路径。"]],"return":[["nil"],""]},"UI::WebDialog#set_full_security":{"description":"set_full_security方法用于将WebDialog置于更高的安全模式，在该模式下，浏览器中不允许使用远程URL和插件（如flash）。当创建新的WebDialog时，默认为false。","name":"set_full_security","namespace":"UI::WebDialog","path":"UI::WebDialog#set_full_security","type":"instance_method","visibility":"public","return":[["UI::WebDialog"],"更新的WebDialog"]},"UI::WebDialog#set_html":{"description":"set_html方法用于加载提供的字符串为HTML的WebDialog。","name":"set_html","namespace":"UI::WebDialog","path":"UI::WebDialog#set_html","type":"instance_method","visibility":"public","parameters":[["html_string",["String"],"要在WebDialog中显示的有效HTML字符串。"]],"return":[["nil"],""]},"UI::WebDialog#set_on_close":{"description":"set_on_close方法用于在对话框关闭时建立一个或多个要执行的活动（例如保存对话框中存储的值）。","name":"set_on_close","namespace":"UI::WebDialog","path":"UI::WebDialog#set_on_close","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::WebDialog#set_position":{"description":"set_position方法用于设置WebDialog相对于屏幕的位置（以像素为单位）。","name":"set_position","namespace":"UI::WebDialog","path":"UI::WebDialog#set_position","type":"instance_method","visibility":"public","parameters":[["left",["Integer"],"从左侧开始的像素数。"],["top",["Integer"],"屏幕顶部的像素数。"]],"return":[["nil"],""]},"UI::WebDialog#set_size":{"description":"set_size方法用于设置WebDialog的大小（以像素为单位）。","name":"set_size","namespace":"UI::WebDialog","path":"UI::WebDialog#set_size","type":"instance_method","visibility":"public","parameters":[["w",["Integer"],"WebDialog的宽度。"],["h",["Integer"],"WebDialog的高度。"]],"return":[["nil"],""]},"UI::WebDialog#set_url":{"description":"set_url方法用于在特定URL上加载包含内容的WebDialog。此方法允许您在Web对话框中加载网站。","name":"set_url","namespace":"UI::WebDialog","path":"UI::WebDialog#set_url","type":"instance_method","visibility":"public","parameters":[["url",["String"],"特定网站的URL。"]],"return":[["nil"],""]},"UI::WebDialog#show":{"description":"show方法用于显示非模态对话框。","name":"show","namespace":"UI::WebDialog","path":"UI::WebDialog#show","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::WebDialog#show_modal":{"description":"show_modal方法用于显示模式对话框。在SketchUp 6 \\n和7中，这在Mac和PC上表现不同。在PC上，它显示了一个真正的模式对话框，这意味着只要WebDialog可见，就不能在SketchUp内的其他位置执行输入。在Mac上，“modal”WebDialogs的行为方式不是这样的，而是“始终在其他窗口之上”。","name":"show_modal","namespace":"UI::WebDialog","path":"UI::WebDialog#show_modal","type":"instance_method","visibility":"public","return":[["nil"],""]},"UI::WebDialog#visible?":{"description":"visible?方法用于判断当前是否显示WebDialog。","name":"visible?","namespace":"UI::WebDialog","path":"UI::WebDialog#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果可见，则为真。"]},"UI::WebDialog#write_image":{"description":"write_image方法用于抓取Web对话框屏幕的一部分并将图像保存到给定的文件路径。","name":"write_image","namespace":"UI::WebDialog","path":"UI::WebDialog#write_image","type":"instance_method","visibility":"public","parameters":[["option",["Integer"],"指定保存图像时使用的方法。对于JPG/JPEG图像，这指定了图像质量，范围从1到100。对于PNG图像，指定压缩算法：<4（最佳速度）、4-8\\n（默认值）或>=9（最佳压缩）。"],["image_path",["String"],"已保存图像的目标路径。"],["bottom_right_y",["Integer"],"要抓取的区域右下角的x坐标。"],["bottom_right_x",["Integer"],"要抓取的区域右下角的x坐标。"],["top_left_y",["Integer"],"要抓取的区域左上角的x坐标。"],["top_left_x",["Integer"],"要抓取的区域左上角的x坐标。"]]},"Geom":{"description":"GEM模块定义了许多模块方法，可用于执行不同的几何操作。\\n \\n此模块中的方法将行和平面作为参数。没有表示线条或平面的特殊类。数组用于这两者。\\n \\n一条直线可以表示为一个点和一个矢量的数组，也可以表示为两个points.\n  line1 = [Geom::Point3d.new(0, 0, 0), Geom::Vector3d.new(0, 0, 1)]\n  line2 = [Geom::Point3d.new(0, 0, 0), Geom::Point3d.new(0, 0, 100)]\n的数组\\n一个平面可以表示为一个点和一个矢量的数组，或者表示为一个4个数字的数组，这些数字给出了一个平面的系数equation.\n  plane1 = [Geom::Point3d.new(0, 0, 0), Geom::Vector3d.new(0, 0, 1)]\n  plane2 = [0, 0, 1, 0]\n \\n如果您不熟悉线、平面、和D向量。","name":"Geom","namespace":"","path":"Geom","type":"module","visibility":"public"},"Geom.closest_points":{"description":"{.closest_points}方法用于计算两条直线上最近的点。","name":"closest_points","namespace":"Geom","path":"Geom.closest_points","type":"module_function","visibility":"public","parameters":[["line1",["Array(Geom::Point3d, Geom::Vector3d)"],"要相交的第一条线"],["line2",["Array(Geom::Point3d, Geom::Vector3d)"],"第二条相交线"]],"return":[["Array(Geom::Point3d, Geom::Point3d)"],"两点数组。第一点在第一行，第二点在第二行。"]},"Geom.fit_plane_to_points":{"description":"{.fit_plane_to_points}方法用于计算最适合点阵列的平面。如果给出的点超过三个，其中一些点可能不在平面上。\\n \\n平面返回为4个数字中的{Array}，这些数字是平面方程<code>Ax + By + Cz + D = 0</code>的系数。","name":"fit_plane_to_points","namespace":"Geom","path":"Geom.fit_plane_to_points","type":"module_function","visibility":"public"},"Geom.intersect_line_line":{"description":"{.intersect_line_line}计算两条线的交点。","name":"intersect_line_line","namespace":"Geom","path":"Geom.intersect_line_line","type":"module_function","visibility":"public","parameters":[["line1",["Array(Geom::Point3d, Geom::Vector3d)"],"要相交的第一条线。"],["line2",["Array(Geom::Point3d, Geom::Vector3d)"],"要相交的第二条线。"]],"return":[["Geom::Point3d","nil"],"交叉点。如果它们不相交，则返回+nil+。"]},"Geom.intersect_line_plane":{"description":"使用{.intersect_line_plane}方法计算直线和平面的交点。","name":"intersect_line_plane","namespace":"Geom","path":"Geom.intersect_line_plane","type":"module_function","visibility":"public","parameters":[["line",["Array(Geom::Point3d, Geom::Vector3d)"],null],["plane",["Array(Geom::Point3d, Geom::Point3d)"],null]],"return":[["Geom::Point3d","nil"],"一个Point3d物体。如果它们不相交，则返回+nil+。"]},"Geom.intersect_plane_plane":{"description":"使用{.intersect_plane_plane}方法计算两个平面的交点。","name":"intersect_plane_plane","namespace":"Geom","path":"Geom.intersect_plane_plane","type":"module_function","visibility":"public","parameters":[["plane1",["Array(Geom::Point3d, Geom::Point3d)"],"第一个相交的平面"],["plane2",["Array(Geom::Point3d, Geom::Point3d)"],"要相交的第二个平面"]],"return":[["Array(Geom::Point3d, Geom::Vector3d)"],"如果成功，平面相交的线。如果平面不相交，返回+nil+。"]},"Geom.linear_combination":{"description":"{.linear_combination}方法用于计算点或向量的线性组合。","name":"linear_combination","namespace":"Geom","path":"Geom.linear_combination","type":"module_function","visibility":"public"},"Geom.point_in_polygon_2D":{"description":"{.point_in_polygon_2D}方法用于确定点是否在多边形内。您要检查的点和多边形中的点的z组件都被忽略，有效地使其成为二维检查。","name":"point_in_polygon_2D","namespace":"Geom","path":"Geom.point_in_polygon_2D","type":"module_function","visibility":"public","parameters":[["point",["Geom::Point3d"],null],["polygon",["Array<Geom::Point3d>"],"表示要检查的多边形角的点数组。"],["check_border",["Boolean"],"如果边界上的点应计为多边形内部，则传递true。"]],"return":[["Boolean"],"+真+如果点在多边形内。"]},"Geom::BoundingBox":{"description":"边界框是三维框（八个角），与全局轴对齐，包围模型中的实体。任何新模型都有一个默认的边界框，它将包围所有实体，包括所有组和组件。此外，还有用于绘制元素对象（包括组件和组）的边界框。\\n边界框的大小仅足以精确绑定模型、组或组件中的实体。\\n \\n您也可以通过调用BoundingBox.new来创建任意的BoundingBox对象。","name":"BoundingBox","namespace":"Geom","path":"Geom::BoundingBox","type":"class","visibility":"public"},"Geom::BoundingBox#add":{"description":"add方法用于向边界框添加点、顶点或其他边界框。边界框的大小将根据需要增加以适应新项目。\\n \\n将一个点添加到空边界框不会增加边界框的大小。在BoundingBox.diagonal等方法返回大于零的大小之前，必须至少添加两个点。","name":"add","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#add","type":"instance_method","visibility":"public","return":[["Geom::BoundingBox"],"新的，调整大小的，BoundingBox对象，如果成功"]},"Geom::BoundingBox#center":{"description":"center方法用于检索边界框中心的Point3d对象。","name":"center","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#center","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"如果成功，边界框中心的Point3d"]},"Geom::BoundingBox#clear":{"description":"clear方法用于清除边界框。\\n \\n在添加至少两个点或另一个边界框之前，清除的BoundingBox的大小不大于零。","name":"clear","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#clear","type":"instance_method","visibility":"public","return":[["Geom::BoundingBox"],"已清除的BoundingBox对象"]},"Geom::BoundingBox#contains?":{"description":"此方法用于确定边界框是否包含特定的Point3d或BoundingBox对象。","name":"contains?","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#contains?","type":"instance_method","visibility":"public","parameters":[["point_or_bb",["Geom::Point3d","Geom::BoundingBox"],null]],"return":[["Boolean"],"如果成功，则为true（边界框包含Point3d或BoundingBox对象），如果失败，则为false。"]},"Geom::BoundingBox#corner":{"description":"corner方法用于在边界框的指定角检索点对象。\\n \\n边界框有8个角，由数字0到7标识。\\n点以当前设置的单位（默认为英寸）返回。以下是哪个索引引用了哪个角：\\n \n  - 0 = [0, 0, 0] (left front bottom)\n  - 1 = [1, 0, 0] (right front bottom)\n  - 2 = [0, 1, 0] (left back bottom)\n  - 3 = [1, 1, 0] (right back bottom)\n  - 4 = [0, 0, 1] (left front top)\n  - 5 = [1, 0, 1] (right front top)\n  - 6 = [0, 1, 1] (left back top)\n-7=[1，1，1]（右上角）","name":"corner","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#corner","type":"instance_method","visibility":"public","parameters":[["corner_index",["Integer"],"表示要检索的角点的数字（从0到7）。"]],"return":[["Geom::Point3d"],"如果成功，则为Point3d对象"]},"Geom::BoundingBox#depth":{"description":"depth方法用于检索边界框的深度。\\n \\n深度以当前设置的单位（默认为英寸）返回。","name":"depth","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#depth","type":"instance_method","visibility":"public","return":[["Length"],"边界框的深度（如果成功）"]},"Geom::BoundingBox#diagonal":{"description":"用diagonal方法求出边界框对角线的长度。\\n \\n对角线以当前设置的单位（默认为英寸）返回。","name":"diagonal","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#diagonal","type":"instance_method","visibility":"public","return":[["Length"],"边界框的对角线大小（如果成功）"]},"Geom::BoundingBox#empty?":{"description":"empty?方法用于确定边界框是否为空（例如，如果尚未设置边界），这将返回与有效边界相反的值？\\n方法。","name":"empty?","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果边界框为空，则为真；如果边界框不为空，则为假。"]},"Geom::BoundingBox#height":{"description":"height方法用于检索边界框的高度。\\n \\n高度将以当前设置的单位（默认为英寸）返回。","name":"height","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#height","type":"instance_method","visibility":"public","return":[["Length"],"边界框的高度"]},"Geom::BoundingBox#initialize":{"description":"new方法用于创建新的空边界框。","name":"initialize","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#initialize","type":"instance_method","visibility":"public","return":[["Geom::BoundingBox"],"如果成功，则为BoundingBox对象"]},"Geom::BoundingBox#intersect":{"description":"intersect方法用于检索一个边界框，该边界框是一个边界框与另一个边界框相交的结果。","name":"intersect","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#intersect","type":"instance_method","visibility":"public","parameters":[["boundingbox",["Geom::BoundingBox"],"可能与boundingbox1相交的第二个boundbox。"]],"return":[["Geom::BoundingBox"],"如果成功，则生成BoundingBox对象；如果失败，则为空的BoundingBox对象。"]},"Geom::BoundingBox#max":{"description":"max方法用于检索Point3d对象，其中边界框中的x、y和z最大。\\n \\n如果尝试对空边界框调用max方法，将收到一个非常大的负数。","name":"max","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#max","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"一个Point3d对象，表示边界框中最大值为x、y和z的点。"]},"Geom::BoundingBox#min":{"description":"min方法用于检索Point3d，其中边界框中的最小值为x、y和z。","name":"min","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#min","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"一个Point3d对象，表示边界框中最大值为x、y和z的点。"]},"Geom::BoundingBox#valid?":{"description":"valid方法用于确定边界框是否有效（包含点）。","name":"valid?","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果边界框有效（不为空），则为true；如果边界框无效，则为false（空）"]},"Geom::BoundingBox#width":{"description":"width方法用于检索边界框的宽度。\\n \\n宽度以当前设置的单位（默认为英寸）返回。","name":"width","namespace":"Geom::BoundingBox","path":"Geom::BoundingBox#width","type":"instance_method","visibility":"public","return":[["Length"],"边界框的宽度"]},"Geom::LatLong":{"description":"LatLong类包含创建和操作纬度和经度坐标的各种方法。","name":"LatLong","namespace":"Geom","path":"Geom::LatLong","type":"class","visibility":"public"},"Geom::LatLong#initialize":{"description":"new方法创建一个LatLong对象。","name":"initialize","namespace":"Geom::LatLong","path":"Geom::LatLong#initialize","type":"instance_method","visibility":"public","return":[["LatLong"],"拉特隆的新实例"]},"Geom::LatLong#latitude":{"description":"Latitude方法从LatLong对象中检索纬度坐标。","name":"latitude","namespace":"Geom::LatLong","path":"Geom::LatLong#latitude","type":"instance_method","visibility":"public","return":[["Float"],"纬度坐标值"]},"Geom::LatLong#longitude":{"description":"Latitude方法从LatLong对象中检索经度坐标。","name":"longitude","namespace":"Geom::LatLong","path":"Geom::LatLong#longitude","type":"instance_method","visibility":"public","return":[["Float"],"纬度坐标值"]},"Geom::LatLong#to_a":{"description":"{#to_a}方法将LatLong对象转换为两个值的数组。","name":"to_a","namespace":"Geom::LatLong","path":"Geom::LatLong#to_a","type":"instance_method","visibility":"public","return":[["Array(Float, Float)"],"经纬度数组"]},"Geom::LatLong#to_s":{"description":"{#to_s}方法将LatLong对象转换为{String}。","name":"to_s","namespace":"Geom::LatLong","path":"Geom::LatLong#to_s","type":"instance_method","visibility":"public","return":[["String"],""]},"Geom::LatLong#to_utm":{"description":"to_utm方法将LatLong对象转换为UTM对象。","name":"to_utm","namespace":"Geom::LatLong","path":"Geom::LatLong#to_utm","type":"instance_method","visibility":"public","return":[["Geom::UTM"],""]},"Geom::Point3d":{"description":"Point3d类允许您使用三维空间中的一个点。\\n该点基本上只是表示x、y和z坐标的一系列值。\\n \\n值被指定为[xyz]。例如[{#onAfterComponentSaveAs}00]。\\n若要创建一个点调用geom:：point3d.new，其中创建方法可以采用多种参数：\\n\\n除了下面的方法外，array类上还有一系列与几何相关的方法，因为Point3d对象也可以表示为3元素数组。这些数组级方法用于确定点是否在直线上、平面上等操作。\\n有关详细信息，请参见数组类。","name":"Point3d","namespace":"Geom","path":"Geom::Point3d","type":"class","visibility":"public"},"Geom::Point3d#+":{"description":"'+'运算符是将一个点的值添加到当前的x、y和z中的快速方法，或者通过将其他点一起添加来设置点的值。","name":"+","namespace":"Geom::Point3d","path":"Geom::Point3d#+","type":"instance_method","visibility":"public","parameters":[["point2",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::Point3d"],""]},"Geom::Point3d#-":{"description":"'-'运算符是从一个点的当前x、y和z值中减去的快速方法。","name":"-","namespace":"Geom::Point3d","path":"Geom::Point3d#-","type":"instance_method","visibility":"public","parameters":[["point2",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::Vector3d"],""]},"Geom::Point3d#<":{"description":"'<'操作员是确定另一个点是否更接近原点的快速方法。","name":"<","namespace":"Geom::Point3d","path":"Geom::Point3d#<","type":"instance_method","visibility":"public","parameters":[["point2",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Boolean"],"如果point2更接近原点，则为真。"]},"Geom::Point3d#==":{"description":"==方法用于比较两点是否相等。\\n \\n这将使用标准SketchUp公差来确定两点是否相同。\\n \\n可以将点相互比较，也可以将点与表示x、y和z坐标的数组进行比较，如下例所示：","name":"==","namespace":"Geom::Point3d","path":"Geom::Point3d#==","type":"instance_method","visibility":"public","parameters":[["point2",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Boolean"],"如果两个点都为equal;，则为真；如果两个点不相等，则为假"]},"Geom::Point3d#[]":{"description":"[]方法用于检索指定索引处点的值。","name":"[]","namespace":"Geom::Point3d","path":"Geom::Point3d#[]","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"Point3d中特定x、y或z值的索引。"]],"return":[["Length"],"如果成功，则返回x、y或z值。"]},"Geom::Point3d#[]=":{"description":"[]=方法用于根据值的特定索引设置点的x、y或z值。","name":"[]=","namespace":"Geom::Point3d","path":"Geom::Point3d#[]=","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"Point3d中特定x、y或z值的索引。"],["new_value",["Numeric"],"新的x、y或z值。"]],"return":[["Numeric"],"如果成功，则新设置的x、y或z值"]},"Geom::Point3d#clone":{"description":"clone方法用于创建另一个与要克隆的点相同的点。","name":"clone","namespace":"Geom::Point3d","path":"Geom::Point3d#clone","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"克隆的Point3d对象"]},"Geom::Point3d#distance":{"description":"distance方法用于计算从一个点到另一个点的距离。","name":"distance","namespace":"Geom::Point3d","path":"Geom::Point3d#distance","type":"instance_method","visibility":"public","parameters":[["point2",["Geom::Point3d"],"要计算距离的Point3d对象。"]],"return":[["Length"],"以当前单位表示的距离"]},"Geom::Point3d#distance_to_line":{"description":"distance_to_line方法用于计算点到直线的距离。\\n \\n有关如何指定行的信息，请参阅geom模块。","name":"distance_to_line","namespace":"Geom::Point3d","path":"Geom::Point3d#distance_to_line","type":"instance_method","visibility":"public","parameters":[["line",null,"一条线（有关创建线的信息，请参见GEOM）。"]],"return":[["Float"],"如果成功，则以内部单位表示的点和线之间的距离"]},"Geom::Point3d#distance_to_plane":{"description":"distance_to_plane方法用于计算点到平面的距离。\\n \\n有关如何指定平面的信息，请参阅模块geom。","name":"distance_to_plane","namespace":"Geom::Point3d","path":"Geom::Point3d#distance_to_plane","type":"instance_method","visibility":"public","parameters":[["plane",null,"平面（有关如何创建平面的信息，请参见geom）。"]],"return":[["Float"],"如果成功，则以内部单位表示的点与平面之间的距离。"]},"Geom::Point3d#initialize":{"description":"new方法用于创建新的三维点。","name":"initialize","namespace":"Geom::Point3d","path":"Geom::Point3d#initialize","type":"instance_method","visibility":"public","return":[["Point3d"],"Point3D的新实例"]},"Geom::Point3d#inspect":{"description":"inspect方法用于将三维点格式化为字符串。\\n \\n您不会经常直接使用这些函数。相反，当使用“puts”这样的打印命令输出对象时，会自动调用它们，该命令会写入Ruby控制台。","name":"inspect","namespace":"Geom::Point3d","path":"Geom::Point3d#inspect","type":"instance_method","visibility":"public","return":[["String"],"字符串点表示法"]},"Geom::Point3d#offset":{"description":"offset方法用于用矢量偏移一个点并返回一个新点。向量的长度不能为零。","name":"offset","namespace":"Geom::Point3d","path":"Geom::Point3d#offset","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],"将该点偏移的Vector3d对象。"],["length",["Numeric"],"要偏移的距离。如果没有提供，则偏移量是等于向量长度的距离。"]],"return":[["Geom::Point3d"],"-新的Point3d对象"]},"Geom::Point3d#offset!":{"description":"offset!方法用于通过矢量偏移点。点本身被修改。\\n \\n与偏移不同，点本身被修改。","name":"offset!","namespace":"Geom::Point3d","path":"Geom::Point3d#offset!","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],"将该点偏移的Vector3d对象。"],["length",["Numeric"],"要偏移的距离。如果没有提供，则偏移量是等于向量长度的距离。"]],"return":[["Geom::Point3d"],"新的Point3d对象"]},"Geom::Point3d#on_line?":{"description":"on_line?方法用于确定点是否在直线上。\\n \\n有关指定行的各种方法，请参阅模块geom。","name":"on_line?","namespace":"Geom::Point3d","path":"Geom::Point3d#on_line?","type":"instance_method","visibility":"public","parameters":[["line",null,"一条线（有关如何创建线的信息，请参见geom）。"]],"return":[["Boolean"],"如果点在line;上，则为真；如果点不在直线上，则为假。"]},"Geom::Point3d#on_plane?":{"description":"on_plane?方法用于确定点是否在平面上。\\n \\n有关指定平面的各种方法，请参阅模块geom。","name":"on_plane?","namespace":"Geom::Point3d","path":"Geom::Point3d#on_plane?","type":"instance_method","visibility":"public","parameters":[["plane",null,null]],"return":[["Boolean"],"如果点在plane;上，则为真；如果点不在平面上，则为假"]},"Geom::Point3d#project_to_line":{"description":"project_to_line方法用于检索最靠近此点的直线上的点。\\n \\n线条可以由点和向量或两点定义。","name":"project_to_line","namespace":"Geom::Point3d","path":"Geom::Point3d#project_to_line","type":"instance_method","visibility":"public","parameters":[["line",null,"-有关如何指定线的信息，请参见GEOM。"]],"return":[["Geom::Point3d"],"最靠近该点的直线上的Point3d"]},"Geom::Point3d#project_to_plane":{"description":"project_to_plane方法用于检索离点最近的平面上的点。\\n \\n平面可以由平面上的点和垂直于平面的向量定义，也可以由平面方程ax+\\n x+cz+d=0的系数定义。详情请参见GEOM。","name":"project_to_plane","namespace":"Geom::Point3d","path":"Geom::Point3d#project_to_plane","type":"instance_method","visibility":"public","parameters":[["plane",null,"平面（有关如何创建平面的信息，请参见geom）。"]],"return":[["Geom::Point3d"],"在离点最近的平面上的Point3d"]},"Geom::Point3d#set!":{"description":"{#set!}方法用于设置Point3d的值。","name":"set!","namespace":"Geom::Point3d","path":"Geom::Point3d#set!","type":"instance_method","visibility":"public"},"Geom::Point3d#to_a":{"description":"to_a方法用于将点转换为3个数字的数组","name":"to_a","namespace":"Geom::Point3d","path":"Geom::Point3d#to_a","type":"instance_method","visibility":"public","return":[["Array(Length, Length, Length)"],"三个数字组成的数组，表示点3d的xyz。"]},"Geom::Point3d#to_s":{"description":"to_s方法用于检索点的字符串表示形式。","name":"to_s","namespace":"Geom::Point3d","path":"Geom::Point3d#to_s","type":"instance_method","visibility":"public","return":[["String"],"点3d的字符串表示形式"]},"Geom::Point3d#transform":{"description":"对点应用转换，返回新点。用这种方法，原矢量不变。","name":"transform","namespace":"Geom::Point3d","path":"Geom::Point3d#transform","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"转换对象。"]],"return":[["Geom::Point3d"],"新改造点"]},"Geom::Point3d#transform!":{"description":"对点应用转换。点本身被修改。","name":"transform!","namespace":"Geom::Point3d","path":"Geom::Point3d#transform!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"转换对象。"]],"return":[["Geom::Point3d"],"转换点"]},"Geom::Point3d#vector_to":{"description":"vector_to team方法检索点之间的向量。","name":"vector_to","namespace":"Geom::Point3d","path":"Geom::Point3d#vector_to","type":"instance_method","visibility":"public","parameters":[["point2",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::Vector3d"],"向量对象"]},"Geom::Point3d#x":{"description":"x方法检索3D点的x值。","name":"x","namespace":"Geom::Point3d","path":"Geom::Point3d#x","type":"instance_method","visibility":"public","return":[["Length"],"x值"]},"Geom::Point3d#x=":{"description":"x=方法用于设置三维点的x值。","name":"x=","namespace":"Geom::Point3d","path":"Geom::Point3d#x=","type":"instance_method","visibility":"public","parameters":[["value",["Numeric"],"新的x值。"]],"return":[["Numeric"],"新设置的x值"]},"Geom::Point3d#y":{"description":"y方法检索三维点的y值。","name":"y","namespace":"Geom::Point3d","path":"Geom::Point3d#y","type":"instance_method","visibility":"public","return":[["Length"],"y值"]},"Geom::Point3d#y=":{"description":"y=方法用于设置三维点的y值。","name":"y=","namespace":"Geom::Point3d","path":"Geom::Point3d#y=","type":"instance_method","visibility":"public","parameters":[["value",["Numeric"],"新的y值。"]],"return":[["Numeric"],"新设置的y值"]},"Geom::Point3d#z":{"description":"z方法检索三维点的z值。","name":"z","namespace":"Geom::Point3d","path":"Geom::Point3d#z","type":"instance_method","visibility":"public","return":[["Length"],"z值"]},"Geom::Point3d#z=":{"description":"z=方法用于设置三维点的z值。","name":"z=","namespace":"Geom::Point3d","path":"Geom::Point3d#z=","type":"instance_method","visibility":"public","parameters":[["value",["Numeric"],"新的z值。"]],"return":[["Numeric"],"新设定的z值"]},"Geom::Point3d.linear_combination":{"description":"linear_combination方法用于创建两个点的线性组合的新点。这种方法通常用于沿连接两个点的直线以一定百分比获得一个点。\\n \\n线性组合是向量数学的标准术语。定义为点=weight1*point1+weight2*point2。","name":"linear_combination","namespace":"Geom::Point3d","path":"Geom::Point3d.linear_combination","type":"class_method","visibility":"public","parameters":[["weight1",["Float"],"重量或百分比"],["point1",["Float"],"线上的起点。"],["point2",["Float"],"线条的终点。"],["weight2",["Float"],"重量或百分比"]],"return":[["Geom::Point3d"],""]},"Geom::PolygonMesh":{"description":"PolygonMesh类包含创建多边形网格结构的方法。\\n如果您需要在Ruby中编写一个自定义导入/导出器，该导入/导出器在三角多边形级别上工作，则这非常有用。例如，可以使用此类确定构成15面草图面的三角形，或者编写SketchupImporter，读取数据文件，从中创建网格，并基于网格绘制面。\\n \\n可以使用此类的方法手动构造网格，也可以通过调用Face.mesh方法从面获取网格。有关将网格转换回面的简单方法，请参见Entities.add_faces_from_mesh。","name":"PolygonMesh","namespace":"Geom","path":"Geom::PolygonMesh","type":"class","visibility":"public"},"Geom::PolygonMesh#add_point":{"description":"{#add_point}方法用于向网格添加点。\\n \\n索引可用于创建多边形。","name":"add_point","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#add_point","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],null]],"return":[["Integer"],"点在网格中的索引"]},"Geom::PolygonMesh#add_polygon":{"description":"+add_polygon+方法用于将多边形添加到PolygonMesh中。这种方法的所有变化都需要至少3个元素来定义一个多边形，尽管可能会给出更多的元素。","name":"add_polygon","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#add_polygon","type":"instance_method","visibility":"public","return":[["Integer"],"网格中多边形的索引。"]},"Geom::PolygonMesh#count_points":{"description":"{#count_points}方法用于计算网格中的点数。","name":"count_points","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#count_points","type":"instance_method","visibility":"public","return":[["Integer"],"网格中的点数"]},"Geom::PolygonMesh#count_polygons":{"description":"{#count_polygons}计算网格中的多边形数。","name":"count_polygons","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#count_polygons","type":"instance_method","visibility":"public","return":[["Integer"],"网格中的多边形数"]},"Geom::PolygonMesh#initialize":{"description":"创建新的空多边形网格。点和多边形的数量是可选的，只是作为一个提示来决定预先分配多少空间来加速添加点和多边形。","name":"initialize","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#initialize","type":"instance_method","visibility":"public","return":[["PolygonMesh"],"多边形网格的一个新实例"]},"Geom::PolygonMesh#normal_at":{"description":"{#normal_at}方法用于确定网格中特定索引处的顶点法向。这只适用于从{Sketchup::Face#mesh}检索到的带有+PolygonMeshNormals+标志的网格。","name":"normal_at","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#normal_at","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"网格中要检索顶点法向的索引"]],"return":[["Geom::Vector3d","nil"],""]},"Geom::PolygonMesh#point_at":{"description":"{#point_at}方法用于检索网格中特定索引处的点。","name":"point_at","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#point_at","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"网格中要检索的点的索引"]],"return":[["Geom::Point3d","nil"],""]},"Geom::PolygonMesh#point_index":{"description":"{#point_index}方法用于检索网格中点的索引。","name":"point_index","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#point_index","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],null]],"return":[["Integer"],"{Geom::Point3d}对象的网格中的索引"]},"Geom::PolygonMesh#points":{"description":"{#points}方法用于检索网格中的点（顶点）数组","name":"points","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#points","type":"instance_method","visibility":"public","return":[["Array<Geom::Point3d>"],""]},"Geom::PolygonMesh#polygon_at":{"description":"{#polygon_at}方法用于检索特定索引处多边形的顶点索引值数组。\\n \\n索引基于1（从1开始）。返回的数组可以包含负值，符号指示隐藏边。例如，返回值+[-1, 2, 3]+表示隐藏了从+1+到+2+的边缘。\\n负值不应用作点“at”的索引，请采用多边形数组中索引值的正值。所以如果你得到+[-1, 2,3]+，用+1+作为{#point_at}的参数。","name":"polygon_at","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#polygon_at","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"所需多边形的索引。"]],"return":[["Array<Geom::Point3d>","nil"],""]},"Geom::PolygonMesh#polygon_points_at":{"description":"{#polygon_points_at}方法用于检索位于网格中特定索引处的多边形的点。","name":"polygon_points_at","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#polygon_points_at","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"网格中多边形的索引。"]],"return":[["Array<Geom::Point3d>","nil"],""]},"Geom::PolygonMesh#polygons":{"description":"{#polygons}方法用于检索网格中所有多边形的数组。\\n \\n传回的阵列可以包含负值，符号表示隐藏边。例如，返回值+[-1, 2, 3]+表示从+1+到+2+的边缘被隐藏。","name":"polygons","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#polygons","type":"instance_method","visibility":"public","return":[["Array<Integer>"],""]},"Geom::PolygonMesh#set_point":{"description":"{#set_point}方法用于在网格中的特定索引处设置点。","name":"set_point","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#set_point","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"设置点的索引。"],["point",["Geom::Point3d"],"要在索引处设置的Point3d对象。"]],"return":[["Geom::PolygonMesh"],""]},"Geom::PolygonMesh#set_uv":{"description":"{#set_uv}方法用于定义UV映射坐标到网格中的点。\\n \\n请注意，连接到该点的多边形将共享UV坐标，因此UV映射坐标需要在多边形网格上连续。\\n \\n设置点的UV时，需要确保具有该点的正确索引。因此，最好使用{#add_point} \\n添加点，并使用它返回的索引来跟踪到set_uv和{#add_polygon}的调用。\\n \\n如果无法计算网格中有多少个点，请确保在{#set_uv}中指定的索引不高于您调用{#set_uv}的次数。","name":"set_uv","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#set_uv","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],"代表紫外线坐标的Point3d物体。"],["index",["Integer"],"表示紫外线指数的整数。"]],"return":[["nil"],""]},"Geom::PolygonMesh#transform!":{"description":"{#transform!}方法用于对网格应用转换。","name":"transform!","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#transform!","type":"instance_method","visibility":"public","parameters":[["transformation",["Geom::Transformation"],null]],"return":[["Geom::PolygonMesh"],""]},"Geom::PolygonMesh#uv_at":{"description":"{#uv_at}方法用于访问特定索引处的UV（纹理坐标）。\\n \\n“uvs”是指U、V纹理坐标（与在其上构建网格的X、Y和Z轴相反）的一种方式，这些坐标是定义图像中1×1位置的点。这些坐标连接到三维模型中的点，以将图像纹理定位到其表面（类似于虚拟的“图钉”）\\n \\n这些坐标将图像上要用于将模型纹理到对象表面上的特定点的精确点固定。在这些点之间，您的软件将平滑地拉伸图像。这就是所谓的UV映射。","name":"uv_at","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#uv_at","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"纹理坐标的索引。"],["front",["Boolean"],"设置为+true+以获得正面尺寸的紫外线，背面尺寸为+false+。"]],"return":[["Geom::Point3d","nil"],"Point3d对象，其中x等于U值，y等于V值。\\n失败时返回nil。"]},"Geom::PolygonMesh#uvs":{"description":"{#uvs}方法用于检索网格中的一组UV坐标。","name":"uvs","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh#uvs","type":"instance_method","visibility":"public","parameters":[["front",["Boolean"],null]],"return":[["Array<Geom::Point3d>"],""]},"Geom::PolygonMesh::AUTO_SOFTEN":{"description":"常量","name":"AUTO_SOFTEN","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh::AUTO_SOFTEN","type":"constant","return":null,"visibility":"public"},"Geom::PolygonMesh::HIDE_BASED_ON_INDEX":{"description":"存根值。","name":"HIDE_BASED_ON_INDEX","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh::HIDE_BASED_ON_INDEX","type":"constant","return":null,"visibility":"public"},"Geom::PolygonMesh::NO_SMOOTH_OR_HIDE":{"description":"存根值。","name":"NO_SMOOTH_OR_HIDE","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh::NO_SMOOTH_OR_HIDE","type":"constant","return":null,"visibility":"public"},"Geom::PolygonMesh::SMOOTH_SOFT_EDGES":{"description":"存根值。","name":"SMOOTH_SOFT_EDGES","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh::SMOOTH_SOFT_EDGES","type":"constant","return":null,"visibility":"public"},"Geom::PolygonMesh::SOFTEN_BASED_ON_INDEX":{"description":"存根值。","name":"SOFTEN_BASED_ON_INDEX","namespace":"Geom::PolygonMesh","path":"Geom::PolygonMesh::SOFTEN_BASED_ON_INDEX","type":"constant","return":null,"visibility":"public"},"Geom::Transformation":{"description":"转换是三维世界中用于表示给定实体的位置、旋转和大小调整的标准构造。在SketchUp世界中，{Sketchup::ComponentInstance}和{Sketchup::Group}有一个+.transformation+方法报告其当前状态，以及允许对其进行操作的各种方法（+.move!+、+transformation=+等）。\\n \\n转换类的使用需要对三维几何转换的知识，这些知识在Internet上有广泛的介绍。","name":"Transformation","namespace":"Geom","path":"Geom::Transformation","type":"class","visibility":"public"},"Geom::Transformation#*":{"description":"{#*}方法用于使用变换进行矩阵乘法。","name":"*","namespace":"Geom::Transformation","path":"Geom::Transformation#*","type":"instance_method","visibility":"public"},"Geom::Transformation#clone":{"description":"{#clone}方法用于创建转换的副本。","name":"clone","namespace":"Geom::Transformation","path":"Geom::Transformation#clone","type":"instance_method","visibility":"public","return":[["Geom::Transformation"],""]},"Geom::Transformation#identity?":{"description":"{#identity?}方法用于确定转换是否为{IDENTITY}转换。","name":"identity?","namespace":"Geom::Transformation","path":"Geom::Transformation#identity?","type":"instance_method","visibility":"public","return":[["Boolean"],"+true+如果转换是标识"]},"Geom::Transformation#initialize":{"description":"new方法用于创建新的转换。\\n \\n您可以使用此方法或更具体的方法之一来创建特定类型的转换。","name":"initialize","namespace":"Geom::Transformation","path":"Geom::Transformation#initialize","type":"instance_method","visibility":"public","return":[["Transformation"],"转换的新实例"]},"Geom::Transformation#inverse":{"description":"{#inverse}方法用于检索转换的逆。","name":"inverse","namespace":"Geom::Transformation","path":"Geom::Transformation#inverse","type":"instance_method","visibility":"public","return":[["Geom::Transformation"],""]},"Geom::Transformation#invert!":{"description":"{#invert!}方法将转换设置为逆转换。","name":"invert!","namespace":"Geom::Transformation","path":"Geom::Transformation#invert!","type":"instance_method","visibility":"public","return":[["Geom::Transformation"],""]},"Geom::Transformation#origin":{"description":"{#origin}方法检索刚性转换的原点。","name":"origin","namespace":"Geom::Transformation","path":"Geom::Transformation#origin","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"转变的起源。"]},"Geom::Transformation#set!":{"description":"{#set!}方法用于将此转换设置为与另一个转换匹配。\\n \\n参数是可以转换为转换的任何内容。","name":"set!","namespace":"Geom::Transformation","path":"Geom::Transformation#set!","type":"instance_method","visibility":"public"},"Geom::Transformation#to_a":{"description":"{#to_a}方法检索包含定义转换的值的16元素数组。","name":"to_a","namespace":"Geom::Transformation","path":"Geom::Transformation#to_a","type":"instance_method","visibility":"public","return":[["Array<Float>"],""]},"Geom::Transformation#xaxis":{"description":"{#xaxis}方法检索刚性变换的x轴。","name":"xaxis","namespace":"Geom::Transformation","path":"Geom::Transformation#xaxis","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],""]},"Geom::Transformation#yaxis":{"description":"{#yaxis}方法检索刚性变换的y轴。","name":"yaxis","namespace":"Geom::Transformation","path":"Geom::Transformation#yaxis","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],""]},"Geom::Transformation#zaxis":{"description":"{#zaxis}方法检索刚性变换的z轴。","name":"zaxis","namespace":"Geom::Transformation","path":"Geom::Transformation#zaxis","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],""]},"Geom::Transformation.axes":{"description":"axes方法创建了从世界坐标到由原点和三个轴矢量定义的任意坐标系的转换。","name":"axes","namespace":"Geom::Transformation","path":"Geom::Transformation.axes","type":"class_method","visibility":"public"},"Geom::Transformation.interpolate":{"description":"interpolate方法用于创建一个新的转换，这是在其他两个转换之间进行插值的结果。\\n \\n参数是一个权重（介于0.0和1.0之间），用于标识是喜欢transformation1还是transformation2。","name":"interpolate","namespace":"Geom::Transformation","path":"Geom::Transformation.interpolate","type":"class_method","visibility":"public","parameters":[["transform1",["Geom::Transformation"],""],["transform2",["Geom::Transformation"],""],["weight",["Float"],"介于0.0和1.0之间的值（请参见注释）。"]],"return":[["Geom::Transformation"],""]},"Geom::Transformation.rotation":{"description":"rotation方法用于创建围绕轴旋转的转换。\\n \\n轴由点和向量定义。角度以弧度表示。","name":"rotation","namespace":"Geom::Transformation","path":"Geom::Transformation.rotation","type":"class_method","visibility":"public","parameters":[["point",["Geom::Point3d"],""],["vector",["Geom::Vector3d"],""],["angle",["Float"],"以弧度表示的角度。"]],"return":[["Geom::Transformation"],""]},"Geom::Transformation.scaling":{"description":"scaling方法用于创建进行缩放的转换。","name":"scaling","namespace":"Geom::Transformation","path":"Geom::Transformation.scaling","type":"class_method","visibility":"public"},"Geom::Transformation.translation":{"description":"translation方法用于创建进行转换的转换。","name":"translation","namespace":"Geom::Transformation","path":"Geom::Transformation.translation","type":"class_method","visibility":"public"},"Geom::UTM":{"description":"UTM类允许您使用UTM地图坐标。","name":"UTM","namespace":"Geom","path":"Geom::UTM","type":"class","visibility":"public"},"Geom::UTM#initialize":{"description":"new方法用于创建新的UTM坐标。您通常会通过调用方法Model.point_to_utm而不是调用此方法来创建UTM对象。","name":"initialize","namespace":"Geom::UTM","path":"Geom::UTM#initialize","type":"instance_method","visibility":"public","parameters":[["zone_number",["Integer"],"区域号或UTM对象。如果第一个参数是UTM对象，则忽略其他参数。"],["zone_letter",["String"],"区域信件"],["y",["Numeric"],"y位置。"],["x",["Numeric"],"x位置。"]],"return":[["Geom::UTM"],"如果成功，则为UTM坐标"]},"Geom::UTM#to_a":{"description":"to_a方法以4元素数组的形式返回一个UTM坐标。数组元素是区域号、区域字母、x坐标和y坐标。","name":"to_a","namespace":"Geom::UTM","path":"Geom::UTM#to_a","type":"instance_method","visibility":"public","return":[["Array(Fixnum, String, Float, Float)"],"如果成功，则为UTM阵列"]},"Geom::UTM#to_latlong":{"description":"to_latlong方法用于将UTM坐标转换为经纬度。有关更多信息，请参见LatLong类。","name":"to_latlong","namespace":"Geom::UTM","path":"Geom::UTM#to_latlong","type":"instance_method","visibility":"public","return":[["Geom::LatLong"],"如果成功，则为LatLong对象"]},"Geom::UTM#to_s":{"description":"to_s方法用于检索UTM的字符串表示形式。","name":"to_s","namespace":"Geom::UTM","path":"Geom::UTM#to_s","type":"instance_method","visibility":"public","return":[["String"],"如果成功，则为UTM字符串"]},"Geom::UTM#x":{"description":"x方法返回utm x坐标。","name":"x","namespace":"Geom::UTM","path":"Geom::UTM#x","type":"instance_method","visibility":"public","return":[["Float"],"UTM x坐标"]},"Geom::UTM#y":{"description":"x方法返回utm y坐标。","name":"y","namespace":"Geom::UTM","path":"Geom::UTM#y","type":"instance_method","visibility":"public","return":[["Float"],"UTM y坐标"]},"Geom::UTM#zone_letter":{"description":"zone_letter方法返回UTM区域字母。","name":"zone_letter","namespace":"Geom::UTM","path":"Geom::UTM#zone_letter","type":"instance_method","visibility":"public","return":[["String"],"UTM区域字母"]},"Geom::UTM#zone_number":{"description":"zone_number方法返回UTM区域号。","name":"zone_number","namespace":"Geom::UTM","path":"Geom::UTM#zone_number","type":"instance_method","visibility":"public","return":[["Fixnum"],"UTM区域编号"]},"Geom::Vector3d":{"description":"Vector3d类用于表示三维空间中的向量。\\n SketchUp中的向量具有方向和长度，但不是起点。\\n \\n Internet上有许多关于3D矢量的教程。","name":"Vector3d","namespace":"Geom","path":"Geom::Vector3d","type":"class","visibility":"public"},"Geom::Vector3d#%":{"description":"用{#%}方法计算两个矢量之间的点积。\\n \\n这是{#dot}方法的别名。","name":"%","namespace":"Geom::Vector3d","path":"Geom::Vector3d#%","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector"],null]],"return":[["Float"],""]},"Geom::Vector3d#*":{"description":"使用{#*}方法计算两个向量之间的交叉积。\\n \\n叉积，也称为矢量积，是对两个矢量的运算。两个矢量的叉积产生一个垂直于前两个矢量所在平面的第三个矢量。\\n \\n这是{#cross}方法的别名。","name":"*","namespace":"Geom::Vector3d","path":"Geom::Vector3d#*","type":"instance_method","visibility":"public","parameters":[["vector",null,"一个Vector3d对象。"]],"return":[["Geom::Vector3d"],"如果成功，则为Vector3d对象"]},"Geom::Vector3d#+":{"description":"-方法用于向该方法添加向量。","name":"+","namespace":"Geom::Vector3d","path":"Geom::Vector3d#+","type":"instance_method","visibility":"public","parameters":[["vector2",null,"一个Vector3d对象。"]],"return":[["Geom::Vector3d"],"新向量。"]},"Geom::Vector3d#-":{"description":"-方法用于从该方法中减去向量。","name":"-","namespace":"Geom::Vector3d","path":"Geom::Vector3d#-","type":"instance_method","visibility":"public","parameters":[["vector2",null,"一个Vector3d对象。"]],"return":[["Geom::Vector3d"],"新向量。"]},"Geom::Vector3d#<":{"description":"<方法用于确定向量的x、y或z值是否小于另一个向量的x、y或z值。","name":"<","namespace":"Geom::Vector3d","path":"Geom::Vector3d#<","type":"instance_method","visibility":"public","parameters":[["vector2",null,"一个Vector3d对象。"]],"return":[["Boolean"],"如果矢量的x、y或z分量小于"]},"Geom::Vector3d#==":{"description":"==方法用于确定两个向量是否在公差范围内相等。","name":"==","namespace":"Geom::Vector3d","path":"Geom::Vector3d#==","type":"instance_method","visibility":"public","parameters":[["vector2",null,"一个Vector3d对象。"]],"return":[["Boolean"],"如果vector1等于向量2，则为真。如果不相等则为假。"]},"Geom::Vector3d#[]":{"description":"[]方法用于访问向量的坐标，就像它是一个数组一样。索引必须是0、1或2。\\n \\n下列各项是等效的：","name":"[]","namespace":"Geom::Vector3d","path":"Geom::Vector3d#[]","type":"instance_method","visibility":"public","parameters":[["i",["Integer"],"三个坐标数组的索引。"]],"return":[["Length"],"x、y或z坐标的值。"]},"Geom::Vector3d#[]=":{"description":"[]=方法用于将向量的坐标设置为数组。i的值必须是0、1或2。","name":"[]=","namespace":"Geom::Vector3d","path":"Geom::Vector3d#[]=","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"x、y或z坐标的索引。"],["value",["Numeric"],"x、y或z坐标的值。"]],"return":[["Numeric"],"新设置的坐标值"]},"Geom::Vector3d#angle_between":{"description":"angle_between方法用于计算此向量与另一个向量之间的角度（以弧度为单位）。","name":"angle_between","namespace":"Geom::Vector3d","path":"Geom::Vector3d#angle_between","type":"instance_method","visibility":"public","parameters":[["vector2",["Geom::Vector3d"],"一个Vector3d对象。"]],"return":[["Float"],"角度（弧度）"]},"Geom::Vector3d#axes":{"description":"axes方法用于计算任意轴集，给定向量为z轴方向。\\n \\n返回三个向量的数组[xaxis、yaxis、zaxis]","name":"axes","namespace":"Geom::Vector3d","path":"Geom::Vector3d#axes","type":"instance_method","visibility":"public","return":[["Array(Geom::Vector3d, Geom::Vector3d, Geom::Vector3d)"],"包含三个Vector3d对象的数组对象"]},"Geom::Vector3d#clone":{"description":"clone方法用于复制向量。\\n \\n此方法等效于vec2=geom:：vector3d.new（vec）","name":"clone","namespace":"Geom::Vector3d","path":"Geom::Vector3d#clone","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"一个Vector3d对象，它是向量的克隆"]},"Geom::Vector3d#cross":{"description":"使用{#cross}方法计算两个向量之间的交叉积。\\n \\n叉积，也称为矢量积，是对两个矢量的运算。两个矢量的叉积产生一个垂直于前两个矢量所在平面的第三个矢量。","name":"cross","namespace":"Geom::Vector3d","path":"Geom::Vector3d#cross","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],"一个Vector3d对象。"]],"return":[["Geom::Vector3d"],"vector1和Vector2的交叉点"]},"Geom::Vector3d#dot":{"description":"用{#dot}方法计算两个矢量之间的点积。","name":"dot","namespace":"Geom::Vector3d","path":"Geom::Vector3d#dot","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector"],""]],"return":[["Float"],""]},"Geom::Vector3d#initialize":{"description":"new方法用于创建新的向量。","name":"initialize","namespace":"Geom::Vector3d","path":"Geom::Vector3d#initialize","type":"instance_method","visibility":"public","return":[["Vector3d"],"Vector3D的新实例"]},"Geom::Vector3d#inspect":{"description":"inspect方法作为友好的字符串用于检查向量的内容。","name":"inspect","namespace":"Geom::Vector3d","path":"Geom::Vector3d#inspect","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"Vector3d对象"]},"Geom::Vector3d#length":{"description":"length方法用于检索向量的长度。","name":"length","namespace":"Geom::Vector3d","path":"Geom::Vector3d#length","type":"instance_method","visibility":"public","return":[["Length"],"向量的长度"]},"Geom::Vector3d#length=":{"description":"length=方法用于设置向量的长度。长度必须大于0。","name":"length=","namespace":"Geom::Vector3d","path":"Geom::Vector3d#length=","type":"instance_method","visibility":"public","parameters":[["length",["Numeric"],"向量的长度。"]],"return":[["Numeric"],"新设定的长度"]},"Geom::Vector3d#normalize":{"description":"normalize方法用于返回一个向量，该向量是另一个向量的单位向量。","name":"normalize","namespace":"Geom::Vector3d","path":"Geom::Vector3d#normalize","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"新的规范化Vector3d对象"]},"Geom::Vector3d#normalize!":{"description":"normalize!方法用于将向量就地转换为单位向量。\\n \\n另一种方法是vec.length=1","name":"normalize!","namespace":"Geom::Vector3d","path":"Geom::Vector3d#normalize!","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"标准化的Vector3d对象"]},"Geom::Vector3d#parallel?":{"description":"parallel方法用于确定此向量是否与另一个向量平行，是否在公差范围内。","name":"parallel?","namespace":"Geom::Vector3d","path":"Geom::Vector3d#parallel?","type":"instance_method","visibility":"public","parameters":[["vector2",["Geom::Vector3d"],"一个Vector3d对象。"]],"return":[["Boolean"],"如果矢量和vector2平行，则为真。如果它们不平行，则为假。"]},"Geom::Vector3d#perpendicular?":{"description":"perpendicular?方法用于确定此向量是否与另一个向量垂直，是否在公差范围内。","name":"perpendicular?","namespace":"Geom::Vector3d","path":"Geom::Vector3d#perpendicular?","type":"instance_method","visibility":"public","parameters":[["vector2",["Geom::Vector3d"],"一个Vector3d对象。"]],"return":[["Boolean"],"如果矢量和vector2平行，则为真。如果它们不平行，则为假。"]},"Geom::Vector3d#reverse":{"description":"reverse方法用于返回与此向量相反的新向量，同时保持原始向量不变。","name":"reverse","namespace":"Geom::Vector3d","path":"Geom::Vector3d#reverse","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"与向量相反的Vector3d对象"]},"Geom::Vector3d#reverse!":{"description":"reverse!方法用于在适当位置反转矢量。","name":"reverse!","namespace":"Geom::Vector3d","path":"Geom::Vector3d#reverse!","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"与向量相反的Vector3d对象"]},"Geom::Vector3d#samedirection?":{"description":"samedirection?方法用于确定此向量是否与另一个向量平行并在同一方向上，以在公差范围内。","name":"samedirection?","namespace":"Geom::Vector3d","path":"Geom::Vector3d#samedirection?","type":"instance_method","visibility":"public","parameters":[["vector2",["Geom::Vector3d"],"一个Vector3d对象。"]],"return":[["Boolean"],"如果矢量和vector2在同一方向，则为真。如果它们不在同一方向，则为假。"]},"Geom::Vector3d#set!":{"description":"set!方法用于设置矢量的坐标。","name":"set!","namespace":"Geom::Vector3d","path":"Geom::Vector3d#set!","type":"instance_method","visibility":"public"},"Geom::Vector3d#to_a":{"description":"to_a方法检索数组中向量的坐标\\n[x、y、z]。","name":"to_a","namespace":"Geom::Vector3d","path":"Geom::Vector3d#to_a","type":"instance_method","visibility":"public","return":[["Array(Length, Length, Length)"],"数组中向量的坐标"]},"Geom::Vector3d#to_s":{"description":"to_s方法用于将向量格式化为字符串。","name":"to_s","namespace":"Geom::Vector3d","path":"Geom::Vector3d#to_s","type":"instance_method","visibility":"public","return":[["String"],"向量的字符串表示法"]},"Geom::Vector3d#transform":{"description":"对向量应用转换，返回新的向量。用这种方法，原矢量不变。","name":"transform","namespace":"Geom::Vector3d","path":"Geom::Vector3d#transform","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"要应用于向量的转换对象。"]],"return":[["Geom::Vector3d"],"新变换的矢量"]},"Geom::Vector3d#transform!":{"description":"对向量应用转换。向量本身被修改。","name":"transform!","namespace":"Geom::Vector3d","path":"Geom::Vector3d#transform!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"要应用于向量的转换对象。"]],"return":[["Geom::Vector3d"],"变换向量"]},"Geom::Vector3d#unitvector?":{"description":"unitvector?方法用于查看向量是否为单位向量。\\n \\n这相当于vec.length==1.0","name":"unitvector?","namespace":"Geom::Vector3d","path":"Geom::Vector3d#unitvector?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果向量是单位向量，则为真。如果向量不是单位向量，则为false。"]},"Geom::Vector3d#valid?":{"description":"valid?方法用于验证向量是否有效。如果向量的长度不是零，则它是有效的。","name":"valid?","namespace":"Geom::Vector3d","path":"Geom::Vector3d#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果向量有效，则为true。如果向量无效，则返回false。"]},"Geom::Vector3d#x":{"description":"x方法用于检索矢量的x坐标。","name":"x","namespace":"Geom::Vector3d","path":"Geom::Vector3d#x","type":"instance_method","visibility":"public","return":[["Length"],"矢量的x坐标"]},"Geom::Vector3d#x=":{"description":"x=方法用于设置矢量的x坐标。","name":"x=","namespace":"Geom::Vector3d","path":"Geom::Vector3d#x=","type":"instance_method","visibility":"public","parameters":[["x",["Numeric"],"矢量的x坐标。"]],"return":[["Numeric"],"新设置的x矢量坐标"]},"Geom::Vector3d#y":{"description":"y方法用于检索矢量的y坐标。","name":"y","namespace":"Geom::Vector3d","path":"Geom::Vector3d#y","type":"instance_method","visibility":"public","return":[["Length"],"矢量的y坐标"]},"Geom::Vector3d#y=":{"description":"设置向量的y坐标。","name":"y=","namespace":"Geom::Vector3d","path":"Geom::Vector3d#y=","type":"instance_method","visibility":"public","parameters":[["y",["Numeric"],"向量的y坐标。"]],"return":[["Numeric"],"新设置的y矢量坐标"]},"Geom::Vector3d#z":{"description":"得到向量的z坐标。","name":"z","namespace":"Geom::Vector3d","path":"Geom::Vector3d#z","type":"instance_method","visibility":"public","return":[["Length"],"矢量的z坐标"]},"Geom::Vector3d#z=":{"description":"设置向量的z坐标。","name":"z=","namespace":"Geom::Vector3d","path":"Geom::Vector3d#z=","type":"instance_method","visibility":"public","parameters":[["z",["Numeric"],"向量的z坐标。"]],"return":[["Numeric"],"新设置的矢量z坐标"]},"Geom::Vector3d.linear_combination":{"description":"linear_combination方法被用来创建一个新的向量作为其他向量的线性组合。这种方法通常用于在两个向量之间以一定百分比获取向量。\\n \\n线性组合是向量数学的标准术语。定义为点=weight1*point1+weight2*point2。\\n \\n除了此处详细介绍的4参数形式外，您还可以使用6个参数调用此方法，其形式为：\\n vec=geom:：vector3d.linear_组合（x，xaxis，y，yaxis，z，zaxis）","name":"linear_combination","namespace":"Geom::Vector3d","path":"Geom::Vector3d.linear_combination","type":"class_method","visibility":"public","parameters":[["weight1",null,"重量或百分比"],["vector1",null,"第一个向量。"],["vector2",null,"线条的终点。"],["weight2",null,"重量或百分比"]],"return":[["Geom::Vector3d"],"一个Vector3d物体"]},"Array":{"description":"SketchUp数组类向标准Ruby数组类添加了其他方法。具体来说，它包含允许数组的行为与{Geom::Vector3d}或{Geom::Point3d}对象相同的方法（可以将其视为三个坐标值的数组）。因此，可以使用array类代替{Geom::Point3d}或{Geom::Vector3d}来传递坐标值。","name":"Array","namespace":"","path":"Array","type":"class","visibility":"public"},"Array#cross":{"description":"使用{#cross}方法计算两个向量之间的交叉积。","name":"cross","namespace":"Array","path":"Array#cross","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],null]],"return":[["Geom::Vector3d"],""]},"Array#distance":{"description":"采用{#distance}方法计算两点之间的距离。","name":"distance","namespace":"Array","path":"Array#distance","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],null]],"return":[["Length"],""]},"Array#distance_to_line":{"description":"{#distance_to_line}方法用于计算从{Geom::Point3d}对象到直线的距离。","name":"distance_to_line","namespace":"Array","path":"Array#distance_to_line","type":"instance_method","visibility":"public"},"Array#distance_to_plane":{"description":"{#distance_to_plane}方法用于计算从{Geom::Point3d}对象到平面的距离。","name":"distance_to_plane","namespace":"Array","path":"Array#distance_to_plane","type":"instance_method","visibility":"public"},"Array#dot":{"description":"用{#dot}方法计算两个矢量之间的点积。","name":"dot","namespace":"Array","path":"Array#dot","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],null]],"return":[["Float"],""]},"Array#normalize":{"description":"{#normalize}方法用于规范化向量（将其长度设置为1）。它返回新数组，而不是就地更改原始数组。","name":"normalize","namespace":"Array","path":"Array#normalize","type":"instance_method","visibility":"public","return":[["Array(Float, Float, Float)"],"表示向量的数组对象"]},"Array#normalize!":{"description":"{#normalize!}方法用于在适当位置规范化向量（将其长度设置为1）。","name":"normalize!","namespace":"Array","path":"Array#normalize!","type":"instance_method","visibility":"public","return":[["Array"],""]},"Array#offset":{"description":"{#offset}方法用于用矢量偏移一个点。它返回一个新数组，而不是就地修改原始数组。","name":"offset","namespace":"Array","path":"Array#offset","type":"instance_method","visibility":"public"},"Array#offset!":{"description":"{#offset!}方法用于通过矢量偏移点。数组被就地修改。","name":"offset!","namespace":"Array","path":"Array#offset!","type":"instance_method","visibility":"public"},"Array#on_line?":{"description":"{#on_line?}方法用于确定{Geom::Point3d}对象是否在一行上。","name":"on_line?","namespace":"Array","path":"Array#on_line?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Array#on_plane?":{"description":"{#on_plane?}方法用于确定{Geom::Point3d}对象是否在平面上（在SketchUp的标准浮点公差范围内）。","name":"on_plane?","namespace":"Array","path":"Array#on_plane?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Array#project_to_line":{"description":"{#project_to_line}方法用于检索{Geom::Point3d}对象在直线上的投影。","name":"project_to_line","namespace":"Array","path":"Array#project_to_line","type":"instance_method","visibility":"public"},"Array#project_to_plane":{"description":"{#project_to_plane}方法检索{Geom::Point3d}在平面上的投影。","name":"project_to_plane","namespace":"Array","path":"Array#project_to_plane","type":"instance_method","visibility":"public"},"Array#transform":{"description":"{#transform}方法用于将{Geom::Transformation}对象应用于由{Array}对象定义的{Geom::Point3d}对象。\\n \\n此方法返回新的{Array}对象，而不是修改原始对象。","name":"transform","namespace":"Array","path":"Array#transform","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],null]],"return":[["Array(Length, Length, Length)"],"新转换的点。"]},"Array#transform!":{"description":"{#transform!}方法用于将{Geom::Transformation}对象应用于由{Array}对象定义的{Geom::Point3d}对象。","name":"transform!","namespace":"Array","path":"Array#transform!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],null]],"return":[["Array"],"新转换的点。"]},"Array#vector_to":{"description":"{#vector_to}方法用于创建一个数组作为从一个点到另一个点的向量。","name":"vector_to","namespace":"Array","path":"Array#vector_to","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],null]],"return":[["Geom::Vector3d"],""]},"Array#x":{"description":"x方法检索x坐标。","name":"x","namespace":"Array","path":"Array#x","type":"instance_method","visibility":"public","return":[["Object","nil"],"如果成功，x坐标"]},"Array#x=":{"description":"x=方法设置x坐标。","name":"x=","namespace":"Array","path":"Array#x=","type":"instance_method","visibility":"public","parameters":[["x",["Object"],"新的x位置。"]],"return":[["Object"],"如果成功，新的x坐标"]},"Array#y":{"description":"y方法检索y坐标。","name":"y","namespace":"Array","path":"Array#y","type":"instance_method","visibility":"public","return":[["Object","nil"],"如果成功，y坐标"]},"Array#y=":{"description":"y=方法设置y坐标。","name":"y=","namespace":"Array","path":"Array#y=","type":"instance_method","visibility":"public","parameters":[["y",["Object"],"新的y位置。"]],"return":[["Object"],"如果成功，新的y坐标"]},"Array#z":{"description":"z方法检索z坐标。","name":"z","namespace":"Array","path":"Array#z","type":"instance_method","visibility":"public","return":[["Object","nil"],"如果成功，z坐标"]},"Array#z=":{"description":"z=方法设置z坐标。","name":"z=","namespace":"Array","path":"Array#z=","type":"instance_method","visibility":"public","parameters":[["z",["Object"],"新的z位置。"]],"return":[["Object"],"如果成功，新的z坐标"]},"Length":{"description":"由于在SketchUp中经常使用长度单位，因此添加了一个特殊的类，以便于使用长度值。你可以在任何你想使用浮动的地方使用一个长度对象。\\n \\n在内部，SketchUp中的所有长度都以英寸存储。length类也以英寸为单位存储值。Ruby Numeric类中添加了许多方法来进行单位转换。\\n \\n常量：\\n长度格式：\\n-长度：：十进制\\n-长度：：体系结构\\n-长度：：工程\\n-长度：：分数长度单位\\n-长度：：英寸\\n-长度：：英尺\\n-长度：：毫米\\n-长度：：厘米\\n-长度：：米可以通过查询从模型选项中检索长度格式和长度单位的设置。分别对“lengthformat”和“lengthunit”使用“unitsOptions”OptionsProvider。","name":"Length","namespace":"","path":"Length","type":"class","visibility":"public"},"Length#<":{"description":"<方法用于查看一个长度是否小于另一个长度。\\n \\n例如，如果l1=1.0.inch和l2=1.000001.inch，则l1=l2，因此l1 \\n<l2应返回false。","name":"<","namespace":"Length","path":"Length#<","type":"instance_method","visibility":"public","parameters":[["length2",["Length"],"长度值。"]],"return":[["Boolean"],"如果length1小于length2;，则为真；如果length1不小于长度2，则为假。"]},"Length#<=":{"description":"<=方法用于查看一个长度是否小于或等于另一个长度。","name":"<=","namespace":"Length","path":"Length#<=","type":"instance_method","visibility":"public","parameters":[["length2",["Length"],"长度值。"]],"return":[["Boolean"],"如果length1小于等于length2;，则为true；如果length1不小于等于length2，则为false。"]},"Length#<=>":{"description":"使用<=>方法查看一个长度是否小于或大于另一个长度。因为我们在公差的基础上更改==进行测试的长度，所以我们还需要更改<=>来考虑公差。","name":"<=>","namespace":"Length","path":"Length#<=>","type":"instance_method","visibility":"public","parameters":[["length2",["Length"],"长度值。"]],"return":[["Integer"],"比较的结果"]},"Length#==":{"description":"==方法用于查看一个长度是否等于另一个长度。\\n \\n长度值的相等比较使用SketchUp用于比较长度的默认公差。","name":"==","namespace":"Length","path":"Length#==","type":"instance_method","visibility":"public","parameters":[["length2",["Length"],"长度值。"]],"return":[["Boolean"],"如果length1=length2;，则为真；如果length1不=长度2，则为假"]},"Length#>":{"description":">方法用于查看一个长度是否大于另一个长度。\\n \\n例如，如果l1=1.0.inch和l2=1.000001.inch，则l1=l2，因此l1>\\n l2应返回false。","name":">","namespace":"Length","path":"Length#>","type":"instance_method","visibility":"public","parameters":[["length2",["Length"],"长度值。"]],"return":[["Boolean"],"如果length1大于length2;，则为真；如果length1不大于长度，则为假"]},"Length#>=":{"description":">=方法用于查看一个长度是否大于或等于另一个长度。\\n \\n例如，如果l1=1.0.inch和l2=1.000001.inch，则l1==l2，因此l1>=\\n l2应返回true。另外，L1<=l2将返回true。","name":">=","namespace":"Length","path":"Length#>=","type":"instance_method","visibility":"public","parameters":[["length2",["Length"],"长度值。"]],"return":[["Boolean"],"如果length1大于等于length2;，则为真；如果length1不大于等于长度，则为假"]},"Length#inspect":{"description":"inspect方法用于检索长度的未格式化字符串，长度以英寸为单位，与用户的模型单位设置无关。\\n有关自动将长度格式化为用户的模型单位的方法，请参阅Length.to_s。","name":"inspect","namespace":"Length","path":"Length#inspect","type":"instance_method","visibility":"public","return":[["String"],"无格式长度字符串"]},"Length#to_f":{"description":"to_f方法用于将长度转换为普通浮点。","name":"to_f","namespace":"Length","path":"Length#to_f","type":"instance_method","visibility":"public","return":[["Float"],"浮点长度值"]},"Length#to_s":{"description":"使用模型的当前单位格式设置将长度格式化为字符串。（因此，如果将用户的模型设置为英尺，则此方法将返回格式良好的长度（英尺）。","name":"to_s","namespace":"Length","path":"Length#to_s","type":"instance_method","visibility":"public","return":[["String"],"浮点长度值"]},"String":{"description":"String类包含一个用于将字符串解析为长度值的方法。\\n ruby api中的所有字符串参数都需要utf-8字符串。","name":"String","namespace":"","path":"String","type":"class","visibility":"public"},"String#to_l":{"description":"to_l方法用于将字符串转换为长度。返回的长度以模型单位表示。","name":"to_l","namespace":"String","path":"String#to_l","type":"instance_method","visibility":"public","return":[["Length"],"长度值"]},"Numeric":{"description":"Ruby Numeric类中添加了许多方法来进行单位转换。","name":"Numeric","namespace":"","path":"Numeric","type":"class","visibility":"public"},"Numeric#cm":{"description":"cm方法用于从厘米转换为英寸。","name":"cm","namespace":"Numeric","path":"Numeric#cm","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以英寸为单位的值"]},"Numeric#degrees":{"description":"degrees方法用于从度转换为弧度。\\n \\n例如，90度返回1.5707963267949","name":"degrees","namespace":"Numeric","path":"Numeric#degrees","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以弧度表示的值"]},"Numeric#feet":{"description":"feet方法用于从英尺转换为英寸。","name":"feet","namespace":"Numeric","path":"Numeric#feet","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以英寸为单位的值"]},"Numeric#inch":{"description":"to_l用于将数字转换为长度。","name":"inch","namespace":"Numeric","path":"Numeric#inch","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，则为长度对象"]},"Numeric#km":{"description":"km方法用于从公里转换为英寸。","name":"km","namespace":"Numeric","path":"Numeric#km","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以英寸为单位的值"]},"Numeric#m":{"description":"m方法用于将米转换为英寸。","name":"m","namespace":"Numeric","path":"Numeric#m","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以英寸为单位的值"]},"Numeric#mile":{"description":"mile方法用于从英里转换为英寸。","name":"mile","namespace":"Numeric","path":"Numeric#mile","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以英寸为单位的值"]},"Numeric#mm":{"description":"mm方法用于将数字转换为毫米。\\n \\n它返回与给定值长度相同的长度值。例如，len=25.4.mm返回1英寸。","name":"mm","namespace":"Numeric","path":"Numeric#mm","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以毫米为单位的值"]},"Numeric#radians":{"description":"radians方法用于将弧度转换为度数。\\n \\n例如，1.5707963267949.radians将返回90.0","name":"radians","namespace":"Numeric","path":"Numeric#radians","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以度为单位的值"]},"Numeric#to_cm":{"description":"to_cm方法用于从英寸转换为厘米。","name":"to_cm","namespace":"Numeric","path":"Numeric#to_cm","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以厘米为单位的值"]},"Numeric#to_feet":{"description":"to_feet方法用于从英寸转换为英尺。","name":"to_feet","namespace":"Numeric","path":"Numeric#to_feet","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以英尺为单位的值"]},"Numeric#to_inch":{"description":"to_inch方法从英寸转换为英寸。\\n \\n这不会更改值。","name":"to_inch","namespace":"Numeric","path":"Numeric#to_inch","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以英寸为单位的值"]},"Numeric#to_km":{"description":"to_km方法用于从英寸转换为公里。","name":"to_km","namespace":"Numeric","path":"Numeric#to_km","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以公里为单位的值"]},"Numeric#to_l":{"description":"to_l用于将数字转换为长度。","name":"to_l","namespace":"Numeric","path":"Numeric#to_l","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，则为长度对象"]},"Numeric#to_m":{"description":"to_m方法用于从英寸转换为米。","name":"to_m","namespace":"Numeric","path":"Numeric#to_m","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以米为单位的值"]},"Numeric#to_mile":{"description":"to_mile方法用于从英寸转换为英里。","name":"to_mile","namespace":"Numeric","path":"Numeric#to_mile","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以英里为单位的值"]},"Numeric#to_mm":{"description":"to_mm方法用于从英寸转换为毫米。","name":"to_mm","namespace":"Numeric","path":"Numeric#to_mm","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以毫米为单位的值"]},"Numeric#to_yard":{"description":"to_yard方法用于从英寸转换为码。","name":"to_yard","namespace":"Numeric","path":"Numeric#to_yard","type":"instance_method","visibility":"public","return":[["Float"],"如果成功，以码为单位的值"]},"Numeric#yard":{"description":"yard方法用于将码转换为英寸。","name":"yard","namespace":"Numeric","path":"Numeric#yard","type":"instance_method","visibility":"public","return":[["Length"],"如果成功，以英寸为单位的值"]},"Sketchup":{"description":"SketchUp模块包含许多重要的实用程序方法，可在Ruby脚本中使用。API中的许多类都在这个模块下面实现。您可以将SketchUp模块视为应用程序树的“根”。大多数Ruby调用都是从当前活动的模型开始的，可以通过Sketchup.active_model方法访问。","name":"Sketchup","namespace":"","path":"Sketchup","type":"module","visibility":"public"},"Sketchup.active_model":{"description":"active_model方法返回当前活动的SketchUp模型。在PC上，这是唯一可以通过API访问的模型，但是Macintosh版本的SketchUp可以同时打开多个模型，在这种情况下，该方法将返回用户当前关注的模型。","name":"active_model","namespace":"Sketchup","path":"Sketchup.active_model","type":"module_function","visibility":"public","return":[["Sketchup::Model"],"如果成功，则激活模型对象；如果不成功，则为false"]},"Sketchup.add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup","path":"Sketchup.add_observer","type":"module_function","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup.app_name":{"description":"app_name方法用于检索当前应用程序名。","name":"app_name","namespace":"Sketchup","path":"Sketchup.app_name","type":"module_function","visibility":"public","return":[["String"],"应用程序的名称，可以是\\n“SketchUp Pro”或“SketchUp”。\\n注意：对于早于SketchUp8 M4的版本（Mac 8.0.15157和Windows 8.0.15158），此函数将返回“Google SketchUp Pro”或“Google SketchUp”。"]},"Sketchup.break_edges=":{"description":"break_edges=方法可用于禁用或启用“断开边缘”功能。“断开边缘”是一个SketchUp 7功能，它自动分割用户绘制的交叉边缘。\\n \\n默认情况下，此功能始终处于启用状态，用户无法通过用户界面禁用此功能，但您可以调用此方法来禁用它。但是，这样做时要小心，因为当用户稍后在其中绘制线并重新激活“打断边缘”功能时，结果模型可能会发生更改。","name":"break_edges=","namespace":"Sketchup","path":"Sketchup.break_edges=","type":"module_function","visibility":"public","parameters":[["enabled",["Boolean"],"如果为真，则启用“打断边”。如果为false，则将停用它。"]],"return":[["Boolean"],"如果启用了“断开边缘”，则为“真”。"]},"Sketchup.break_edges?":{"description":"break_edges?方法指示当前是否打开“断开边缘”功能。“断开边缘”是一个SketchUp 7功能，它自动分割用户绘制的交叉边缘。\\n默认情况下，此功能始终处于打开状态，用户无法通过用户界面禁用此功能。","name":"break_edges?","namespace":"Sketchup","path":"Sketchup.break_edges?","type":"module_function","visibility":"public","return":[["Boolean"],"如果功能打开，则为true。"]},"Sketchup.create_texture_writer":{"description":"create_texture_writer方法用于创建TextureWriter对象。","name":"create_texture_writer","namespace":"Sketchup","path":"Sketchup.create_texture_writer","type":"module_function","visibility":"public","return":[["Sketchup::TextureWriter"],"如果成功，则为TextureWriter对象。"]},"Sketchup.debug_mode=":{"description":"debug_mode=方法允许您控制当SketchUp检测到API的错误使用时，它是否将警告输出到控制台。\\n设置立即生效，无需重新启动SketchUp。","name":"debug_mode=","namespace":"Sketchup","path":"Sketchup.debug_mode=","type":"module_function","visibility":"public","parameters":[["enabled",["Boolean"],"如果为true，则SketchUp将生成调试警告。"]],"return":[["Boolean"],"如果启用调试模式，则为true。"]},"Sketchup.debug_mode?":{"description":"调试模式？控制当SketchUp检测到API使用不正确时是否将警告输出到控制台。","name":"debug_mode?","namespace":"Sketchup","path":"Sketchup.debug_mode?","type":"module_function","visibility":"public","return":[["Boolean"],"如果启用调试模式，则为true"]},"Sketchup.display_name_from_action":{"description":"display_name_from_action方法用于从操作字符串中获取用户友好的名称。有关有效操作字符串的列表，请参阅Sketchup.send_action。","name":"display_name_from_action","namespace":"Sketchup","path":"Sketchup.display_name_from_action","type":"module_function","visibility":"public","parameters":[["action_name",["String"],"操作字符串。"]],"return":[["String"],"友好的名字。"]},"Sketchup.extensions":{"description":"返回ExtensionsManager，从中可以找到所有注册的SketchupExtension对象。","name":"extensions","namespace":"Sketchup","path":"Sketchup.extensions","type":"module_function","visibility":"public","return":[["Sketchup::ExtensionsManager"],"一个ExtensionsManager物体。"]},"Sketchup.file_new":{"description":"file_new方法用于创建新文件。","name":"file_new","namespace":"Sketchup","path":"Sketchup.file_new","type":"module_function","visibility":"public","return":[["Module"],"SketchUp模块。"]},"Sketchup.find_support_file":{"description":"find_support_files方法用于检索SketchUp安装目录中文件的相对路径和名称。\\n \\n必须使用正斜杠在目录名之间进行分隔。","name":"find_support_file","namespace":"Sketchup","path":"Sketchup.find_support_file","type":"module_function","visibility":"public","parameters":[["filename",["String"],"要查找的文件名的名称。"],["directory",["String"],"相对于SketchUp安装目录的目录。"]],"return":[["String"],"如果成功，则返回整个路径。如果不成功，该方法将返回false。"]},"Sketchup.find_support_files":{"description":"find_support_files方法用于检索SketchUp安装目录中所有匹配文件的路径和名称。\\n \\n必须使用正斜杠在目录名之间进行分隔。","name":"find_support_files","namespace":"Sketchup","path":"Sketchup.find_support_files","type":"module_function","visibility":"public","parameters":[["filename",["String"],"要查找的文件扩展名。"],["directory",["String"],"相对于SketchUp安装目录的目录。如果没有这个，结果将是空的。"]],"return":[["Array<String>"],"一组文件。如果不成功，该方法将返回false。"]},"Sketchup.fix_shadow_strings=":{"description":"fix_shadow_strings=方法允许您控制阴影渲染是否尝试修复通常称为“字符串”的工件。修正实际上是非常依赖于模型的，并且不受用户界面的控制，所以这个方法可以用来控制它。","name":"fix_shadow_strings=","namespace":"Sketchup","path":"Sketchup.fix_shadow_strings=","type":"module_function","visibility":"public","parameters":[["enabled",["Boolean"],"如果为真，则将启用阴影字符串修复。如果为false，则将停用它。"]],"return":[["Boolean"],"如果启用了阴影字符串修复，则为true。"]},"Sketchup.fix_shadow_strings?":{"description":"fix_shadow_strings?方法指示是否启用了通常称为“字符串”的阴影呈现工件的修复。修复实际上是非常依赖于模型的，并且不能从用户界面控制，因此可以使用此方法来测试它。","name":"fix_shadow_strings?","namespace":"Sketchup","path":"Sketchup.fix_shadow_strings?","type":"module_function","visibility":"public","return":[["Boolean"],"如果功能打开，则为true。"]},"Sketchup.format_angle":{"description":"format_angle方法将一个数字作为以弧度表示的角度，并将其格式化为度数。例如，format_angle（math:：pi）将返回180.0。","name":"format_angle","namespace":"Sketchup","path":"Sketchup.format_angle","type":"module_function","visibility":"public","parameters":[["number",["Numeri"],"要格式化的数字。"]],"return":[["String"],"角度，如果成功，以度为单位；如果失败，以度为单位。"]},"Sketchup.format_area":{"description":"format_area方法使用当前单位设置将数字格式化为区域。\\n \\n预设单位设定为英寸。例如，10变为10英寸的平方。","name":"format_area","namespace":"Sketchup","path":"Sketchup.format_area","type":"module_function","visibility":"public","parameters":[["number",["Numeric"],"要格式化的数字。"]],"return":[["String"],"一个区域，如果成功，则为假。"]},"Sketchup.format_degrees":{"description":"format_degrees方法将数字格式化为以度数表示的角度。例如，10变为10.0。这相当于一个to_f呼叫。","name":"format_degrees","namespace":"Sketchup","path":"Sketchup.format_degrees","type":"module_function","visibility":"public","parameters":[["number",["Numeric"],"要格式化的数字。"]],"return":[["String"],"如果成功，则为度；如果失败，则为假。"]},"Sketchup.format_length":{"description":"format_length方法使用当前单位设置将数字格式化为长度。\\n \\n预设单位设定为英寸。例如，10变为10“。","name":"format_length","namespace":"Sketchup","path":"Sketchup.format_length","type":"module_function","visibility":"public","parameters":[["number",["Numeric"],"要格式化的数字。"]],"return":[["String"],"成功时的长度，不成功时的长度为假"]},"Sketchup.get_datfile_info":{"description":"get_datfile_info方法用于从Sketchup.dat检索给定键的值。\\n \\n如果找不到密钥，则返回default_value。","name":"get_datfile_info","namespace":"Sketchup","path":"Sketchup.get_datfile_info","type":"module_function","visibility":"public","parameters":[["key",["String"],"要检索其值的键。"],["default_value",["String"],"如果键不可用，则要返回的默认值。"]],"return":[["String"],"如果成功，则为字符串值。"]},"Sketchup.get_i18n_datfile_info":{"description":"get_i18ndatfile_info方法用于从SketchUp用于多语言工作的国际化文件中检索给定键的值。\\n \\n如果找不到密钥，则返回default_value。","name":"get_i18n_datfile_info","namespace":"Sketchup","path":"Sketchup.get_i18n_datfile_info","type":"module_function","visibility":"public","parameters":[["key",["String"],"要检索其值的键。"],["default_value",["String"],"如果键不可用，则要返回的默认值。"]],"return":[["String"],"如果成功，则为字符串值。"]},"Sketchup.get_locale":{"description":"os_language方法返回运行SketchUp的语言代码。这是get_locale方法的别名。\\n \\n有效的返回值为：en-us、fr、it、de、es、ja、ko、zh-cn、zh-tw、\\n pt-br、nl、ru。\\n如果os语言在sketchup resources文件夹中没有相应的文件夹和文件，则默认情况下返回的语言为en-us。","name":"get_locale","namespace":"Sketchup","path":"Sketchup.get_locale","type":"module_function","visibility":"public","return":[["String"],"正在显示表示语言SketchUp的代码。"]},"Sketchup.get_resource_path":{"description":"get_resource_path用于检索SketchUp存储“资源”文件的目录。资源文件包括语言本地化文件等内容。","name":"get_resource_path","namespace":"Sketchup","path":"Sketchup.get_resource_path","type":"module_function","visibility":"public","parameters":[["filename",["String"],"资源目录层次结构中资源文件的文件名。"]],"return":[["String"],"资源文件夹的目录路径。"]},"Sketchup.get_shortcuts":{"description":"get_shortcuts方法检索当前在SketchUp中注册的所有键盘快捷键的数组。每个快捷方式都以字符串形式返回，快捷方式和命令由选项卡分隔，类似于“ctrl+a\\tedit/select all”","name":"get_shortcuts","namespace":"Sketchup","path":"Sketchup.get_shortcuts","type":"module_function","visibility":"public","return":[["Array<String>"],"快捷方式字符串数组。"]},"Sketchup.install_from_archive":{"description":"将zip存档文件的内容安装到SketchUp的插件文件夹中。\\n如果zip包含子文件夹，这些子文件夹将被保留。这允许RubyAPI插件或扩展开发人员将其插件作为单个文件分发，而不管必须包含多少资产文件。\\n \\n将向用户显示一条警告消息，用户必须同意此消息，然后才能继续安装。如果他们不同意，将引发中断错误。\\n如果用户同意，但解压缩过程有问题，则会引发\\n异常。您可以通过begin/rescue来捕获这些状态。\\n请参阅下面的示例。\\n \\n如果安装成功，将立即执行已添加到plugins文件夹中的所有ruby文件，从而为用户保存重新启动。\\n \\n若要创建存档文件，请使用您最喜欢的工具（7zip、winzip等）压缩插件目录中的任何文件和文件夹。如果存档包含希望用户能够从“首选项>扩展名”面板安装的SketchupExtension，请将文件重命名为.rbz文件扩展名。","name":"install_from_archive","namespace":"Sketchup","path":"Sketchup.install_from_archive","type":"module_function","visibility":"public","parameters":[["filename",["String"],"要安装的RBZ或zip文件的路径。"]],"return":[["Boolean"],""]},"Sketchup.is_64bit?":{"description":"此方法指示宿主SketchUp应用程序是否为64位。\\n对于二进制文件附带的扩展非常有用，需要确定要加载的版本。","name":"is_64bit?","namespace":"Sketchup","path":"Sketchup.is_64bit?","type":"module_function","visibility":"public","return":[["Boolean"],"如果SketchUp为64位，则为true。"]},"Sketchup.is_online":{"description":"is_online方法用于验证到Internet的连接。此方法可能需要一些时间来执行，因此请注意不要比需要的次数更频繁地调用它。","name":"is_online","namespace":"Sketchup","path":"Sketchup.is_online","type":"module_function","visibility":"public","return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup.is_pro?":{"description":"返回一个布尔标志，指示应用程序是否为SketchUp Pro。\\n请注意，在免费试用期后，SketchUp Pro将恢复为常规SketchUp，并且此方法将返回False，直到用户注册产品。","name":"is_pro?","namespace":"Sketchup","path":"Sketchup.is_pro?","type":"module_function","visibility":"public","return":[["Boolean"],"如果用户正在使用SketchUp Pro，则为true"]},"Sketchup.is_valid_filename?":{"description":"is_valid_filename?方法用于确定文件名是否包含非法字符。","name":"is_valid_filename?","namespace":"Sketchup","path":"Sketchup.is_valid_filename?","type":"module_function","visibility":"public","parameters":[["filename",["String"],"文件名字符串。"]],"return":[["Boolean"],"如果文件名有效，则为true；如果文件名无效，则为false（包含非法字符）。"]},"Sketchup.load":{"description":"load方法用于包括加密和非加密的Ruby文件。\\n \\n您不需要在路径上包含文件扩展名。此方法将首先查找.rb（未加密）文件，然后查找.rbe（加密）文件，最后查找.rbs \\n（已弃用的加扰格式）文件。\\n有关详细信息，请参阅“分发插件”文章。","name":"load","namespace":"Sketchup","path":"Sketchup.load","type":"module_function","visibility":"public","parameters":[["path",["String"],"您想要的文件的路径，包括文件名。"]],"return":[["Boolean"],"如果包含该文件，则为true。如果不包含该文件，则返回false。"]},"Sketchup.open_file":{"description":"open_file方法用于打开文件。","name":"open_file","namespace":"Sketchup","path":"Sketchup.open_file","type":"module_function","visibility":"public","parameters":[["filename",["String"],"要打开的路径和文件名。"]],"return":[["Boolean"],"如果打开文件成功，则为true，否则为false。"]},"Sketchup.os_language":{"description":"os_language方法返回运行SketchUp的语言代码。这是get_locale方法的别名。\\n \\n有效的返回值为：en-us、fr、it、de、es、ja、ko、zh-cn、zh-tw、\\n pt-br、nl、ru。\\n如果os语言在sketchup resources文件夹中没有相应的文件夹和文件，则默认情况下返回的语言为en-us。","name":"os_language","namespace":"Sketchup","path":"Sketchup.os_language","type":"module_function","visibility":"public","return":[["String"],"正在显示表示语言SketchUp的代码。"]},"Sketchup.parse_length":{"description":"parse_length方法将字符串解析为一个长度。\\n \\n例如，“200”变为200.0。","name":"parse_length","namespace":"Sketchup","path":"Sketchup.parse_length","type":"module_function","visibility":"public","parameters":[["string",["String"],"要作为数字分析的字符串。"]],"return":[["Float"],"字符串的数字表示形式（如果成功），或nil（如果失败）。"]},"Sketchup.platform":{"description":"此方法返回指示当前平台的符号。\\n \\n应该在RUBY_PLATFORM以上使用，因为这将返回自SketchUp 2014以来Windows的不同值。\\n \\n旧的SketchUp版本仍需要检查<code>RUBY_PLATFORM.include?('mswin')</code>或<code>RUBY_PLATFORM.include?('darwin')</code>。\\n \\n可能的返回值：\\n-:platform_win \\n-：平台OSX","name":"platform","namespace":"Sketchup","path":"Sketchup.platform","type":"module_function","visibility":"public","return":[["Symbol"],"当前操作系统平台。"]},"Sketchup.plugins_disabled=":{"description":"plugins_disabled=方法允许您控制SketchUp是否在启动时从插件目录加载Ruby脚本。这主要是一种故障排除方法。如果您怀疑SketchUp中存在错误的脚本行为，可以在Ruby控制台中键入SketchUp.Plugins_disabled=true，然后重新启动SketchUp以查看问题是否已解决。","name":"plugins_disabled=","namespace":"Sketchup","path":"Sketchup.plugins_disabled=","type":"module_function","visibility":"public","parameters":[["enabled",["Boolean"],"如果为true，则不会加载插件目录。"]],"return":[["Boolean"],"如果插件被禁用，则为true。"]},"Sketchup.plugins_disabled?":{"description":"plugins_disabled?方法指示是否在启动时加载插件目录中的Ruby脚本。","name":"plugins_disabled?","namespace":"Sketchup","path":"Sketchup.plugins_disabled?","type":"module_function","visibility":"public","return":[["Boolean"],"如果插件被禁用，则为true。"]},"Sketchup.quit":{"description":"quit方法用于终止应用程序。如果有未保存的模型打开，这将弹出通常的模型保存提示。用户可以取消模型保存，在这种情况下，应用程序将不会终止。","name":"quit","namespace":"Sketchup","path":"Sketchup.quit","type":"module_function","visibility":"public","return":[null,"自己"]},"Sketchup.read_default":{"description":"read_default方法用于检索与.ini文件或注册表的指定子节中的值相关联的字符串（在软件>SketchUp>SketchUp[版本]节中）。","name":"read_default","namespace":"Sketchup","path":"Sketchup.read_default","type":"module_function","visibility":"public","parameters":[["section",["String"],".ini或注册表中的节。"],["variable",["String"],"节中的变量。"],["default",["Object"],"如果找不到该值，则为默认值。"]],"return":[["Object","nil"],"如果不成功，则为默认值（如果成功）。"]},"Sketchup.register_extension":{"description":"register_extension方法用于向SketchUp的扩展管理器注册扩展（在SketchUp首选项中）。","name":"register_extension","namespace":"Sketchup","path":"Sketchup.register_extension","type":"module_function","visibility":"public","parameters":[["load_on_start",["Boolean"],"将true传递给它将立即加载扩展并对其进行设置，以便在SketchUp重新启动时自动加载。"],["extension",["SketchupExtension"],"一个SketchupExtension对象。"]],"return":[["Boolean"],"+true+如果扩展注册正确"]},"Sketchup.register_importer":{"description":"register_importer方法用于向SketchUp注册导入程序。","name":"register_importer","namespace":"Sketchup","path":"Sketchup.register_importer","type":"module_function","visibility":"public","parameters":[["importer",["Sketchup::Importer"],"表示导入程序的导入程序对象。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup.remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup","path":"Sketchup.remove_observer","type":"module_function","visibility":"public","parameters":[["observer",["Sketchup::AppObserver"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup.require":{"description":"require方法用于包括加密和非加密的Ruby文件。\\n这是Sketchup.load方法的别名。\\n \\n您不需要在路径上包含文件扩展名。此方法将首先查找.rbe（加密的），然后查找.rbs（不推荐使用的加扰格式）和.rb（未加密的）文件。当引入新的.rbe加密时，在SketchUp 2016中更改了加载顺序。在SketchUp 2016之前，加载顺序是先.rb，然后.rbs。","name":"require","namespace":"Sketchup","path":"Sketchup.require","type":"module_function","visibility":"public","parameters":[["path",["String"],"您想要的文件的路径，包括文件名。"]],"return":[["Boolean"],"如果包含该文件，则为true。如果不包含该文件，则返回false。"]},"Sketchup.save_thumbnail":{"description":"save_thumbnail方法用于为任何skp文件生成缩略图-\\n不一定是加载的模型。","name":"save_thumbnail","namespace":"Sketchup","path":"Sketchup.save_thumbnail","type":"module_function","visibility":"public","parameters":[["skp_filename",["String"],"要在缩略图中表示其模型的SketchUp文件的名称。"],["img_filename",["String"],"保存缩略图的文件名。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup.send_action":{"description":"send_action方法将消息发送到消息队列以异步执行某些操作。\\n \\n有效操作为：\\n-showrubypanel:\\n-viewback:\\n-viewbottom:\\n-viewfront:\\n-viewiso:\\n-viewleft:\\n-viewright:\\n-viewtop:\\n-viewperspective:\\n-viewshowaxis:\\n-viewshowhidden:\\n-viewzoomextents:\\n-viewzoomtoselection:\\n-viewundo:\\n-selectorbittool:\\n-selectpositioncameratool:\\nol:\\n-selectturntool:\\n-selectwalktool:\\n-selectzoomtool:\\n-selectfieldofviewtool:\\n-selectzoomwindowtool:\\n-pageadd:\\n-pagedelete:\\n-pageupdate:\\n-pagenext:\\n-pageprevious:\\n-renderwireframe:\\n-renderhiddenline:\\n-rendermonochrome:\\n-rendershadded:\\n-rendertextures:\\n-selectarctool:\\n-selectarc3Pointtool:\\n-selectarc3pointpietool:\\n-selectaxistool:\\n-selectcarcletool:\\n-selecterasetool:\\n-selectfreehandtool:\\n-selectlinetool:\\n-selectmeasuretool:\\n-selectmovetool:\\n-selectoffsettool:\\n-selectpaintool:\\n-selectpolygontool:\\n-selectprotectortool:\\n-selectpulltool:\\n-select矩形tool:\\n-seelectangle3点工具：\\n-selectrotatetool:\\n-selectscaletool:\\n-selectsectionplanetool:\\n-selecttexttool:\\n-selectdimensiontool:\\n-selectextendtool:\\n-selectiontool:\\n-editundo:\\n-editredo:\\n-edithide:\\n-editunhide:\\n-fixnonplanfaces:\\n \\n在SketchUp 8.0+中添加：\\n-addbuilding:\\n-getphototexture:\\n-selectimageiglotool:\\n-selectnorthtool:\\n \\n在SketchUp 2013+中添加了：：\\n-showExtensionStore:\\n \\n在SketchUp 2013+中删除了：：\\n-addbuilding:\\n \\n仅在PC上，您还可以发送这些数值。（请注意，这些是官方“不支持”的，不保证在当前或未来版本的API中工作。）\\n\\n-10501:将视图设置为顶部\\n-10502:将视图设置为前部\\n-10503:将视图设置为后部\\n-10504:将视图设置为左侧\\n-10505:将视图设置为右侧\\n-10506:将视图设置为底部\\n-10507:将视图设置为轴测图\\n-10510:将渲染模式设置为线\\n-10511:将渲染模式设置为隐藏线删除\\n-10512:将渲染模式设置为表面着色\\n-10513:将渲染模式设置为透明度\\n-10519:将相机设置为正交（删除透视图）\\n-10520:漫游工具\\n-10521:显示“系统首选项”对话框（文件选项卡）\\n-10522:删除轴显示\\n-10523:平移工具\\n-10525:设置交互式眼睛高度功能\\n-10526:缩放窗口\\n-10527:缩放范围\\n-10529:缩小2\\n-10531:切换标准工具栏\\n-10532:切换相机工具栏\\n-10533:显示阴影设置对话框\\n-10537:切换视图工具栏\\n-10538:显示系统首选项Dialog box（显示选项卡）\\n-10545:切换颜色ByLayer\\n-10546:切换阴影工具栏\\n-10551:切换大图标\\n-10576:切换渲染模式工具栏\\n-10596:将渲染模式设置为无透明度（首选项）\\n-10597:将渲染模式设置为有线（首选项）\\n-10598:将渲染模式设置为透明度（首选项）\\n-10599:设置REnder模式到表面着色（首选项）：n-10600:将渲染模式设置为纹理（首选项）：n-10601:将渲染模式设置为无纹理（首选项）：n-10602:切换阴影\\n-10603:切换配置文件\\n-10604:切换延长线\\n-10605:切换抖动边缘\\n-21019:隐藏状态栏和VCB \\n-21020:显示状态栏和VCB \\n-21022:隐藏状态栏和VCB \\n-21023:放置三维文本框\\n-21024:选择测量工具\\n-21031:选择徒手绘制工具\\n-21041:选择PushPull工具\\n-21048:选择移动工具\\n-21052:隐藏所选对象\\n-21056:创建具有所选边闭合循环的面\\n-21057:选择量角器工具\\n-21060:显示组件窗口\\n-21061:切换绘制工具栏\\n-21063:切换模型边界框显示\\n-21065:选择圆弧工具\\n-21067:创建新页面\\n-21069:选择圆弧3点工具\\n-21070:选择圆弧3点饼图工具\\n-21074:显示材料浏览器窗口\\n-21076:显示首选项对话框（text activated）：n-21077:显示“每日窗口”的提示\\n-21078:选择“绘制桶”工具\\n-21080:显示“页面管理器”窗口\\n-21082:显示“宏”对话框\\n-21086:显示“组件浏览器”窗口\\n-21094:选择矩形工具\\n-21095:选择多边形工具\\n-21096:选择“圆”工具\\n-21098:打开打开窗口\\n-21100:选择偏移工具\\n-21101:选择所有对象\\n-21112:打开导入窗口\\n-21124:启动有效性检查工具\\n-21126:选择轴工具\\n-21029:选择旋转工具\\n-21032:切换层工具栏\\n-21036:显示另存为窗口\\n-21046:旋转模型A完整360&deg；和显示报告\\n-21047:fast p","name":"send_action","namespace":"Sketchup","path":"Sketchup.send_action","type":"module_function","visibility":"public","parameters":[["action",["String","Integer"],"要执行的操作。"]],"return":[["Boolean"],"+正确+如果成功，+false+如果不成功"]},"Sketchup.set_status_text":{"description":"set_status_text方法用于设置图形窗口中状态栏上显示的文本。\\n \\n如果未传递任何参数，则清除状态栏内容。有效位置为：\\n\\n-+SB_PROMPT+-文本将显示在状态栏的左侧\\n-+SB_VCB_LABEL+-文本将显示在VCB标签的位置\\n-+SB_VCB_VALUE+-文本将显示在VCB中","name":"set_status_text","namespace":"Sketchup","path":"Sketchup.set_status_text","type":"module_function","visibility":"public"},"Sketchup.status_text=":{"description":"status_text=方法用于设置图形窗口中状态栏上显示的文本。\\n \\n这与使用第二个参数SB_PROMPT调用set_status_text相同。","name":"status_text=","namespace":"Sketchup","path":"Sketchup.status_text=","type":"module_function","visibility":"public","parameters":[["status_text",["String"],"将显示的状态文本。"]],"return":[["String"],""]},"Sketchup.temp_dir":{"description":"temp_dir方法用于检索当前用户的操作系统临时目录。您可以使用此目录写入在SketchUp会话之间不需要保留的临时文件。","name":"temp_dir","namespace":"Sketchup","path":"Sketchup.temp_dir","type":"module_function","visibility":"public","return":[["String"],"包含完整临时目录路径的字符串"]},"Sketchup.template":{"description":"template方法用于获取当前模板的文件名。\\n模板是用户选择“文件>新建”时加载的.skp文件。","name":"template","namespace":"Sketchup","path":"Sketchup.template","type":"module_function","visibility":"public","return":[["String"],"当前模板"]},"Sketchup.template=":{"description":"template=方法用于设置当前模板的文件名。\\n模板是用户选择“文件>新建”时加载的.skp文件。","name":"template=","namespace":"Sketchup","path":"Sketchup.template=","type":"module_function","visibility":"public","parameters":[["filename",["String"],"要设置的模板的名称。"]],"return":[["String"],"如果成功则为真，如果失败则为假。"]},"Sketchup.template_dir":{"description":"template_dir用于检索SketchUp安装程序存储模板的目录。模板是用户选择文件>新建时加载的.skp文件。","name":"template_dir","namespace":"Sketchup","path":"Sketchup.template_dir","type":"module_function","visibility":"public","return":[["String"],"包含完整的模板目录路径"]},"Sketchup.undo":{"description":"undo方法用于撤消撤消堆栈上的最后一个事务。","name":"undo","namespace":"Sketchup","path":"Sketchup.undo","type":"module_function","visibility":"public","return":[["nil"],""]},"Sketchup.vcb_label=":{"description":"vcb_label=方法用于设置出现在VCB或“值控制框”上的标签，这是显示在SketchUp窗口底部的“测量”文本输入框的另一个词。\\n \\n这与使用第二个参数SB_VCB_LABEL调用set_status_text相同。","name":"vcb_label=","namespace":"Sketchup","path":"Sketchup.vcb_label=","type":"module_function","visibility":"public","parameters":[["label_text",["String"],"将显示的标签文本。"]],"return":[["String"],""]},"Sketchup.vcb_value=":{"description":"vcb_value=方法用于设置显示在VCB或“值控制框”上的值，这是显示在SketchUp窗口底部的“测量”文本输入框的另一个词。\\n \\n这与使用第二个参数SB_VCB_VALUE调用set_status_text相同。","name":"vcb_value=","namespace":"Sketchup","path":"Sketchup.vcb_value=","type":"module_function","visibility":"public","parameters":[["value",["String"],"将显示为VCB值的文本。"]],"return":[["String"],""]},"Sketchup.version":{"description":"获取十进制形式的SketchUp的当前版本。","name":"version","namespace":"Sketchup","path":"Sketchup.version","type":"module_function","visibility":"public","return":[["String"],"版本的十进制形式"]},"Sketchup.version_number":{"description":"将当前版本的SketchUp作为一个整数进行比较。返回的数字将主要、次要和内部版本值打包成一个整数值，如下所示：\\n-主要版本=x\\n-次要版本=y\\n-内部版本号=z\\n\\n SketchUp 6.0-SketchUp 2015\\n-XXYYYZZZ\\n\\n SketchUp 2016+\\n-XXYZZZZZZ","name":"version_number","namespace":"Sketchup","path":"Sketchup.version_number","type":"module_function","visibility":"public","return":[["Integer"],"版本的整数形式"]},"Sketchup.write_default":{"description":"write_default方法用于在Mac上的.plist文件的指定子节或Windows上的注册表中（在软件>SketchUp>SketchUp[版本]节中）设置与变量关联的字符串。","name":"write_default","namespace":"Sketchup","path":"Sketchup.write_default","type":"module_function","visibility":"public","parameters":[["section",["String"],".plist文件（mac）或注册表（windows）中的节。"],["key",["String"],"部分中的键。"],["value",["Object"],"要存储的值。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Animation":{"description":"{Sketchup::Animation}接口实现了在SketchUp中创建动画。在任何给定时间，一个动画可以在{Sketchup::View}上激活。要创建自己的Ruby类，请创建一个包含以下方法的Ruby类：\\n \n  # This is an example of a simple animation that floats the camera up to\n  # a z position of 200\". The only required method for an animation is\n  # nextFrame. It is called whenever you need to show the next frame of\n  # the animation. If nextFrame returns false, the animation will stop.\n  class FloatUpAnimation\n    def nextFrame(view)\n      new_eye = view.camera.eye\n      new_eye.z = new_eye.z + 1.0\n      view.camera.set(new_eye, view.camera.target, view.camera.up)\n      view.show_frame\n      return new_eye.z < 500.0\n    end\n  end\n\n  # This adds an item to the Camera menu to activate our custom animation.\n  UI.menu(\"Camera\").add_item(\"Run Float Up Animation\") {\n    Sketchup.active_model.active_view.animation = FloatUpAnimation.new\n  }\n\\n {Sketchup::Animation}对象通过在{Sketchup::View}对象上使用{Sketchup::View#animation=}方法激活。要停止动画，请将视图的动画对象设置为+nil+，如下所示：","name":"Animation","namespace":"Sketchup","path":"Sketchup::Animation","type":"class","visibility":"public"},"Sketchup::Animation#nextFrame":{"description":"sketchUp调用{#nextFrame}方法来告诉动画显示其下一帧。此方法应设置摄像头，然后调用{Sketchup::View#show_frame}。\\n \\n {#nextFrame}方法是必须实现的{Sketchup::Animation}接口的唯一必需方法。","name":"nextFrame","namespace":"Sketchup::Animation","path":"Sketchup::Animation#nextFrame","type":"instance_method","visibility":"public","parameters":[["view",["Sketchup::View"],"动画的视图。"]],"return":[["Boolean"],"如果希望动画继续到下一帧，请继续-+true+；如果希望动画在此帧之后停止，请继续-+false+。"]},"Sketchup::Animation#pause":{"description":"当动画暂停时，SketchUp将调用{#pause}方法。\\n \\n此方法是可选的（您不需要实现此方法，除非您希望在动画暂停时执行某些专用函数）。不能在代码中显式调用此方法并期望动画暂停，只有某些SketchUp事件才会导致调用该方法。","name":"pause","namespace":"Sketchup::Animation","path":"Sketchup::Animation#pause","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Animation#resume":{"description":"当动画暂停后恢复时，SketchUp将调用{#resume}方法。\\n \\n此方法是可选的（您不需要实现此方法，除非您希望在动画恢复时执行某些专用函数）。\\n不能在代码中显式调用此方法并期望动画停止，只有某些SketchUp事件才会导致调用此方法。","name":"resume","namespace":"Sketchup::Animation","path":"Sketchup::Animation#resume","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Animation#stop":{"description":"当动画停止时，SketchUp将调用{#stop}方法。\\n \\n此方法是可选的（除非要在动画停止时执行某些专用函数，否则不需要实现此方法）。不能在代码中显式调用此方法并期望动画停止，只有某些SketchUp事件才会导致调用该方法。\\n \\n调用此方法的最常见方法可能是当Ruby代码将{Sketchup::View#animation=}设置为+nil+时。有关此示例，请参见类注释。","name":"stop","namespace":"Sketchup::Animation","path":"Sketchup::Animation#stop","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::AppObserver":{"description":"这个观测器接口被实现来响应应用程序事件。\\n此接口通常用于在模型打开或启动时将其他观察者附加到模型。\\n这将确保您的观察员正在监视所有打开的模型。\\n \\n例如，当连接{Sketchup::SelectionObserver}时，它只连接到给定模型的{Sketchup::Selection}集合。如果打开第二个模型，则新模型的选择更改将不会触发选择回调，除非您也将{Sketchup::SelectionObserver}附加到新模型。通过观看{#onNewModel}，您可以确保做到这一点。\\n \\n若要实现此观察者，请创建此类型的Ruby类，重写所需的方法，并将该观察者的实例添加到应用程序类中。","name":"AppObserver","namespace":"Sketchup","path":"Sketchup::AppObserver","type":"class","visibility":"public"},"Sketchup::AppObserver#expectsStartupModelNotifications":{"description":"调用{#expectsStartupModelNotifications}方法来确定观察者是否希望接收{#onNewModel}和{#onOpenModel}对在SketchUp启动时创建或打开的模型的调用。这包括空的初始模型、通过命令行参数打开的模型或Mac OS X上的自动恢复模型。","name":"expectsStartupModelNotifications","namespace":"Sketchup::AppObserver","path":"Sketchup::AppObserver#expectsStartupModelNotifications","type":"instance_method","visibility":"public","return":[["Boolean"],"+true+接收{#onNewModel}和{#onOpenModel}对启动模式的调用。返回+false+或不实现该方法以不接收这些调用（这是SketchUp 2014之前的行为）。"]},"Sketchup::AppObserver#onActivateModel":{"description":"激活开放模型时调用{#onActivateModel}方法。这仅与支持同时打开多个文档的Mac相关。","name":"onActivateModel","namespace":"Sketchup::AppObserver","path":"Sketchup::AppObserver#onActivateModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],"新激活的模型对象。"]],"return":[["nil"],""]},"Sketchup::AppObserver#onNewModel":{"description":"当应用程序创建新的空模型时，将调用{#onNewModel}方法。","name":"onNewModel","namespace":"Sketchup::AppObserver","path":"Sketchup::AppObserver#onNewModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],"活动模型对象。"]],"return":[["nil"],""]},"Sketchup::AppObserver#onOpenModel":{"description":"当应用程序打开现有模型时，将调用{#onOpenModel}方法。","name":"onOpenModel","namespace":"Sketchup::AppObserver","path":"Sketchup::AppObserver#onOpenModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],"活动模型对象。"]],"return":[["nil"],""]},"Sketchup::AppObserver#onQuit":{"description":"当SketchUp关闭时调用{#onQuit}方法。如果需要在关闭时清除任何内容或存储应用程序状态，则此功能非常有用。","name":"onQuit","namespace":"Sketchup::AppObserver","path":"Sketchup::AppObserver#onQuit","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::AppObserver#onUnloadExtension":{"description":"当用户关闭Ruby扩展时，将调用{#onUnloadExtension}方法。这对于检测用户是否正在停用一些关键的观察者集很有用，例如，您可以警告他们或缓存扩展状态。","name":"onUnloadExtension","namespace":"Sketchup::AppObserver","path":"Sketchup::AppObserver#onUnloadExtension","type":"instance_method","visibility":"public","parameters":[["extension_name",["String"],"刚刚卸载的扩展名。"]],"return":[["nil"],""]},"Sketchup::ArcCurve":{"description":"ArcCurve是构成圆一部分的曲线。这也是圆形的基础类。\\n \\n您可以将ArcCurves视为使用SketchUp的圆弧或圆绘制工具创建的实体，将曲线视为使用徒手绘制工具创建的实体。\\n \\n但是，请记住，SketchUp中的所有曲线实际上都是边，并附加了一些额外的数据。当您使用API绘制曲线或ArcCurve时，您实际上是在绘制边。\\n \\n ArcCurve是曲线的一个子类，因此所有可用于曲线的方法也可用于ArcCurves。","name":"ArcCurve","namespace":"Sketchup","path":"Sketchup::ArcCurve","type":"class","visibility":"public"},"Sketchup::ArcCurve#center":{"description":"center方法用于检索位于圆弧中心的Point3d。","name":"center","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#center","type":"instance_method","visibility":"public","return":[null,"点-A Point3d，如果成功，位于弧中心"]},"Sketchup::ArcCurve#end_angle":{"description":"end_angle方法用于检索从X轴以弧度测量的弧端角。","name":"end_angle","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#end_angle","type":"instance_method","visibility":"public","return":[null,"角度-如果成功，弧端的角度"]},"Sketchup::ArcCurve#normal":{"description":"normal方法检索垂直于圆弧平面的Vector3d。","name":"normal","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#normal","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::ArcCurve#plane":{"description":"plane方法用于检索弧的平面。\\n \\n有关创建平面的说明，请参阅geom模块。","name":"plane","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#plane","type":"instance_method","visibility":"public","return":[null,"平面-如果成功，弧的平面"]},"Sketchup::ArcCurve#radius":{"description":"radius方法用于检索弧的半径。","name":"radius","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#radius","type":"instance_method","visibility":"public","return":[null,"半径-弧的半径（如果成功）"]},"Sketchup::ArcCurve#start_angle":{"description":"start_angle方法用于检索圆弧起点的角度，从X轴以弧度测量。","name":"start_angle","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#start_angle","type":"instance_method","visibility":"public","return":[null,"角度-如果成功，弧的起始角度"]},"Sketchup::ArcCurve#xaxis":{"description":"xaxis方法用于检索曲线坐标系的X轴。请注意，返回向量的长度等于基础曲线的半径。","name":"xaxis","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#xaxis","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::ArcCurve#yaxis":{"description":"yaxis方法用于检索曲线坐标系的Y轴。请注意，返回向量的长度等于基础曲线的半径。","name":"yaxis","namespace":"Sketchup::ArcCurve","path":"Sketchup::ArcCurve#yaxis","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::AttributeDictionaries":{"description":"AttributeDictionaries类是附加到给定实体对象的所有AttributeDictionary对象的集合。\\n \\n实体类在SketchUp中是一个流行的父类，这意味着您可以\\n将{#bring_to_front}0附加到几乎所有内容，从边缘、面和组件等几何项到页面或材料等更具概念性的内容。\\n \\n您不是通过执行AttributeDictionaries.new，而是通过从现有实体获取句柄来访问此类。","name":"AttributeDictionaries","namespace":"Sketchup","path":"Sketchup::AttributeDictionaries","type":"class","visibility":"public"},"Sketchup::AttributeDictionaries#[]":{"description":"按名称获取AttributeDictionary。如果没有具有给定名称的，则返回nil。","name":"[]","namespace":"Sketchup::AttributeDictionaries","path":"Sketchup::AttributeDictionaries#[]","type":"instance_method","visibility":"public","parameters":[["key",["String"],"属性字典的名称。"]],"return":[["Sketchup::AttributeDictionary"],"字典"]},"Sketchup::AttributeDictionaries#count":{"description":"count方法继承自可枚举混合输入模块。","name":"count","namespace":"Sketchup::AttributeDictionaries","path":"Sketchup::AttributeDictionaries#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::AttributeDictionaries#delete":{"description":"delete方法销毁给定的AttributeDictionary。这个AttributeDictionary可以直接传递，也可以通过它的字符串名称来标识。","name":"delete","namespace":"Sketchup::AttributeDictionaries","path":"Sketchup::AttributeDictionaries#delete","type":"instance_method","visibility":"public","parameters":[["key_or_dict",["String","Sketchup::AttributeDictionary"],"要删除的属性字典的名称，或字典对象本身。"]],"return":[["Sketchup::AttributeDictionaries"],"修改后的AttributeDictionaries对象"]},"Sketchup::AttributeDictionaries#each":{"description":"each方法用于遍历所有属性字典。\\n \\n如果没有密钥，则引发异常。","name":"each","namespace":"Sketchup::AttributeDictionaries","path":"Sketchup::AttributeDictionaries#each","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::AttributeDictionaries#length":{"description":"{#length}方法返回集合中的属性字典对象数。","name":"length","namespace":"Sketchup::AttributeDictionaries","path":"Sketchup::AttributeDictionaries#length","type":"instance_method","visibility":"public","return":[["Integer"],"集合中的属性字典对象数。"]},"Sketchup::AttributeDictionaries#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::AttributeDictionaries","path":"Sketchup::AttributeDictionaries#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::AttributeDictionary":{"description":"AttributeDictionary类允许您将任意属性集合附加到SketchUp实体。属性由键/值对定义，其中键是字符串。实体或模型对象可以有任意数量的AttributeDictionary对象（请参见AttributeDictionaries类）。\\n \\n实体类在SketchUp中是一个流行的父类，这意味着您可以将属性字典附加到几乎所有内容，从边缘、面和组件等几何项到页面或材料等更具概念性的内容。","name":"AttributeDictionary","namespace":"Sketchup","path":"Sketchup::AttributeDictionary","type":"class","visibility":"public"},"Sketchup::AttributeDictionary#[]":{"description":"[]方法用于检索具有给定键的属性。","name":"[]","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#[]","type":"instance_method","visibility":"public","parameters":[["key",["String"],"属性的名称。"]],"return":[["Object","nil"],"存储在密钥下的属性，如果找不到，则为nil"]},"Sketchup::AttributeDictionary#[]=":{"description":"set value（[]=）方法用于设置具有给定键的属性的值。\\n \\n如果需要，为给定的键创建一个新属性。","name":"[]=","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#[]=","type":"instance_method","visibility":"public","parameters":[["key",["String"],"有效的密钥。"],["value",["Boolean","Fixnum","Float","Length","NilClass","String","Time","Array","Geom::Point3d","Geom::Vector3d"],"要设置的值。"]],"return":[["Object","nil"],"成功时设置的值，或失败时设置为false。"]},"Sketchup::AttributeDictionary#count":{"description":"count方法继承自可枚举混合输入模块。","name":"count","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::AttributeDictionary#delete_key":{"description":"delete_key方法用于删除具有给定键的属性。","name":"delete_key","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#delete_key","type":"instance_method","visibility":"public","parameters":[["key",["String"],"要删除的密钥。"]],"return":[["Object","nil"],"键的值"]},"Sketchup::AttributeDictionary#each":{"description":"{#each}方法迭代所有属性。","name":"each","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#each","type":"instance_method","visibility":"public"},"Sketchup::AttributeDictionary#each_key":{"description":"{#each_key}方法用于迭代所有属性键。","name":"each_key","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#each_key","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::AttributeDictionary#each_pair":{"description":"{#each_pair}方法是{#each}的别名。","name":"each_pair","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#each_pair","type":"instance_method","visibility":"public"},"Sketchup::AttributeDictionary#keys":{"description":"keys方法用于检索具有所有属性键的数组。","name":"keys","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#keys","type":"instance_method","visibility":"public","return":[["Array<String>"],"属性字典中的键数组（如果成功）"]},"Sketchup::AttributeDictionary#length":{"description":"{#length}方法用于检索属性字典的大小（元素数）。","name":"length","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::AttributeDictionary#name":{"description":"name方法用于检索属性字典的名称。","name":"name","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#name","type":"instance_method","visibility":"public","return":[["String"],"属性字典的名称（如果成功）"]},"Sketchup::AttributeDictionary#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::AttributeDictionary#values":{"description":"values方法用于检索具有所有属性值的数组。","name":"values","namespace":"Sketchup::AttributeDictionary","path":"Sketchup::AttributeDictionary#values","type":"instance_method","visibility":"public","return":[["Array<Object, nil>"],"属性字典中的值数组（如果成功）"]},"Sketchup::Axes":{"description":"SketchUp的绘图轴由三条颜色线（红、绿、蓝）组成，通常相互垂直，显示在绘图区域中。例外情况是，当用户使用非正交转换打开实例时。根模型变换总是正交的。\\n \\n绘图工具使用绘图轴来对齐其创建的几何图形以及影响推理引擎。\\n \\n红色和绿色轴线所在的平面称为地平面。\\n术语“原点”用于定义所有轴线的起点或起点。","name":"Axes","namespace":"Sketchup","path":"Sketchup::Axes","type":"class","visibility":"public"},"Sketchup::Axes#axes":{"description":"axes方法返回表示轴方向的向量。","name":"axes","namespace":"Sketchup::Axes","path":"Sketchup::Axes#axes","type":"instance_method","visibility":"public","return":[null,"数组-三个向量的数组。"]},"Sketchup::Axes#origin":{"description":"origin方法返回轴的原点。","name":"origin","namespace":"Sketchup::Axes","path":"Sketchup::Axes#origin","type":"instance_method","visibility":"public","return":[null,"Point3D-轴的原点。"]},"Sketchup::Axes#set":{"description":"set方法允许操纵轴。轴必须始终是正交的，否则会引发错误。","name":"set","namespace":"Sketchup::Axes","path":"Sketchup::Axes#set","type":"instance_method","visibility":"public","parameters":[["origin",null,"Point3D-要设置的原点。"],["xaxis",null,"Vector3D-要设置的x轴。"],["zaxis",null,"Vector3D-要设置的z轴。"],["yaxis",null,"Vector3D-要设置的y轴。"]],"return":[null,"轴-正在设置的轴对象。"]},"Sketchup::Axes#sketch_plane":{"description":"sketch_plane方法返回一个表示轴的地平面的平面。","name":"sketch_plane","namespace":"Sketchup::Axes","path":"Sketchup::Axes#sketch_plane","type":"instance_method","visibility":"public","return":[null,"4个数字组成的数组，给出平面方程的系数。"]},"Sketchup::Axes#to_a":{"description":"axes方法返回表示轴的原点和向量。","name":"to_a","namespace":"Sketchup::Axes","path":"Sketchup::Axes#to_a","type":"instance_method","visibility":"public","return":[null,"数组-一个点和三个向量的数组。"]},"Sketchup::Axes#transformation":{"description":"transformation方法返回轴的转换。这在创建尊重模型绘图轴的工具时很有用。","name":"transformation","namespace":"Sketchup::Axes","path":"Sketchup::Axes#transformation","type":"instance_method","visibility":"public","return":[null,"变换-轴的变换。"]},"Sketchup::Axes#xaxis":{"description":"xaxis方法返回轴的x轴。","name":"xaxis","namespace":"Sketchup::Axes","path":"Sketchup::Axes#xaxis","type":"instance_method","visibility":"public","return":[null,"Vector3D-轴的x轴。"]},"Sketchup::Axes#yaxis":{"description":"yaxis方法返回轴的y轴。","name":"yaxis","namespace":"Sketchup::Axes","path":"Sketchup::Axes#yaxis","type":"instance_method","visibility":"public","return":[null,"Vector3D-轴的y轴。"]},"Sketchup::Axes#zaxis":{"description":"zaxis方法返回轴的z轴。","name":"zaxis","namespace":"Sketchup::Axes","path":"Sketchup::Axes#zaxis","type":"instance_method","visibility":"public","return":[null,"Vector3D-轴的z轴。"]},"Sketchup::Behavior":{"description":"行为类用于控制组件的“行为”，这与在“编辑”选项卡下的“组件”对话框中看到的一系列选项大致相关，例如它是否投射阴影、是否粘在墙上等。\\n\\n行为对象是从ComponentDefinition对象访问的，而不是通过Behavior.new调用创建的。","name":"Behavior","namespace":"Sketchup","path":"Sketchup::Behavior","type":"class","visibility":"public"},"Sketchup::Behavior#always_face_camera=":{"description":"always_face_camera=方法用于设置组件的always_face_camera行为。\\n \\n如果always_face_camera行为为真，组件将始终尝试调整自身方向，使组件的Y轴朝向相机。","name":"always_face_camera=","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#always_face_camera=","type":"instance_method","visibility":"public","parameters":[["setting",null,"将always_face_camera行为设置为“真”或“假”。"]],"return":[null,"状态-always_face_camera行为的状态。"]},"Sketchup::Behavior#always_face_camera?":{"description":"always_face_camera?方法用于检索组件的always_face_camera行为。\\n \\n如果always_face_camera行为为真，则组件将始终尝试调整自身方向，使组件的-y轴朝向相机。","name":"always_face_camera?","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#always_face_camera?","type":"instance_method","visibility":"public","return":[["Boolean"],"行为-如果组件设置为始终面向摄影机，则为真；如果组件未设置为始终面向摄影机，则为假。"]},"Sketchup::Behavior#cuts_opening=":{"description":"cuts_opening=方法用于设置组件的切割打开行为。","name":"cuts_opening=","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#cuts_opening=","type":"instance_method","visibility":"public","parameters":[["setting",null,"将cuts_opening行为设置为“真”或“假”。"]],"return":[null,"status-cuts_opening行为的状态\\n（true或false）"]},"Sketchup::Behavior#cuts_opening?":{"description":"cuts_opening?方法用于获取组件的切割打开行为的状态。","name":"cuts_opening?","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#cuts_opening?","type":"instance_method","visibility":"public","return":[["Boolean"],"status-cuts_opening行为的状态\\n（true或false）"]},"Sketchup::Behavior#is2d=":{"description":"is2d=方法用于设置组件的二维行为：它是可以粘合还是与面对齐。","name":"is2d=","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#is2d=","type":"instance_method","visibility":"public","parameters":[["setting",null,"将二维行为设置为“真”或“假”。"]],"return":[null,"状态-新设置"]},"Sketchup::Behavior#is2d?":{"description":"is2d?方法用于获取组件的二维行为：它是可以粘合还是与面对齐。","name":"is2d?","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#is2d?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-二维行为的状态（对或错）"]},"Sketchup::Behavior#no_scale_mask=":{"description":"设置一个整数，它实际上是对给定组件上隐藏的缩放工具句柄的逐位描述。这对于创建只能以特定方式缩放的定义很有用。如果一个位包含1，那么当用户选择组件并激活缩放工具时，某个句柄集将隐藏。这是哪个位控制哪个处理的映射。\\n\\n-bit0:禁用沿红色缩放（x），\\n-bit1:禁用沿绿色缩放（y），\\n-bit2:禁用沿蓝色缩放（z），\\n-bit3:禁用红色/蓝色平面缩放（x+z），\\n-bit4:禁用绿色/蓝色平面缩放（y+z），\\n-bit5:禁用红色/绿色平面缩放（x+y），\\n-bit6:禁用比例均匀（从角点）（x y z）。\\n \\n请注意，对于二维组件（如Face Me组件），甚至没有使用上面列表中的所有句柄。此外，如果已使用缩放工具选择了要修改的组件，则必须停用并重新激活缩放工具，新行为才能生效。","name":"no_scale_mask=","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#no_scale_mask=","type":"instance_method","visibility":"public","parameters":[["scale_mask",null,"描述隐藏哪些缩放工具句柄的整数。"]],"return":[null,"行为-行为对象"]},"Sketchup::Behavior#no_scale_mask?":{"description":"no_scale_mask?方法返回一个整数，该整数是一个逐位描述，当用户使用缩放工具选择此单个组件时，将隐藏缩放工具句柄。有关所使用的位编码的详细信息，请参阅no_scale_mask=\\n方法。","name":"no_scale_mask?","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#no_scale_mask?","type":"instance_method","visibility":"public","return":[["Boolean"],"scale_mask-一个整数，描述隐藏哪些缩放工具句柄。"]},"Sketchup::Behavior#shadows_face_sun=":{"description":"shadows_face_sun=方法用于确定组件的阴影是否将从组件的当前位置投射，就像组件面对太阳一样。有关此功能的详细信息，请参见《SketchUp用户指南》中的组件实体。","name":"shadows_face_sun=","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#shadows_face_sun=","type":"instance_method","visibility":"public","parameters":[["status",null,"如果要从组件的当前位置投射组件，就像组件面对太阳一样，则为true。假以使阴影从组件的当前位置投射。"]],"return":[null,"行为-行为对象"]},"Sketchup::Behavior#shadows_face_sun?":{"description":"shadows_face_sun?方法用于确定组件的阴影是否从组件的当前位置投射（就像组件面对太阳一样）。有关此功能的详细信息，请参见《SketchUp用户指南》中的组件实体。","name":"shadows_face_sun?","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#shadows_face_sun?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要从组件的当前位置投射组件，就像组件面对太阳一样，则为真。假以使阴影从组件的当前位置投射。"]},"Sketchup::Behavior#snapto":{"description":"snapto方法用于验证组件“捕捉到”行为的状态。\\n \\n返回一个常量，该常量指示由行为描述的组件的快照行为。捕捉行为是将组件实例的x-y平面捕捉到面上的方式。可能的值为：\\n \\n-+SnapTo_Arbitrary+=>捕捉到任何Aribrary面，\\n-+SnapTo_Horizontal+=>捕捉到水平面（如地板），\\n-+SnapTo_Vertical+=>捕捉到垂直面（如墙壁），\\n-+SnapTo_Sloped+=>捕捉到倾斜面（如倾斜屋顶）。","name":"snapto","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#snapto","type":"instance_method","visibility":"public","return":[null,"状态-Snapto行为的状态（正确或错误）"]},"Sketchup::Behavior#snapto=":{"description":"snapto=方法设置组件的“对齐”行为。\\n \\n捕捉行为是将组件实例的x-y平面捕捉到面上的方式。可能的常量值为：\\n \\n-+SnapTo_Arbitrary+=>捕捉到任何一个Aribrary面，\\n-+SnapTo_Horizontal+=>捕捉到水平面（如地板），\\n-+SnapTo_Vertical+=>捕捉到垂直面（如墙壁），\\n-+SnapTo_Sloped+=>捕捉到倾斜面（如倾斜屋顶）。","name":"snapto=","namespace":"Sketchup::Behavior","path":"Sketchup::Behavior#snapto=","type":"instance_method","visibility":"public","parameters":[["snapto",null,"一个数字常量，用于标识其中一种快照类型。"]],"return":[null,"行为-行为对象"]},"Sketchup::Camera":{"description":"camera类包含用于创建和操作照相机的方法。\\n SketchUp中的相机是从中查看模型的“视角”。","name":"Camera","namespace":"Sketchup","path":"Sketchup::Camera","type":"class","visibility":"public"},"Sketchup::Camera#aspect_ratio":{"description":"aspect_ratio方法用于检索相机的纵横比。","name":"aspect_ratio","namespace":"Sketchup::Camera","path":"Sketchup::Camera#aspect_ratio","type":"instance_method","visibility":"public","return":[null,"A展弦比-一个展弦比，如1.85，如果成功"]},"Sketchup::Camera#aspect_ratio=":{"description":"aspect_ratio=方法用于设置相机的纵横比。\\n更改此值将导致SketchUp在屏幕上显示灰色条\\n以显示结果视图。\\n \\n如果将该值设置为0.0，则相机的纵横比将与其视图的纵横比匹配。","name":"aspect_ratio=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#aspect_ratio=","type":"instance_method","visibility":"public","parameters":[["ratio",["Float"],null]],"return":[null,"A展弦比-一个展弦比，如1.85，如果成功"]},"Sketchup::Camera#center_2d":{"description":"center_2d方法返回一个点，当处于二维模式时，相机的偏移量为x和y。当相机处于两点透视并且用户平移时，x和y的值将更改。这些值以标准化的设备坐标为单位，例如，范围[-1.0，1.0]跨越屏幕的整个宽度或高度。\\n \\n z值未使用，且始终为零。","name":"center_2d","namespace":"Sketchup::Camera","path":"Sketchup::Camera#center_2d","type":"instance_method","visibility":"public","return":[null,"点3D"]},"Sketchup::Camera#description":{"description":"description方法用于检索相机对象的描述。","name":"description","namespace":"Sketchup::Camera","path":"Sketchup::Camera#description","type":"instance_method","visibility":"public","return":[null,"描述-相机的字符串描述（如果成功）"]},"Sketchup::Camera#description=":{"description":"description=方法用于设置相机的描述。","name":"description=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#description=","type":"instance_method","visibility":"public","parameters":[["description",["String"],null]],"return":[null,"描述-相机的字符串描述（如果成功）"]},"Sketchup::Camera#direction":{"description":"direction方法用于检索摄像机指向的方向上的Vector3d对象。","name":"direction","namespace":"Sketchup::Camera","path":"Sketchup::Camera#direction","type":"instance_method","visibility":"public","return":[null,"方向-指向相机指向的方向的Vector3d对象（如果成功）"]},"Sketchup::Camera#eye":{"description":"eye方法用于检索相机的眼睛Point3d对象。","name":"eye","namespace":"Sketchup::Camera","path":"Sketchup::Camera#eye","type":"instance_method","visibility":"public","return":[null,"眼-如果成功，则为Point3d对象"]},"Sketchup::Camera#focal_length":{"description":"focal_length方法用于获取透视相机的焦距，单位为毫米。\\n \\n此值是根据视场（请参阅FOV方法）和图像宽度（请参阅图像宽度）计算的。","name":"focal_length","namespace":"Sketchup::Camera","path":"Sketchup::Camera#focal_length","type":"instance_method","visibility":"public","parameters":[["length",null,"相机的焦距（如果成功）。"]],"return":[null,"零"]},"Sketchup::Camera#focal_length=":{"description":"focal_length=方法允许您发送透视照相机的焦距（以毫米为单位）。必须介于1和3000之间（含3000）。这是设置视野的另一种方法。","name":"focal_length=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#focal_length=","type":"instance_method","visibility":"public","parameters":[["value",["Float"],null]],"return":[null,"长度-如果成功，相机的新焦距"]},"Sketchup::Camera#fov":{"description":"fov方法检索相机的视场（度数）。\\n \\n这仅适用于透视照相机。","name":"fov","namespace":"Sketchup::Camera","path":"Sketchup::Camera#fov","type":"instance_method","visibility":"public","return":[null,"FOV-视场，单位为度，如果成功"]},"Sketchup::Camera#fov=":{"description":"fov=方法设置相机的视场（以毫米为单位）。必须介于1和120之间（含1和120）。\\n \\n这仅在透视照相机上有效。","name":"fov=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#fov=","type":"instance_method","visibility":"public","parameters":[["fov",null,"以毫米为单位的视场。"]],"return":[null,"FOV-如果成功，新的视野"]},"Sketchup::Camera#fov_is_height?":{"description":"fov_is_height?方法指示视场是水平还是垂直。","name":"fov_is_height?","namespace":"Sketchup::Camera","path":"Sketchup::Camera#fov_is_height?","type":"instance_method","visibility":"public","return":[["Boolean"],"bool-如果垂直，则为true，否则为false"]},"Sketchup::Camera#height":{"description":"height方法以英寸为单位检索相机的高度。\\n \\n只有当它不是透视照相机时才有效。","name":"height","namespace":"Sketchup::Camera","path":"Sketchup::Camera#height","type":"instance_method","visibility":"public","return":[null,"height-当前单位中的高度（如果成功）"]},"Sketchup::Camera#height=":{"description":"height=方法用于以英寸为单位设置相机的高度。\\n \\n只有当它不是透视照相机时才有效。","name":"height=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#height=","type":"instance_method","visibility":"public","parameters":[["value",["Float"],null]],"return":[null,"height-当前单位中的高度（如果成功）"]},"Sketchup::Camera#image_width":{"description":"image_width方法检索相机图像平面上图像的大小。\\n \\n默认情况下，不设置此值。如果已设置，则用于从视场计算焦距。与SketchUp中的大多数长度值不同，image_width和focal_length值的指定单位是\\n毫米，而不是英寸。","name":"image_width","namespace":"Sketchup::Camera","path":"Sketchup::Camera#image_width","type":"instance_method","visibility":"public","return":[null,"宽度-如果成功，相机的宽度"]},"Sketchup::Camera#image_width=":{"description":"image_width=方法用于设置透视照相机“胶片”上图像的大小。\\n \\n该值以毫米为单位。它用于视场和焦距之间的转换。","name":"image_width=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#image_width=","type":"instance_method","visibility":"public","parameters":[["value",["Float"],null]],"return":[null,"宽度-如果成功，相机的宽度"]},"Sketchup::Camera#initialize":{"description":"返回具有眼睛（相机所在位置）和Point3D类型的目标（相机正在查看的位置）、Vector3D类型的向上方向、值为“真”或“假”的可选透视标志以及浮动类型的可选视角值字段的新相机。","name":"initialize","namespace":"Sketchup::Camera","path":"Sketchup::Camera#initialize","type":"instance_method","visibility":"public","parameters":[["target",null,"见{#target}。"],["eye",null,"见{#eye}。"],["up",null,"见{#up}。"],["fov",null,"见{#fov}。"],["perspective",null,"见{#perspective?}。"]],"return":[null,"相机-如果成功，则为新的相机对象"]},"Sketchup::Camera#is_2d?":{"description":"is_2d?方法指示相机是否处于二维模式。2点透视模式和PhotoMatch模式是二维相机。","name":"is_2d?","namespace":"Sketchup::Camera","path":"Sketchup::Camera#is_2d?","type":"instance_method","visibility":"public","return":[["Boolean"],"布尔值-如果相机处于二维模式，则为真，否则为假"]},"Sketchup::Camera#perspective=":{"description":"perspective=方法用于设置这是透视相机还是正交相机。","name":"perspective=","namespace":"Sketchup::Camera","path":"Sketchup::Camera#perspective=","type":"instance_method","visibility":"public","parameters":[["perspective",null,"透视为真，正交为假"]],"return":[null,"状态-如果透视为真，如果正交为假"]},"Sketchup::Camera#perspective?":{"description":"perspective?方法用于确定相机是透视相机还是正交相机。","name":"perspective?","namespace":"Sketchup::Camera","path":"Sketchup::Camera#perspective?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果透视为真，如果正交为假"]},"Sketchup::Camera#scale_2d":{"description":"scale_2d方法返回一个指示二维相机比例因子的浮点值。\\n \\n当相机处于两点透视并且用户使用缩放工具时，此值将更改。缩小将产生大于1.0的值。","name":"scale_2d","namespace":"Sketchup::Camera","path":"Sketchup::Camera#scale_2d","type":"instance_method","visibility":"public","return":[null,"浮动"]},"Sketchup::Camera#set":{"description":"set方法设置相机方向。您必须同时设置摄像机的眼睛、目标和向上参数，以确保您具有有效的摄像机定义。","name":"set","namespace":"Sketchup::Camera","path":"Sketchup::Camera#set","type":"instance_method","visibility":"public","parameters":[["eye",null,"看看CAMMA.眼睛。"],["target",null,"请参见camera.target。"],["up",null,"请看CAMMA. UP。"]],"return":[null,"相机-改装后的相机"]},"Sketchup::Camera#target":{"description":"target方法检索相机指向的Point3d。","name":"target","namespace":"Sketchup::Camera","path":"Sketchup::Camera#target","type":"instance_method","visibility":"public","return":[null,"目标-如果成功，则为Point3d对象"]},"Sketchup::Camera#up":{"description":"up方法用于检索相机的上方向向量。这是相机顶部朝向的方向。","name":"up","namespace":"Sketchup::Camera","path":"Sketchup::Camera#up","type":"instance_method","visibility":"public","return":[null,"向上-如果成功，则为Vector3d对象"]},"Sketchup::Camera#xaxis":{"description":"xaxis方法用于检索摄像机方向和上方向向量定义的摄像机坐标系的x轴。\\n \\n这个值是根据相机方向和上方向向量之间的叉积计算的。","name":"xaxis","namespace":"Sketchup::Camera","path":"Sketchup::Camera#xaxis","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::Camera#yaxis":{"description":"yaxis方法检索相机方向和上方向向量定义的相机坐标系的y轴。\\n \\n此值计算为与相机x和z轴垂直。它相当于向上方向，但计算时要确保它垂直于该方向。","name":"yaxis","namespace":"Sketchup::Camera","path":"Sketchup::Camera#yaxis","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::Camera#zaxis":{"description":"zaxis方法检索相机方向和上方向向量定义的相机坐标系的z轴。\\n \\n这个值是计算出来的。和摄像机方向一样。","name":"zaxis","namespace":"Sketchup::Camera","path":"Sketchup::Camera#zaxis","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::ClassificationSchema":{"description":"ClassificationSchema类表示模型中加载的模式。","name":"ClassificationSchema","namespace":"Sketchup","path":"Sketchup::ClassificationSchema","type":"class","visibility":"public"},"Sketchup::ClassificationSchema#<=>":{"description":"使用<=>方法比较两个ClassificationSchema对象进行排序。比较是基于模式名进行的。","name":"<=>","namespace":"Sketchup::ClassificationSchema","path":"Sketchup::ClassificationSchema#<=>","type":"instance_method","visibility":"public","parameters":[["schema2",null,"比较中的第二个模式。"]],"return":[null,"如果schema1小于schema2，则为整数-1。如果schema1大于模式2，则为1；如果模式相等，则为0。"]},"Sketchup::ClassificationSchema#name":{"description":"name方法返回架构的名称。","name":"name","namespace":"Sketchup::ClassificationSchema","path":"Sketchup::ClassificationSchema#name","type":"instance_method","visibility":"public","return":[null,"字符串-包含架构名称。"]},"Sketchup::ClassificationSchema#namespace":{"description":"namespace方法返回架构的命名空间。","name":"namespace","namespace":"Sketchup::ClassificationSchema","path":"Sketchup::ClassificationSchema#namespace","type":"instance_method","visibility":"public","return":[null,"字符串-包含架构命名空间。"]},"Sketchup::Classifications":{"description":"分类类是模型中所有分类的容器/管理器。","name":"Classifications","namespace":"Sketchup","path":"Sketchup::Classifications","type":"class","visibility":"public"},"Sketchup::Classifications#[]":{"description":"[]方法用于按名称或索引获取分类模式。","name":"[]","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#[]","type":"instance_method","visibility":"public","parameters":[["index_or_name",null,"ClassificationSchema对象的索引或名称。"]],"return":[null,"架构-如果成功，则为ClassificationSchema对象，否则为nil。"]},"Sketchup::Classifications#each":{"description":"each方法用于迭代加载的分类模式。","name":"each","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#each","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::Classifications#keys":{"description":"keys方法用于获取Classifications类中的键列表，这些键与架构的名称相同。","name":"keys","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#keys","type":"instance_method","visibility":"public","return":[null,"keys-字符串键数组"]},"Sketchup::Classifications#length":{"description":"{#length}方法返回加载的分类架构数。","name":"length","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Classifications#load_schema":{"description":"load_schema方法用于将分类模式加载到模型中。","name":"load_schema","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#load_schema","type":"instance_method","visibility":"public","parameters":[["file",null,"架构文件的完整路径"]],"return":[null,"如果成功，则为真。"]},"Sketchup::Classifications#size":{"description":"{#size}方法返回加载的分类架构的数目。","name":"size","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Classifications#unload_schema":{"description":"unload_schema方法用于卸载以前加载到模型中的分类模式。","name":"unload_schema","namespace":"Sketchup::Classifications","path":"Sketchup::Classifications#unload_schema","type":"instance_method","visibility":"public","parameters":[["schema_name",null,"要卸载的架构的名称"]],"return":[null,"如果成功，则为真。"]},"Sketchup::Color":{"description":"颜色类用于在SketchUp模型中创建和操作颜色。\\n \\n对于接受颜色对象的方法，例如face.material方法，可以传入实际的颜色对象，或者可以转换为颜色的对象。例如：\\n \\n SketchUp在“材质浏览器”中具有多个内置颜色。\\n下表列出了这些颜色。\\n\\n包括：文件：assets/colors.html","name":"Color","namespace":"Sketchup","path":"Sketchup::Color","type":"class","visibility":"public"},"Sketchup::Color#alpha":{"description":"alpha方法用于检索颜色的不透明度。值0是透明的，255是不透明的。","name":"alpha","namespace":"Sketchup::Color","path":"Sketchup::Color#alpha","type":"instance_method","visibility":"public","return":[null,"alpha-颜色的不透明度（如果成功）"]},"Sketchup::Color#alpha=":{"description":"alpha=方法用于设置颜色的不透明度。值0是透明的，255是不透明的。","name":"alpha=","namespace":"Sketchup::Color","path":"Sketchup::Color#alpha=","type":"instance_method","visibility":"public","parameters":[["alpha",null,"新的不透明度值。"]],"return":[null,"alpha-如果成功，新设置的不透明度值"]},"Sketchup::Color#blend":{"description":"blend方法用于混合两种颜色。\\n \\n混合颜色将是采用（1-重量）*color1+\\n重量*color2的结果。如果权重=0，则得到color2。如果重量=1，则得到color1。","name":"blend","namespace":"Sketchup::Color","path":"Sketchup::Color#blend","type":"instance_method","visibility":"public","parameters":[["color2",null,"要混合的第二种颜色（与此颜色）。"],["weight",null,"介于0.0和1.0之间的浮点"]],"return":[null,"颜色3-新混合的颜色对象（如果成功）"]},"Sketchup::Color#blue":{"description":"blue方法用于检索颜色的蓝色值。颜色由红色、绿色和蓝色值组成。\\n \\n值范围是0到255。","name":"blue","namespace":"Sketchup::Color","path":"Sketchup::Color#blue","type":"instance_method","visibility":"public","return":[null,"蓝色-颜色的蓝色值（如果成功）"]},"Sketchup::Color#blue=":{"description":"blue=方法用于设置颜色的蓝色值。颜色由红色、绿色和蓝色值组成。\\n \\n值范围是0到255。","name":"blue=","namespace":"Sketchup::Color","path":"Sketchup::Color#blue=","type":"instance_method","visibility":"public","parameters":[["blue",null,"颜色的蓝色值。"]],"return":[null,"蓝色-颜色的新蓝色值（如果成功）"]},"Sketchup::Color#green":{"description":"green方法用于检索颜色的绿色值。颜色由红色、绿色和蓝色值组成。\\n \\n值范围是0到255。","name":"green","namespace":"Sketchup::Color","path":"Sketchup::Color#green","type":"instance_method","visibility":"public","return":[null,"绿色-颜色的绿色值（如果成功）"]},"Sketchup::Color#green=":{"description":"green=方法用于设置RGB颜色的绿色分量。\\n \\n值范围是0到255。","name":"green=","namespace":"Sketchup::Color","path":"Sketchup::Color#green=","type":"instance_method","visibility":"public","parameters":[["green",null,"颜色的绿色值。"]],"return":[null,"绿色-颜色的新绿色值（如果成功）"]},"Sketchup::Color#initialize":{"description":"new方法用于创建新的颜色对象。","name":"initialize","namespace":"Sketchup::Color","path":"Sketchup::Color#initialize","type":"instance_method","visibility":"public","return":[["Color"],"颜色的新实例"]},"Sketchup::Color#red":{"description":"red方法用于检索RGB颜色的红色分量。\\n \\n值范围是0到255。","name":"red","namespace":"Sketchup::Color","path":"Sketchup::Color#red","type":"instance_method","visibility":"public","return":[null,"红色-颜色的红色值（如果成功）"]},"Sketchup::Color#red=":{"description":"red=方法用于设置RGB颜色的红色分量。\\n \\n值范围是0到255。","name":"red=","namespace":"Sketchup::Color","path":"Sketchup::Color#red=","type":"instance_method","visibility":"public","parameters":[["red",null,"颜色的红色值。"]],"return":[null,"红色-颜色的新红色值（如果成功）"]},"Sketchup::Color#to_a":{"description":"to_a方法用于将颜色对象转换为数组对象。返回的数组将包含4个介于0和255之间的整数值（RGBA）。","name":"to_a","namespace":"Sketchup::Color","path":"Sketchup::Color#to_a","type":"instance_method","visibility":"public","return":[null,"数组-如果成功，则为数组对象"]},"Sketchup::Color#to_i":{"description":"to_i方法用于将颜色对象转换为32位整数。","name":"to_i","namespace":"Sketchup::Color","path":"Sketchup::Color#to_i","type":"instance_method","visibility":"public","return":[null,"整数-如果成功，则为32位整数"]},"Sketchup::Color#to_s":{"description":"以“颜色（255、255、255、255）”的形式返回颜色对象的字符串表示形式。","name":"to_s","namespace":"Sketchup::Color","path":"Sketchup::Color#to_s","type":"instance_method","visibility":"public","return":[null,"字符串-颜色的字符串名称。"]},"Sketchup::Color.names":{"description":"names方法用于检索SketchUp识别的所有颜色名称的数组。\\n \\n一般而言，只要方法需要颜色，就可以传入具有这些名称之一的字符串。","name":"names","namespace":"Sketchup::Color","path":"Sketchup::Color.names","type":"class_method","visibility":"public","return":[null,"名称-如果成功，所有SketchUp颜色名称的数组"]},"Sketchup::ComponentDefinition":{"description":"ComponentDefinition类用于定义SketchUp组件的内容。组件是可以在整个模型中多次实例化和重用的实体集合。例如，您可以绘制一次椅子，将其转换为组件，然后使用它的6个实例围绕一张桌子。然后，对原始“definition”的编辑将\\n传播到其所有实例。\\n \\n ComponentDefinition类包含每个定义的全局实体和设置。请参见ComponentInstance类了解如何定义每个副本。","name":"ComponentDefinition","namespace":"Sketchup","path":"Sketchup::ComponentDefinition","type":"class","visibility":"public"},"Sketchup::ComponentDefinition#<=>":{"description":"使用<=>方法比较两个ComponentDefinition对象进行排序。根据组件名称进行比较。","name":"<=>","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#<=>","type":"instance_method","visibility":"public","parameters":[["compdef2",["Sketchup::ComponentDefinition"],"比较中的第二个组件定义。"]],"return":[["Integer"],"A-1如果component1小于component2。A 1 \\n如果component1大于组件2"]},"Sketchup::ComponentDefinition#==":{"description":"==方法用于测试两个ComponentDefinition对象是否相同（基于它们在内存中的地址）。","name":"==","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#==","type":"instance_method","visibility":"public","parameters":[["compdef2",["Sketchup::ComponentDefinition"],"比较中的第二个组件定义。"]],"return":[["Boolean"],"如果ComponentDefinition对象是同一对象，则为true。如果对象不相同，则返回false。"]},"Sketchup::ComponentDefinition#add_classification":{"description":"add_classification方法用于向组件添加给定的分类。\\n \\n请注意，不能对图像定义进行分类。","name":"add_classification","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#add_classification","type":"instance_method","visibility":"public","parameters":[["schema_name",["String"],"要添加的字符串-架构名称"],["schema_type",["String"],"要添加的字符串架构类型"]],"return":[["Boolean"],"如果分类成功，则为true。否则为假。"]},"Sketchup::ComponentDefinition#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::ComponentDefinition#behavior":{"description":"behavior方法用于检索与组件定义关联的行为对象。","name":"behavior","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#behavior","type":"instance_method","visibility":"public","return":[["Sketchup::Behavior"],"如果成功，则为行为对象"]},"Sketchup::ComponentDefinition#count_instances":{"description":"count_instances方法用于计算使用此组件定义的模型中唯一组件实例的数量。这并不代表放置在模型中的实例总数，因为它不考虑未使用定义中的实例。","name":"count_instances","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#count_instances","type":"instance_method","visibility":"public","return":[["Integer"],"此组件定义的组件实例数（如果成功）"]},"Sketchup::ComponentDefinition#count_used_instances":{"description":"count_used_instances方法用于计算使用此组件定义的模型中组件实例的总数。此方法考虑了模型的完整层次结构。","name":"count_used_instances","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#count_used_instances","type":"instance_method","visibility":"public","return":[["Integer"],"此组件定义的组件实例数（如果成功）"]},"Sketchup::ComponentDefinition#description":{"description":"description方法用于检索组件定义的描述。\\n \\n默认情况下，组件定义没有说明。","name":"description","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#description","type":"instance_method","visibility":"public","return":[["String"],"组件定义的描述（如果成功）"]},"Sketchup::ComponentDefinition#description=":{"description":"description=方法用于设置组件定义的描述。","name":"description=","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#description=","type":"instance_method","visibility":"public","parameters":[["description",["String"],null]],"return":[["String"],"描述如果成功，则为假"]},"Sketchup::ComponentDefinition#entities":{"description":"entities方法检索组件定义中所有实体的集合","name":"entities","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#entities","type":"instance_method","visibility":"public","return":[["Sketchup::Entities"],"如果成功，则为实体对象"]},"Sketchup::ComponentDefinition#get_classification_value":{"description":"get_classification_value方法用于从给定键路径的分类属性中检索值。","name":"get_classification_value","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#get_classification_value","type":"instance_method","visibility":"public","parameters":[["path",["Array<String>"],"由值的键路径组成的数组。"]],"return":[["Object","nil"],"如果成功，则为Ruby对象，否则为nil。"]},"Sketchup::ComponentDefinition#group?":{"description":"group?方法用于确定此组件定义是否用于保存组的元素。","name":"group?","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#group?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果定义用于保存组，则为true；如果定义不包含组，则为false。"]},"Sketchup::ComponentDefinition#guid":{"description":"guid方法用于检索此组件定义的唯一标识符。修改组件定义并退出组件编辑后，guid将更改。","name":"guid","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#guid","type":"instance_method","visibility":"public","return":[["String"],"如果成功，则返回字符串guid"]},"Sketchup::ComponentDefinition#hidden?":{"description":"hidden方法用于确定是否应在组件浏览器中隐藏此组件定义。","name":"hidden?","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#hidden?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果定义应隐藏，则为true；如果定义不应隐藏，则为false。"]},"Sketchup::ComponentDefinition#image?":{"description":"image?方法用于确定此组件定义是否用于定义图像。","name":"image?","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#image?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果组件定义定义图像，则为true；如果组件定义未定义图像，则为false。"]},"Sketchup::ComponentDefinition#insertion_point":{"description":"insertion_point方法用于检索插入组件的Point3d对象。","name":"insertion_point","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#insertion_point","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"如果成功，则插入组件的Point3d。如果失败，则返回false。"]},"Sketchup::ComponentDefinition#insertion_point=":{"description":"设置定义的插入点。","name":"insertion_point=","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#insertion_point=","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],"要用作插入点的Point3d对象。"]],"return":[["Geom::Point3d"],"用作插入点的Point3d对象。"]},"Sketchup::ComponentDefinition#instances":{"description":"instances方法用于返回ComponentInstancesfor的任何数组。","name":"instances","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#instances","type":"instance_method","visibility":"public","return":[["Array<Sketchup::ComponentInstance>"],"ComponentInstances的数组\\n（如果成功）"]},"Sketchup::ComponentDefinition#internal?":{"description":"internal?方法用于确定组件定义是否在组件浏览器内部。","name":"internal?","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#internal?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果组件定义是SketchUp组件浏览器内部的，则为true。如果组件定义不是SketchUp的内部定义，则为false。"]},"Sketchup::ComponentDefinition#invalidate_bounds":{"description":"使定义的边界框无效。此命令在操作内部强制更新定义的边界框。\\n有关如何启动操作的信息，请参阅Model.start_operation。\\n \\n如果使用Ruby API更改几何图形，然后需要知道边界框的大小，则此方法非常有用。此方法强制SketchUp在选择时重新计算定义的边界框。","name":"invalidate_bounds","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#invalidate_bounds","type":"instance_method","visibility":"public","return":[["Boolean"],"如果成功，则为真"]},"Sketchup::ComponentDefinition#name":{"description":"name方法检索组件定义的名称。","name":"name","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#name","type":"instance_method","visibility":"public","return":[["String"],"组件定义的名称（如果成功）"]},"Sketchup::ComponentDefinition#name=":{"description":"name=方法用于设置组件定义的名称。","name":"name=","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#name=","type":"instance_method","visibility":"public","parameters":[["name",["String"],null]],"return":[["String"],"成功时分配给组件定义的名称"]},"Sketchup::ComponentDefinition#path":{"description":"path方法用于检索加载组件的路径。\\n \\n如果是内部组件，则返回nil。","name":"path","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#path","type":"instance_method","visibility":"public","return":[["String","FalseClass"],"如果成功，则为有效路径；如果不成功，则为false"]},"Sketchup::ComponentDefinition#refresh_thumbnail":{"description":"refresh_thumbnail方法用于强制SketchUp重新生成组件浏览器中显示的缩略图。如果您已使用API更改了组件的几何图形并希望缩略图匹配，则此功能非常有用。","name":"refresh_thumbnail","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#refresh_thumbnail","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::ComponentDefinition#remove_classification":{"description":"remove_classification方法用于从组件中删除给定的分类。\\n \\n请注意，不能对图像定义进行分类。","name":"remove_classification","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#remove_classification","type":"instance_method","visibility":"public","parameters":[["schema_name",["String"],"要删除的字符串架构名称"],["schema_type",["String"],"要删除的字符串架构类型。如果未提供或为空字符串，则将删除当前应用于给定架构名称的架构类型。"]],"return":[["Boolean"],"如果删除成功，则为true。否则为假。"]},"Sketchup::ComponentDefinition#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::ComponentDefinition#save_as":{"description":"save_as方法用于将定义保存为指定文件目标处的草图文件。","name":"save_as","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#save_as","type":"instance_method","visibility":"public","parameters":[["file_path",["String"],"保存.skp文件的本地文件路径。"]],"return":[["Boolean"],"如果成功，则为真"]},"Sketchup::ComponentDefinition#save_thumbnail":{"description":"保存组件缩略图图像。图像格式由文件路径的文件扩展名指定。支持的图像格式有BMP、JPG、PNG、TIF、PCT和GIF。","name":"save_thumbnail","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#save_thumbnail","type":"instance_method","visibility":"public","parameters":[["filename",["String"],""]],"return":[["Boolean"],"如果成功则为真，否则为假。"]},"Sketchup::ComponentDefinition#set_classification_value":{"description":"set_classification_value方法用于设置给定关键路径的分类属性的值。","name":"set_classification_value","namespace":"Sketchup::ComponentDefinition","path":"Sketchup::ComponentDefinition#set_classification_value","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"对该特定属性有效的值。"],["path",["Array<String>"],"由值的键路径组成的数组。"]],"return":[["Boolean"],"如果路径有效，则为true，否则为false。"]},"Sketchup::ComponentInstance":{"description":"ComponentInstance类用于表示组件定义的组件实例或从组件浏览器中拖动并放置在模型中的组件实例（因此，实例）。因此，ComponentInstance类包含对相应的ComponentDefinition对象和转换对象的引用（其中包含绘图窗口中组件的位置）。","name":"ComponentInstance","namespace":"Sketchup","path":"Sketchup::ComponentInstance","type":"class","visibility":"public"},"Sketchup::ComponentInstance#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::ComponentInstance#definition":{"description":"definition方法用于检索此组件实例的组件定义。","name":"definition","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#definition","type":"instance_method","visibility":"public","return":[["Sketchup::ComponentDefinition"],"如果成功，则为ComponentDefinition对象"]},"Sketchup::ComponentInstance#definition=":{"description":"definition=方法用于设置此组件的组件定义。\\n \\n此方法导致实例使用不同的定义，但它将使用相同的转换将其定位到模型中。","name":"definition=","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#definition=","type":"instance_method","visibility":"public","parameters":[["definition",["Sketchup::ComponentDefinition"],"要设置的ComponentDefinition对象。"]],"return":[["Sketchup::ComponentDefinition"],"如果设置成功，则为ComponentDefinition对象；如果设置失败，则为False对象。"]},"Sketchup::ComponentInstance#equals?":{"description":"equals?方法用于确定组件实例在几何上是否与另一个实例等效。","name":"equals?","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#equals?","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"要与之比较的实例。"]],"return":[["Boolean"],"如果实例在几何上相等，则为true。\\n否则为false。"]},"Sketchup::ComponentInstance#explode":{"description":"explode方法用于将组件实例分解为单独的实体。","name":"explode","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#explode","type":"instance_method","visibility":"public","return":[["Array<Sketchup:Entity>"],"如果成功，则为实体对象数组；如果不成功，则为false"]},"Sketchup::ComponentInstance#glued_to":{"description":"glued_to方法用于检索此实例粘附到的实体。\\n \\n如果未粘到任何内容，则返回nil。","name":"glued_to","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#glued_to","type":"instance_method","visibility":"public","return":[["Sketchup::Face","nil"],"实例粘附到的实体对象（如果成功）"]},"Sketchup::ComponentInstance#glued_to=":{"description":"glued_to=方法将此实例粘附到面上。\\n \\n如果实例无法粘附到给定的面，此方法将引发异常。如果实例的定义不支持粘合或对齐错误，则无法粘合实例。","name":"glued_to=","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#glued_to=","type":"instance_method","visibility":"public","parameters":[["face",["Sketchup::Face","nil"],null]],"return":[["Sketchup::Face","nil"],"-如果成功，则粘贴组件的面对象"]},"Sketchup::ComponentInstance#guid":{"description":"guid方法用于获取此SketchUp对象的Base 64编码的唯一ID。","name":"guid","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#guid","type":"instance_method","visibility":"public","return":[["String"],"唯一的22个字符的字符串"]},"Sketchup::ComponentInstance#intersect":{"description":"intersect方法用于计算表示流形实体体积（此参数）的两个实例的布尔交集。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"intersect","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#intersect","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"与此实例相交的实例。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::ComponentInstance#locked=":{"description":"locked=方法用于锁定组件实例。","name":"locked=","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#locked=","type":"instance_method","visibility":"public","parameters":[["lock",["Boolean"],null]],"return":[["Boolean"],"如果组件实例被锁定，则为true。\\n如果实例未锁定，则为false。"]},"Sketchup::ComponentInstance#locked?":{"description":"locked?方法用于确定是否锁定了组件实例。","name":"locked?","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#locked?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果组件实例被锁定，则为true。\\n如果实例未锁定，则为false。"]},"Sketchup::ComponentInstance#make_unique":{"description":"make_unique方法用于为此实例创建任何其他实例都不使用的组件定义。","name":"make_unique","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#make_unique","type":"instance_method","visibility":"public","return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::ComponentInstance#manifold?":{"description":"manifold?方法用于确定实例是否为manifold。","name":"manifold?","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#manifold?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果实例是manifold，则为true。\\n如果实例不是manifold，则为false。"]},"Sketchup::ComponentInstance#move!":{"description":"move!方法与转换相同！方法，但它不将移动记录为撤消操作。\\n \\n此方法对于在动画或页面转换中移动实体很有用。","name":"move!","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#move!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"要应用于组件实例的转换对象。"]],"return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::ComponentInstance#name":{"description":"name方法用于获取此实例的名称。","name":"name","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#name","type":"instance_method","visibility":"public","return":[["String"],"组件实例的字符串名称"]},"Sketchup::ComponentInstance#name=":{"description":"name方法用于设置此实例的名称。","name":"name=","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#name=","type":"instance_method","visibility":"public","parameters":[["name",["String"],"要设置的字符串名称"]],"return":[["Sketchup::ComponentInstance"],"新命名的组件实例"]},"Sketchup::ComponentInstance#outer_shell":{"description":"outer_shell方法用于计算表示流形实体体积的两个实例的外壳（此arg）。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"outer_shell","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#outer_shell","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"此实例的外壳的实例。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::ComponentInstance#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::ComponentInstance#show_differences":{"description":"show_differences方法用于确定一个组件实例在几何上是否与另一个实例等效，此外，将不匹配和匹配的几何体移动到新层。\\n \\n此方法将两个实例移动到Layer0。两个组件中相同的几何图形将移动到一个名为def_name+的新图层“相同”。\\n不同的几何图形将移动到名为def_name+\\n“_diff”的层。\\n \\n如果verbose为true，则Ruby控制台中将以纹理方式显示从一个组件到另一个组件不同的所有几何图形的列表。","name":"show_differences","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#show_differences","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"要与之比较的实例。"],["verbose",["Boolean"],"一个布尔标志，指示是否向Ruby控制台显示发现的差异的纹理报告。"]],"return":[["Boolean"],"如果实例在几何上相等，则为true，否则为false。"]},"Sketchup::ComponentInstance#split":{"description":"split方法用于计算表示流形实体体积（this-arg）的两个实例的布尔拆分（map overlay）。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"split","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#split","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance","nil"],"用于拆分此实例的实例。"]],"return":[["Array(Sketchup::Group, Sketchup::Group, Sketchup::Group)"],"如果两个对象（this和arg）表示流形实体并且操作成功，则返回三个结果组的向量（数组），否则返回nil。这三组分别是：第一卷与第二卷的交集，第一卷与第二卷的差，第二卷与第一卷的反差。"]},"Sketchup::ComponentInstance#subtract":{"description":"subtract方法用于计算表示流形实体体积（此参数）的两个实例的布尔差。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"subtract","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#subtract","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"要从中减去此实例的实例。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::ComponentInstance#transform!":{"description":"将{Geom::Transformation}应用于组件实例。","name":"transform!","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#transform!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"要应用于组件实例的转换对象。"]],"return":[["Boolean"],""]},"Sketchup::ComponentInstance#transformation":{"description":"transformation方法用于检索此实例的转换。","name":"transformation","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#transformation","type":"instance_method","visibility":"public","return":[["Geom::Transformation"],"转换对象（如果成功）"]},"Sketchup::ComponentInstance#transformation=":{"description":"transformation=方法用于在此实例上设置转换。","name":"transformation=","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#transformation=","type":"instance_method","visibility":"public","parameters":[["transformation",["Geom::Transformation"],"要应用的转换对象。"]],"return":[["Sketchup::ComponentInstance"],"转换后的组件状态"]},"Sketchup::ComponentInstance#trim":{"description":"trim方法用于计算表示流形实体体积（此参数）的两个实例的（非破坏性）布尔差。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"trim","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#trim","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"要修剪此实例的实例。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::ComponentInstance#union":{"description":"union方法用于计算表示流形实体体积的两个实例的布尔联合（此参数）。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"union","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#union","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"要与之联合的实例。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::ComponentInstance#volume":{"description":"volume方法用于计算此实例的体积，前提是且仅当此实例是多方面的。","name":"volume","namespace":"Sketchup::ComponentInstance","path":"Sketchup::ComponentInstance#volume","type":"instance_method","visibility":"public","return":[["Float"],"如果实例表示一个流形卷，那么卷将是一个正值。如果volume为负数，则实例不是manifold。"]},"Sketchup::Console":{"description":"SketchUp使用console类将$stdout和$stderr定向到Ruby控制台。它是一个只有一个实例可用的单例类。\\n此实例可通过SKETCHUP_CONSOLE常量访问。\\n \\n在SketchUp 2014中添加了方法，以允许开发人员控制Ruby控制台的可见性。\\n \\n还要注意，在SketchUp 2014中，除了主线程外，无法在Ruby线程内写入控制台。所以下面的代码不会产生任何输出。","name":"Console","namespace":"Sketchup","path":"Sketchup::Console","type":"class","visibility":"public"},"Sketchup::Console#clear":{"description":"清除SketchUp的Ruby控制台的内容。","name":"clear","namespace":"Sketchup::Console","path":"Sketchup::Console#clear","type":"instance_method","visibility":"public","return":[null,"真的。"]},"Sketchup::Console#hide":{"description":"隐藏SketchUp Ruby控制台。","name":"hide","namespace":"Sketchup::Console","path":"Sketchup::Console#hide","type":"instance_method","visibility":"public","return":[null,"真的。"]},"Sketchup::Console#show":{"description":"显示SketchUp Ruby控制台。","name":"show","namespace":"Sketchup::Console","path":"Sketchup::Console#show","type":"instance_method","visibility":"public","return":[null,"真的。"]},"Sketchup::Console#visible?":{"description":"返回SketchUp Ruby控制台的可见性状态。","name":"visible?","namespace":"Sketchup::Console","path":"Sketchup::Console#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],"可见为真，不可见为假。"]},"Sketchup::ConstructionLine":{"description":"ConstructionLine类包含修改构造行的方法。构造线可以是无限长、半无限长（即单向无限长）或有限长。","name":"ConstructionLine","namespace":"Sketchup","path":"Sketchup::ConstructionLine","type":"class","visibility":"public"},"Sketchup::ConstructionLine#direction":{"description":"direction方法检索构造线方向上的三维矢量。","name":"direction","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#direction","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::ConstructionLine#direction=":{"description":"direction=方法用于将构造线的方向设置为三维矢量。","name":"direction=","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#direction=","type":"instance_method","visibility":"public","parameters":[["vector",null,"Vector3d，其方向将用于设置施工线的方向。"]],"return":[null,"vector-新的Vector3d对象（如果成功）"]},"Sketchup::ConstructionLine#end":{"description":"end方法以三维点的形式检索构造线的端点。\\n \\n如果构造线在末尾是无限的，则返回nil。","name":"end","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#end","type":"instance_method","visibility":"public","return":[null,"点-表示构造线终点的Point3d对象"]},"Sketchup::ConstructionLine#end=":{"description":"end=方法用于设置施工线的终点。这种方法将使长度在末端有限。\\n \\n将“结束”设置为nil，使构造线在结尾处无限。","name":"end=","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#end=","type":"instance_method","visibility":"public"},"Sketchup::ConstructionLine#position":{"description":"position方法用于检索用于在无限构造线上创建构造线的三维点。","name":"position","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#position","type":"instance_method","visibility":"public","return":[null,"点-用于创建行的Point3d对象（如果成功）"]},"Sketchup::ConstructionLine#position=":{"description":"position=方法用于设置结构通过的三维点。","name":"position=","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#position=","type":"instance_method","visibility":"public","parameters":[["point",null,"施工线要通过的Point3d对象。"]],"return":[null,"point-构造行将通过的新Point3d对象（如果成功）"]},"Sketchup::ConstructionLine#reverse!":{"description":"reverse!方法用于反转构造线的方向。","name":"reverse!","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#reverse!","type":"instance_method","visibility":"public","return":[null,"地位"]},"Sketchup::ConstructionLine#start":{"description":"start方法用于检索构造线的起始点。\\n \\n如果构造线在开始处是无限的，则返回nil。","name":"start","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#start","type":"instance_method","visibility":"public","return":[null,"点-表示施工线起点的Poin3d对象（如果成功）"]},"Sketchup::ConstructionLine#start=":{"description":"start=方法用于设置施工线的起点，使线的长度在起点有限。\\n \\n将“开始”设置为nil将使构造线在开始时无限大。","name":"start=","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#start=","type":"instance_method","visibility":"public"},"Sketchup::ConstructionLine#stipple":{"description":"stipple方法用于检索用于显示构造线的点画图案。","name":"stipple","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#stipple","type":"instance_method","visibility":"public","return":[null,"图案-使用的点画图案"]},"Sketchup::ConstructionLine#stipple=":{"description":"stipple=方法用于设置用于显示构造线的点画图案。点画图案以字符串形式给出。\\n有效的字符串为：\\n-<code>\".\"</code>（虚线）、\\n-<code>\"-\"</code>（短虚线）、\\n-<code>\"_\"</code>（长虚线）、\\n-<code>\"-.-\"</code>（短虚线）。","name":"stipple=","namespace":"Sketchup::ConstructionLine","path":"Sketchup::ConstructionLine#stipple=","type":"instance_method","visibility":"public","parameters":[["pattern",null,"-要使用的点画图案"]]},"Sketchup::ConstructionPoint":{"description":"构造点表示模型中可用于辅助其他建模操作的点。例如，您可以将构造点放在圆的中心，以便于定位该点以执行其他操作。","name":"ConstructionPoint","namespace":"Sketchup","path":"Sketchup::ConstructionPoint","type":"class","visibility":"public"},"Sketchup::ConstructionPoint#position":{"description":"position方法用于检索用于创建构造点的Point3d。","name":"position","namespace":"Sketchup::ConstructionPoint","path":"Sketchup::ConstructionPoint#position","type":"instance_method","visibility":"public","return":[null,"Point-用于创建构造点的Point3d对象"]},"Sketchup::Curve":{"description":"SketchUp使用曲线类将一系列边缘对象合并为一个概念实体。因为SketchUp是一个曲面建模器，所以所有的圆、圆弧和任意曲线实际上都只是按顺序绑定在一起的边。\\n \\n curve有一个名为ArcCurve的子类，它是构成圆一部分的任何曲线。可以将ArcCurves视为使用SketchUp的圆弧或圆绘制工具创建的实体，将曲线视为使用徒手绘制工具创建的实体。","name":"Curve","namespace":"Sketchup","path":"Sketchup::Curve","type":"class","visibility":"public"},"Sketchup::Curve#count_edges":{"description":"count_edges方法用于检索构成曲线的边缘对象的数量。","name":"count_edges","namespace":"Sketchup::Curve","path":"Sketchup::Curve#count_edges","type":"instance_method","visibility":"public","return":[null,"num_edges-曲线中的边数"]},"Sketchup::Curve#each_edge":{"description":"each_edge方法用于遍历曲线中的所有边缘对象。","name":"each_edge","namespace":"Sketchup::Curve","path":"Sketchup::Curve#each_edge","type":"instance_method","visibility":"public","return":[null,"边-一个变量，在找到每个边对象时将保存这些边对象。"]},"Sketchup::Curve#edges":{"description":"edges方法用于检索组成曲线的边对象数组。","name":"edges","namespace":"Sketchup::Curve","path":"Sketchup::Curve#edges","type":"instance_method","visibility":"public","return":[null,"边缘-如果成功，边缘对象的数组"]},"Sketchup::Curve#first_edge":{"description":"first_edge方法用于检索曲线的第一条边。","name":"first_edge","namespace":"Sketchup::Curve","path":"Sketchup::Curve#first_edge","type":"instance_method","visibility":"public","return":[null,"边-曲线中的第一个边对象（如果成功）"]},"Sketchup::Curve#is_polygon?":{"description":"","name":"is_polygon?","namespace":"Sketchup::Curve","path":"Sketchup::Curve#is_polygon?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果此边最初是由多边形工具创建的，则为true，否则为false。"]},"Sketchup::Curve#last_edge":{"description":"last_edge方法用于检索曲线的最后一条边。","name":"last_edge","namespace":"Sketchup::Curve","path":"Sketchup::Curve#last_edge","type":"instance_method","visibility":"public","return":[null,"边-曲线中的最后一个边对象（如果成功）"]},"Sketchup::Curve#length":{"description":"length方法检索曲线的长度。","name":"length","namespace":"Sketchup::Curve","path":"Sketchup::Curve#length","type":"instance_method","visibility":"public","return":[null,"长度-如果成功，以当前单位表示的曲线长度"]},"Sketchup::Curve#move_vertices":{"description":"vertices方法检索曲线中所有顶点的集合。","name":"move_vertices","namespace":"Sketchup::Curve","path":"Sketchup::Curve#move_vertices","type":"instance_method","visibility":"public","parameters":[["point_array",null,"要移动每个顶点以匹配的Point3d对象数组。"]],"return":[null,"成功-对或错"]},"Sketchup::Curve#vertices":{"description":"vertices方法检索曲线中所有顶点的集合。","name":"vertices","namespace":"Sketchup::Curve","path":"Sketchup::Curve#vertices","type":"instance_method","visibility":"public","return":[null,"顶点-顶点集合"]},"Sketchup::DefinitionList":{"description":"DefinitionList对象包含模型中所有ComponentDefinition对象的列表。此类包含用于从列表中添加和检索定义的方法。","name":"DefinitionList","namespace":"Sketchup","path":"Sketchup::DefinitionList","type":"class","visibility":"public"},"Sketchup::DefinitionList#[]":{"description":"[]方法用于从列表中检索组件定义。您可以给出0到长度范围内的整数索引、表示GUID（唯一内部标识符）的字符串或定义名称的字符串。","name":"[]","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#[]","type":"instance_method","visibility":"public"},"Sketchup::DefinitionList#add":{"description":"add方法用于将新组件定义添加到具有给定名称的定义列表中。","name":"add","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#add","type":"instance_method","visibility":"public","parameters":[["def_name",["String"],"要添加到定义列表中的新组件定义。"]],"return":[["Sketchup::ComponentDefinition"],"添加的ComponentDefinition对象（如果成功）"]},"Sketchup::DefinitionList#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::DefinitionList#at":{"description":"[]方法用于从列表中检索组件定义。您可以给出0到长度范围内的整数索引、表示GUID（唯一内部标识符）的字符串或定义名称的字符串。","name":"at","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#at","type":"instance_method","visibility":"public"},"Sketchup::DefinitionList#count":{"description":"","name":"count","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::DefinitionList#each":{"description":"each方法用于迭代定义列表中的所有组件定义。\\n \\n如果没有组件定义，则引发异常。","name":"each","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::DefinitionList#length":{"description":"{#length}方法用于检索列表中的组件定义数。","name":"length","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::DefinitionList#load":{"description":"load方法用于从文件加载组件。","name":"load","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#load","type":"instance_method","visibility":"public","parameters":[["path",["String"],"组件定义文件所在的路径。"]],"return":[["Sketchup::ComponentDefinition"],"如果成功，则加载的ComponentDefinition对象"]},"Sketchup::DefinitionList#load_from_url":{"description":"load_from_url方法从字符串url指定的位置加载组件。如果没有给出URL字符串，或者从URL检索时出错，而没有给出load_handler，则此方法将引发异常。可选的第二个参数load_handler可用于传入响应以下方法的Ruby对象：\\n \n  - cancelled?(a_boolean)\n  - onPercentChange(a_float)\n  - onSuccess()\n-OnFailure（message_string）","name":"load_from_url","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#load_from_url","type":"instance_method","visibility":"public","parameters":[["url",["String"],"从中加载.skp文件的URL。"],["load_handler",["Object"],"（可选\\n Ruby对象，其方法定义如load_from_url详细信息中所述。"]],"return":[["Sketchup::ComponentDefinition"],"如果成功，则加载的ComponentDefinition对象"]},"Sketchup::DefinitionList#purge_unused":{"description":"purge_unused方法用于删除未使用的组件定义。","name":"purge_unused","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#purge_unused","type":"instance_method","visibility":"public","return":[["Sketchup::DefinitionList"],""]},"Sketchup::DefinitionList#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::DefinitionList#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::DefinitionList#unique_name":{"description":"unique_name用于为基于base_name字符串的定义生成唯一的名称。例如，“joe”的base_name可能返回“joe 2”","name":"unique_name","namespace":"Sketchup::DefinitionList","path":"Sketchup::DefinitionList#unique_name","type":"instance_method","visibility":"public","parameters":[["base_name",["String"],""]],"return":[["String"],"唯一的名称。"]},"Sketchup::DefinitionObserver":{"description":"此观察器接口实现为响应组件定义事件。若要实现此观察者，请创建此类型的Ruby类\\n重写所需的方法，并将该观察者的实例添加到兴趣的定义中。","name":"DefinitionObserver","namespace":"Sketchup","path":"Sketchup::DefinitionObserver","type":"class","visibility":"public"},"Sketchup::DefinitionObserver#onComponentInstanceAdded":{"description":"将新组件实例添加到模型时调用{#onComponentInstanceAdded}方法。","name":"onComponentInstanceAdded","namespace":"Sketchup::DefinitionObserver","path":"Sketchup::DefinitionObserver#onComponentInstanceAdded","type":"instance_method","visibility":"public","parameters":[["definition",["Sketchup::ComponentDefinition"],"添加实例的定义"],["instance",["Sketchup::ComponentInstance"],"添加的实例"]],"return":[["nil"],""]},"Sketchup::DefinitionObserver#onComponentInstanceRemoved":{"description":"当从模型中删除组件实例时，将调用{#onComponentInstanceRemoved}方法。\\n \\n实现后，即使没有明显删除{Sketchup::ComponentInstance}，也会在移动+复制操作上激发此方法。","name":"onComponentInstanceRemoved","namespace":"Sketchup::DefinitionObserver","path":"Sketchup::DefinitionObserver#onComponentInstanceRemoved","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"删除的实例"],["definition",["Sketchup::ComponentDefinition"],"已删除实例的定义"]],"return":[["nil"],""]},"Sketchup::DefinitionsObserver":{"description":"这个观测器接口被实现来对定义集合上的事件作出反应。若要实现此观察者，请创建此类型的Ruby类\\n重写所需的方法，并将该观察者的实例添加到感兴趣的集合中。","name":"DefinitionsObserver","namespace":"Sketchup","path":"Sketchup::DefinitionsObserver","type":"class","visibility":"public"},"Sketchup::DefinitionsObserver#onComponentAdded":{"description":"每当向Definitions集合中添加定义时，都会调用{#onComponentAdded}方法。","name":"onComponentAdded","namespace":"Sketchup::DefinitionsObserver","path":"Sketchup::DefinitionsObserver#onComponentAdded","type":"instance_method","visibility":"public","parameters":[["definitions",["Sketchup::DefinitionList"],null],["definition",["Sketchup::ComponentDefinition"],null]],"return":[["nil"],""]},"Sketchup::DefinitionsObserver#onComponentPropertiesChanged":{"description":"每当定义的名称或描述更改时，都会调用{#onComponentPropertiesChanged}方法。\\n \\n更改“粘附到”、“剪切打开”或“面部摄像头”设置时，不会触发此操作。","name":"onComponentPropertiesChanged","namespace":"Sketchup::DefinitionsObserver","path":"Sketchup::DefinitionsObserver#onComponentPropertiesChanged","type":"instance_method","visibility":"public","parameters":[["definitions",["Sketchup::DefinitionList"],null],["definition",["Sketchup::ComponentDefinition"],null]],"return":[["nil"],""]},"Sketchup::DefinitionsObserver#onComponentRemoved":{"description":"每当从Definitions集合中移除定义时，都会调用{#onComponentAdded}方法。","name":"onComponentRemoved","namespace":"Sketchup::DefinitionsObserver","path":"Sketchup::DefinitionsObserver#onComponentRemoved","type":"instance_method","visibility":"public","parameters":[["definition",["Sketchup::ComponentDefinition"],null],["definitions",["Sketchup::DefinitionList"],null]],"return":[["nil"],""]},"Sketchup::DefinitionsObserver#onComponentTypeChanged":{"description":"当组件转换为组或反之亦然时，将激发{#onComponentTypeChanged}事件。（在底层实现中，{Sketchup::Group}s只是一种特殊的定义，只允许有一个实例。）","name":"onComponentTypeChanged","namespace":"Sketchup::DefinitionsObserver","path":"Sketchup::DefinitionsObserver#onComponentTypeChanged","type":"instance_method","visibility":"public","parameters":[["definitions",["Sketchup::DefinitionList"],null],["definition",["Sketchup::ComponentDefinition"],null]],"return":[["nil"],""]},"Sketchup::Dimension":{"description":"Dimension类为类DimensionLinear\\n和DimensionRadial提供基本功能。它不是即时的。","name":"Dimension","namespace":"Sketchup","path":"Sketchup::Dimension","type":"class","visibility":"public"},"Sketchup::Dimension#add_observer":{"description":"add_observer方法用于向维度添加DimensionObserver。","name":"add_observer","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"A DimensionObserver。"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::Dimension#arrow_type":{"description":"arrow_type方法检索维度的当前箭头类型。\\n有效的箭头类型是类常量：\\n-+Dimension:：ARROW_NONE，+\\n-+Dimension:：ARROW_SLASH+\\n-+Dimension:：ARROW_DOT+\\n-+Dimension:：ARROW_CLOSED+\\n-+Dimension:：ARROW_OPEN+","name":"arrow_type","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#arrow_type","type":"instance_method","visibility":"public","return":[null,"箭头类型的数字表示法"]},"Sketchup::Dimension#arrow_type=":{"description":"arrow_type=方法设置维度的箭头类型。\\n有效的箭头类型是类常量：\\n-+Dimension:：ARROW_NONE，+\\n-+Dimension:：ARROW_SLASH+\\n-+Dimension:：ARROW_DOT+\\n-+Dimension:：ARROW_CLOSED+\\n-+Dimension:：ARROW_OPEN+","name":"arrow_type=","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#arrow_type=","type":"instance_method","visibility":"public","parameters":[["type",null,"箭头类型的数字表示。"]],"return":[null,"设置的箭头类型。"]},"Sketchup::Dimension#has_aligned_text=":{"description":"has_aligned_text=方法接受“真”或“假”，指示维度的文本是与维度对齐还是与屏幕对齐。","name":"has_aligned_text=","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#has_aligned_text=","type":"instance_method","visibility":"public","parameters":[["value",["Boolean"],null]],"return":[null,"已设置的对齐标志"]},"Sketchup::Dimension#has_aligned_text?":{"description":"has_aligned_text方法用于确定维度的文本是与维度对齐还是与屏幕对齐。","name":"has_aligned_text?","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#has_aligned_text?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果文本与维度对齐，则为真。\\n如果尺寸文本与屏幕对齐，则为false。"]},"Sketchup::Dimension#plane":{"description":"plane方法用于检索尺寸的平面。有关如何表示平面的信息，请参阅GEOM模块。","name":"plane","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#plane","type":"instance_method","visibility":"public","return":[null,"尺寸的平面"]},"Sketchup::Dimension#remove_observer":{"description":"remove_observer方法用于从尺寸中删除DimensionObserver。请注意，如果给定的观察者响应“ContextChanged”，它将作为DimensionObserver删除。否则，将调用基Entity.remove_observer。","name":"remove_observer","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"A DimensionObserver。"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::Dimension#text":{"description":"text方法用于检索维度文本。","name":"text","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#text","type":"instance_method","visibility":"public","return":[null,"尺寸文本"]},"Sketchup::Dimension#text=":{"description":"text=方法用于设置尺寸文本的替代。","name":"text=","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension#text=","type":"instance_method","visibility":"public","parameters":[["text",["String"],null]],"return":[null,"新设置的文本覆盖"]},"Sketchup::Dimension::ARROW_CLOSED":{"description":"常量","name":"ARROW_CLOSED","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension::ARROW_CLOSED","type":"constant","return":null,"visibility":"public"},"Sketchup::Dimension::ARROW_DOT":{"description":"存根值。","name":"ARROW_DOT","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension::ARROW_DOT","type":"constant","return":null,"visibility":"public"},"Sketchup::Dimension::ARROW_NONE":{"description":"存根值。","name":"ARROW_NONE","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension::ARROW_NONE","type":"constant","return":null,"visibility":"public"},"Sketchup::Dimension::ARROW_OPEN":{"description":"存根值。","name":"ARROW_OPEN","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension::ARROW_OPEN","type":"constant","return":null,"visibility":"public"},"Sketchup::Dimension::ARROW_SLASH":{"description":"存根值。","name":"ARROW_SLASH","namespace":"Sketchup::Dimension","path":"Sketchup::Dimension::ARROW_SLASH","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionLinear":{"description":"DimensionLinear类表示线性尺寸。","name":"DimensionLinear","namespace":"Sketchup","path":"Sketchup::DimensionLinear","type":"class","visibility":"public"},"Sketchup::DimensionLinear#aligned_text_position":{"description":"aligned_text_position方法返回具有对齐文本的维度的文本位置（即，是否已对齐文本？返回true）。\\n有效值是类常量：\\n-DimensionLinear:：ALIGNED_TEXT_ABOVE \\n-DimensionLinear:：ALIGNED_TEXT_CENTER \\n-DimensionLinear:：Aligned_Text_Outside","name":"aligned_text_position","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#aligned_text_position","type":"instance_method","visibility":"public","return":[null,"指定文本位置的整数"]},"Sketchup::DimensionLinear#aligned_text_position=":{"description":"aligned_text_position=方法用于设置文本对齐尺寸的文本位置（即，文本是否对齐？返回true）。\\n有效值是类常量：\\n-DimensionLinear:：ALIGNED_TEXT_ABOVE \\n-DimensionLinear:：ALIGNED_TEXT_CENTER \\n-DimensionLinear:：Aligned_Text_Outside","name":"aligned_text_position=","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#aligned_text_position=","type":"instance_method","visibility":"public","parameters":[["pos",null,"指定文本位置的整数"]],"return":[null,"设置的文本位置。"]},"Sketchup::DimensionLinear#end":{"description":"end方法返回维度在其末尾引用的点或实体。","name":"end","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#end","type":"instance_method","visibility":"public","return":[null,"数组-大小为2的数组：\\n-引用的实体或nil（如果未关联）。\\n-Point3d，其中包含引用的位置。"]},"Sketchup::DimensionLinear#end=":{"description":"end=方法用于设置维度的终点和/或所引用的实体。","name":"end=","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#end=","type":"instance_method","visibility":"public","parameters":[["pt_or_entity",null,"此参数可以采用以下几种形式：\\n-a n InputPoint \\n-a Point3d \\n-顶点\\n-a ConstructionPoint \\n-大小为2的数组：【沿边Point3d】\\n-大小为2的数组：【沿线ConstructionLine、Point3d】"]],"return":[null,"自己"]},"Sketchup::DimensionLinear#offset_vector":{"description":"offset_vector方法返回从参考线到从“起点”参考点测量的尺寸线的平行偏移矢量。","name":"offset_vector","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#offset_vector","type":"instance_method","visibility":"public","return":[null,"作为矢量3D的偏移矢量"]},"Sketchup::DimensionLinear#offset_vector=":{"description":"offset_vector=方法用于设置从参考线到从“起点”参考点测量的尺寸线的平行偏移矢量。","name":"offset_vector=","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#offset_vector=","type":"instance_method","visibility":"public","parameters":[["vec",null,"要设置的偏移量向量，可以是Vector3d，也可以是数组形式。"]],"return":[null,"设置的偏移向量"]},"Sketchup::DimensionLinear#start":{"description":"start方法返回维度开始处引用的点或实体。","name":"start","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#start","type":"instance_method","visibility":"public","return":[null,"数组-大小为2的数组：\\n-引用的实体或nil（如果未关联）。\\n-Point3d，其中包含引用的位置。"]},"Sketchup::DimensionLinear#start=":{"description":"start=方法用于设置维度的起点和/或所引用的实体。","name":"start=","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#start=","type":"instance_method","visibility":"public","parameters":[["pt_or_entity",null,"此参数可以采用以下几种形式：\\n-a n InputPoint \\n-a Point3d \\n-顶点\\n-a ConstructionPoint \\n-大小为2的数组：【沿边Point3d】\\n-大小为2的数组：【沿线ConstructionLine、Point3d】"]],"return":[null,"自己"]},"Sketchup::DimensionLinear#text_position":{"description":"text_position方法返回文本在尺寸线上的位置。有效值是类常量：\\n-DimensionLinear:：TEXT_OUTSIDE_START\\n-DimensionLinear:：TEXT_CENTERED\\n-DimensionLinear:：text_outside_end","name":"text_position","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#text_position","type":"instance_method","visibility":"public","return":[null,"指定文本位置的整数"]},"Sketchup::DimensionLinear#text_position=":{"description":"text_position=方法用于设置文本沿尺寸线的位置。有效值是类常量：\\n-DimensionLinear:：TEXT_OUTSIDE_START\\n-DimensionLinear:：TEXT_CENTERED\\n-DimensionLinear:：text_outside_end","name":"text_position=","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear#text_position=","type":"instance_method","visibility":"public","parameters":[["pos",null,"指定文本位置的整数"]],"return":[null,"设置的文本位置。"]},"Sketchup::DimensionLinear::ALIGNED_TEXT_ABOVE":{"description":"常量","name":"ALIGNED_TEXT_ABOVE","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear::ALIGNED_TEXT_ABOVE","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionLinear::ALIGNED_TEXT_CENTER":{"description":"存根值。","name":"ALIGNED_TEXT_CENTER","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear::ALIGNED_TEXT_CENTER","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionLinear::ALIGNED_TEXT_OUTSIDE":{"description":"存根值。","name":"ALIGNED_TEXT_OUTSIDE","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear::ALIGNED_TEXT_OUTSIDE","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionLinear::TEXT_CENTERED":{"description":"存根值。","name":"TEXT_CENTERED","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear::TEXT_CENTERED","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionLinear::TEXT_OUTSIDE_END":{"description":"存根值。","name":"TEXT_OUTSIDE_END","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear::TEXT_OUTSIDE_END","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionLinear::TEXT_OUTSIDE_START":{"description":"存根值。","name":"TEXT_OUTSIDE_START","namespace":"Sketchup::DimensionLinear","path":"Sketchup::DimensionLinear::TEXT_OUTSIDE_START","type":"constant","return":null,"visibility":"public"},"Sketchup::DimensionObserver":{"description":"这个观察者接口被实现来响应维度文本的变化。","name":"DimensionObserver","namespace":"Sketchup","path":"Sketchup::DimensionObserver","type":"class","visibility":"public"},"Sketchup::DimensionObserver#onTextChanged":{"description":"当您的实体被删除时，将调用{#onTextChanged}方法。","name":"onTextChanged","namespace":"Sketchup::DimensionObserver","path":"Sketchup::DimensionObserver#onTextChanged","type":"instance_method","visibility":"public","parameters":[["dimension",["Sketchup::Dimension"],"其文本已更改的维度对象。"]]},"Sketchup::DimensionRadial":{"description":"DimensionRadial类表示圆弧和圆上的半径和直径尺寸。","name":"DimensionRadial","namespace":"Sketchup","path":"Sketchup::DimensionRadial","type":"class","visibility":"public"},"Sketchup::DimensionRadial#arc_curve":{"description":"arc_curve方法返回该维度所附加到的ArcCurve对象。","name":"arc_curve","namespace":"Sketchup::DimensionRadial","path":"Sketchup::DimensionRadial#arc_curve","type":"instance_method","visibility":"public","return":[null,"维度所附加到的ArcCurve对象。"]},"Sketchup::DimensionRadial#arc_curve=":{"description":"arc_curve=方法用于设置该维度所附加到的ArcCurve对象。","name":"arc_curve=","namespace":"Sketchup::DimensionRadial","path":"Sketchup::DimensionRadial#arc_curve=","type":"instance_method","visibility":"public","parameters":[["arc_curve",null,"要将维度附加到的ArcCurve对象。"]],"return":[null,"维度所附加到的ArcCurve对象。"]},"Sketchup::DimensionRadial#leader_break_point":{"description":"leader_break_point方法返回标注文字附着处的引线上的断点。","name":"leader_break_point","namespace":"Sketchup::DimensionRadial","path":"Sketchup::DimensionRadial#leader_break_point","type":"instance_method","visibility":"public","return":[null,"领导者突破点"]},"Sketchup::DimensionRadial#leader_break_point=":{"description":"leader_break_point=方法用于在标注文字附着的引线上设置断点。","name":"leader_break_point=","namespace":"Sketchup::DimensionRadial","path":"Sketchup::DimensionRadial#leader_break_point=","type":"instance_method","visibility":"public","parameters":[["point",null,"要设置的点"]],"return":[null,"设定的点"]},"Sketchup::DimensionRadial#leader_points":{"description":"leader_points方法返回世界坐标中沿尺寸线的3个有效点。","name":"leader_points","namespace":"Sketchup::DimensionRadial","path":"Sketchup::DimensionRadial#leader_points","type":"instance_method","visibility":"public","return":[null,"3个Point3d对象的数组。点0:前导断点，\\n文本扩展名附加的位置。点1：附加点，指引线接触弧/圆的位置。点2：相反的点，直径引线接触另一侧的圆。"]},"Sketchup::Drawingelement":{"description":"DrawingElement是模型中可以显示的项的基类。这些项目包括边缘、构造点、构造线和图像。圆弧曲线和圆弧不包括在内，因为它们不是单独绘制元素，而是边缘的组合。","name":"Drawingelement","namespace":"Sketchup","path":"Sketchup::Drawingelement","type":"class","visibility":"public"},"Sketchup::Drawingelement#bounds":{"description":"bounds方法用于检索绘图元素的BoundingBox。","name":"bounds","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#bounds","type":"instance_method","visibility":"public","return":[["Geom::BoundingBox"],"BoundingBox对象（如果成功）"]},"Sketchup::Drawingelement#casts_shadows=":{"description":"casts_shadows=方法用于设置DrawingElement以投射阴影。","name":"casts_shadows=","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#casts_shadows=","type":"instance_method","visibility":"public","parameters":[["casts",["Boolean"],"如果希望DrawingElement对象投射阴影，则为true；如果不希望DrawingElement对象投射阴影，则为false。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Drawingelement#casts_shadows?":{"description":"casts_shadows?方法用于确定DrawingElement是否投射阴影。","name":"casts_shadows?","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#casts_shadows?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果DrawingElement正在投射阴影，则为true；如果不成功，则为false。"]},"Sketchup::Drawingelement#erase!":{"description":"erase!方法用于从模型中删除元素。\\n \\n删除边也会删除所有使用边的面对象。","name":"erase!","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#erase!","type":"instance_method","visibility":"public","return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Drawingelement#hidden=":{"description":"hidden=方法用于设置元素的隐藏状态。","name":"hidden=","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#hidden=","type":"instance_method","visibility":"public","parameters":[["hidden",["Boolean"],"如果要隐藏元素，则为true；如果不想隐藏元素，则为false。"]],"return":[["Boolean"],"如果元素已被隐藏，则为true；如果元素未被隐藏，则为false。"]},"Sketchup::Drawingelement#hidden?":{"description":"hidden?方法用于确定元素是否隐藏。\\n \\n隐藏元素仍在模型中，但不显示。","name":"hidden?","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#hidden?","type":"instance_method","visibility":"public","return":[["Boolean"],"隐藏时为真，不隐藏时为假"]},"Sketchup::Drawingelement#layer":{"description":"layer方法用于检索绘图元素的图层对象。","name":"layer","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#layer","type":"instance_method","visibility":"public","return":[["Sketchup::Layer"],"层对象（如果成功）"]},"Sketchup::Drawingelement#layer=":{"description":"layer=方法用于设置绘图元素的图层。\\n \\n如果提供的字符串与任何层名称都不匹配，则会引发异常。","name":"layer=","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#layer=","type":"instance_method","visibility":"public","parameters":[["layer",["Sketchup::Layer","String"],"层或层名称。"]],"return":[["Sketchup::Layer","String"],"如果成功，则为新图层对象"]},"Sketchup::Drawingelement#material":{"description":"material方法用于检索绘图元素的材质。","name":"material","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#material","type":"instance_method","visibility":"public","return":[["Sketchup::Material"],"如果成功，则为材质对象"]},"Sketchup::Drawingelement#material=":{"description":"material=方法用于设置绘图元素的材质。","name":"material=","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#material=","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material","String","Sketchup::Color"],"材质、材质名称、颜色或颜色名称。"]],"return":[["Sketchup::Material","String","Sketchup::Color"],"如果成功，则为新材质对象"]},"Sketchup::Drawingelement#receives_shadows=":{"description":"receive_shadows=方法用于设置DrawingElement以接收阴影。","name":"receives_shadows=","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#receives_shadows=","type":"instance_method","visibility":"public","parameters":[["receive",["Boolean"],"如果希望DrawingElement对象接收阴影，则为true；否则为false。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Drawingelement#receives_shadows?":{"description":"receive_shadows?方法用于确定DrawingElement是否接收阴影。","name":"receives_shadows?","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#receives_shadows?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果DrawingElement正在接收阴影，则为true；如果不成功，则为false。"]},"Sketchup::Drawingelement#visible=":{"description":"visible=方法用于设置元素的可见状态。此方法执行与hidden=方法相反的函数。","name":"visible=","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#visible=","type":"instance_method","visibility":"public","parameters":[["visibility",["Boolean"],"如果要隐藏元素，则为true；否则为false"]],"return":[["Boolean"],"如果元素已被隐藏，则为true；如果元素未被隐藏，则为false。"]},"Sketchup::Drawingelement#visible?":{"description":"visible?方法用于获取元素的可见状态。","name":"visible?","namespace":"Sketchup::Drawingelement","path":"Sketchup::Drawingelement#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],"可见为真，不可见为假"]},"Sketchup::Edge":{"description":"Edge类包含修改和提取边缘信息的方法。","name":"Edge","namespace":"Sketchup","path":"Sketchup::Edge","type":"class","visibility":"public"},"Sketchup::Edge#all_connected":{"description":"all_connected方法检索连接到边缘的所有实体，包括边缘本身。","name":"all_connected","namespace":"Sketchup::Edge","path":"Sketchup::Edge#all_connected","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Edge, Sketchup::Face>"],"边和连接到该边的实体"]},"Sketchup::Edge#common_face":{"description":"common_face方法用于识别两条边共用的面。","name":"common_face","namespace":"Sketchup::Edge","path":"Sketchup::Edge#common_face","type":"instance_method","visibility":"public","parameters":[["edge2",["Sketchup::Edge"],"你正在检查其边缘是否具有共性的面。"]],"return":[["Sketchup::Face","nil"],"如果成功，则两条边共用的面对象"]},"Sketchup::Edge#curve":{"description":"curve方法用于获取此边所属的曲线对象（如果有）。请注意，如果边是圆弧的一部分而不是随机曲线，则此方法将返回ArcCurve对象。","name":"curve","namespace":"Sketchup::Edge","path":"Sketchup::Edge#curve","type":"instance_method","visibility":"public","return":[["Sketchup::ArcCurve","nil"],"如果是曲线，则返回曲线或ArcCurve对象；如果不是曲线，则返回nil对象。"]},"Sketchup::Edge#end":{"description":"end方法用于检索边缘末端的顶点对象。","name":"end","namespace":"Sketchup::Edge","path":"Sketchup::Edge#end","type":"instance_method","visibility":"public","return":[["Sketchup::Vertex"],"顶点对象（如果成功）"]},"Sketchup::Edge#explode_curve":{"description":"explode_curve方法用于将边缘分解为\\n ArcCurve。","name":"explode_curve","namespace":"Sketchup::Edge","path":"Sketchup::Edge#explode_curve","type":"instance_method","visibility":"public","return":[["Sketchup::Edge"],"如果成功，则为分解的边缘对象"]},"Sketchup::Edge#faces":{"description":"faces方法用于检索边缘的所有公共面。","name":"faces","namespace":"Sketchup::Edge","path":"Sketchup::Edge#faces","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Faces>"],"如果成功，则为面对象数组；如果不成功，则为假数组。"]},"Sketchup::Edge#find_faces":{"description":"find_faces方法用于创建可以使用此边创建的所有面。例如，如果使用API绘制三条形成三角形的边，则它们之间的面将不会显示，因为您只绘制了边，但如果在其中一条边上调用find_faces，则将填充三角形。","name":"find_faces","namespace":"Sketchup::Edge","path":"Sketchup::Edge#find_faces","type":"instance_method","visibility":"public","return":[["Integer"],"找到的面数"]},"Sketchup::Edge#length":{"description":"length方法用于以当前单位检索边的长度。\\n \\n您可以传递可选转换（或表示转换的数组），以更正父组的转换。例如，如果边位于缩放到200%的组中，则长度方法将返回边的未缩放长度。因此，通过将一个200%\\n转换对象传递给这个方法，您就可以计算出边缘的“可视”长度。","name":"length","namespace":"Sketchup::Edge","path":"Sketchup::Edge#length","type":"instance_method","visibility":"public"},"Sketchup::Edge#line":{"description":"line方法用于检索由边定义的线。SketchUp中的线条不是可见的实体，而是由一个带有Point3d和Vector3d的数组表示的几何结构。有关行的更多信息，请参见geom模块和array类。","name":"line","namespace":"Sketchup::Edge","path":"Sketchup::Edge#line","type":"instance_method","visibility":"public","return":[["Array(Geom::Point3d, Geom::Vector3d)"],"具有Point3d对象和Vector3d对象的数组。"]},"Sketchup::Edge#other_vertex":{"description":"other_vertex方法用于在给定边的一个顶点的情况下找到相反的顶点。","name":"other_vertex","namespace":"Sketchup::Edge","path":"Sketchup::Edge#other_vertex","type":"instance_method","visibility":"public","parameters":[["vertex1",["Sketchup::Vertex"],"与边关联的顶点对象之一。"]],"return":[["Sketchup::Vertex"],"与边关联的其他顶点对象"]},"Sketchup::Edge#reversed_in?":{"description":"{#reversed_in?}方法用于确定面的边界环中的边是否反转。","name":"reversed_in?","namespace":"Sketchup::Edge","path":"Sketchup::Edge#reversed_in?","type":"instance_method","visibility":"public","parameters":[["face",["Sketchup::Face"],"以边为边界的面。"]],"return":[["Boolean"],"+真+如果边缘反转，则为+false+。如果边缘和面未连接，则为+nil+。"]},"Sketchup::Edge#smooth=":{"description":"{#smooth=}方法用于将边缘设置为平滑。\\n \\n平滑边将导致连接面之间的着色混合到平滑过渡。边缘仍然可见。","name":"smooth=","namespace":"Sketchup::Edge","path":"Sketchup::Edge#smooth=","type":"instance_method","visibility":"public","parameters":[["value",["Boolean"],null]],"return":[["Boolean"],""]},"Sketchup::Edge#smooth?":{"description":"{#smooth?}方法用于检索边缘的当前平滑设置。\\n \\n平滑边将导致连接面之间的着色混合到平滑过渡。边缘仍然可见。","name":"smooth?","namespace":"Sketchup::Edge","path":"Sketchup::Edge#smooth?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Edge#soft=":{"description":"使用{#soft=}方法将边缘设置为软边。\\n \\n软边将导致连接的面被视为曲面。这意味着，如果关闭隐藏几何体并选择一个面，它也将选择与软边连接的所有面。软边也将显示为隐藏。","name":"soft=","namespace":"Sketchup::Edge","path":"Sketchup::Edge#soft=","type":"instance_method","visibility":"public","parameters":[["value",["Boolean"],null]],"return":[["Boolean"],""]},"Sketchup::Edge#soft?":{"description":"{#soft?}方法用于检索边缘的当前平滑设置。\\n \\n软边将导致连接的面被视为曲面。这意味着，如果关闭隐藏几何体并选择一个面，它也将选择与软边连接的所有面。软边也将显示为隐藏。","name":"soft?","namespace":"Sketchup::Edge","path":"Sketchup::Edge#soft?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Edge#split":{"description":"split方法用于将一条边拆分为多条不同的边。如果给出Point3d，则必须是边缘上的点。\\n \\n如果给定了浮点，则是一个介于0和1之间的数字，它给出了沿边缘拆分它的相对位置。例如，\\n edge.split（0.5）将在其中点拆分边缘。此拆分位置\\n是从edge.start测量的。\\n \\n返回由于拆分此边缘而创建的新边缘。","name":"split","namespace":"Sketchup::Edge","path":"Sketchup::Edge#split","type":"instance_method","visibility":"public","parameters":[["position",["Geom::Point3d"],"一个Point3d对象，其位置沿边，或在0.0和1.0之间浮动，定义沿边拆分的距离。"]],"return":[["Sketchup::Edge"],"如果成功，则从旧边对象拆分的新边对象"]},"Sketchup::Edge#start":{"description":"end方法用于在边缘开始处检索顶点对象。","name":"start","namespace":"Sketchup::Edge","path":"Sketchup::Edge#start","type":"instance_method","visibility":"public","return":[["Sketchup::Vertex"],"顶点对象（如果成功）"]},"Sketchup::Edge#used_by?":{"description":"used_by?方法用于查看给定面或顶点是否使用边。","name":"used_by?","namespace":"Sketchup::Edge","path":"Sketchup::Edge#used_by?","type":"instance_method","visibility":"public","parameters":[["element",["Sketchup::Vertex","Sketchup::Face"],"顶点或面对象。"]],"return":[["Boolean"],"如果面属于元素，则为true；否则为false。"]},"Sketchup::Edge#vertices":{"description":"vertices方法用于检索边上的顶点。","name":"vertices","namespace":"Sketchup::Edge","path":"Sketchup::Edge#vertices","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Vertex>"],"顶点对象数组"]},"Sketchup::EdgeUse":{"description":"EdgeUse类定义了如何在面定义中使用边。","name":"EdgeUse","namespace":"Sketchup","path":"Sketchup::EdgeUse","type":"class","visibility":"public"},"Sketchup::EdgeUse#edge":{"description":"edge方法用于检索边缘以供边缘使用。","name":"edge","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#edge","type":"instance_method","visibility":"public","return":[null,"边-此边使用的边对象"]},"Sketchup::EdgeUse#end_vertex_normal":{"description":"end_vertex_normal方法用于检索此边缘端点的顶点法向。","name":"end_vertex_normal","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#end_vertex_normal","type":"instance_method","visibility":"public","return":[null,"vector3d-如果成功，则为vector3d对象。"]},"Sketchup::EdgeUse#face":{"description":"face方法用于检索此边使用的面。","name":"face","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#face","type":"instance_method","visibility":"public","return":[null,"面-此边使用的面对象"]},"Sketchup::EdgeUse#loop":{"description":"loop方法用于检索此边缘使用的循环。","name":"loop","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#loop","type":"instance_method","visibility":"public","return":[null,"循环-包含此边缘使用的循环对象。"]},"Sketchup::EdgeUse#next":{"description":"next方法用于检索循环中的下一个边缘使用。","name":"next","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#next","type":"instance_method","visibility":"public","return":[null,"Edgeuse-循环中的下一个EdgeUse对象"]},"Sketchup::EdgeUse#partners":{"description":"partners方法用于检索使用相同边缘的所有合作伙伴边缘。","name":"partners","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#partners","type":"instance_method","visibility":"public","return":[null,"数组-伙伴边缘使用对象的数组。"]},"Sketchup::EdgeUse#previous":{"description":"previous方法用于检索循环中以前使用的边。","name":"previous","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#previous","type":"instance_method","visibility":"public","return":[null,"Edgeuse-循环中的上一个边使用对象"]},"Sketchup::EdgeUse#reversed?":{"description":"reversed?方法用于确定边缘方向是否与边缘使用方向相反。边缘使用方向与它所属的循环相同。","name":"reversed?","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#reversed?","type":"instance_method","visibility":"public","return":[["Boolean"],"布尔值-如果反转为真，如果不反转为假。"]},"Sketchup::EdgeUse#start_vertex_normal":{"description":"start_vertex_normal方法用于检索此边缘起点的顶点法向。","name":"start_vertex_normal","namespace":"Sketchup::EdgeUse","path":"Sketchup::EdgeUse#start_vertex_normal","type":"instance_method","visibility":"public","return":[null,"vector3d-如果成功，则为vector3d对象。"]},"Sketchup::Entities":{"description":"实体类是模型中所有实体的容器类（它是实体对象的集合）。","name":"Entities","namespace":"Sketchup","path":"Sketchup::Entities","type":"class","visibility":"public"},"Sketchup::Entities#[]":{"description":"使用[]方法通过实体数组中的索引检索实体。索引是一个介于+0+和entities.length-1之间的数字。一般来说，最好使用{#each}方法对集合中的所有实体进行迭代，因为这样做效率更高。","name":"[]","namespace":"Sketchup::Entities","path":"Sketchup::Entities#[]","type":"instance_method","visibility":"public","parameters":[["entity_index",["Integer"],"特定实体的索引。"]],"return":[["Sketchup::Entity","nil"],"如果成功，则为{Sketchup::Entity}对象；如果找不到，则为+nil+"]},"Sketchup::Entities#active_section_plane":{"description":"active_section_plane方法用于访问实体对象中当前活动的截面平面。","name":"active_section_plane","namespace":"Sketchup::Entities","path":"Sketchup::Entities#active_section_plane","type":"instance_method","visibility":"public","return":[["Sketchup::SectionPlane","nil"],"激活的SectionPlane或nil（如果没有激活）。"]},"Sketchup::Entities#active_section_plane=":{"description":"active_section_plane=方法用于设置实体对象中的活动截面平面。","name":"active_section_plane=","namespace":"Sketchup::Entities","path":"Sketchup::Entities#active_section_plane=","type":"instance_method","visibility":"public","parameters":[["sec_plane",["Sketchup::SectionPlane","nil"],"要设置为活动的SectionPlane对象。通过nil停用任何激活截面平面。"]],"return":[["Sketchup::SectionPlane","nil"],"已设置为活动的SectionPlane对象。"]},"Sketchup::Entities#add_3d_text":{"description":"add_3d_text用于创建三维文本。它将添加为在原点绘制的边和面。","name":"add_3d_text","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_3d_text","type":"instance_method","visibility":"public","parameters":[["string",["String"],"要创建的文本。"],["alignment",["Integer"],"定义对齐方式的数字。可以传递名为TextAlignLeft、TextAlignRight和TextAlignCenter的常量。"],["font",["String"],"字体名称。"],["is_bold",["Boolean"],"（可选）粗体为真。"],["is_italic",["Boolean"],"（可选）斜体为真。"],["letter_height",["Numeric"],"（可选）文本高度（英寸）。"],["tolerance",["Numeric"],"（可选）创建曲线的公差。默认值为0.0，这将创建尽可能高的曲线质量。"],["z",["Numeric"],"（可选）z位置（英寸）。"],["is_filled",["Boolean"],"（可选）对于filled，为true，它将在字母的边缘之间放置一个面。"],["extrusion",["Numeric"],"（可选）挤压深度（英寸）。默认为0.0。"]],"return":[["Boolean"],"如果成功，则为真"]},"Sketchup::Entities#add_arc":{"description":"add_arc方法用于创建圆弧曲线段。","name":"add_arc","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_arc","type":"instance_method","visibility":"public"},"Sketchup::Entities#add_circle":{"description":"add_circle方法用于创建圆。","name":"add_circle","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_circle","type":"instance_method","visibility":"public","parameters":[["center",["Geom::Point3d"],"表示中心的Point3d对象。"],["normal",["Geom::Vector3d"],"表示弧的法向的Vector3d对象。"],["numsegs",["Integer"],"段的数目。"],["radius",["Numeric"],"弧的半径。"]],"return":[["Array<Sketchup::Edge>"],"如果成功，则包含边的数组对象"]},"Sketchup::Entities#add_cline":{"description":"add_cline方法用于创建构造线。","name":"add_cline","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_cline","type":"instance_method","visibility":"public","parameters":[["start_point",["Geom::Point3d"],"一个Point3d对象，行将从该对象开始。"],["end_point",["Geom::Point3d"],"如果一个矢量3d，那么将在该方向上创建一条穿过start_point的无限线。如果是一个点3d，那么将在两个点之间创建一条有限线。"],["stipple",["String"],"点画图案。有关可接受的模式，请参阅ConstructionLine.stipple \\n。"]],"return":[["Sketchup::ConstructionLine"],"如果成功，则返回ConstructionLine对象"]},"Sketchup::Entities#add_cpoint":{"description":"add_cpoint方法用于创建构造点。","name":"add_cpoint","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_cpoint","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Sketchup::ConstructionPoint"],"如果成功，则为ConstructionPoint对象"]},"Sketchup::Entities#add_curve":{"description":"add_curve方法用于从一组边创建曲线。\\n \\n参数为点或点数组。至少需要2分。","name":"add_curve","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_curve","type":"instance_method","visibility":"public","parameters":[["pts_or_array",["Array<Geom::Point3d>"],"可以传递一系列Point3d对象，也可以传递包含Point3d对象的单个数组。"]],"return":[["Array<Sketchup::Edge>"],"如果成功，则构成曲线的一组边"]},"Sketchup::Entities#add_dimension_linear":{"description":"add_dimension_linear方法向实体添加线性尺寸。","name":"add_dimension_linear","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_dimension_linear","type":"instance_method","visibility":"public","parameters":[["start_pt_or_entity",["Geom::Point3d","Sketchup::Entity"],"维度开始处的参考点和/或实体。此参数可以采用多种形式："],["end_pt_or_entity",["Geom::Point3d","Sketchup::Entity"],"维度末尾的参考点和/或实体。此参数采用与“start_pt_or_entity”完全相同的格式。"],["offset_vector",["Geom::Vector3d"],"从参考线到尺寸线的平行偏移矢量，从“起点”测量。"]],"return":[["Sketchup::DimensionLinear"],"创建的维度"]},"Sketchup::Entities#add_dimension_radial":{"description":"add_dimension_radial方法将径向尺寸（即弧/圆半径/直径尺寸）添加到实体中。","name":"add_dimension_radial","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_dimension_radial","type":"instance_method","visibility":"public","parameters":[["arc_curve",["Sketchup::ArcCurve"],"要将维度附加到的ArcCurve对象。"],["leader_break_pt",["Geom::Point3d"],"A Point3d用于连接尺寸文本的引线上的断点。"]],"return":[["Sketchup::DimensionRadial"],"创建的维度"]},"Sketchup::Entities#add_edges":{"description":"add_edges方法用于向实体数组添加一组连接的边。","name":"add_edges","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_edges","type":"instance_method","visibility":"public","parameters":[["pts_or_array",["Array<Geom::Point3d>"],"可以传递一系列Point3d对象，也可以传递包含Point3d对象的单个数组。"]],"return":[["Array<Sketchup::Edge>"],"边缘对象数组（如果成功）"]},"Sketchup::Entities#add_face":{"description":"add_face方法用于创建面。您可以通过多种方式调用此方法：\\n \n  - entities.add_face(edge1, edge2, edge3, ...)\n  - entities.add_face(edgearray)\n  - entities.add_face(pt1, pt2, pt3, ...)\n  - entities.add_face([pt1, pt2, pt3,...])\n  - entities.add_face(curve)\n\\n对于采用曲线的最后一个窗体，曲线必须像圆一样闭合。\\n \\n请注意，对于在地平面上创建的任何面都存在特殊情况，在这种情况下，顶点顺序将被忽略，并且面始终朝下。","name":"add_face","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_face","type":"instance_method","visibility":"public","parameters":[["some_entities",["Array<Sketchup::Edge>","Array<Geom::Point3d>","Sketchup::ArcCurve"],"一系列边或Point3d对象、Point3d对象数组或闭合曲线。"]],"return":[["Sketchup::Face"],"面对象（如果成功）"]},"Sketchup::Entities#add_faces_from_mesh":{"description":"{#add_faces_from_mesh}方法用于将面对象添加到来自PolygonMesh的实体集合中。\\n \\n如果传递，+smooth_flags+参数可以包含以下任何值。这些常量在SketchUp 2014中添加。对于以前的版本，必须指定数值而不是Ruby常量。\\n \\n-0:{Geom::PolygonMesh::NO_SMOOTH_OR_HIDE} \\n-1:{Geom::PolygonMesh::HIDE_BASED_ON_INDEX}（负点索引将隐藏边缘。）\\n-2:{Geom::PolygonMesh::SOFTEN_BASED_ON_INDEX}（负点索引将软化边缘。）\\n-4:{Geom::PolygonMesh::AUTO_SOFTEN}（内部边缘将软化。）\\n-8:{Geom::PolygonMesh::SMOOTH_SOFT_EDGES}（所有软边也将平滑。）\\n \\n第3和第4个参数将接受当前位于t中的{sketchup::Material}对象或材料的字符串名称他是模特儿。","name":"add_faces_from_mesh","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_faces_from_mesh","type":"instance_method","visibility":"public","parameters":[["polygon_mesh",["Geom::PolygonMesh"],null],["smooth_flags",["Integer"],"用于软化和平滑边缘的标志。"],["b_material",["Sketchup::Material","String"],"用于绘制背面的材质。"],["f_material",["Sketchup::Material","String"],"用于绘制正面的材质。"]],"return":[["Integer"],"创建的面数"]},"Sketchup::Entities#add_group":{"description":"add_group方法用于创建空组或包含实体的组。\\n \\n NOTE:调用参数中包含实体的add_group会导致8.0版之前的SketchUp崩溃。最好创建一个空组，然后将内容添加到其实体集合中。","name":"add_group","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_group","type":"instance_method","visibility":"public","parameters":[["entities",["Array<Sketchup::Entity>"],"要添加到组中的实体集合。"]],"return":[["Sketchup::Group"],"新集团"]},"Sketchup::Entities#add_image":{"description":"add_image方法用于向实体集合添加图像。\\n \\n宽度和高度以模型单位（即英寸）度量。如果没有给出高度，则从宽度计算高度以保留图像的纵横比。","name":"add_image","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_image","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"图像文件的文件名。"],["point",["Geom::Point3d"],"表示图像插入点的Point3d对象。"],["height",["Numeric"],"（可选）如果要独立控制宽度和高度，则图像的高度。"],["width",["Numeric"],"图像的宽度。"]],"return":[["Sketchup::Image"],"图像对象（如果成功）。"]},"Sketchup::Entities#add_instance":{"description":"add_instance方法将组件实例添加到实体集合中。","name":"add_instance","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_instance","type":"instance_method","visibility":"public","parameters":[["definition",["Sketchup::ComponentDefinition"],"ComponentDefinition对象。"],["transform",["Geom::Transformation"],"转换对象。"]],"return":[["Sketchup::ComponentInstance"],"如果成功，则返回ComponentInstance对象"]},"Sketchup::Entities#add_line":{"description":"add_line方法用于向实体集合添加边。\\n这不应与几何意义上的“线”概念混淆，该“线”是由点和向量的数组表示的不可见对象。（有关SketchUp中几何线的详细信息，请参见数组类。）\\n \\n此方法与add_edges方法相同，但返回一条边。","name":"add_line","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_line","type":"instance_method","visibility":"public","parameters":[["point1",["Geom::Point3d"],"Point3D对象表示边缘的起点。"],["point2",["Geom::Point3d"],"Point3D对象表示边的终点。"]],"return":[["Sketchup::Edge"],"边缘对象（如果成功）"]},"Sketchup::Entities#add_ngon":{"description":"add_ngon方法用于创建多面多边形。","name":"add_ngon","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_ngon","type":"instance_method","visibility":"public","parameters":[["center",["Geom::Point3d"],"表示多边形中心的Point3d对象。"],["normal",["Geom::Vector3d"],"一个Vector3d对象。"],["numsides",["Integer"],"多边形的边数。"],["radius",["Numeric"],"一个半径"]],"return":[["Array<Sketchup::Edge>"],"如果成功，则组成多边形的边数组"]},"Sketchup::Entities#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Entities#add_section_plane":{"description":"add_section_plane方法将剖面对象添加到实体中。","name":"add_section_plane","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_section_plane","type":"instance_method","visibility":"public","parameters":[["plane",null,"要创建SectionPlane对象的几何平面。有关如何表示平面的信息，请参阅geom模块。"]],"return":[["Sketchup::SectionPlane","nil"],"创建的SectionPlane对象如果成功，则为nil，失败时为nil。"]},"Sketchup::Entities#add_text":{"description":"add_text方法向实体添加注释或标签文本实体","name":"add_text","namespace":"Sketchup::Entities","path":"Sketchup::Entities#add_text","type":"instance_method","visibility":"public","parameters":[["text",["String"],"要添加的文本字符串。"],["point",["Geom::Point3d"],"表示插入点的Point3d对象。"],["vector",["Geom::Vector3d"],"（可选）表示箭头引线的向量。"]],"return":[["Sketchup::Text"],"如果成功，则为文本对象"]},"Sketchup::Entities#at":{"description":"{#at}方法是[]的别名。","name":"at","namespace":"Sketchup::Entities","path":"Sketchup::Entities#at","type":"instance_method","visibility":"public","parameters":[["entity_index",["Integer"],"特定实体的索引。"]],"return":[["Sketchup::Entity","nil"],""]},"Sketchup::Entities#clear!":{"description":"clear!方法用于从实体集合中移除所有实体。","name":"clear!","namespace":"Sketchup::Entities","path":"Sketchup::Entities#clear!","type":"instance_method","visibility":"public","return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Entities#count":{"description":"","name":"count","namespace":"Sketchup::Entities","path":"Sketchup::Entities#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Entities#each":{"description":"each方法用于迭代实体集合中的实体。","name":"each","namespace":"Sketchup::Entities","path":"Sketchup::Entities#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Entities#erase_entities":{"description":"erase_entities方法用于从模型中删除一个或多个实体。","name":"erase_entities","namespace":"Sketchup::Entities","path":"Sketchup::Entities#erase_entities","type":"instance_method","visibility":"public","parameters":[["entities",["Array<Sketchup::Entity>"],"实体或实体数组。"]],"return":[["nil"],""]},"Sketchup::Entities#fill_from_mesh":{"description":"{#fill_from_mesh}方法用于将面和边添加到来自{Geom::PolygonMesh}的实体集合中。它要求要填充的Entities集合为空。它的性能比\\n {#add_faces_from_mesh}高，但在构建几何体时进行的错误检查较少。\\n \\n如果传递，+smooth_flags+参数可以包含以下任何值。这些常量在SketchUp 2014中添加。对于以前的版本，必须指定数字值而不是ruby常量：\\n \\n-0:{Geom::PolygonMesh::NO_SMOOTH_OR_HIDE} \\n-1:{Geom::PolygonMesh::HIDE_BASED_ON_INDEX}（负点索引将隐藏边缘。）\\n-2:{Geom::PolygonMesh::SOFTEN_BASED_ON_INDEX}（负点索引将软化边缘。）\\n-4:{Geom::PolygonMesh::AUTO_SOFTEN}（内部边缘将软化。）\\n-8:{Geom::PolygonMesh::SMOOTH_SOFT_EDGES}（所有软边也将平滑。）\\n \\n第4个第5个参数将接受{Sketchup::Material}对象或模型中当前材料的字符串名称。","name":"fill_from_mesh","namespace":"Sketchup::Entities","path":"Sketchup::Entities#fill_from_mesh","type":"instance_method","visibility":"public","parameters":[["weld_vertices",["Boolean"],"此参数无效，出于兼容性原因保留。点总是合并的。"],["polygon_mesh",["Geom::PolygonMesh"],""],["smooth_flags",["Integer"],"用于软化和平滑边缘的标志。"],["b_material",["Sketchup::Material","String"],"用于绘制背面的材质。"],["f_material",["Sketchup::Material","String"],"用于绘制正面的材质。"]],"return":[["Boolean"],""]},"Sketchup::Entities#intersect_with":{"description":"intersect_with方法用于将实体、组件实例或组对象与实体对象相交。","name":"intersect_with","namespace":"Sketchup::Entities","path":"Sketchup::Entities#intersect_with","type":"instance_method","visibility":"public","parameters":[["transform1",["Geom::Transformation"],"此实体对象的转换。"],["recurse",["Boolean"],"如果希望循环此实体对象，则为true \\n（交线将放在此实体对象中的组和组件内）。"],["entities1",["Sketchup::Entities"],"要在其中显示交叉线的实体对象。"],["entities2",["Sketchup::Entity","Array<Sketchup::Entity>"],"单个实体或实体数组。"],["transform2",["Geom::Transformation"],"entities1的转换。"],["hidden",["Boolean"],"如果希望在交集中使用此实体对象中的隐藏几何图形，则为true。"]],"return":[["nil"],""]},"Sketchup::Entities#length":{"description":"{#length}方法用于检索实体集合中的实体数。","name":"length","namespace":"Sketchup::Entities","path":"Sketchup::Entities#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Entities#model":{"description":"model方法用于检索包含实体集合的模型。","name":"model","namespace":"Sketchup::Entities","path":"Sketchup::Entities#model","type":"instance_method","visibility":"public","return":[["Sketchup::Model"],"如果成功，则包含实体集合的模型。"]},"Sketchup::Entities#parent":{"description":"parent方法用于检索包含实体集合的父级或对象。父对象可以是模型或ComponentDefinition对象。","name":"parent","namespace":"Sketchup::Entities","path":"Sketchup::Entities#parent","type":"instance_method","visibility":"public","return":[["Sketchup::ComponentDefinition","Sketchup::Model"],"如果成功，则包含实体集合的对象"]},"Sketchup::Entities#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::Entities","path":"Sketchup::Entities#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Entities#size":{"description":"{#size}方法是{#length}方法的别名。","name":"size","namespace":"Sketchup::Entities","path":"Sketchup::Entities#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Entities#transform_by_vectors":{"description":"transform_by_vectors方法用于同时将多个向量应用于多个子实体。","name":"transform_by_vectors","namespace":"Sketchup::Entities","path":"Sketchup::Entities#transform_by_vectors","type":"instance_method","visibility":"public","parameters":[["sub_entities",["Array<Sketchup::Entity>"],"要转换的实体数组。"],["vectors",["Array<Geom::Vector3d>"],"要应用的向量数组。"]],"return":[["Sketchup::Entities"],""]},"Sketchup::Entities#transform_entities":{"description":"transform_entities方法用于同时对多个子实体应用转换。\\n \\n重要提示：如果对不在当前编辑上下文中的实体（即组内的面）应用转换，SketchUp将错误地应用转换，因为几何图形有一个原点，而当前编辑上下文有另一个原点。您可以通过观察Model.edit_transform和model.active_路径来纠正这个问题。更多信息请参见ModelObserver.onActivePathChanged。","name":"transform_entities","namespace":"Sketchup::Entities","path":"Sketchup::Entities#transform_entities","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"要应用的转换。"],["entities",["Array<Sketchup::Entity>"],"要转换的一个或一系列实体。"]],"return":[["Boolean"],"转换的结果。"]},"Sketchup::EntitiesObserver":{"description":"此观测者介面是用来回应{Sketchup::Entities}收集事件的。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并向感兴趣的对象添加观察者的实例。","name":"EntitiesObserver","namespace":"Sketchup","path":"Sketchup::EntitiesObserver","type":"class","visibility":"public"},"Sketchup::EntitiesObserver#onActiveSectionPlaneChanged":{"description":"当激活此实体中的剖面或激活的剖面被禁用时，将调用{#onActiveSectionPlaneChanged}方法。","name":"onActiveSectionPlaneChanged","namespace":"Sketchup::EntitiesObserver","path":"Sketchup::EntitiesObserver#onActiveSectionPlaneChanged","type":"instance_method","visibility":"public","parameters":[["entities",["Sketchup::Entities"],null]],"return":[["nil"],""]},"Sketchup::EntitiesObserver#onElementAdded":{"description":"当向{Sketchup::Entities}集合中添加单个元素时，将调用onElementAdded方法。","name":"onElementAdded","namespace":"Sketchup::EntitiesObserver","path":"Sketchup::EntitiesObserver#onElementAdded","type":"instance_method","visibility":"public","parameters":[["entities",["Sketchup::Entities"],null],["entity",["Sketchup::Entity"],null]],"return":[["nil"],""]},"Sketchup::EntitiesObserver#onElementModified":{"description":"每当修改集合中的一个或多个元素时，都会调用{#onElementModified}方法。","name":"onElementModified","namespace":"Sketchup::EntitiesObserver","path":"Sketchup::EntitiesObserver#onElementModified","type":"instance_method","visibility":"public","parameters":[["entities",["Sketchup::Entities"],null],["entity",["Sketchup::Entity"],null]],"return":[["nil"],""]},"Sketchup::EntitiesObserver#onElementRemoved":{"description":"当从{Sketchup::Entities}集合中移除单个元素时，将调用{#onElementRemoved}方法。请注意，该实体已被删除，不应在任何情况下使用，除非知道该实体已被删除。","name":"onElementRemoved","namespace":"Sketchup::EntitiesObserver","path":"Sketchup::EntitiesObserver#onElementRemoved","type":"instance_method","visibility":"public","parameters":[["entities",["Sketchup::Entities"],null],["entity_id",["Sketchup::Entity"],"已删除/删除的实体的ID。"]],"return":[["nil"],""]},"Sketchup::EntitiesObserver#onEraseEntities":{"description":"当一个或多个实体被擦除时，将调用{#onEraseEntities}方法。","name":"onEraseEntities","namespace":"Sketchup::EntitiesObserver","path":"Sketchup::EntitiesObserver#onEraseEntities","type":"instance_method","visibility":"public","parameters":[["entities",["Sketchup::Entities"],null]],"return":[["nil"],""]},"Sketchup::Entity":{"description":"这是所有SketchUp实体的基类。实体基本上是模型中可以包含的任何内容，包括绘图元素（如边、SectionPlanes、组等）和与这些绘图元素相关的实体（如循环、层等）。\\n\\n请记住，下面的方法可用于所有子类。\\n例如，边缘的父类是DrawingElement，而DrawingElement的父类是Entity。因此，边具有DrawingElement和Entity中定义的所有方法。\\n \\n对象。是否为？方法是确定要处理的实体类型的常用方法。","name":"Entity","namespace":"Sketchup","path":"Sketchup::Entity","type":"class","visibility":"public"},"Sketchup::Entity#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::Entity","path":"Sketchup::Entity#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Entity#attribute_dictionaries":{"description":"attribute_dictionaries方法用于检索附加到实体的AttributeDictionaries集合。","name":"attribute_dictionaries","namespace":"Sketchup::Entity","path":"Sketchup::Entity#attribute_dictionaries","type":"instance_method","visibility":"public","return":[["Sketchup::AttributeDictionaries","nil"],"与实体关联的AttributeDictionaries对象，如果没有与模型关联的attribute_dictionary对象，则为nil。如果返回nil，必须小心，例如：调用attribute_dictionaries。length将引发NoMethodError异常，而不是返回0。"]},"Sketchup::Entity#attribute_dictionary":{"description":"attribute_dictionary方法用于检索具有附加到实体的给定名称的属性字典。","name":"attribute_dictionary","namespace":"Sketchup::Entity","path":"Sketchup::Entity#attribute_dictionary","type":"instance_method","visibility":"public","parameters":[["name",["String"],"属性字典的名称。"],["create",["Boolean"],"布尔值，如果设置为true，则如果属性字典不存在，则将创建它。"]],"return":[["Sketchup::AttributeDictionary","nil"],"-如果成功，则为AttributeDictionary对象；如果没有属性字典，则为nil对象。"]},"Sketchup::Entity#delete_attribute":{"description":"delete_attribute方法用于从实体中删除属性。\\n \\n如果只给出dictionary_name，则会删除整个AttributeDictionary。否则，delete_attribute将从给定字典中删除具有给定键的属性。","name":"delete_attribute","namespace":"Sketchup::Entity","path":"Sketchup::Entity#delete_attribute","type":"instance_method","visibility":"public"},"Sketchup::Entity#deleted?":{"description":"deleted?方法用于确定实体是否仍然有效（例如，未被其他脚本删除）。","name":"deleted?","namespace":"Sketchup::Entity","path":"Sketchup::Entity#deleted?","type":"instance_method","visibility":"public","return":[["Boolean"],"删除为真，未删除为假"]},"Sketchup::Entity#entityID":{"description":"entityID方法用于检索分配给实体的唯一ID。\\n \\n entityid在会话之间不持久。","name":"entityID","namespace":"Sketchup::Entity","path":"Sketchup::Entity#entityID","type":"instance_method","visibility":"public","return":[["Integer"],"实体对象的ID"]},"Sketchup::Entity#get_attribute":{"description":"get_attribute方法用于检索实体属性字典中的属性值。\\n \\n如果未传递第三个参数default_value，并且没有与给定名称匹配的属性，则返回nil。\\n \\n如果提供default_value，但没有匹配的属性，则返回给定的值。但它不会创建具有该名称的属性。","name":"get_attribute","namespace":"Sketchup::Entity","path":"Sketchup::Entity#get_attribute","type":"instance_method","visibility":"public","parameters":[["dict_name",["String"],"属性字典的名称。"],["key",["String"],"属性键。"],["default_value",["Object"],"如果找不到属性，则返回默认值。"]],"return":[["Object"],"检索到的值"]},"Sketchup::Entity#inspect":{"description":"to_s方法用于检索实体的字符串表示形式。","name":"inspect","namespace":"Sketchup::Entity","path":"Sketchup::Entity#inspect","type":"instance_method","visibility":"public","return":[["String"],"实体的字符串表示形式（如果成功）"]},"Sketchup::Entity#model":{"description":"model方法用于检索实体的模型。","name":"model","namespace":"Sketchup::Entity","path":"Sketchup::Entity#model","type":"instance_method","visibility":"public","return":[["Sketchup::Model"],"包含实体对象的模型"]},"Sketchup::Entity#parent":{"description":"parent方法用于检索实体的父级。\\n \\n父级将是ComponentDefinition、组或模型，无论实体包含在其中。","name":"parent","namespace":"Sketchup::Entity","path":"Sketchup::Entity#parent","type":"instance_method","visibility":"public","return":[["Sketchup::ComponentDefinition","Sketchup::Model"],"表示此实体父级的实体对象\\n"]},"Sketchup::Entity#persistent_id":{"description":"{#persistent_id}方法用于检索分配给实体的唯一持久ID。\\n \\n会话之间的持久ID。","name":"persistent_id","namespace":"Sketchup::Entity","path":"Sketchup::Entity#persistent_id","type":"instance_method","visibility":"public","return":[["Integer"],"{Sketchup::Entity}对象的ID"]},"Sketchup::Entity#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::Entity","path":"Sketchup::Entity#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Entity#set_attribute":{"description":"set属性用于在具有给定名称的属性字典中设置属性的值。\\n \\n如果不存在，此方法将创建新的AttributeDictionary。\\n \\n注意，如果密钥为空字符串，则SketchUp 2015之前的错误会损坏模型。这还包括将计算为空字符串的值，如nil。","name":"set_attribute","namespace":"Sketchup::Entity","path":"Sketchup::Entity#set_attribute","type":"instance_method","visibility":"public","parameters":[["dict_name",["String"],"属性字典的名称。"],["key",["String"],"属性键。"],["value",["Object"],"属性的值。"]],"return":[["Object"],"如果成功，则为新设置的值"]},"Sketchup::Entity#to_s":{"description":"to_s方法用于检索实体的字符串表示形式。","name":"to_s","namespace":"Sketchup::Entity","path":"Sketchup::Entity#to_s","type":"instance_method","visibility":"public","return":[["String"],"实体的字符串表示形式（如果成功）"]},"Sketchup::Entity#typename":{"description":"typename方法检索实体的类型，该类型将是一个字符串，如“face”、“edge”或“group”。","name":"typename","namespace":"Sketchup::Entity","path":"Sketchup::Entity#typename","type":"instance_method","visibility":"public","return":[["String"],"实体的类型"]},"Sketchup::Entity#valid?":{"description":"valid?方法用于确定实体是否仍然有效（例如，未被其他脚本删除）。\\n\\n此方法的功能与已删除的相同？方法。","name":"valid?","namespace":"Sketchup::Entity","path":"Sketchup::Entity#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],"删除为真，未删除为假"]},"Sketchup::EntityObserver":{"description":"这个观察者接口被实现来响应实体事件。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并将观察者的实例添加到感兴趣的实体中。","name":"EntityObserver","namespace":"Sketchup","path":"Sketchup::EntityObserver","type":"class","visibility":"public"},"Sketchup::EntityObserver#onChangeEntity":{"description":"修改实体时调用{#onChangeEntity}方法。","name":"onChangeEntity","namespace":"Sketchup::EntityObserver","path":"Sketchup::EntityObserver#onChangeEntity","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],null]],"return":[["nil"],""]},"Sketchup::EntityObserver#onEraseEntity":{"description":"当您的实体被删除时，将调用{#onEraseEntity}方法。","name":"onEraseEntity","namespace":"Sketchup::EntityObserver","path":"Sketchup::EntityObserver#onEraseEntity","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],null]],"return":[["nil"],""]},"Sketchup::ExtensionsManager":{"description":"ExtensionsManager类提供了一种访问已通过Sketchup.register_extension方法注册的SketchupExtensions的方法。\\n \\n只有一个ExtensionsManager可用。您可以通过Sketchup.extensions方法访问它。","name":"ExtensionsManager","namespace":"Sketchup","path":"Sketchup::ExtensionsManager","type":"class","visibility":"public"},"Sketchup::ExtensionsManager#[]":{"description":"[]方法用于按名称、索引或ID获取扩展名。","name":"[]","namespace":"Sketchup::ExtensionsManager","path":"Sketchup::ExtensionsManager#[]","type":"instance_method","visibility":"public","parameters":[["index_or_name",null,"SketchupExtension对象的索引、名称或ID。"]],"return":[null,"扩展名-如果成功，则为SketchupExtension对象，否则为nil。"]},"Sketchup::ExtensionsManager#count":{"description":"","name":"count","namespace":"Sketchup::ExtensionsManager","path":"Sketchup::ExtensionsManager#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::ExtensionsManager#each":{"description":"each方法用于迭代扩展。","name":"each","namespace":"Sketchup::ExtensionsManager","path":"Sketchup::ExtensionsManager#each","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::ExtensionsManager#keys":{"description":"keys方法用于获取ExtensionsManager中的键列表，这些键与扩展名的名称相同。","name":"keys","namespace":"Sketchup::ExtensionsManager","path":"Sketchup::ExtensionsManager#keys","type":"instance_method","visibility":"public","return":[null,"keys-字符串键数组"]},"Sketchup::ExtensionsManager#length":{"description":"{#length}方法返回ExtensionsManager中{SketchupExtension}个对象的数目。","name":"length","namespace":"Sketchup::ExtensionsManager","path":"Sketchup::ExtensionsManager#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::ExtensionsManager#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::ExtensionsManager","path":"Sketchup::ExtensionsManager#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Face":{"description":"SketchUp中的面是具有3个或更多边的平面、双面多边形。","name":"Face","namespace":"Sketchup","path":"Sketchup::Face","type":"class","visibility":"public"},"Sketchup::Face#all_connected":{"description":"all_connected方法检索连接到面的所有实体。","name":"all_connected","namespace":"Sketchup::Face","path":"Sketchup::Face#all_connected","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Edge, Sketchup::Face>"],"与面连接的实体"]},"Sketchup::Face#area":{"description":"area方法用于以当前单位检索面的面积。\\n \\n您可以传递可选转换（或表示转换的数组），以更正父组的转换。例如，如果某个面位于缩放到200%的组中，则“面积”方法将返回该面的未缩放区域。因此，通过向此方法传递一个200%的转换对象，您可以说明这一点，以获得人脸的“可视”区域。","name":"area","namespace":"Sketchup::Face","path":"Sketchup::Face#area","type":"instance_method","visibility":"public"},"Sketchup::Face#back_material":{"description":"back_material方法用于检索指定给面的背面的材质。","name":"back_material","namespace":"Sketchup::Face","path":"Sketchup::Face#back_material","type":"instance_method","visibility":"public","return":[["Sketchup::Material","nil"],"表示面背面材质的材质对象（如果成功）"]},"Sketchup::Face#back_material=":{"description":"back_material=方法用于设置指定给面的背面的材质。","name":"back_material=","namespace":"Sketchup::Face","path":"Sketchup::Face#back_material=","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material"],"材质对象或有效材质的名称。"]],"return":[["Sketchup::Material"],"有效材质或新材质对象的名称（如果成功）"]},"Sketchup::Face#classify_point":{"description":"classify_point方法用于确定给定的Point3d是否在参考面上。\\n \\n重要的是要将返回值与符号常量（即{Sketchup::Face::PointUnknown}、\\n {Sketchup::Face::PointInside}、{Sketchup::Face::PointOnVertex}等）进行比较，而不是绝对整数值，因为这些值可能会从一个版本更改到下一个版本。","name":"classify_point","namespace":"Sketchup::Face","path":"Sketchup::Face#classify_point","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],"A Point3d。"]],"return":[["Integer"],"一个整数，描述Point3d与被引用面的关系。"]},"Sketchup::Face#edges":{"description":"edges方法用于获取绑定面的边数组。","name":"edges","namespace":"Sketchup::Face","path":"Sketchup::Face#edges","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Edge>"],"边缘对象数组（如果成功）"]},"Sketchup::Face#followme":{"description":"{#followme}方法用于通过使面沿边数组跟随来创建形状。","name":"followme","namespace":"Sketchup::Face","path":"Sketchup::Face#followme","type":"instance_method","visibility":"public"},"Sketchup::Face#get_UVHelper":{"description":"get_UVHelper对象用于检索一个uvHelper对象，以便在面上的纹理操作中使用。","name":"get_UVHelper","namespace":"Sketchup::Face","path":"Sketchup::Face#get_UVHelper","type":"instance_method","visibility":"public","parameters":[["front",["Boolean"],"如果需要正面的纹理坐标，则为true，否则为false。默认为true。"],["back",["Boolean"],"如果需要背面的纹理坐标，则为true，否则为false。默认为true。"],["texturewriter",["Sketchup::TextureWriter"],"可选TextureWriter对象。"]],"return":[["Sketchup::UVHelper"],"uvHelper对象"]},"Sketchup::Face#get_glued_instances":{"description":"get_glued_instances方法返回粘在面上的数组any ComponentInstances。","name":"get_glued_instances","namespace":"Sketchup::Face","path":"Sketchup::Face#get_glued_instances","type":"instance_method","visibility":"public","return":[["Array<Sketchup::ComponentInstance, Sketchup::Group>"],"当前粘在面上的ComponentInstance对象的数组。"]},"Sketchup::Face#get_texture_projection":{"description":"get_texture_projection方法将返回一个表示正面或背面投影的向量。","name":"get_texture_projection","namespace":"Sketchup::Face","path":"Sketchup::Face#get_texture_projection","type":"instance_method","visibility":"public","parameters":[["frontside",["Boolean"],"正面正确，反面错误。"]],"return":[["Geom::Vector3d"],"成功的矢量，失败的矢量nil。"]},"Sketchup::Face#loops":{"description":"loops方法用于获取绑定面的所有循环的数组。","name":"loops","namespace":"Sketchup::Face","path":"Sketchup::Face#loops","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Loop>"],"循环对象数组（如果成功）"]},"Sketchup::Face#material":{"description":"material方法用于检索指定给面的材质。（此方法继承自DrawingElement父类。）","name":"material","namespace":"Sketchup::Face","path":"Sketchup::Face#material","type":"instance_method","visibility":"public","return":[["Sketchup::Material","nil"],"表示面前面的材质的材质对象（如果成功）"]},"Sketchup::Face#material=":{"description":"material=方法用于设置指定给面的正面的材质。（此方法继承自DrawingElement父类。）","name":"material=","namespace":"Sketchup::Face","path":"Sketchup::Face#material=","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material"],"材质对象或有效材质的名称。"]],"return":[["Sketchup::Material"],"有效材质或新材质对象的名称（如果成功）"]},"Sketchup::Face#mesh":{"description":"mesh方法创建一个表示面的多边形网格。有关更多信息，请参见{Geom::PolygonMesh}类。\\n \\n有效标志是：\\n \\n-+0+：包括PolygonMeshPoints、\\n-+1+：包括多边形网格UVQ前、\\n-+2+：包括多边形网格UVQ后、\\n-+4+：包括PolygonMeshNormals。\\n \\n使用按位或组合标志。例如，值+7+将包括所有标志。","name":"mesh","namespace":"Sketchup::Face","path":"Sketchup::Face#mesh","type":"instance_method","visibility":"public","parameters":[["flags",["Integer"],"用于生成网格的一个或多个标志。"]],"return":[["Geom::PolygonMesh"],""]},"Sketchup::Face#normal":{"description":"normal方法用于检索垂直于正面的三维矢量。","name":"normal","namespace":"Sketchup::Face","path":"Sketchup::Face#normal","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"如果成功，则为Vector3d对象"]},"Sketchup::Face#outer_loop":{"description":"此方法用于检索限定面的外部循环。","name":"outer_loop","namespace":"Sketchup::Face","path":"Sketchup::Face#outer_loop","type":"instance_method","visibility":"public","return":[["Sketchup::Loop"],"表示外部循环的循环对象（如果成功）"]},"Sketchup::Face#plane":{"description":"plane方法用于检索面平面。有关如何存储平面的信息，请参见数组类。","name":"plane","namespace":"Sketchup::Face","path":"Sketchup::Face#plane","type":"instance_method","visibility":"public","return":[["Array(Float, Float, Float, Float)"],"包含面的平面（如果成功）"]},"Sketchup::Face#position_material":{"description":"position_material方法用于将材料放置在面上。\\n \\n pt_array必须包含2、4、6或8点。这些点成对使用，以指示纹理图像中的点在面上的位置。每对中的第一个点是模型中的三维点。它应该是脸上的一个点。每对点中的第二个点是一个二维点，它给出图像中一个点的（u，v）坐标，以便与三维点匹配。","name":"position_material","namespace":"Sketchup::Face","path":"Sketchup::Face#position_material","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material"],"物质对象。"],["pt_array",["Array<Geom::Point3d>"],"用于定位材料的Point3d个对象的数组。"],["o_front",["Boolean"],"如果将纹理放置在脸的前面，则为true；如果将纹理放置在脸的后面，则为false。"]],"return":[["Sketchup::Face","FalseClass"],"成功时的面孔，失败时的错误。"]},"Sketchup::Face#pushpull":{"description":"pushpull方法用于在面上执行推/拉操作。\\n \\n距离是以面法向指向的方向测量的。","name":"pushpull","namespace":"Sketchup::Face","path":"Sketchup::Face#pushpull","type":"instance_method","visibility":"public","parameters":[["distance",["Numeric"],"以当前单位表示的推/拉面距离。"],["copy",["Boolean"],"如果为真，则创建新的推/拉起始面（相当于在SketchUp中按CTRL），如果为假，则不创建推/拉起始面。"]],"return":[["nil"],""]},"Sketchup::Face#reverse!":{"description":"reverse!方法用于反转面的方向，也就是说前面变成后面。","name":"reverse!","namespace":"Sketchup::Face","path":"Sketchup::Face#reverse!","type":"instance_method","visibility":"public","return":[["Sketchup::Face","FalseClass"],"反转面对象如果成功，则为假"]},"Sketchup::Face#set_texture_projection":{"description":"set_texture_projection方法用于设置纹理投影方向。","name":"set_texture_projection","namespace":"Sketchup::Face","path":"Sketchup::Face#set_texture_projection","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],"表示投影的方向。使用nil \\n移除投影。"],["frontside",["Boolean"],"正面正确，反面错误。"]],"return":[["Boolean"],"成真"]},"Sketchup::Face#vertices":{"description":"vertices方法用于获取绑定面的所有顶点的数组。","name":"vertices","namespace":"Sketchup::Face","path":"Sketchup::Face#vertices","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Vertex>"],"顶点对象数组（如果成功）"]},"Sketchup::Face::PointInside":{"description":"常量","name":"PointInside","namespace":"Sketchup::Face","path":"Sketchup::Face::PointInside","type":"constant","return":null,"visibility":"public"},"Sketchup::Face::PointNotOnPlane":{"description":"存根值。","name":"PointNotOnPlane","namespace":"Sketchup::Face","path":"Sketchup::Face::PointNotOnPlane","type":"constant","return":null,"visibility":"public"},"Sketchup::Face::PointOnEdge":{"description":"存根值。","name":"PointOnEdge","namespace":"Sketchup::Face","path":"Sketchup::Face::PointOnEdge","type":"constant","return":null,"visibility":"public"},"Sketchup::Face::PointOnFace":{"description":"存根值。","name":"PointOnFace","namespace":"Sketchup::Face","path":"Sketchup::Face::PointOnFace","type":"constant","return":null,"visibility":"public"},"Sketchup::Face::PointOnVertex":{"description":"存根值。","name":"PointOnVertex","namespace":"Sketchup::Face","path":"Sketchup::Face::PointOnVertex","type":"constant","return":null,"visibility":"public"},"Sketchup::Face::PointOutside":{"description":"存根值。","name":"PointOutside","namespace":"Sketchup::Face","path":"Sketchup::Face::PointOutside","type":"constant","return":null,"visibility":"public"},"Sketchup::Face::PointUnknown":{"description":"存根值。","name":"PointUnknown","namespace":"Sketchup::Face","path":"Sketchup::Face::PointUnknown","type":"constant","return":null,"visibility":"public"},"Sketchup::FrameChangeObserver":{"description":"这个观测器接口被实现来对一个场景页面和另一个场景页面之间的摄像机位置（帧）的变化做出反应。当用户手动更改场景或运行内部动画功能时，调用此操作员的回调方法。\\n \\n此抽象观察者是任何使用3个参数实现回调方法+frameChange+的对象：+from_scene+（从中转换的场景）、+to_scene+（向中转换的场景）和+percent_done+（在+0.0+和+1.0+之间）（表示两个场景之间转换的百分比）。\\n \n  # Basic Class Definition:\n  class MyFrameChangeObserver\n    def frameChange(from_scene, to_scene, percent_done)\n     # Actual code here.\n    end\n  end\n \\n观察者被附加到我们创建SketchUp:：Pages.Add_Frame_Change_Observer类方法，该方法返回一个可存储的整数ID，稍后用于分离观察者。\\n \n  # Attach an observer to the global Pages object:\n  @id = Sketchup::Pages.add_frame_change_observer(MyFrameChangeObserver.new)\n \\n稍后，通过将此+id+引用传递给SketchUp:：Pages来分离此观察者。删除Frame Change Observer Class方法。\\n \n  # Basic Observer Detachment:\n sketchup:：pages.remove_frame_change_observer（@id）","name":"FrameChangeObserver","namespace":"Sketchup","path":"Sketchup::FrameChangeObserver","type":"class","visibility":"public"},"Sketchup::FrameChangeObserver#frameChange":{"description":"此回调方法是在幻灯片放映或动画创建过程中调用的，该过程是在设置好相机后，但在显示帧之前进行的。它让你有机会在动画中执行自己的动作。+frameChange+方法的参数是从（+from_scene+）过渡到（+to_scene+）的场景页，以及从+0.0+到+1.0+之间的+percent_done+，它告诉您两个场景页之间过渡的百分比。\\n \\n通过观察+完成百分比>=1.0+，您可以激活Ruby代码，该代码在用户的相机完成动画制作后立即执行。","name":"frameChange","namespace":"Sketchup::FrameChangeObserver","path":"Sketchup::FrameChangeObserver#frameChange","type":"instance_method","visibility":"public","parameters":[["to_scene",["Sketchup::Page"],"视图正在转换到的选定场景页面。"],["from_scene",["Sketchup::Page","nil"],"视图正在从上一个场景页转换。"],["percent_done",["Float"],"两个场景页面之间的转换百分比。"]],"return":[["void"],"值可以是任何内容，但被SketchUp忽略。"]},"Sketchup::Group":{"description":"Group类包含用于操作实体组的方法。\\n \\n SketchUp中的组与组件非常相似，只是没有组的实例。这意味着你总是会有一个而且只有一个你的小组。（在实际的实现中，SketchUp将组作为一种特殊的组件进行跟踪，它将定义和实例的属性结合在一起，这就是为什么您将看到诸如group.make_unique之类的弃用方法，并且您附加到组中的观察者类是ComponentInstance个观察者。）","name":"Group","namespace":"Sketchup","path":"Sketchup::Group","type":"class","visibility":"public"},"Sketchup::Group#add_observer":{"description":"add_observer方法用于向组中添加ComponentInstance观察者。","name":"add_observer","namespace":"Sketchup::Group","path":"Sketchup::Group#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Group#copy":{"description":"copy方法用于创建一个新的组对象，该对象是组的副本。","name":"copy","namespace":"Sketchup::Group","path":"Sketchup::Group#copy","type":"instance_method","visibility":"public","return":[["Sketchup::Group"],"新的组对象"]},"Sketchup::Group#definition":{"description":"definition方法用于检索此组的组件定义。","name":"definition","namespace":"Sketchup::Group","path":"Sketchup::Group#definition","type":"instance_method","visibility":"public","return":[["Sketchup::ComponentDefinition"],"如果成功，则为ComponentDefinition对象"]},"Sketchup::Group#description":{"description":"description方法用于检索组的描述。","name":"description","namespace":"Sketchup::Group","path":"Sketchup::Group#description","type":"instance_method","visibility":"public","return":[["String"],"字符串说明（如果成功）"]},"Sketchup::Group#description=":{"description":"description=方法用于设置组的描述。","name":"description=","namespace":"Sketchup::Group","path":"Sketchup::Group#description=","type":"instance_method","visibility":"public","parameters":[["description",["String"],"字符串描述。"]],"return":[["String"],"成功后的新描述"]},"Sketchup::Group#entities":{"description":"entities方法用于检索组中的实体集合。","name":"entities","namespace":"Sketchup::Group","path":"Sketchup::Group#entities","type":"instance_method","visibility":"public","return":[["Sketchup::Entities"],"如果成功，则为实体对象"]},"Sketchup::Group#equals?":{"description":"equals?方法用于确定一个组在几何上是否等同于另一个组。","name":"equals?","namespace":"Sketchup::Group","path":"Sketchup::Group#equals?","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group"],"要与之比较的组。"]],"return":[["Boolean"],"如果组在几何上相等，则为真。否则为假。"]},"Sketchup::Group#explode":{"description":"explode方法用于将组分解为单个实体。","name":"explode","namespace":"Sketchup::Group","path":"Sketchup::Group#explode","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Drawingelement>"],"实体对象数组（如果成功），如果不成功则为false。"]},"Sketchup::Group#guid":{"description":"guid方法用于获取此SketchUp对象的Base 64编码的唯一ID。","name":"guid","namespace":"Sketchup::Group","path":"Sketchup::Group#guid","type":"instance_method","visibility":"public","return":[["String"],"唯一的22个字符的字符串"]},"Sketchup::Group#intersect":{"description":"intersect方法用于计算两组表示流形实体体积（this&arg）的布尔交集。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"intersect","namespace":"Sketchup::Group","path":"Sketchup::Group#intersect","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"与此组相交的组。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则为结果组。否则返回nil。"]},"Sketchup::Group#local_bounds":{"description":"local_bounds方法返回BoundingBox对象，该对象定义了处于未转换状态的组的大小。用于确定组的原始宽度、高度和深度，而不考虑组的当前位置或比例。对于组件，您可以通过检查my_instance.definition.bounds获得类似的结果。","name":"local_bounds","namespace":"Sketchup::Group","path":"Sketchup::Group#local_bounds","type":"instance_method","visibility":"public","return":[["Geom::BoundingBox"],"BoundingBox对象"]},"Sketchup::Group#locked=":{"description":"locked=方法用于锁定组。","name":"locked=","namespace":"Sketchup::Group","path":"Sketchup::Group#locked=","type":"instance_method","visibility":"public","parameters":[["lock",["Boolean"],""]],"return":[["Boolean"],"如果组被锁定，则为true；否则为false"]},"Sketchup::Group#locked?":{"description":"locked?方法用于确定组是否被锁定。","name":"locked?","namespace":"Sketchup::Group","path":"Sketchup::Group#locked?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果组被锁定，则为true；否则为false。"]},"Sketchup::Group#make_unique":{"description":"make_unique方法用于强制组具有唯一定义。\\n \\n使用SketchUp中的复制工具复制组将创建共享公共定义的组的副本，直到手动编辑实例或使用此方法。如果制作多个副本，所有副本共享一个定义，直到手动编辑所有副本，或者所有副本都使用此方法。此方法确保组在图形数据库中使用唯一的定义条目。","name":"make_unique","namespace":"Sketchup::Group","path":"Sketchup::Group#make_unique","type":"instance_method","visibility":"public","return":[["Sketchup::Group"],"独特的群体"]},"Sketchup::Group#manifold?":{"description":"manifold?方法用于确定组是否为流形。","name":"manifold?","namespace":"Sketchup::Group","path":"Sketchup::Group#manifold?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果组是多变量的，则为真。\\n如果组不是manifold，则为false。"]},"Sketchup::Group#move!":{"description":"move!方法用于对组应用转换。\\n \\n此方法与转换相同！方法，但它不记录撤消操作中的移动。此方法对于在动画期间透明地移动对象很有用。","name":"move!","namespace":"Sketchup::Group","path":"Sketchup::Group#move!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"转换对象。"]],"return":[["Sketchup::Group"],"如果成功，则转换的组对象"]},"Sketchup::Group#name":{"description":"name方法用于检索组的名称。","name":"name","namespace":"Sketchup::Group","path":"Sketchup::Group#name","type":"instance_method","visibility":"public","return":[["String"],"成功时的组名"]},"Sketchup::Group#name=":{"description":"name=方法用于设置组的描述。","name":"name=","namespace":"Sketchup::Group","path":"Sketchup::Group#name=","type":"instance_method","visibility":"public","parameters":[["name",["String"],"字符串名称。"]],"return":[["String"],"如果成功，则为新名称"]},"Sketchup::Group#outer_shell":{"description":"outer_shell方法用于计算表示流形固体体积的两组的外壳（此arg）。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"outer_shell","namespace":"Sketchup::Group","path":"Sketchup::Group#outer_shell","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"这个组以外壳这个组。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::Group#remove_observer":{"description":"remove_observer方法用于从组中删除ComponentInstance观察者。","name":"remove_observer","namespace":"Sketchup::Group","path":"Sketchup::Group#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Group#show_differences":{"description":"show_differences方法用于确定一个组在几何上是否与另一个组等效，此外，将不匹配和匹配的几何体移动到新层。\\n \\n此方法将两个组移动到Layer0。两组中相同的几何图形将移动到名为group_name+的新图层“相同”。\\n不同的几何图形将移动到名为group_name+\\n“_diff”的层。\\n \\n如果verbose为true，则Ruby控制台中将以纹理方式显示不同组的所有几何图形的列表。","name":"show_differences","namespace":"Sketchup::Group","path":"Sketchup::Group#show_differences","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"要与之比较的组。"],["verbose",["Boolean"],"一个布尔标志，指示是否向Ruby控制台显示发现的差异的纹理报告。"]],"return":[["Boolean"],"如果组在几何上相等，则为真。否则为假。"]},"Sketchup::Group#split":{"description":"split方法用于计算表示流形实体体积（此^参数）的两个组的布尔拆分（映射覆盖）。如果指定的对象（this和arg）不表示流形卷，则此方法失败。\\n \n  if the two objects (this and arg) represent manifold\n  solids and the operation succeeds otherwise nil is\n  returned. The 3 groups are as follows:\n  The intersection of volume 1 & volume 2,\n  the difference of volume 1 minus volume 2,\n，第2卷减去第1卷的反向差。","name":"split","namespace":"Sketchup::Group","path":"Sketchup::Group#split","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"要拆分此组的组。"]],"return":[["Array(Sketchup::Group, Sketchup::Group, Sketchup::Group)","nil"],"三个合成群的向量（数组）"]},"Sketchup::Group#subtract":{"description":"subtract方法用于计算表示流形实体体积的两组（此参数）的布尔差。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"subtract","namespace":"Sketchup::Group","path":"Sketchup::Group#subtract","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"要从中减去此组的组。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则为结果组。否则返回nil。"]},"Sketchup::Group#to_component":{"description":"to_component方法用于将组转换为组件实例。","name":"to_component","namespace":"Sketchup::Group","path":"Sketchup::Group#to_component","type":"instance_method","visibility":"public","return":[["Sketchup::ComponentInstance"],"新的ComponentInstance对象"]},"Sketchup::Group#transform!":{"description":"transform!方法用于对组应用转换。","name":"transform!","namespace":"Sketchup::Group","path":"Sketchup::Group#transform!","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"转换对象。"]],"return":[["Sketchup::Group"],"成功时转换的组对象"]},"Sketchup::Group#transformation":{"description":"transformation方法用于检索组的转换。","name":"transformation","namespace":"Sketchup::Group","path":"Sketchup::Group#transformation","type":"instance_method","visibility":"public","return":[["Geom::Transformation"],"转换对象（如果成功）"]},"Sketchup::Group#transformation=":{"description":"transformation=方法用于设置组的转换。","name":"transformation=","namespace":"Sketchup::Group","path":"Sketchup::Group#transformation=","type":"instance_method","visibility":"public","parameters":[["transform",["Geom::Transformation"],"要应用的转换对象"]],"return":[["Geom::Transformation"],"应用的转换"]},"Sketchup::Group#trim":{"description":"trim方法用于计算表示流形实体体积（此参数）的两个组的（非破坏性）布尔差。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"trim","namespace":"Sketchup::Group","path":"Sketchup::Group#trim","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"要修剪此组的组。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则返回结果组，否则返回nil。"]},"Sketchup::Group#union":{"description":"union方法用于计算表示流形实体体积的两组的布尔并集（此arg）。如果指定的对象（this和arg）不表示流形卷，则此方法失败。","name":"union","namespace":"Sketchup::Group","path":"Sketchup::Group#union","type":"instance_method","visibility":"public","parameters":[["group",["Sketchup::Group","Sketchup::ComponentInstance"],"要与此组联合的组。"]],"return":[["Sketchup::Group","nil"],"如果两个对象（this和arg）表示多个实体并且操作成功，则为结果组。否则返回nil。"]},"Sketchup::Group#volume":{"description":"volume方法用于计算该组的体积，如果且仅当该组是多组时。","name":"volume","namespace":"Sketchup::Group","path":"Sketchup::Group#volume","type":"instance_method","visibility":"public","return":[["Float"],"如果该组表示一个流形卷，那么卷将是一个正值。如果volume为负数，则组不是manifold。"]},"Sketchup::Http":{"description":"{Sketchup::Http}模块提供创建异步HTTP请求的接口。这是RubyStdLib随附的NET:：HTTP模块的一个替代方案——众所周知，RubyStdLib在SketchUp中存在问题。","name":"Http","namespace":"Sketchup","path":"Sketchup::Http","type":"module","visibility":"public"},"Sketchup::Http::DELETE":{"description":"常量","name":"DELETE","namespace":"Sketchup::Http","path":"Sketchup::Http::DELETE","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::GET":{"description":"存根值。","name":"GET","namespace":"Sketchup::Http","path":"Sketchup::Http::GET","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::HEAD":{"description":"存根值。","name":"HEAD","namespace":"Sketchup::Http","path":"Sketchup::Http::HEAD","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::OPTIONS":{"description":"存根值。","name":"OPTIONS","namespace":"Sketchup::Http","path":"Sketchup::Http::OPTIONS","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::PATCH":{"description":"存根值。","name":"PATCH","namespace":"Sketchup::Http","path":"Sketchup::Http::PATCH","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::POST":{"description":"存根值。","name":"POST","namespace":"Sketchup::Http","path":"Sketchup::Http::POST","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::PUT":{"description":"存根值。","name":"PUT","namespace":"Sketchup::Http","path":"Sketchup::Http::PUT","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::Request":{"description":"HTTP:：Request对象允许您向HTTP服务器发送HTTP请求。","name":"Request","namespace":"Sketchup::Http","path":"Sketchup::Http::Request","type":"class","visibility":"public"},"Sketchup::Http::Request#body":{"description":"获取发送请求时要使用的HTTP主体。","name":"body","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#body","type":"instance_method","visibility":"public","return":[["String"],""]},"Sketchup::Http::Request#body=":{"description":"设置发送请求时要使用的HTTP主体。","name":"body=","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#body=","type":"instance_method","visibility":"public","parameters":[["body",["String"],"包含正文的字符串。"]],"return":[["String"],""]},"Sketchup::Http::Request#cancel":{"description":"取消请求。","name":"cancel","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#cancel","type":"instance_method","visibility":"public","return":[["true"],""]},"Sketchup::Http::Request#headers":{"description":"返回发送请求时要使用的HTTP头。","name":"headers","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#headers","type":"instance_method","visibility":"public","return":[["Hash"],""]},"Sketchup::Http::Request#headers=":{"description":"设置发送请求时要使用的HTTP头。","name":"headers=","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#headers=","type":"instance_method","visibility":"public","parameters":[["headers",["Hash"],"键/值对哈希。"]],"return":[["Boolean"],""]},"Sketchup::Http::Request#initialize":{"description":"new方法用于创建新的SketchUp:：http:：Request。\\n \\n预设通讯埠为80，若要使用不同的通讯埠，请在\\n建立新的http:：request时在URL中定义它\\n \\n为确保使用回应，必须保留对要求的参考。\\n \\n +method+参数接受任何自定义HTTP方法或下列方法之一：\\n*+SketchUp:：http:：get+\\n*+SketchUp:：http:：POST+\\n*+SketchUp:：http:：put+\\n*+SketchUp:：http:：DELETE+\\n*+SketchUp:：http:：HEAD+\\n*+SketchUp:：http:：OPTIONS+","name":"initialize","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#initialize","type":"instance_method","visibility":"public","parameters":[["url",["String"],"目标URL。"],["method",["String"],"或者，要使用的请求方法，默认值为sketchUp:：http:：get"]],"return":[["Request"],""]},"Sketchup::Http::Request#method":{"description":"返回发送请求时要使用的HTTP方法。","name":"method","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#method","type":"instance_method","visibility":"public","return":[["String"],""]},"Sketchup::Http::Request#method=":{"description":"设置发送请求时要使用的HTTP方法。\\n该值可以是任何自定义HTTP方法，也可以是以下方法之一：\\n*+SketchUp:：http:：get+\\n*+SketchUp:：http:：POST+\\n*+SketchUp:：http:：put+\\n*+SketchUp:：http:：DELETE+\\n*+SketchUp:：http:：HEAD+\\n*+SketchUp:：http:：OPTIONS+","name":"method=","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#method=","type":"instance_method","visibility":"public","parameters":[["method",["String"],"包含HTTP方法名的字符串。"]],"return":[["Boolean"],""]},"Sketchup::Http::Request#set_download_progress_callback":{"description":"添加一个下载进度回调块，每次我们从服务器收到数据时都会调用该块，直到下载完成。","name":"set_download_progress_callback","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#set_download_progress_callback","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Http::Request#set_upload_progress_callback":{"description":"添加上载进度回调块，每次我们将数据上载到服务器时都会调用该块，直到上载完成。","name":"set_upload_progress_callback","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#set_upload_progress_callback","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Http::Request#start":{"description":"启动请求并可选择添加回调块。","name":"start","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#start","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Http::Request#status":{"description":"返回内部状态代码。它可以是下列之一：\\n*+SketchUp:：http:：STATUS_UNKNOWN+\\n*+SketchUp:：http:：STATUS_SUCCESS+\\n*+SketchUp:：http:：STATUS_PENDING+\\n*+SketchUp:：http:：STATUS_CANCELED+\\n*+SketchUp:：http:：STATUS_FAILED+","name":"status","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#status","type":"instance_method","visibility":"public","return":[["int"],""]},"Sketchup::Http::Request#url":{"description":"返回请求的URL副本。","name":"url","namespace":"Sketchup::Http::Request","path":"Sketchup::Http::Request#url","type":"instance_method","visibility":"public","return":[["String"],""]},"Sketchup::Http::Response":{"description":"HTTP:：Response对象允许您从服务器获取响应信息，只有在从HTTP:：Request对象调用Start时附加了回调块，才能接收HTTP:：Response。","name":"Response","namespace":"Sketchup::Http","path":"Sketchup::Http::Response","type":"class","visibility":"public"},"Sketchup::Http::Response#body":{"description":"获取从服务器接收的HTTP正文，该正文是使用服务器响应的内容类型中提供的字符集编码的字符串，如果未指定字符集，则将使用ASCII-8bit。","name":"body","namespace":"Sketchup::Http::Response","path":"Sketchup::Http::Response#body","type":"instance_method","visibility":"public","return":[["String"],""]},"Sketchup::Http::Response#headers":{"description":"返回服务器发送的HTTP头。","name":"headers","namespace":"Sketchup::Http::Response","path":"Sketchup::Http::Response#headers","type":"instance_method","visibility":"public","return":[["Hash"],""]},"Sketchup::Http::Response#status_code":{"description":"返回rfc2616中定义的HTTP响应状态代码。","name":"status_code","namespace":"Sketchup::Http::Response","path":"Sketchup::Http::Response#status_code","type":"instance_method","visibility":"public","return":[["int"],""]},"Sketchup::Http::STATUS_CANCELED":{"description":"存根值。","name":"STATUS_CANCELED","namespace":"Sketchup::Http","path":"Sketchup::Http::STATUS_CANCELED","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::STATUS_FAILED":{"description":"存根值。","name":"STATUS_FAILED","namespace":"Sketchup::Http","path":"Sketchup::Http::STATUS_FAILED","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::STATUS_PENDING":{"description":"存根值。","name":"STATUS_PENDING","namespace":"Sketchup::Http","path":"Sketchup::Http::STATUS_PENDING","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::STATUS_SUCCESS":{"description":"存根值。","name":"STATUS_SUCCESS","namespace":"Sketchup::Http","path":"Sketchup::Http::STATUS_SUCCESS","type":"constant","return":null,"visibility":"public"},"Sketchup::Http::STATUS_UNKNOWN":{"description":"存根值。","name":"STATUS_UNKNOWN","namespace":"Sketchup::Http","path":"Sketchup::Http::STATUS_UNKNOWN","type":"constant","return":null,"visibility":"public"},"Sketchup::Image":{"description":"图像对象表示放置在模型中的光栅图像。","name":"Image","namespace":"Sketchup","path":"Sketchup::Image","type":"class","visibility":"public"},"Sketchup::Image#explode":{"description":"explode方法用于将图像分解为具有纹理的面。\\n \\n请注意，当前版本的SketchUp将在此处返回空数组。\\n若要解决此限制，可以对实体集合进行迭代，以确定创建了哪些新实体。\\n \\n SketchUp 2015之前的版本由于错误返回空数组。","name":"explode","namespace":"Sketchup::Image","path":"Sketchup::Image#explode","type":"instance_method","visibility":"public","return":[null,"EntitiesArray-如果成功，则为实体的数组对象"]},"Sketchup::Image#height":{"description":"height方法用于检索图像的高度。\\n \\n高度以英寸为单位。","name":"height","namespace":"Sketchup::Image","path":"Sketchup::Image#height","type":"instance_method","visibility":"public","return":[null,"高度-成功时模型的高度"]},"Sketchup::Image#height=":{"description":"height=方法用于设置图像的高度。\\n \\n高度以英寸为单位设置。","name":"height=","namespace":"Sketchup::Image","path":"Sketchup::Image#height=","type":"instance_method","visibility":"public","parameters":[["height",null,"设置图像的高度（以英寸为单位）。"]],"return":[null,"高度-成功后的新高度"]},"Sketchup::Image#normal":{"description":"normal方法用于检索垂直于图像平面的三维矢量。","name":"normal","namespace":"Sketchup::Image","path":"Sketchup::Image#normal","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::Image#origin":{"description":"origin方法用于检索定义图像原点的三维点。","name":"origin","namespace":"Sketchup::Image","path":"Sketchup::Image#origin","type":"instance_method","visibility":"public","return":[null,"点-包含原点位置的Point3d对象\\n如果成功"]},"Sketchup::Image#origin=":{"description":"origin=方法用于将三维点设置为图像的原点。","name":"origin=","namespace":"Sketchup::Image","path":"Sketchup::Image#origin=","type":"instance_method","visibility":"public","parameters":[["point",null,"具有新原点的Point3d对象。"]],"return":[null,"点-表示新建立原点的Point3d对象（如果成功）"]},"Sketchup::Image#path":{"description":"path方法用于检索定义图像的文件的路径。","name":"path","namespace":"Sketchup::Image","path":"Sketchup::Image#path","type":"instance_method","visibility":"public","return":[null,"path-图像文件的路径（如果成功）"]},"Sketchup::Image#pixelheight":{"description":"pixelheight方法用于检索图像文件的高度（以像素为单位）。","name":"pixelheight","namespace":"Sketchup::Image","path":"Sketchup::Image#pixelheight","type":"instance_method","visibility":"public","return":[null,"height-如果成功，图像的高度（以像素为单位）"]},"Sketchup::Image#pixelwidth":{"description":"pixelwidth方法用于检索图像文件的宽度（以像素为单位）。","name":"pixelwidth","namespace":"Sketchup::Image","path":"Sketchup::Image#pixelwidth","type":"instance_method","visibility":"public","return":[null,"宽度-如果成功，图像的宽度（以像素为单位）"]},"Sketchup::Image#size=":{"description":"size=方法用于设置图像的宽度和高度，单位为英寸。","name":"size=","namespace":"Sketchup::Image","path":"Sketchup::Image#size=","type":"instance_method","visibility":"public","parameters":[["width",null,"图像的宽度。"],["height",null,"图像的高度。"]],"return":[null,"大小-图像的新宽度和高度（如果成功）"]},"Sketchup::Image#transform!":{"description":"transform!方法用于对图像应用转换。","name":"transform!","namespace":"Sketchup::Image","path":"Sketchup::Image#transform!","type":"instance_method","visibility":"public","parameters":[["transform",null,"转换对象。"]],"return":[null,"image-成功时转换的image对象"]},"Sketchup::Image#transformation":{"description":"transformation方法用于检索图像的转换。","name":"transformation","namespace":"Sketchup::Image","path":"Sketchup::Image#transformation","type":"instance_method","visibility":"public","return":[null,"转换-成功时转换对象"]},"Sketchup::Image#transformation=":{"description":"transformation=方法用于设置图像的转换。","name":"transformation=","namespace":"Sketchup::Image","path":"Sketchup::Image#transformation=","type":"instance_method","visibility":"public","parameters":[["transform",null,"要应用的转换对象"]],"return":[null,"图像-新转换的图像"]},"Sketchup::Image#width":{"description":"width方法用于检索图像的宽度。\\n \\n宽度以英寸为单位。","name":"width","namespace":"Sketchup::Image","path":"Sketchup::Image#width","type":"instance_method","visibility":"public","return":[null,"宽度-如果成功，图像的宽度"]},"Sketchup::Image#width=":{"description":"width=方法用于设置图像的宽度。\\n \\n宽度以英寸为单位设置。","name":"width=","namespace":"Sketchup::Image","path":"Sketchup::Image#width=","type":"instance_method","visibility":"public","parameters":[["width",null,"设置图像的宽度（以英寸为单位）。"]],"return":[null,"宽度-成功时的新宽度"]},"Sketchup::Image#zrotation":{"description":"zrotation方法用于获取图像从任意X轴绕法向量旋转的角度。","name":"zrotation","namespace":"Sketchup::Image","path":"Sketchup::Image#zrotation","type":"instance_method","visibility":"public","return":[null,"vector-如果成功，则为Vector3d对象"]},"Sketchup::Importer":{"description":"导入器接口允许您为SketchUp构建自己的导入器。要使用它，您需要创建导入程序的子类并实现下面描述的所有方法。这将使导入程序显示在用户在“文件>导入”下看到的列表中，您可以使用Ruby完成打开文件和在SketchUp中创建所需内容的所有工作。\\n \\n下面是导入.txt文件并在消息框中显示其内容的完整脚本的示例。","name":"Importer","namespace":"Sketchup","path":"Sketchup::Importer","type":"class","visibility":"public"},"Sketchup::Importer#description":{"description":"SketchUp调用此方法以确定显示在“文件>导入”对话框的有效导入程序下拉列表中的描述。\\n \\n虽然描述通常包含导入程序支持的文件扩展名（例如“文本导入程序（.txt）”），但实际扩展名是在file_extension方法中定义的。","name":"description","namespace":"Sketchup::Importer","path":"Sketchup::Importer#description","type":"instance_method","visibility":"public","return":[null,"描述-一个简短的字符串描述"]},"Sketchup::Importer#do_options":{"description":"当用户单击“文件>导入”对话框中的“选项”按钮时，SketchUp将调用此方法。您可以使用它来收集和存储导入程序的设置。\\n \\n仅当导入程序支持选项时适用，这意味着其supports_options方法返回true。","name":"do_options","namespace":"Sketchup::Importer","path":"Sketchup::Importer#do_options","type":"instance_method","visibility":"public","return":[null,"ID-ID字符串"]},"Sketchup::Importer#file_extension":{"description":"SketchUp调用此方法以确定与导入程序关联的单个文件扩展名。只有与此扩展名匹配的文件才会在用户浏览其硬盘以查找要导入的内容时显示给用户。\\n \\n ruby导入程序只允许支持单个扩展。","name":"file_extension","namespace":"Sketchup::Importer","path":"Sketchup::Importer#file_extension","type":"instance_method","visibility":"public","return":[null,"扩展名-通常为3个字母的字符串"]},"Sketchup::Importer#id":{"description":"SketchUp调用此方法以确定导入程序的唯一标识符，通常类似于“com.sketchUp.importers.dxf”。","name":"id","namespace":"Sketchup::Importer","path":"Sketchup::Importer#id","type":"instance_method","visibility":"public","return":[null,"ID-ID字符串"]},"Sketchup::Importer#load_file":{"description":"用户选择要导入的文件后，SketchUp将调用此方法。这就是您通过Ruby的文件对象打开文件并以您需要的任何方式处理它来完成真正的工作的地方。\\n \\n完成后，必须将整数成功代码返回到SketchUp。\\n这些是SketchUp理解的代码，以及当\\n SketchUp收到每个键时将发生的情况。\\n \n  - 0 = Import Success (no additional dialog shown)\n  - 1 = Import Failed (no additional dialog shown)\n  - 2 = Import Cancelled by User (SketchUp will show a \"cancelled\" dialog)\n  - 4 = Import File not Found (SketchUp will show a \"not found\" dialog)\n-5=不支持SketchUp版本（未显示其他对话框）","name":"load_file","namespace":"Sketchup::Importer","path":"Sketchup::Importer#load_file","type":"instance_method","visibility":"public","parameters":[["file_path",null,"用户所选文件的绝对路径"],["status",null,"到目前为止的导入状态。包含真。"]],"return":[null,"成功-一个整数状态代码。见上文。"]},"Sketchup::Importer#supports_options?":{"description":"SketchUp调用此方法以确定在选择导入程序时是否应启用“文件>导入”对话框中的“选项”按钮。","name":"supports_options?","namespace":"Sketchup::Importer","path":"Sketchup::Importer#supports_options?","type":"instance_method","visibility":"public","return":[["Boolean"],"支持\\选项-布尔值"]},"Sketchup::Importer::ImportCanceled":{"description":"常量","name":"ImportCanceled","namespace":"Sketchup::Importer","path":"Sketchup::Importer::ImportCanceled","type":"constant","return":null,"visibility":"public"},"Sketchup::Importer::ImportFail":{"description":"存根值。","name":"ImportFail","namespace":"Sketchup::Importer","path":"Sketchup::Importer::ImportFail","type":"constant","return":null,"visibility":"public"},"Sketchup::Importer::ImportFileNotFound":{"description":"存根值。","name":"ImportFileNotFound","namespace":"Sketchup::Importer","path":"Sketchup::Importer::ImportFileNotFound","type":"constant","return":null,"visibility":"public"},"Sketchup::Importer::ImportSuccess":{"description":"存根值。","name":"ImportSuccess","namespace":"Sketchup::Importer","path":"Sketchup::Importer::ImportSuccess","type":"constant","return":null,"visibility":"public"},"Sketchup::Importer::ImporterNotFound":{"description":"存根值。","name":"ImporterNotFound","namespace":"Sketchup::Importer","path":"Sketchup::Importer::ImporterNotFound","type":"constant","return":null,"visibility":"public"},"Sketchup::InputPoint":{"description":"InputPoint用于选择位于当前光标位置下的实体。InputPoint和PickHelper相似，但InputPoint也使用推断。只有工具对光标位置作出反应。因此，此类中的大多数方法仅在您正在编写的工具的上下文中有用。例如，如果您想确定刚刚用鼠标单击的实体，您可以在工具中的onMouseButton方法中使用InputPoint.pick。有关使用InputPoint类的示例，请参见示例脚本linetool.rb。","name":"InputPoint","namespace":"Sketchup","path":"Sketchup::InputPoint","type":"class","visibility":"public"},"Sketchup::InputPoint#==":{"description":"==方法用于确定两个输入点是否相同。","name":"==","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#==","type":"instance_method","visibility":"public","parameters":[["inputpoint2",null,"比较中的第二个输入点。"]],"return":[null,"状态-如果InputPoint对象是同一对象，则为真。如果对象不相同，则返回false。"]},"Sketchup::InputPoint#clear":{"description":"clear方法用于清除输入点。\\n \\n这会将其设置为空状态。打过电话后，有效吗？将返回\\n false。","name":"clear","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#clear","type":"instance_method","visibility":"public","return":[null,"输入点-如果成功，则为清除（空）的输入点"]},"Sketchup::InputPoint#copy!":{"description":"copy!方法用于将数据从第二个输入点复制到此输入点。","name":"copy!","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#copy!","type":"instance_method","visibility":"public","parameters":[["inputpoint",null,"第二个输入点。"]],"return":[null,"输入点-如果成功，则接收副本的新输入点"]},"Sketchup::InputPoint#degrees_of_freedom":{"description":"degrees_of_freedom方法检索输入点的自由度数。\\n \\n如果您只是在空间中获取一个点，那么degrees_of_freedom将是3-意味着没有任何关于该点的约束\\n其位置的内容。\\n \\n如果您在面上，则degrees_of_freedom将是2，这意味着您只能在面平面上移动。\\n \\n如果您位于边或轴上，则degrees_of_freedom将为1，这意味着您只能沿边或轴的方向移动。\\n \\n如果得到边的端点或交点，则degrees_of_freedom将为0。","name":"degrees_of_freedom","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#degrees_of_freedom","type":"instance_method","visibility":"public","return":[null,"自由度-见评论。"]},"Sketchup::InputPoint#depth":{"description":"depth方法检索来自组件的推理深度。\\n \\n如果InputPoint未从组件内部获取位置，则此方法将返回0。否则，它将返回提供位置的嵌套组件中实体的深度。","name":"depth","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#depth","type":"instance_method","visibility":"public","return":[null,"深度-表示输入点深度（组和组件内部）的数字（如果成功）"]},"Sketchup::InputPoint#display?":{"description":"display?方法用于确定输入点是否有任何要绘制的内容。\\n \\n如果方法返回true，则draw方法将绘制某些内容。","name":"display?","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#display?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果draw方法将绘制某些内容，则为true；如果draw方法没有要绘制的内容，则为false。"]},"Sketchup::InputPoint#draw":{"description":"draw方法用于绘制输入点。\\n \\n这对于在Ruby中实现的工具的draw方法中显示InputPoint很有用。其他示例可在Plugins/examples目录中找到。","name":"draw","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#draw","type":"instance_method","visibility":"public","parameters":[["view",null,"当前视图。"]],"return":[null,"看法"]},"Sketchup::InputPoint#edge":{"description":"edge方法用于在输入点从边缘上的点获取其位置时检索边缘。","name":"edge","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#edge","type":"instance_method","visibility":"public","return":[null,"边缘-成功时为边缘对象，不成功时为nil"]},"Sketchup::InputPoint#face":{"description":"如果输入点从面获取其位置，face方法将检索面。\\n \\n否则返回nil。","name":"face","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#face","type":"instance_method","visibility":"public","return":[null,"面-如果成功，则为面对象；如果不成功，则为nil。"]},"Sketchup::InputPoint#initialize":{"description":"new方法用于创建新的InputPoint对象。","name":"initialize","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#initialize","type":"instance_method","visibility":"public","parameters":[["pt_or_vertex",null,"可选的Point3d或应创建新InputPoint的顶点。"]],"return":[null,"输入点-如果成功，则新创建的InputPoint对象"]},"Sketchup::InputPoint#instance_path":{"description":"{#instance_path}方法检索所选点的实例路径。\\n \\n传回的instance_path是您存取时输入点所持内容的副本。如果使用输入点进行新的选择，您的副本将不会更新。\\n \\n如果没有有效的pick，它将返回'nil'。","name":"instance_path","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#instance_path","type":"instance_method","visibility":"public","return":[["Sketchup::InstancePath","nil"],""]},"Sketchup::InputPoint#pick":{"description":"pick方法用于获取特定屏幕位置的输入点。\\n \\n第一个窗体仅使用屏幕位置计算InputPoint。当您不希望InputPoint依赖于另一个InputPoint时，使用它。\\n \\n第二个窗体使用屏幕位置和另一个InputPoint。它将找到其他的推论，比如从第一个点沿着一个轴方向。","name":"pick","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#pick","type":"instance_method","visibility":"public","parameters":[["view",null,"当前视图。"],["x",null,"一个x值。"],["inputpoint",["optional"],"用作拾取参考的第二个输入点。"],["y",null,"一个y值。"]],"return":[null,"状态-如果选择了有效的InputPoint，并且它与以前不同，则为真。"]},"Sketchup::InputPoint#position":{"description":"position方法用于从输入点获取三维点。","name":"position","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#position","type":"instance_method","visibility":"public","return":[null,"点-输入点的Point3d对象位置（如果成功）"]},"Sketchup::InputPoint#tooltip":{"description":"tooltip方法用于检索为输入点显示的工具提示字符串。","name":"tooltip","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#tooltip","type":"instance_method","visibility":"public","return":[null,"提示-字符串工具提示或空字符串（如果输入点不提供工具提示）。"]},"Sketchup::InputPoint#transformation":{"description":"transformation方法检索输入点的转换对象。\\n \\n如果InputPoint对象从组件实例内的某个内容获取其位置，则此方法返回组件实例的转换。否则，它将返回标识转换。\\n \\n请注意，输入点上的position方法始终返回转换为模型空间的点。但是，如果在InputPoint上使用边、面或顶点方法，则可能需要使用转换方法来转换从选定实体返回的数据。","name":"transformation","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#transformation","type":"instance_method","visibility":"public","return":[null,"转换-如果成功，则转换输入点"]},"Sketchup::InputPoint#valid?":{"description":"valid?方法用于确定输入点是否具有有效数据。\\n \\n必须先调用pick方法来设置数据，然后数据才有效。","name":"valid?","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果输入点有有效数据，则为真；如果输入点没有有效数据，则为假。"]},"Sketchup::InputPoint#vertex":{"description":"vertex方法返回与InputPoint关联的顶点。如果InputPoint在一行的末尾，那么它将返回顶点。如果InputPoint没有选择任何顶点，则此方法返回nil。","name":"vertex","namespace":"Sketchup::InputPoint","path":"Sketchup::InputPoint#vertex","type":"instance_method","visibility":"public","return":[null,"顶点-关联顶点"]},"Sketchup::InstanceObserver":{"description":"这个观测器接口被实现来响应组件实例事件。若要实现此观察者，请创建此类型的Ruby类\\n重写所需的方法，并将该观察者的实例添加到感兴趣的对象中。\\n \\n请注意，您也可以将{Sketchup::InstanceObserver}s附加到{Sketchup::Group}s。","name":"InstanceObserver","namespace":"Sketchup","path":"Sketchup::InstanceObserver","type":"class","visibility":"public"},"Sketchup::InstanceObserver#onClose":{"description":"当实例“关闭”时调用{#onClose}方法，这意味着最终用户正在编辑组件的几何图形，然后退出到父级的编辑空间。","name":"onClose","namespace":"Sketchup::InstanceObserver","path":"Sketchup::InstanceObserver#onClose","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"刚刚关闭的实例"]],"return":[["nil"],""]},"Sketchup::InstanceObserver#onOpen":{"description":"当实例被“打开”时，将调用{#onOpen}方法，这意味着最终用户双击它来编辑其几何图形。如果插件是动态绘制几何图形或在全局空间中执行转换，则此功能尤其有用，因为当处于“编辑组件”模式时，所有转换和位置都会返回到当前组件的原点。\\n \\n此方法将告诉您用户何时进入编辑模式，然后您可以\\n使用{Sketchup::Model#active_path}和{Sketchup::Model#edit_transform}方法来确定对转换所需的任何更正。","name":"onOpen","namespace":"Sketchup::InstanceObserver","path":"Sketchup::InstanceObserver#onOpen","type":"instance_method","visibility":"public","parameters":[["instance",["Sketchup::ComponentInstance"],"打开的实例"]],"return":[["nil"],""]},"Sketchup::InstancePath":{"description":"{Sketchup::InstancePath}类表示模型层次结构中给定实体的实例路径。","name":"InstancePath","namespace":"Sketchup","path":"Sketchup::InstancePath","type":"class","visibility":"public"},"Sketchup::InstancePath#==":{"description":"","name":"==","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#==","type":"instance_method","visibility":"public","return":[["Boolean"],"`true`如果实例路径代表同一组实体。"]},"Sketchup::InstancePath#[]":{"description":"实例路径的元素可以像数组一样访问。","name":"[]","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#[]","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],null]],"return":[["Sketchup::Entity"],""]},"Sketchup::InstancePath#each":{"description":"生成的实体将以根开始，以叶结束。","name":"each","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::InstancePath#empty?":{"description":"","name":"empty?","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::InstancePath#include?":{"description":"如果实例路径包含给定对象，则返回“true”。","name":"include?","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#include?","type":"instance_method","visibility":"public","parameters":[["object",["Object"],null]],"return":[["Boolean"],""]},"Sketchup::InstancePath#initialize":{"description":"","name":"initialize","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#initialize","type":"instance_method","visibility":"public","parameters":[["path",["Array<Sketchup::Entity>"],"叶可以是任何实体，但其余的必须是组或组件实例。"]],"return":[["Sketchup::InstancePath"],""]},"Sketchup::InstancePath#leaf":{"description":"实例路径的叶是最后一个元素，它可以是模型中可以表示的任何实体。这通常是{Sketchup::Drawingelement}，但也可能是{Sketchup::Vertex}。\\n \\n实例也可以是叶。","name":"leaf","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#leaf","type":"instance_method","visibility":"public","return":[["Sketchup::Entity"],""]},"Sketchup::InstancePath#length":{"description":"{#length}是{#size}的别名。","name":"length","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::InstancePath#persistent_id_path":{"description":"实例路径的序列化版本是与句点连接的实体的持久ID。","name":"persistent_id_path","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#persistent_id_path","type":"instance_method","visibility":"public","return":[["String"],""]},"Sketchup::InstancePath#root":{"description":"实例路径的根是最接近模型根的元素。这将是一个组或组件实例。如果将非实例作为没有其他父组件的叶，则返回“nil”。","name":"root","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#root","type":"instance_method","visibility":"public","return":[["Sketchup::Group","Sketchup::ComponentInstance","nil"],""]},"Sketchup::InstancePath#size":{"description":"","name":"size","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::InstancePath#to_a":{"description":"","name":"to_a","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#to_a","type":"instance_method","visibility":"public","return":[["Array"],"表示实例路径的数组。"]},"Sketchup::InstancePath#transformation":{"description":"重载transformation\n  @return [Sketchup::Transformation] the combined transformation up to the\n叶实体。","name":"transformation","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#transformation","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],null]],"return":[["Sketchup::Transformation"],"到给定索引的组合转换。"]},"Sketchup::InstancePath#valid?":{"description":"如果实例路径至少有一个元素，并且由组和实例组成，则该路径有效，但叶除外，叶可以是任何实体。\\n \\n此方法不检查是否可以在模型中实际查找路径。","name":"valid?","namespace":"Sketchup::InstancePath","path":"Sketchup::InstancePath#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Layer":{"description":"图层类包含修改和提取图层信息的方法。\\n \\n默认情况下，SketchUp模型有一个层，即0层（零），即基础层。不能删除或重命名层0。与某些其他CAD软件包不同，与SketchUp中不同层关联的实体仍然彼此相交。（如果希望实体集合不相交，请将它们放在组中。）\\n\\n层通常用于组织模型并控制相关组和组件的可见性。例如，可以将所有墙和屋顶实体设置为不同的组，将层与这些组关联，然后隐藏这些层，以便仅显示模型中的楼层平面。\\n \\n您可以通过调用Layers.add方法以编程方式创建新层。","name":"Layer","namespace":"Sketchup","path":"Sketchup::Layer","type":"class","visibility":"public"},"Sketchup::Layer#<=>":{"description":"使用<=>方法根据两个层的名称比较它们。如果正在构建层名称列表，则可以使用此选项进行排序。","name":"<=>","namespace":"Sketchup::Layer","path":"Sketchup::Layer#<=>","type":"instance_method","visibility":"public","parameters":[["layer2",null,"一个层对象。"]],"return":[null,"如果layer1小于layer2，则状态为-1。1如果layer2 \\n小于layer1。如果layer1和layer2相等，则为0。"]},"Sketchup::Layer#==":{"description":"==方法用于确定两层是否相同。","name":"==","namespace":"Sketchup::Layer","path":"Sketchup::Layer#==","type":"instance_method","visibility":"public","parameters":[["layer2",null,"一个层对象。"]],"return":[null,"状态-如果layer1和layer2相等，则为真。如果layer1和layer2不相等，则为假。"]},"Sketchup::Layer#color":{"description":"color方法用于检索层的颜色。","name":"color","namespace":"Sketchup::Layer","path":"Sketchup::Layer#color","type":"instance_method","visibility":"public","return":[null,"颜色-图层对象的颜色"]},"Sketchup::Layer#color=":{"description":"color=方法用于设置层的名称。","name":"color=","namespace":"Sketchup::Layer","path":"Sketchup::Layer#color=","type":"instance_method","visibility":"public","parameters":[["color",null,"图层对象的新颜色。"]],"return":[null,"颜色"]},"Sketchup::Layer#name":{"description":"name方法用于检索层的名称。","name":"name","namespace":"Sketchup::Layer","path":"Sketchup::Layer#name","type":"instance_method","visibility":"public","return":[null,"名称-层对象的名称"]},"Sketchup::Layer#name=":{"description":"name=方法用于设置层的名称。","name":"name=","namespace":"Sketchup::Layer","path":"Sketchup::Layer#name=","type":"instance_method","visibility":"public","parameters":[["name",null,"图层对象的新名称。"]],"return":[null,"名称-新设置的名称"]},"Sketchup::Layer#page_behavior":{"description":"page_behavior方法用于检索新页面和现有页面的层的可见性行为。例如，您可能希望您的层在用户创建的任何新页面（即场景）中默认可见或隐藏。\\n \\n页面保留没有默认行为的层列表。\\n如果某个层不在该列表中，则将其设置为由以下值之一确定的默认可见性：\\n \\n行为由以下标志的组合组成：\n  - LAYER_VISIBLE_BY_DEFAULT: 0x0000\n  - LAYER_HIDDEN_BY_DEFAULT: 0x0001\n  - LAYER_USES_DEFAULT_VISIBILITY_ON_NEW_PAGES: 0x0000\n  - LAYER_IS_VISIBLE_ON_NEW_PAGES: 0x0010\n  - LAYER_IS_HIDDEN_ON_NEW_PAGES: 0x0020\n \\n某个层的默认可见性由<code>LAYER_VISIBLE_BY_DEFAULT</code>或<code>LAYER_HIDDEN_BY_DEFAULT</code>设置。这是当页面不包含层的可见性状态时将使用的内容。\\n \\n其余标志控制新页的层的可见性。","name":"page_behavior","namespace":"Sketchup::Layer","path":"Sketchup::Layer#page_behavior","type":"instance_method","visibility":"public","return":[null,"pageBehavior-表示层当前行为的整数。"]},"Sketchup::Layer#page_behavior=":{"description":"page_behavior=方法用于控制层在现有和新页面上的可见性行为。\\n \\n此行为由以下标志的组合组成：\n  - LAYER_VISIBLE_BY_DEFAULT: 0x0000\n  - LAYER_HIDDEN_BY_DEFAULT: 0x0001\n  - LAYER_USES_DEFAULT_VISIBILITY_ON_NEW_PAGES: 0x0000\n  - LAYER_IS_VISIBLE_ON_NEW_PAGES: 0x0010\n  - LAYER_IS_HIDDEN_ON_NEW_PAGES: 0x0020\n \\n更新页面（而不是创建新页面）时，将使用层的当前可见性。\\n \\n NOTE:在SketchUp 2014之前，<code>LAYER_HIDDEN_BY_DEFAULT</code>标志将触发SketchUp中的验证检查，该检查将重置层的<code>page_behavior</code>。","name":"page_behavior=","namespace":"Sketchup::Layer","path":"Sketchup::Layer#page_behavior=","type":"instance_method","visibility":"public","parameters":[["pagebehavior",null,"页面行为值。"]],"return":[null,"pagebehavior-表示层的默认可见性的整数。"]},"Sketchup::Layer#visible=":{"description":"visible=方法用于设置层是否可见。","name":"visible=","namespace":"Sketchup::Layer","path":"Sketchup::Layer#visible=","type":"instance_method","visibility":"public","parameters":[["is_visible",null,"新的可见性设置。"]]},"Sketchup::Layer#visible?":{"description":"visible?方法用于确定层是否可见。","name":"visible?","namespace":"Sketchup::Layer","path":"Sketchup::Layer#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果层可见，则为true"]},"Sketchup::Layers":{"description":"图层集合允许您查看和管理模型中的所有图层。您可以从模型中获得指向图层对象的指针。","name":"Layers","namespace":"Sketchup","path":"Sketchup::Layers","type":"class","visibility":"public"},"Sketchup::Layers#[]":{"description":"使用[]方法按索引或名称检索层。","name":"[]","namespace":"Sketchup::Layers","path":"Sketchup::Layers#[]","type":"instance_method","visibility":"public","parameters":[["index_or_name",["Integer","String"],"表示图层对象数组中图层索引的数字，或图层的名称。"]],"return":[["Sketchup::Layer","nil"],""]},"Sketchup::Layers#add":{"description":"add方法用于添加新层。\\n \\n如果您提供已定义层的名称，它将返回现有层，而不是添加新层。","name":"add","namespace":"Sketchup::Layers","path":"Sketchup::Layers#add","type":"instance_method","visibility":"public","parameters":[["layer_name",null,"添加的层的名称。"]],"return":[null,"图层-新图层对象"]},"Sketchup::Layers#add_observer":{"description":"add_observer方法用于向图层集合添加观察者。","name":"add_observer","namespace":"Sketchup::Layers","path":"Sketchup::Layers#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"成功-成功为真，不成功为假。"]},"Sketchup::Layers#at":{"description":"{#at}方法是[]的别名。","name":"at","namespace":"Sketchup::Layers","path":"Sketchup::Layers#at","type":"instance_method","visibility":"public","return":[["Sketchup::Layer","nil"],""]},"Sketchup::Layers#count":{"description":"","name":"count","namespace":"Sketchup::Layers","path":"Sketchup::Layers#count","type":"instance_method","visibility":"public","return":[null,"integer-集合中的层数"]},"Sketchup::Layers#each":{"description":"each方法用于迭代所有层。","name":"each","namespace":"Sketchup::Layers","path":"Sketchup::Layers#each","type":"instance_method","visibility":"public"},"Sketchup::Layers#length":{"description":"{#length}方法检索层数。","name":"length","namespace":"Sketchup::Layers","path":"Sketchup::Layers#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Layers#purge_unused":{"description":"purged_unused方法用于移除未使用的层。","name":"purge_unused","namespace":"Sketchup::Layers","path":"Sketchup::Layers#purge_unused","type":"instance_method","visibility":"public","return":[null,"成功-成功为真，不成功为假。"]},"Sketchup::Layers#remove":{"description":"从模型中删除给定的层，可以选择删除几何图形。","name":"remove","namespace":"Sketchup::Layers","path":"Sketchup::Layers#remove","type":"instance_method","visibility":"public","parameters":[["layer",null,"整数索引、字符串名称或层"],["remove_geometry",null,"布尔值-如果为真，则删除的层中的几何图形也将被删除。如果为false（这是默认值），\\n此几何图形将放置在层0上。"]],"return":[null,"布尔值-如果成功则为真，如果不成功则为假。"]},"Sketchup::Layers#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::Layers","path":"Sketchup::Layers#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"成功-成功为真，不成功为假。"]},"Sketchup::Layers#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::Layers","path":"Sketchup::Layers#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Layers#unique_name":{"description":"unique_name方法可用于获取将是此集合内唯一层名称的字符串。","name":"unique_name","namespace":"Sketchup::Layers","path":"Sketchup::Layers#unique_name","type":"instance_method","visibility":"public","parameters":[["base_name",["optional"],"用于生成唯一名称的基名称。"]],"return":[null,"名称-唯一的名称"]},"Sketchup::LayersObserver":{"description":"这个观察者接口被实现来对层事件做出反应。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并向感兴趣的对象添加观察者的实例。","name":"LayersObserver","namespace":"Sketchup","path":"Sketchup::LayersObserver","type":"class","visibility":"public"},"Sketchup::LayersObserver#onCurrentLayerChanged":{"description":"当用户选择不同的活动层时，将调用{#onCurrentLayerChanged}方法。","name":"onCurrentLayerChanged","namespace":"Sketchup::LayersObserver","path":"Sketchup::LayersObserver#onCurrentLayerChanged","type":"instance_method","visibility":"public","parameters":[["layers",["Sketchup::Layers"],null],["layer",["Sketchup::Layer"],null]],"return":[["nil"],""]},"Sketchup::LayersObserver#onLayerAdded":{"description":"将新层添加到模型时调用{#onLayerAdded}方法。","name":"onLayerAdded","namespace":"Sketchup::LayersObserver","path":"Sketchup::LayersObserver#onLayerAdded","type":"instance_method","visibility":"public","parameters":[["layers",["Sketchup::Layers"],null],["layer",["Sketchup::Layer"],null]],"return":[["nil"],""]},"Sketchup::LayersObserver#onLayerChanged":{"description":"更改层时调用{#onLayerChanged}方法。","name":"onLayerChanged","namespace":"Sketchup::LayersObserver","path":"Sketchup::LayersObserver#onLayerChanged","type":"instance_method","visibility":"public","parameters":[["layers",["Sketchup::Layers"],null],["layer",["Sketchup::Layer"],null]],"return":[["nil"],""]},"Sketchup::LayersObserver#onLayerRemoved":{"description":"当从模型中移除层时，将调用{#onLayerRemoved}方法。","name":"onLayerRemoved","namespace":"Sketchup::LayersObserver","path":"Sketchup::LayersObserver#onLayerRemoved","type":"instance_method","visibility":"public","parameters":[["layers",["Sketchup::Layers"],null],["layer",["Sketchup::Layer"],null]],"return":[["nil"],""]},"Sketchup::LayersObserver#onRemoveAllLayers":{"description":"当从模型中移除所有层时，将调用{#onRemoveAllLayers}方法。","name":"onRemoveAllLayers","namespace":"Sketchup::LayersObserver","path":"Sketchup::LayersObserver#onRemoveAllLayers","type":"instance_method","visibility":"public","parameters":[["layers",["Sketchup::Layers"],null]],"return":[["nil"],""]},"Sketchup::Licensing":{"description":"+sketchup:：licensing+模块包含从扩展仓库购买的用于检查其许可状态的扩展的方法。\\n \\n建议将这些调用放在加密的ruby（.rbe）文件中。此API也通过SketchUp C API公开。已经使用本机代码的扩展应该更喜欢使用本机API，它应该比RubyAPI对应的更安全。\\n \\n有关详细信息，请参阅：\\n开发人员中心许可教程[https://extensions.Sketchup.com/en/developer_center/tutorial_licensing]","name":"Licensing","namespace":"Sketchup","path":"Sketchup::Licensing","type":"module","visibility":"public"},"Sketchup::Licensing.get_extension_license":{"description":"获取给定扩展的许可证。","name":"get_extension_license","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing.get_extension_license","type":"module_function","visibility":"public","parameters":[["extension_id",["String"],"所需扩展的扩展仓库UUID。"]],"return":[["ExtensionLicense"],"表示扩展的授权状态的对象。不要存储此对象，在需要时重新检索它，因为授权状态可能已更改。"]},"Sketchup::Licensing::EXPIRED":{"description":"常量","name":"EXPIRED","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing::EXPIRED","type":"constant","return":null,"visibility":"public"},"Sketchup::Licensing::ExtensionLicense":{"description":"SketchUp:：Licensing:：ExtensionLicense类用于存储扩展\\n许可证信息。SketchUp:：licensing.get_扩展\\许可证返回此类的实例。请注意，这是一个临时对象，表示返回扩展授权状态时的状态。它不会反映可能发生的任何许可状态更改。","name":"ExtensionLicense","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing::ExtensionLicense","type":"class","visibility":"public"},"Sketchup::Licensing::ExtensionLicense#days_remaining":{"description":"days_remaining方法用于获取许可证到期前的剩余天数。","name":"days_remaining","namespace":"Sketchup::Licensing::ExtensionLicense","path":"Sketchup::Licensing::ExtensionLicense#days_remaining","type":"instance_method","visibility":"public","return":[null,"整数-许可证到期前的天数。如果是永久许可证或没有许可证，则为零。"]},"Sketchup::Licensing::ExtensionLicense#error_description":{"description":"error_description方法用于在获取许可证失败时获取错误信息。这只是为了帮助调试。\\n扩展不应依赖任何准确的错误描述。","name":"error_description","namespace":"Sketchup::Licensing::ExtensionLicense","path":"Sketchup::Licensing::ExtensionLicense#error_description","type":"instance_method","visibility":"public","return":[null,"字符串-错误描述。"]},"Sketchup::Licensing::ExtensionLicense#licensed?":{"description":"licensed?方法用于决定扩展是否被授权运行。","name":"licensed?","namespace":"Sketchup::Licensing::ExtensionLicense","path":"Sketchup::Licensing::ExtensionLicense#licensed?","type":"instance_method","visibility":"public","return":[["Boolean"],"布尔值-如果允许扩展运行，则为真；如果未授权，则为假，应退出。"]},"Sketchup::Licensing::ExtensionLicense#state":{"description":"state方法返回一个常量，指示特定的授权状态。\\n这些应用程序仅用于信息目的，不用于决定扩展是否被授权运行。为此，请使用许可证？方法。","name":"state","namespace":"Sketchup::Licensing::ExtensionLicense","path":"Sketchup::Licensing::ExtensionLicense#state","type":"instance_method","visibility":"public","return":[null,"整数-SketchUp:：Licensing:：LICENSED中的一个，SketchUp:：Licensing:：EXPIRED，SketchUp:：Licensing:：TRIAL，SketchUp:：Licensing:：TRIAL_EXPIRED，SketchUp:：Licensing:：Not_licensed"]},"Sketchup::Licensing::LICENSED":{"description":"存根值。","name":"LICENSED","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing::LICENSED","type":"constant","return":null,"visibility":"public"},"Sketchup::Licensing::NOT_LICENSED":{"description":"存根值。","name":"NOT_LICENSED","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing::NOT_LICENSED","type":"constant","return":null,"visibility":"public"},"Sketchup::Licensing::TRIAL":{"description":"存根值。","name":"TRIAL","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing::TRIAL","type":"constant","return":null,"visibility":"public"},"Sketchup::Licensing::TRIAL_EXPIRED":{"description":"存根值。","name":"TRIAL_EXPIRED","namespace":"Sketchup::Licensing","path":"Sketchup::Licensing::TRIAL_EXPIRED","type":"constant","return":null,"visibility":"public"},"Sketchup::Loop":{"description":"循环是一个低级拓扑类，不需要经常使用。循环是一系列绑定面的边。","name":"Loop","namespace":"Sketchup","path":"Sketchup::Loop","type":"class","visibility":"public"},"Sketchup::Loop#convex?":{"description":"确定回路是否为凸形。","name":"convex?","namespace":"Sketchup::Loop","path":"Sketchup::Loop#convex?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-凸面为真，非凸面为假。"]},"Sketchup::Loop#edges":{"description":"获取按顺序定义循环的边数组。","name":"edges","namespace":"Sketchup::Loop","path":"Sketchup::Loop#edges","type":"instance_method","visibility":"public","return":[null,"边缘-如果成功，边缘对象的数组。"]},"Sketchup::Loop#edgeuses":{"description":"获取一个EdgeUse对象数组，该数组按顺序定义此循环。","name":"edgeuses","namespace":"Sketchup::Loop","path":"Sketchup::Loop#edgeuses","type":"instance_method","visibility":"public","return":[null,"Edgeuses-如果成功，则为EdgeUse个对象的数组。"]},"Sketchup::Loop#face":{"description":"获取被此循环约束的面对象。","name":"face","namespace":"Sketchup::Loop","path":"Sketchup::Loop#face","type":"instance_method","visibility":"public","return":[null,"面-如果成功，则为面对象"]},"Sketchup::Loop#outer?":{"description":"确定这是否是一个外部循环。每个面都有一个外环，每个孔都有一个环。","name":"outer?","namespace":"Sketchup::Loop","path":"Sketchup::Loop#outer?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果循环是外部循环，则为真；如果不是外部循环，则为假。"]},"Sketchup::Loop#vertices":{"description":"获取按顺序顺序定义循环的顶点数组。","name":"vertices","namespace":"Sketchup::Loop","path":"Sketchup::Loop#vertices","type":"instance_method","visibility":"public","return":[null,"顶点-一个顶点对象数组，如果成功。"]},"Sketchup::Material":{"description":"Material类表示可应用于DrawingElements的纹理或颜色。它最常用于人脸。\\n \\n您可以将任何可用作材质的对象传递给需要材质的方法。对象包括可转换为颜色的实际材质、颜色和类。\\n \\n以下内容是有效的（假设存在材料mat1。）","name":"Material","namespace":"Sketchup","path":"Sketchup::Material","type":"class","visibility":"public"},"Sketchup::Material#<=>":{"description":"使用<=>方法根据名称比较两种材料。返回的数字与名称之间的“字符串距离”有关。","name":"<=>","namespace":"Sketchup::Material","path":"Sketchup::Material#<=>","type":"instance_method","visibility":"public","parameters":[["material2",["Sketchup::Material"],"物质对象。"]],"return":[["Integer"],"如果相等，则为0；如果material1>Material2，则为正数；如果material1<Material2，则为负数。"]},"Sketchup::Material#==":{"description":"==方法用于测试两种材料是否相同。","name":"==","namespace":"Sketchup::Material","path":"Sketchup::Material#==","type":"instance_method","visibility":"public","parameters":[["material2",["Sketchup::Material"],"物质对象。"]],"return":[["Boolean"],"如果材质相同，则为真；如果材质不同，则为假"]},"Sketchup::Material#alpha":{"description":"alpha方法用于获取材料的不透明度。\\n \\n该值将介于0.0和1.0之间。值为0.0表示材质是完全透明的。值为1.0表示材质完全不透明。","name":"alpha","namespace":"Sketchup::Material","path":"Sketchup::Material#alpha","type":"instance_method","visibility":"public","return":[["Float"],"介于0和1之间的数字"]},"Sketchup::Material#alpha=":{"description":"alpha=方法用于设置材质的不透明度。\\n \\n值必须介于0.0和1.0之间。值为0.0表示材质是完全透明的。值为1.0表示材质完全不透明。","name":"alpha=","namespace":"Sketchup::Material","path":"Sketchup::Material#alpha=","type":"instance_method","visibility":"public","parameters":[["alpha",["Float"],"不透明度值。"]],"return":[["Float"],"新设置的不透明度值"]},"Sketchup::Material#color":{"description":"color方法用于检索材料的颜色。\\n \\n如果使用纹理，将返回平均颜色。","name":"color","namespace":"Sketchup::Material","path":"Sketchup::Material#color","type":"instance_method","visibility":"public","return":[["Sketchup::Color"],"颜色对象"]},"Sketchup::Material#color=":{"description":"color=方法用于设置材质的颜色。\\n \\n如果材质具有纹理，则这会将其变为彩色纹理。\\n \\n若要重置具有纹理的材质的颜色，请将颜色设置为nil。","name":"color=","namespace":"Sketchup::Material","path":"Sketchup::Material#color=","type":"instance_method","visibility":"public","parameters":[["color",["Sketchup::Color","String","nil"],"一个颜色对象。"]],"return":[["Sketchup::Color","String","nil"],"新设置的颜色对象"]},"Sketchup::Material#colorize_deltas":{"description":"colorize_deltas方法检索彩色材料的HLS增量。","name":"colorize_deltas","namespace":"Sketchup::Material","path":"Sketchup::Material#colorize_deltas","type":"instance_method","visibility":"public","return":[["Array(Float, Float, Float)"],"表示HLS增量的浮点数组。"]},"Sketchup::Material#colorize_type":{"description":"colorize_type方法检索材质的着色类型。\\n仅当MaterialType设置为2（彩色纹理）时，此值才相关。\\n类型包括：\\n \n  - 0 = shift (Sketchup::Material::COLORIZE_SHIFT),\n-1=Tint（SketchUp:：Material:：COLORIZE_TINT），","name":"colorize_type","namespace":"Sketchup::Material","path":"Sketchup::Material#colorize_type","type":"instance_method","visibility":"public","return":[["Integer"],"材质对象的着色类型。"]},"Sketchup::Material#colorize_type=":{"description":"colorize_type方法设置了材质的着色类型。\\n仅当MaterialType设置为2（彩色纹理）时，此值才相关。\\n类型包括：\\n \n  - 0 = shift (Sketchup::Material::COLORIZE_SHIFT),\n-1=Tint（SketchUp:：Material:：COLORIZE_TINT），","name":"colorize_type=","namespace":"Sketchup::Material","path":"Sketchup::Material#colorize_type=","type":"instance_method","visibility":"public","parameters":[["type",["Integer"],"—材质对象的新着色类型。"]],"return":[["Integer"],"材质对象的着色类型。"]},"Sketchup::Material#display_name":{"description":"display_name方法检索在SketchUp中为材质显示的名称。\\n \\n在用户界面中显示名称时应使用此选项，但返回的名称不能用作model.materials中的键。","name":"display_name","namespace":"Sketchup::Material","path":"Sketchup::Material#display_name","type":"instance_method","visibility":"public","return":[["String"],"材质的显示名称"]},"Sketchup::Material#materialType":{"description":"materialType方法检索材料的类型。类型包括\\n \n  - 0 = solid (Sketchup::Material::MATERIAL_SOLID),\n  - 1 = textured (Sketchup::Material::MATERIAL_TEXTURED),\n  - 2 = colorized textured (Sketchup::Material::MATERIAL_COLORIZED_TEXTURED).\n \\n在SketchUp 2015中添加的常量。","name":"materialType","namespace":"Sketchup::Material","path":"Sketchup::Material#materialType","type":"instance_method","visibility":"public","return":[["Integer"],"材质对象的材质类型。详见小结。"]},"Sketchup::Material#name":{"description":"name方法检索材料的名称。这是对象的内部名称，应用于从模型的材料列表中检索材料。\\n \\n使用.display \\u name在用户界面中显示名称。","name":"name","namespace":"Sketchup::Material","path":"Sketchup::Material#name","type":"instance_method","visibility":"public","return":[["String"],"材质对象的名称"]},"Sketchup::Material#name=":{"description":"设置材质的名称。","name":"name=","namespace":"Sketchup::Material","path":"Sketchup::Material#name=","type":"instance_method","visibility":"public","parameters":[["str",["String"],"新材料名称"]],"return":[["String"],"新设置的材质名称。"]},"Sketchup::Material#save_as":{"description":"{#save_as}方法用于将材料写入SKM文件。\\n \\n您必须记住在文件名后附加“.skm”，因为这不会自动完成。","name":"save_as","namespace":"Sketchup::Material","path":"Sketchup::Material#save_as","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要加载的skm文件的路径。"]],"return":[["Boolean"],"如果成功，则为“真”"]},"Sketchup::Material#texture":{"description":"texture方法检索材质的纹理。","name":"texture","namespace":"Sketchup::Material","path":"Sketchup::Material#texture","type":"instance_method","visibility":"public","return":[["Sketchup::Texture","nil"],"材质中的纹理对象。\\n如果材料没有纹理，则返回nil。"]},"Sketchup::Material#texture=":{"description":"texture=方法设置材质的纹理。\\n \\n将纹理设置为+nil+将使其变成纯色","name":"texture=","namespace":"Sketchup::Material","path":"Sketchup::Material#texture=","type":"instance_method","visibility":"public"},"Sketchup::Material#use_alpha?":{"description":"use_alpha?方法说明材质是否使用透明度。\\n \\n请注意，这不受颜色对象的alpha值的影响。只有.alpha值和透明纹理才能使此方法返回true。","name":"use_alpha?","namespace":"Sketchup::Material","path":"Sketchup::Material#use_alpha?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果材质使用透明度，则为“真”，否则为“假”。"]},"Sketchup::Material#write_thumbnail":{"description":"write_thumbnail方法将位图缩略图写入给定的文件名。","name":"write_thumbnail","namespace":"Sketchup::Material","path":"Sketchup::Material#write_thumbnail","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"缩略图的文件名。"],["resolution",["Integer"],"缩略图的分辨率。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Material::COLORIZE_SHIFT":{"description":"常量","name":"COLORIZE_SHIFT","namespace":"Sketchup::Material","path":"Sketchup::Material::COLORIZE_SHIFT","type":"constant","return":null,"visibility":"public"},"Sketchup::Material::COLORIZE_TINT":{"description":"存根值。","name":"COLORIZE_TINT","namespace":"Sketchup::Material","path":"Sketchup::Material::COLORIZE_TINT","type":"constant","return":null,"visibility":"public"},"Sketchup::Material::MATERIAL_COLORIZED_TEXTURED":{"description":"存根值。","name":"MATERIAL_COLORIZED_TEXTURED","namespace":"Sketchup::Material","path":"Sketchup::Material::MATERIAL_COLORIZED_TEXTURED","type":"constant","return":null,"visibility":"public"},"Sketchup::Material::MATERIAL_SOLID":{"description":"存根值。","name":"MATERIAL_SOLID","namespace":"Sketchup::Material","path":"Sketchup::Material::MATERIAL_SOLID","type":"constant","return":null,"visibility":"public"},"Sketchup::Material::MATERIAL_TEXTURED":{"description":"存根值。","name":"MATERIAL_TEXTURED","namespace":"Sketchup::Material","path":"Sketchup::Material::MATERIAL_TEXTURED","type":"constant","return":null,"visibility":"public"},"Sketchup::Materials":{"description":"材质对象的集合。每个模型都包含一个可以通过model.materials访问的\\n材料集合。","name":"Materials","namespace":"Sketchup","path":"Sketchup::Materials","type":"class","visibility":"public"},"Sketchup::Materials#[]":{"description":"[]方法用于按索引或名称检索材料。\\n \\n {#at}方法是[]的别名","name":"[]","namespace":"Sketchup::Materials","path":"Sketchup::Materials#[]","type":"instance_method","visibility":"public"},"Sketchup::Materials#add":{"description":"添加新材质。当不带参数调用时，这将为新材质生成一个新的唯一名称。如果给定了一个名称，它将检查是否已经有一个具有该名称的材质。如果已经存在具有给定名称的材质，则将使用给定名称作为基础生成新的唯一名称。","name":"add","namespace":"Sketchup::Materials","path":"Sketchup::Materials#add","type":"instance_method","visibility":"public","parameters":[["name",["String"],"新材料的名称。"]],"return":[["Sketchup::Material"],"物质对象"]},"Sketchup::Materials#add_observer":{"description":"add_observer方法用于向材料集合添加观察者。","name":"add_observer","namespace":"Sketchup::Materials","path":"Sketchup::Materials#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Materials#at":{"description":"[]方法用于按索引或名称检索材料。\\n \\n {#at}方法是[]的别名","name":"at","namespace":"Sketchup::Materials","path":"Sketchup::Materials#at","type":"instance_method","visibility":"public"},"Sketchup::Materials#count":{"description":"","name":"count","namespace":"Sketchup::Materials","path":"Sketchup::Materials#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Materials#current":{"description":"current方法用于获取当前材料，即用户在“材料”对话框中选择的材料。","name":"current","namespace":"Sketchup::Materials","path":"Sketchup::Materials#current","type":"instance_method","visibility":"public","return":[["Sketchup::Material"],"物质对象。"]},"Sketchup::Materials#current=":{"description":"current=方法用于设置当前物料。","name":"current=","namespace":"Sketchup::Materials","path":"Sketchup::Materials#current=","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material"],"物质对象。"]],"return":[["Sketchup::Material"],""]},"Sketchup::Materials#each":{"description":"each方法用于迭代所有材料。","name":"each","namespace":"Sketchup::Materials","path":"Sketchup::Materials#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Materials#length":{"description":"集合中的材料数。","name":"length","namespace":"Sketchup::Materials","path":"Sketchup::Materials#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Materials#load":{"description":"{#load}方法用于将材料从文件加载到模型中。\\n \\n如果模型中存在匹配的材料，将返回该材料。","name":"load","namespace":"Sketchup::Materials","path":"Sketchup::Materials#load","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要加载的skm文件的路径。"]],"return":[["Sketchup::Material"],"新装载的材料或现有材料。"]},"Sketchup::Materials#purge_unused":{"description":"使用purge_unused方法去除未使用的材料。","name":"purge_unused","namespace":"Sketchup::Materials","path":"Sketchup::Materials#purge_unused","type":"instance_method","visibility":"public","return":[["Sketchup::Materials"],"材质对象。"]},"Sketchup::Materials#remove":{"description":"移除给定的材料。\\n \\n NOTE:在2014之前的SketchUp版本上，此方法中存在可能导致文件损坏的错误。如果对绘制到活动模型中任何实体（例如面、边、组等）上的材质调用Materials.remove，则调用此方法将无法成功取消绘制实体并从模型中移除材质。\\n调用materials.remove之前，必须先取消绘制所有响应.material和.back的实体。","name":"remove","namespace":"Sketchup::Materials","path":"Sketchup::Materials#remove","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material"],"要移除的材料。"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Materials#remove_observer":{"description":"remove_observer方法用于从材料集合中移除观察者。","name":"remove_observer","namespace":"Sketchup::Materials","path":"Sketchup::Materials#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Materials#size":{"description":"集合中的材料数。\\n \\n {#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::Materials","path":"Sketchup::Materials#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::MaterialsObserver":{"description":"这个观察者界面被实现来对材料事件做出反应。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并向感兴趣的对象添加观察者的实例。","name":"MaterialsObserver","namespace":"Sketchup","path":"Sketchup::MaterialsObserver","type":"class","visibility":"public"},"Sketchup::MaterialsObserver#onMaterialAdd":{"description":"每当添加新材料时，都会调用{#onMaterialAdd}方法。","name":"onMaterialAdd","namespace":"Sketchup::MaterialsObserver","path":"Sketchup::MaterialsObserver#onMaterialAdd","type":"instance_method","visibility":"public","parameters":[["materials",["Sketchup::Materials"],null],["material",["Sketchup::Material"],null]],"return":[["nil"],""]},"Sketchup::MaterialsObserver#onMaterialChange":{"description":"每当更改材质的纹理图像时，都会调用{#onMaterialChange}方法。","name":"onMaterialChange","namespace":"Sketchup::MaterialsObserver","path":"Sketchup::MaterialsObserver#onMaterialChange","type":"instance_method","visibility":"public","parameters":[["materials",["Sketchup::Materials"],null],["material",["Sketchup::Material"],null]],"return":[["nil"],""]},"Sketchup::MaterialsObserver#onMaterialRefChange":{"description":"每当在材质上绘制的实体数发生更改时，都会调用{#onMaterialRefChange}方法。这可能是由于用户手动绘制某些内容，但也可能是当面被拆分、粘贴、推拉、删除等时。","name":"onMaterialRefChange","namespace":"Sketchup::MaterialsObserver","path":"Sketchup::MaterialsObserver#onMaterialRefChange","type":"instance_method","visibility":"public","parameters":[["materials",["Sketchup::Materials"],null],["material",["Sketchup::Material"],null]],"return":[["nil"],""]},"Sketchup::MaterialsObserver#onMaterialRemove":{"description":"每当删除材料时，都会调用{#onMaterialRemove}方法。","name":"onMaterialRemove","namespace":"Sketchup::MaterialsObserver","path":"Sketchup::MaterialsObserver#onMaterialRemove","type":"instance_method","visibility":"public","parameters":[["materials",["Sketchup::Materials"],null],["material",["Sketchup::Material"],null]],"return":[["nil"],""]},"Sketchup::MaterialsObserver#onMaterialSetCurrent":{"description":"每当在“材质”对话框中选择不同的材质时，都会调用{#onMaterialSetCurrent}方法。\\n \\n当从材质库中拾取材质但尚未添加到模型中时，材质参数可能为零。","name":"onMaterialSetCurrent","namespace":"Sketchup::MaterialsObserver","path":"Sketchup::MaterialsObserver#onMaterialSetCurrent","type":"instance_method","visibility":"public","parameters":[["materials",["Sketchup::Materials"],null],["material",["Sketchup::Material"],null]],"return":[["nil"],""]},"Sketchup::MaterialsObserver#onMaterialUndoRedo":{"description":"每当材料发生变化，然后撤销或重做这些变化时，都会调用{#onMaterialUndoRedo}方法。","name":"onMaterialUndoRedo","namespace":"Sketchup::MaterialsObserver","path":"Sketchup::MaterialsObserver#onMaterialUndoRedo","type":"instance_method","visibility":"public","parameters":[["material",["Sketchup::Material"],null],["materials",["Sketchup::Materials"],null]],"return":[["nil"],""]},"Sketchup::Menu":{"description":"菜单界面。","name":"Menu","namespace":"Sketchup","path":"Sketchup::Menu","type":"class","visibility":"public"},"Sketchup::Menu#add_item":{"description":"{#add_item}方法用于向指定菜单添加菜单项。\\n \\n此方法采用一个块，该块定义选择菜单项时要执行的操作。\\n \\n为菜单项添加可选验证过程时，可以使用返回的项ID。","name":"add_item","namespace":"Sketchup::Menu","path":"Sketchup::Menu#add_item","type":"instance_method","visibility":"public"},"Sketchup::Menu#add_separator":{"description":"add_separator方法用于向菜单添加菜单分隔符。","name":"add_separator","namespace":"Sketchup::Menu","path":"Sketchup::Menu#add_separator","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Menu#add_submenu":{"description":"add_submenu方法用于向菜单添加子菜单。","name":"add_submenu","namespace":"Sketchup::Menu","path":"Sketchup::Menu#add_submenu","type":"instance_method","visibility":"public","parameters":[["title",["String"],"子菜单的标题。"]],"return":[["Sketchup::Menu"],"菜单对象"]},"Sketchup::Menu#set_validation_proc":{"description":"set_validation_proc方法用于标识菜单验证过程。您的程序应返回MF_ENABLED、MF_DISABLED、\\n MF_CHECKED、MF_UNCHECKED或MF_GRAYED。","name":"set_validation_proc","namespace":"Sketchup::Menu","path":"Sketchup::Menu#set_validation_proc","type":"instance_method","visibility":"public","parameters":[["menu",["String"],"要添加的菜单的字符串名称。"]],"return":[["Integer"],"菜单的唯一数字项ID"]},"Sketchup::Model":{"description":"这是SketchUp模型的接口。该模型是用户正在使用的3D绘图，它是大多数RubyAPI交互的“入口点”。Sketchup.active_model方法为您提供了当前模型的一个句柄，从中您可以使用模型级别的方法开始获取信息并进行更改。\\n \\n常量：\\n product family \\n-model：：ProTrial \\n-model：：ProLicensed \\n-model：：MakeTrial \\n-model：：makeTrialexpired","name":"Model","namespace":"Sketchup","path":"Sketchup::Model","type":"class","visibility":"public"},"Sketchup::Model#abort_operation":{"description":"abort_operation方法中止以start_operation方法启动的当前操作。\\n \\n通常从rescue子句内部调用abort_operation方法，以便在出现错误时取消操作。","name":"abort_operation","namespace":"Sketchup::Model","path":"Sketchup::Model#abort_operation","type":"instance_method","visibility":"public","return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#active_entities":{"description":"返回一个{Sketchup::Entities}对象，该对象包含活动模型、组件或组中的所有实体（如果您在组或组件编辑会话中）。","name":"active_entities","namespace":"Sketchup::Model","path":"Sketchup::Model#active_entities","type":"instance_method","visibility":"public","return":[["Sketchup::Entities"],""]},"Sketchup::Model#active_layer":{"description":"active_layer方法检索活动层。\\n \\n SketchUp中的默认层是层0。","name":"active_layer","namespace":"Sketchup::Model","path":"Sketchup::Model#active_layer","type":"instance_method","visibility":"public","return":[["Sketchup::Layer"],"包含当前活动层的层对象"]},"Sketchup::Model#active_layer=":{"description":"{#active_layer=}方法设置活动的{Sketchup::Layer}对象。","name":"active_layer=","namespace":"Sketchup::Model","path":"Sketchup::Model#active_layer=","type":"instance_method","visibility":"public","parameters":[["layer",["Sketchup::Layer"],"要设置为活动层的层。"]],"return":[["Sketchup::Layer"],""]},"Sketchup::Model#active_path":{"description":"返回一个数组，该数组包含用户双击进行编辑的实体序列。这样可以确定它们是否处于组件编辑模式，以及它们在模型中的位置。\\n \\n例如，如果用户双击某个组件以编辑其几何图形，然后双击某个子组以编辑该几何图形，则active_path可能包含：\\n \\n <code>[<Sketchup::ComponentInstance>, <Sketchup::Group>]</code>","name":"active_path","namespace":"Sketchup::Model","path":"Sketchup::Model#active_path","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Drawingelement>","nil"],"显示用户当前编辑位置的实体数组。"]},"Sketchup::Model#active_view":{"description":"active_view方法返回此模型的活动视图对象。","name":"active_view","namespace":"Sketchup::Model","path":"Sketchup::Model#active_view","type":"instance_method","visibility":"public","return":[["Sketchup::View"],"视图对象"]},"Sketchup::Model#add_note":{"description":"向模型添加文本注释。注释的位置作为0和1之间的相对窗口位置给出。例如，下面的命令将创建一个注释，从窗口的左上角开始沿屏幕向下1/10的路径。","name":"add_note","namespace":"Sketchup::Model","path":"Sketchup::Model#add_note","type":"instance_method","visibility":"public","parameters":[["note",["String"],"字符串注释"],["x",["Numeric"],"沿x轴在0和1之间的距离。"],["y",["Numeric"],"沿y轴在0和1之间的距离。"]],"return":[["Sketchup::Text"],"注释对象或异常（如果不成功）。"]},"Sketchup::Model#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::Model","path":"Sketchup::Model#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Model#attribute_dictionaries":{"description":"attribute_dictionaries方法检索与模型关联的AttributeDictionaries对象。","name":"attribute_dictionaries","namespace":"Sketchup::Model","path":"Sketchup::Model#attribute_dictionaries","type":"instance_method","visibility":"public","return":[["Sketchup::AttributeDictionaries"],"与实体关联的AttributeDictionaries对象，如果没有与模型关联的attribute_dictionary对象，则为nil。如果返回nil，必须小心，例如：调用attribute_dictionaries。length将引发NoMethodError异常，而不是返回0。"]},"Sketchup::Model#attribute_dictionary":{"description":"返回由名称指定的SketchUp:：AttributeDictionary对象。如果模型没有与名称对应的属性字典，则返回nil或a创建属性字典。如果可选的第二个参数为true，并且没有与名称对应的属性字典，则会创建一个新的属性字典。","name":"attribute_dictionary","namespace":"Sketchup::Model","path":"Sketchup::Model#attribute_dictionary","type":"instance_method","visibility":"public","parameters":[["name",["String"],"要检索的词典的名称。"],["create",["Boolean"],"如果设置为true，则如果未找到给定“name”的属性字典，则将创建该字典。"]],"return":[["Sketchup::AttributeDictionary"],"属性字典对象如果成功，nil如果不成功"]},"Sketchup::Model#axes":{"description":"axes方法返回模型的绘图轴。","name":"axes","namespace":"Sketchup::Model","path":"Sketchup::Model#axes","type":"instance_method","visibility":"public","return":[["Sketchup::Axes"],"模型的轴。"]},"Sketchup::Model#behavior":{"description":"behavior方法检索模型的行为。","name":"behavior","namespace":"Sketchup::Model","path":"Sketchup::Model#behavior","type":"instance_method","visibility":"public","return":[["Sketchup::Behavior"],"模型的行为对象（如果成功）"]},"Sketchup::Model#bounds":{"description":"bounds方法检索模型的边界框。","name":"bounds","namespace":"Sketchup::Model","path":"Sketchup::Model#bounds","type":"instance_method","visibility":"public","return":[["Geom::BoundingBox"],"模型的边界框（如果成功）"]},"Sketchup::Model#classifications":{"description":"classifications方法用于检索此模型的Classifications对象。","name":"classifications","namespace":"Sketchup::Model","path":"Sketchup::Model#classifications","type":"instance_method","visibility":"public","return":[["Sketchup::Classifications"],"分类对象。"]},"Sketchup::Model#close":{"description":"close方法用于关闭此模型。在Mac OS上，只能关闭活动模型。在Windows上，由于只能打开一个文档，因此此方法将执行文件/新建操作。","name":"close","namespace":"Sketchup::Model","path":"Sketchup::Model#close","type":"instance_method","visibility":"public","parameters":[["ignore_changes",["Boolean"],"布尔值-如果为真，模型更改将被忽略，保存提示将被抑制。\\n如果为false，则不会忽略更改，并正常显示保存提示。"]],"return":[["nil"],""]},"Sketchup::Model#close_active":{"description":"close_active方法用于关闭当前活动（打开）组或组件。\\n \\n注意：在SketchUp 2014之前，此方法有一个错误，在该错误中，它没有创建撤消操作，并且在调用此方法后使用撤消/重做时，可能会导致几何图形损坏。","name":"close_active","namespace":"Sketchup::Model","path":"Sketchup::Model#close_active","type":"instance_method","visibility":"public","return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Model#commit_operation":{"description":"commit_operation方法提交撤消操作。\\n \\n commit_operation方法通常在方法结束时调用，以提交该方法执行的操作。","name":"commit_operation","namespace":"Sketchup::Model","path":"Sketchup::Model#commit_operation","type":"instance_method","visibility":"public","return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#definitions":{"description":"definitions方法检索包含模型中所有组件定义的定义列表。\\n \\n返回的定义可以为空。","name":"definitions","namespace":"Sketchup::Model","path":"Sketchup::Model#definitions","type":"instance_method","visibility":"public","return":[["Sketchup::DefinitionList"],"定义列表（如果成功）。"]},"Sketchup::Model#description":{"description":"description方法检索模型的描述，如“模型信息>文件”面板中所示。\\n \\n传回的说明可以为空。所有模型的默认描述均为空。","name":"description","namespace":"Sketchup::Model","path":"Sketchup::Model#description","type":"instance_method","visibility":"public","return":[["String"],"成功时的描述。"]},"Sketchup::Model#description=":{"description":"{#description=}方法设置了模型的描述。","name":"description=","namespace":"Sketchup::Model","path":"Sketchup::Model#description=","type":"instance_method","visibility":"public","parameters":[["description",["String"],"要设置的描述字符串。"]],"return":[["String"],""]},"Sketchup::Model#edit_transform":{"description":"返回当前组件编辑会话的转换。如果用户双击以编辑组件的几何图形，则将返回该组件相对于其父组件原点的转换。这样，无论用户是否处于编辑模式，都可以正确计算给定实体的“本地”转换。","name":"edit_transform","namespace":"Sketchup::Model","path":"Sketchup::Model#edit_transform","type":"instance_method","visibility":"public","return":[["Geom::Transformation"],"当前编辑转换"]},"Sketchup::Model#entities":{"description":"entities方法返回一个包含模型中实体数组的Entities对象。\\n \\n如果模型中没有实体，则此方法返回空实体对象（空数组）","name":"entities","namespace":"Sketchup::Model","path":"Sketchup::Model#entities","type":"instance_method","visibility":"public","return":[["Sketchup::Entities"],"如果成功，则为实体对象"]},"Sketchup::Model#export":{"description":"export方法用于导出给定的文件格式。它知道根据文件名上的文件扩展名导出哪种格式。\\n例如，“thing.obj”的文件名将导出一个obj文件，而“thing.dae”将导出一个COLLADA文件。\\n \\n对于SketchUp Pro 7.1+，有效扩展名包括dae、kmz、3ds、dwg、\\n dxf、fbx、obj、wrl和xsi。sketchup free仅支持dae和kmz。\\n \\n格式支持更改：\\n*SketchUp 7.1添加了COLLADA（.dae）导出功能。\\n*SketchUp Pro 2016+包含PDF导出功能。\\n \\n可选的第二个参数可以是：\\n-指示导出程序在导出后显示摘要对话框的布尔标志\\n-特定于给定导出程序的选项的哈希，其中可能包括摘要对话框标志。\\n \\n下面描述了可以在哈希中为各种导出器定义的选项。\\n \\n所有导出程序\\n-show_summary（默认值=假）\\n \\n dae（COLLADA）\\n-triangulated_faces（默认值=真）\\n-doublesided_faces（默认值=真）\\n-edges（默认值=假）\\n-author_attribution（默认值=假）\\n-texture_maps（默认值=真）\\n-selectionset_only（默认值=假）\\n-preserve_instancing（默认值=真）\\n \\n pdf\\n WINDOWS选项\\n-output_profile_lines（默认值=真）\\n-output_section_lines（默认值=真\\n-edge_extensions（默认值=真\\n-match_screen_profiles（默认值=真\\n-match_screen_section（默认值=真\\n-match_screen_extensions（默认值=真\\n-full_scale（默认值=真\\n-map_fonts（默认值=真\\n-drawing_units（默认值=长：：英寸\\n-extension_units（默认值=长：：英尺\\n-height_units（默认值=长：：英尺\\n-model_units（默认值=长）th：：feet）\\n-width_units（默认值=length：：feet）\\n-extension_length（默认值=0.0）\\n-line_width（默认值=0.0）\\n-line_width_section（默认值=0.0）\\n-length_in_drawing（默认值=1.0）\\n-length_in_model（默认值=1.0）\\n-window_height（默认值=1.0）\\n\\n Mac OPTIONS\\n-line_weight（默认值=0.5）\\n-ImageWidth（默认值=50）\\n-ImageHeight（默认值=50）\\n\\n返回true或false表示成功或失败。","name":"export","namespace":"Sketchup::Model","path":"Sketchup::Model#export","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要导出的文件的名称。"],["options",["Boolean","Hash"],"一个真/假值或哈希表。详见上文。"]],"return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#find_entity_by_id":{"description":"按EntityID或GUID查找和返回实体。\\n \\n因为GUID是持久的，所以查找的GUID只与组和ComponentInstance相关。ComponentDefinition和GUIDS型号不是持久的，不会被查找。\\n \\n当给定一个ID数组时，将返回一个与输入参数1:1映射的数组。如果找不到某些ID，此数组可能包含nil个值。不能在同一个调用中查找EntityID和GUID的组合。","name":"find_entity_by_id","namespace":"Sketchup::Model","path":"Sketchup::Model#find_entity_by_id","type":"instance_method","visibility":"public","parameters":[["ids_or_array",["Array<Integer, String>"],"传递一系列ID或包含ID的单个数组。ID必须是EntityID整数或GUID \\n字符串。"]],"return":[["Array<Sketchup::Entity, nil>"],"为找到的每个ID返回一个带有实体对象的数组，否则返回nil。单个实体或nil，当用单个ID调用时。"]},"Sketchup::Model#find_entity_by_persistent_id":{"description":"按实体的持久ID查找和返回实体。\\n\\n当给定一个ID数组时，将返回一个与输入参数映射为1:1的数组。如果找不到某些ID，此数组可能包含“nil”值。","name":"find_entity_by_persistent_id","namespace":"Sketchup::Model","path":"Sketchup::Model#find_entity_by_persistent_id","type":"instance_method","visibility":"public","parameters":[["ids_or_array",["Array<Integer>"],"传递一系列ID或包含持久ID的单个数组。"]],"return":[["Array<Sketchup::Entity, nil>"],"为找到的每个ID返回一个具有{Sketchup::Entity}对象的数组，否则返回nil。"]},"Sketchup::Model#georeferenced?":{"description":"此方法确定模型是否为地理参照。","name":"georeferenced?","namespace":"Sketchup::Model","path":"Sketchup::Model#georeferenced?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Model#get_attribute":{"description":"get_attribute方法获取具有给定名称的AttributeDictionary中的属性的值。如果没有与键关联的值，或者模型没有按名称指定的属性字典，则将返回可选的第三个参数。","name":"get_attribute","namespace":"Sketchup::Model","path":"Sketchup::Model#get_attribute","type":"instance_method","visibility":"public","parameters":[["dictname",["String"],"包含值的字典的名称。"],["key",["String"],"包含值的键。"],["defaultvalue",["optional"],"如果值不存在，将返回的默认值。"]],"return":[["Object","nil"],"给定字典中给定键的值（如果值为exists;），则为默认值（如果提供了默认值），如果值不存在且未提供默认值，则为非exist;\\n nil。"]},"Sketchup::Model#get_datum":{"description":"get_datum方法以字符串形式检索在UTM转换中使用的数据。","name":"get_datum","namespace":"Sketchup::Model","path":"Sketchup::Model#get_datum","type":"instance_method","visibility":"public","return":[["String"],"如果成功，用字符串表示的数据。"]},"Sketchup::Model#get_product_family":{"description":"返回一个值，该值指示已安装的SketchUp应用程序的产品系列。\\n截至SketchUp 2013，返回值为：\\n-+0+=未知\\n-+1+=Pro试用版\\n-+2+=Pro \\n-+3+=Pro过期\\n-+4+=Make试用版\\n-+5+=Make过期\\n-+6+=Make \\n-+7+=Pro许可证不可用\\n \\n从SketchUp 2016起，模型类将其中一些值定义为常量。","name":"get_product_family","namespace":"Sketchup::Model","path":"Sketchup::Model#get_product_family","type":"instance_method","visibility":"public","return":[["Integer"],"产品系列号。"]},"Sketchup::Model#guid":{"description":"guid方法以字符串的形式为模型检索全局唯一标识符。修改和保存模型后，guid将更改。模型GUID与SketchUp file;一起存储，如果将文件移动到另一台计算机，则不会更改。","name":"guid","namespace":"Sketchup::Model","path":"Sketchup::Model#guid","type":"instance_method","visibility":"public","return":[["String"],"模型的全局唯一标识符，格式为字符串"]},"Sketchup::Model#import":{"description":"import方法用于通过识别文件扩展名并调用适当的导入程序来加载文件。","name":"import","namespace":"Sketchup::Model","path":"Sketchup::Model#import","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要导入的文件的名称。"],["show_summary",["Boolean"],"如果要显示摘要窗口，则为true；如果不想显示摘要窗口，则为false。"]],"return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#instance_path_from_pid_path":{"description":"{#instance_path_from_pid_path}方法返回给定字符串的实例路径，该字符串具有表示实体路径的持久ID。","name":"instance_path_from_pid_path","namespace":"Sketchup::Model","path":"Sketchup::Model#instance_path_from_pid_path","type":"instance_method","visibility":"public","parameters":[["pid_path",["String"],"由句点分隔的具有持久ID的字符串。"]],"return":[["Sketchup::InstancePath"],""]},"Sketchup::Model#latlong_to_point":{"description":"latlong_to_point方法将纬度和经度转换为模型中的Point3d对象。它实际上不适用于LatLong对象，而是在2元素数组上操作。返回点始终位于地面（z=0）。","name":"latlong_to_point","namespace":"Sketchup::Model","path":"Sketchup::Model#latlong_to_point","type":"instance_method","visibility":"public","parameters":[["lnglat_array",["Array(Numeric, Numeric)"],"首先包含经度，然后包含纬度的2元素数组。"]],"return":[["Geom::Point3d"],"point3d对象如果成功，则为假。"]},"Sketchup::Model#layers":{"description":"layers方法检索模型中所有层对象的集合。","name":"layers","namespace":"Sketchup::Model","path":"Sketchup::Model#layers","type":"instance_method","visibility":"public","return":[["Sketchup::Layers"],"包含模型中的层集合的layers对象"]},"Sketchup::Model#list_datums":{"description":"此方法检索由SketchUp识别的所有基准的数组。","name":"list_datums","namespace":"Sketchup::Model","path":"Sketchup::Model#list_datums","type":"instance_method","visibility":"public","return":[["Array<String>"],"包含SketchUp支持的基准的数组对象"]},"Sketchup::Model#materials":{"description":"materials方法返回模型中所有材料的集合。","name":"materials","namespace":"Sketchup::Model","path":"Sketchup::Model#materials","type":"instance_method","visibility":"public","return":[["Sketchup::Materials"],"材料收集。"]},"Sketchup::Model#mipmapping=":{"description":"此方法可用于打开或关闭mipmapping。","name":"mipmapping=","namespace":"Sketchup::Model","path":"Sketchup::Model#mipmapping=","type":"instance_method","visibility":"public","parameters":[["mipmap",["Boolean"],"mipmapping是打开还是关闭。"]],"return":[["Boolean"],"新的mipmapping设置"]},"Sketchup::Model#mipmapping?":{"description":"此方法可用于确定mipmapping是打开还是关闭。","name":"mipmapping?","namespace":"Sketchup::Model","path":"Sketchup::Model#mipmapping?","type":"instance_method","visibility":"public","return":[["Boolean"],"当前mipmapping设置"]},"Sketchup::Model#modified?":{"description":"modified?方法确定自上次保存以来是否修改了模型。","name":"modified?","namespace":"Sketchup::Model","path":"Sketchup::Model#modified?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果模型自上次保存以来已被修改（并且需要保存），则为true；如果模型未被修改，则为false。"]},"Sketchup::Model#name":{"description":"name方法检索模型的字符串名称。","name":"name","namespace":"Sketchup::Model","path":"Sketchup::Model#name","type":"instance_method","visibility":"public","return":[["String"],"模型的字符串名称"]},"Sketchup::Model#name=":{"description":"name=方法设置模型的字符串名称。","name":"name=","namespace":"Sketchup::Model","path":"Sketchup::Model#name=","type":"instance_method","visibility":"public","parameters":[["name",["String"],"模型的新名称"]],"return":[["String"],"新名字"]},"Sketchup::Model#number_faces":{"description":"返回模型中的数字面。","name":"number_faces","namespace":"Sketchup::Model","path":"Sketchup::Model#number_faces","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Model#options":{"description":"options方法检索用于定义模型选项设置的选项管理器。\\n \\n访问选项时，使用字符串键而不是数字标记，因为这些标记在SketchUp版本之间不一致。","name":"options","namespace":"Sketchup::Model","path":"Sketchup::Model#options","type":"instance_method","visibility":"public","return":[["Sketchup::OptionsManager"],"如果成功，则包含一个或多个选项提供程序的OptionsManager对象。"]},"Sketchup::Model#pages":{"description":"pages方法检索包含模型中所有页的Pages对象。","name":"pages","namespace":"Sketchup::Model","path":"Sketchup::Model#pages","type":"instance_method","visibility":"public","return":[["Sketchup::Pages"],"返回包含0页或更多页的Pages对象。"]},"Sketchup::Model#path":{"description":"path方法检索从中打开模型的文件的路径。\\n \\n为新模型返回空字符串（尚未保存和打开的模型）。","name":"path","namespace":"Sketchup::Model","path":"Sketchup::Model#path","type":"instance_method","visibility":"public","return":[["String"],"包含当前打开模型的路径的字符串。"]},"Sketchup::Model#place_component":{"description":"place_component方法使用组件放置工具在模型中放置新组件。","name":"place_component","namespace":"Sketchup::Model","path":"Sketchup::Model#place_component","type":"instance_method","visibility":"public","parameters":[["componentdef",["Sketchup::ComponentDefinition"],"包含组件定义（蓝图）的组件定义对象。"],["repeat",["Boolean"],"如果设置为“真”，请保留在“组件放置工具”中并放置多个组件。"]],"return":[["Sketchup::Model","nil"],"成功或失败时的模型对象"]},"Sketchup::Model#point_to_latlong":{"description":"point_to_latlong方法将模型中的一个点转换为LatLong，这样您就可以得到它的纬度和经度。\\n \\n此方法使用ShadowInfo中设置的位置信息。\\n \\n NOTE:SketchUp 6.0及更高版本发生更改，此方法返回Point3d而不是LatLong，其中x和y值包含LatLong坐标。","name":"point_to_latlong","namespace":"Sketchup::Model","path":"Sketchup::Model#point_to_latlong","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::Point3d","Geom::LatLong"],"LatLong或Point3d对象。有关详细信息，请参阅详细信息。"]},"Sketchup::Model#point_to_utm":{"description":"此方法将模型中的Point3d对象转换为UTM坐标。\\n \\n此方法使用ShadowInfo中设置的位置信息。也见UTM。","name":"point_to_utm","namespace":"Sketchup::Model","path":"Sketchup::Model#point_to_utm","type":"instance_method","visibility":"public","parameters":[["point",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::UTM"],"一个UTM对象"]},"Sketchup::Model#raytest":{"description":"raytest方法用于在模型中投射光线（线），并返回光线命中的第一件事。\\n \\n光线是包含点和向量的两元素数组\\n[geom:：point3d（），geom:：vector3d（）]。点定义光线的起点，矢量定义方向。如果方向不能规范化（例如，方向=[0，0，0]），则方向被视为光线相交的点。","name":"raytest","namespace":"Sketchup::Model","path":"Sketchup::Model#raytest","type":"instance_method","visibility":"public","parameters":[["wysiwyg_flag",["Boolean"],"一个可选的布尔值，添加在SU8 M1中，指示在交叉计算中是否考虑隐藏的几何图形。如果未指定此标志，则默认为“真”（WYSIWYG），即隐藏的几何图形不会相交。"],["ray",["Array(Geom::Point3d, Geom::Vector3d)"],"包含一个点和一个向量的两元素数组。"]],"return":[["Array(Geom::Point3d, Sketchup::Drawingelement)","nil"],"由两个值组成的数组。第一个值是Point3d，其中光线通过的项存在。第二个元素是光线击中的实体的实例路径数组。例如，如果光线击中组件实例包含的面，则实例路径将为[component1]。如果光线照射到一个组件实例包含的面，该组件实例包含在另一个组件实例中，依此类推，则实例路径为[组件1，组件2，Component3…]。"]},"Sketchup::Model#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::Model","path":"Sketchup::Model#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Model#rendering_options":{"description":"rendering_options方法检索此模型的RenderingOptions对象。","name":"rendering_options","namespace":"Sketchup::Model","path":"Sketchup::Model#rendering_options","type":"instance_method","visibility":"public","return":[["Sketchup::RenderingOptions"],"RenderingOptions对象"]},"Sketchup::Model#save":{"description":"此方法用于将模型保存到文件中。","name":"save","namespace":"Sketchup::Model","path":"Sketchup::Model#save","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要保存的文件的名称。\\n从SketchUp 2014开始，此参数是可选的。\\n如果未提供或为空字符串，则模型将保存到与其关联的文件中。它一定已经保存到一个文件中了。"],["version",["Integer"],"（SketchUp 2014+）\\n要保存的可选SketchUp文件格式。\\n如果未提供，将使用最新的文件格式。\\n可能的值为：\\n SketchUp:：Model:：Version_3，SketchUp:：Model:：Version_4，SketchUp:：Model:：Version_5，SketchUp:：Model:：Version_6，SketchUp:：Model:：Version_7，SketchUp:：Model:：Version_8，SketchUp:：Model:：Version_2013，SketchUp:：Model:：Version_2014，SketchUp:：Model:：Version_2015，SketchUp:：Model:：Version_2016，SketchUp:：型号：：版本\\2017"]],"return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#save_copy":{"description":"此方法用于将当前模型的副本保存到文件中。","name":"save_copy","namespace":"Sketchup::Model","path":"Sketchup::Model#save_copy","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要保存模型副本的文件名。"],["version",["Integer"],"（SketchUp 2014+）\\n要保存的可选SketchUp文件格式。\\n如果未提供，将使用最新的文件格式。\\n可能的值为：\\n SketchUp:：Model:：Version_3，SketchUp:：Model:：Version_4，SketchUp:：Model:：Version_5，SketchUp:：Model:：Version_6，SketchUp:：Model:：Version_7，SketchUp:：Model:：Version_8，SketchUp:：Model:：Version_2013，SketchUp:：Model:：Version_2014，SketchUp:：Model:：Version_2015，SketchUp:：Model:：Version_2016，SketchUp:：型号：：版本\\2017"]],"return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#save_thumbnail":{"description":"save_thumbnail方法用于将缩略图保存到文件中。\\n图像格式由文件扩展名指定。支持的格式有BMP、JPG、PNG、TIF、PCT和GIF。","name":"save_thumbnail","namespace":"Sketchup::Model","path":"Sketchup::Model#save_thumbnail","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"要将缩略图另存为的文件名（带扩展名）。"]],"return":[["Boolean"],"成功为真，不成功为假"]},"Sketchup::Model#select_tool":{"description":"此方法用于选择激活工具的SketchUp工具对象。在调用此方法之前，必须实现SketchUp工具接口以创建工具。\\n \\n如果将nil传递给select_tool方法，则会激活选择工具。在调用此方法之前，必须实现SketchUp工具接口以创建工具，然后实例工具实现并将对象传递给此方法。如果试图在已编写工具的初始化方法中将select_tool设置为nil，则将忽略它。","name":"select_tool","namespace":"Sketchup::Model","path":"Sketchup::Model#select_tool","type":"instance_method","visibility":"public","parameters":[["tool",["Object"],"要选择的工具对象。"]],"return":[["Sketchup::Model"],"模型对象。"]},"Sketchup::Model#selection":{"description":"此方法检索模型的选择对象，其中包含当前选定的实体。选择列表中的条目不一定与用户选择它们的顺序相同。","name":"selection","namespace":"Sketchup::Model","path":"Sketchup::Model#selection","type":"instance_method","visibility":"public","return":[["Sketchup::Selection"],"具有当前选定的0个或多个实体的选择对象。"]},"Sketchup::Model#set_attribute":{"description":"此方法用于在具有给定名称的属性字典中设置属性的值。\\n \\n如果需要，可以使用此方法新建AttributeDictionary对象。","name":"set_attribute","namespace":"Sketchup::Model","path":"Sketchup::Model#set_attribute","type":"instance_method","visibility":"public","parameters":[["attrdictname",["String"],"要设置其属性的属性字典的名称。"],["key",["String"],"属性名。"],["value",["Object"],"要设置的值。"]],"return":[["Object"],"设置的值"]},"Sketchup::Model#set_datum":{"description":"此方法设置内部坐标系和UTM之间转换时使用的基准。\\n \\n预设资料为WGS84。您可以使用方法list_datums获取SketchUp中支持的所有基准的列表。如果传递无效的数据来设置基准，set_datum将返回默认的基准。","name":"set_datum","namespace":"Sketchup::Model","path":"Sketchup::Model#set_datum","type":"instance_method","visibility":"public","parameters":[["datum",["String"],""]],"return":[["nil"],""]},"Sketchup::Model#shadow_info":{"description":"此方法用于检索模型的阴影信息。","name":"shadow_info","namespace":"Sketchup::Model","path":"Sketchup::Model#shadow_info","type":"instance_method","visibility":"public","return":[["Sketchup::ShadowInfo"],"ShadowInfo对象。"]},"Sketchup::Model#start_operation":{"description":"{#start_operation}方法用于通知SketchUp新操作（可以撤消）正在启动。\\n \\n +op_name+参数是显示在“编辑>撤消”菜单项旁边的操作说明。确保为您的操作提供一个用户友好的名称。\\n \\n从SketchUp 7.0开始，有三个附加布尔值可以在启动操作时\\n传入。建议始终将+disable_ui+设置为+true+。由于兼容性原因，默认值为+false+。","name":"start_operation","namespace":"Sketchup::Model","path":"Sketchup::Model#start_operation","type":"instance_method","visibility":"public","parameters":[["transparent",["Boolean"],"如果设置为true，则此操作将附加到上一个操作。这对于创建观察者特别有用，这些观察者可以对用户操作作出反应，而不会将撤消堆栈与Ruby正在执行的额外步骤混淆在一起。"],["next_transparent",["Boolean"],"弃权！如果设置为true，则\\n在此操作之后执行的任何操作都将附加到一个组合操作中，从而允许用户使用单个撤消命令撤消两个操作。此标志是一个非常困难的标志，因为SketchUp用户可以通过多种方式中断给定操作。<b>在设置为真时，请格外小心并彻底测试。"],["disable_ui",["Boolean"],"如果设置为true，则在每次几何图形更改后，SketchUp更新用户界面的趋势将被抑制。如果操作涉及以任何方式更新模型，这可能会导致Ruby代码执行更快。"],["op_name",["String"],"在用户界面中可见的操作的名称"]],"return":[["Boolean"],"+正确+如果成功，+false+如果不成功"]},"Sketchup::Model#styles":{"description":"styles方法检索与模型关联的样式。","name":"styles","namespace":"Sketchup::Model","path":"Sketchup::Model#styles","type":"instance_method","visibility":"public","return":[["Sketchup::Styles"],"样式对象（如果成功）"]},"Sketchup::Model#tags":{"description":"tags方法检索模型的字符串标记。","name":"tags","namespace":"Sketchup::Model","path":"Sketchup::Model#tags","type":"instance_method","visibility":"public","return":[["String"],"模型的字符串标记"]},"Sketchup::Model#tags=":{"description":"tags=方法设置模型的字符串标记。","name":"tags=","namespace":"Sketchup::Model","path":"Sketchup::Model#tags=","type":"instance_method","visibility":"public","parameters":[["tags",["String"],"模型的新标签"]],"return":[["String"],"新标签"]},"Sketchup::Model#title":{"description":"tile方法检索模型的名称。如果模型保存在磁盘上，则返回不带扩展名的文件名。否则返回空字符串。","name":"title","namespace":"Sketchup::Model","path":"Sketchup::Model#title","type":"instance_method","visibility":"public","return":[["String"],"模型的标题或空字符串（如果未设置标题）"]},"Sketchup::Model#tools":{"description":"tools方法用于检索当前工具对象。","name":"tools","namespace":"Sketchup::Model","path":"Sketchup::Model#tools","type":"instance_method","visibility":"public","return":[["Sketchup::Tools"],"工具对象。"]},"Sketchup::Model#utm_to_point":{"description":"utm_to_point方法将UTM坐标中给定的位置转换为模型中的Point3d。","name":"utm_to_point","namespace":"Sketchup::Model","path":"Sketchup::Model#utm_to_point","type":"instance_method","visibility":"public","parameters":[["utm",["Geom::UTM"],"一个UTM对象。"]],"return":[["Geom::Point3d"],"一个Point3d物体。"]},"Sketchup::Model#valid?":{"description":"确定模型是否为有效的SketchUp:：Model对象。如果模型已关闭，则返回false。\\n \\n这在Mac上很有用，在Mac上可以同时打开多个模型。在这种情况下，这个方法可以告诉您，在您对模型执行操作之前，用户是否已经关闭了模型。","name":"valid?","namespace":"Sketchup::Model","path":"Sketchup::Model#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],"正确或错误取决于模型有效性"]},"Sketchup::Model::Make":{"description":"常量","name":"Make","namespace":"Sketchup::Model","path":"Sketchup::Model::Make","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::MakeTrial":{"description":"存根值。","name":"MakeTrial","namespace":"Sketchup::Model","path":"Sketchup::Model::MakeTrial","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::ProLicensed":{"description":"存根值。","name":"ProLicensed","namespace":"Sketchup::Model","path":"Sketchup::Model::ProLicensed","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::ProTrial":{"description":"存根值。","name":"ProTrial","namespace":"Sketchup::Model","path":"Sketchup::Model::ProTrial","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_2013":{"description":"存根值。","name":"VERSION_2013","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_2013","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_2014":{"description":"存根值。","name":"VERSION_2014","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_2014","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_2015":{"description":"存根值。","name":"VERSION_2015","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_2015","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_2016":{"description":"存根值。","name":"VERSION_2016","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_2016","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_2017":{"description":"存根值。","name":"VERSION_2017","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_2017","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_3":{"description":"存根值。","name":"VERSION_3","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_3","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_4":{"description":"存根值。","name":"VERSION_4","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_4","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_5":{"description":"存根值。","name":"VERSION_5","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_5","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_6":{"description":"存根值。","name":"VERSION_6","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_6","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_7":{"description":"存根值。","name":"VERSION_7","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_7","type":"constant","return":null,"visibility":"public"},"Sketchup::Model::VERSION_8":{"description":"存根值。","name":"VERSION_8","namespace":"Sketchup::Model","path":"Sketchup::Model::VERSION_8","type":"constant","return":null,"visibility":"public"},"Sketchup::ModelObserver":{"description":"这个观测器接口被实现来响应模型事件。要实现这个观察者，请创建一个这种类型的Ruby类，重写所需的方法，并向模型中添加一个观察者实例。\\n \\n请注意，与事务相关的观察者（即不可撤消的操作）主要用于报告和调试。应避免在操作员回调中执行自己的任何编辑操作（如修改模型），因为这可能导致崩溃或模型损坏。这些回调最常见的用途是帮助调试Ruby脚本的{Sketchup::Model#start_operation}和{Sketchup::Model#commit_operation}调用与SketchUp的本机撤消操作有某种冲突的问题。您可以设置一个观察者设置来精确观察正在发生的事情。","name":"ModelObserver","namespace":"Sketchup","path":"Sketchup::ModelObserver","type":"class","visibility":"public"},"Sketchup::ModelObserver#onActivePathChanged":{"description":"当用户打开或关闭{Sketchup::ComponentInstance}或{Sketchup::Group}进行编辑时，将调用{#onActivePathChanged}方法。\\n \\n当用户打开用于编辑的实例时，打开的实例中实体的位置和转换将相对于全局世界坐标，而不是相对于其父级的局部坐标。\\n \\n有关报告当前编辑原点与全局原点等的方法，请参阅{Sketchup::Model#active_path}和{Sketchup::Model#edit_transform}。\\n \\n通过使用此操作员回调，您可以在用户双击以钻取和钻取组件编辑时跟踪各种嵌套转换。","name":"onActivePathChanged","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onActivePathChanged","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onAfterComponentSaveAs":{"description":"当用户上下文单击组件实例上的“另存为”时，将调用{#onAfterComponentSaveAs}方法。它是在组件写入磁盘之后调用的，因此您可以在将控制权返回给用户之前将组件恢复到某种状态。","name":"onAfterComponentSaveAs","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onAfterComponentSaveAs","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onBeforeComponentSaveAs":{"description":"当用户上下文在组件实例上单击>另存为时，将调用{#onBeforeComponentSaveAs}方法。它是在组件写入磁盘之前调用的，因此您可以在处理程序中进行更改，并将其保存。\\n \\n例如，您可能决定要向保存的每个组件添加一些属性，但不希望该属性停留在当前模型中。在{#onBeforeComponentSaveAs}中，您可以添加该属性，在{#onAfterComponentSaveAs}中，您可以删除该属性。\\n \\n回调不会发送要保存的组件，但模型的选择将包含该组件。","name":"onBeforeComponentSaveAs","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onBeforeComponentSaveAs","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onDeleteModel":{"description":"删除模型时调用{#onDeleteModel}方法。","name":"onDeleteModel","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onDeleteModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onEraseAll":{"description":"当模型中的所有内容都被清除时，将调用{#onEraseAll}方法。","name":"onEraseAll","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onEraseAll","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onExplode":{"description":"每当此模型中的任何组件被分解时，都会调用{#onExplode method}。这是一种更容易观察爆炸事件的方法vs.\\n将InstanceObserver附加到模型中的每个实例。\\n \\n由于回调不返回已分解的内容，因此一种解决方案是放置一个选择观察器，用于跟踪您感兴趣的分解在所选内容中的实体。因为SketchUp的用户界面只提供了一种分解选择的方法，所以这个方法是一种可靠的方法来知道刚刚分解了什么。\\n \\n另一种方法是监视\\n SketchUp:：ComponentDefinition。计数实例以确定刚更改的内容，因为任何已分解的组件现在都将不再是实例。","name":"onExplode","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onExplode","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onPidChanged":{"description":"当模型中的持久ID更改时，将调用{#onPidChanged}方法。例如，对实体进行分组时。","name":"onPidChanged","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onPidChanged","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null],["old_pid",["Integer"],null],["new_pid",["Integer"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onPlaceComponent":{"description":"{#onPlaceComponent}方法是在组件“放置”到模型中时调用的，这意味着它是从组件浏览器中拖动的。","name":"onPlaceComponent","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onPlaceComponent","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onPostSaveModel":{"description":"将模型保存到磁盘后调用{#onPostSaveModel}方法。","name":"onPostSaveModel","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onPostSaveModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onPreSaveModel":{"description":"在模型保存到磁盘之前调用{#onPreSaveModel}方法。","name":"onPreSaveModel","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onPreSaveModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onSaveModel":{"description":"将模型保存到磁盘后调用{#onSaveModel}方法。","name":"onSaveModel","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onSaveModel","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onTransactionAbort":{"description":"事务中止时调用{#onTransactionAbort}方法。","name":"onTransactionAbort","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onTransactionAbort","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onTransactionCommit":{"description":"事务完成时调用{#onTransactionCommit}方法。","name":"onTransactionCommit","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onTransactionCommit","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onTransactionEmpty":{"description":"{#onTransactionEmpty}方法是在事务（即不可撤消的操作）启动然后提交时调用的，在此期间不进行任何更改。","name":"onTransactionEmpty","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onTransactionEmpty","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onTransactionRedo":{"description":"{#onTransactionRedo}方法在用户“重做”事务（也称为撤消操作）时调用。您可以通过调用+SketchUp.SendAction（“EditRedo”）+，以编程方式启动重做。","name":"onTransactionRedo","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onTransactionRedo","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onTransactionStart":{"description":"{#onTransactionStart}方法在事务（即不可撤消的操作）启动时调用。","name":"onTransactionStart","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onTransactionStart","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::ModelObserver#onTransactionUndo":{"description":"{#onTransactionUndo method}在用户“撤消”事务（即撤消操作）时调用。您可以通过调用+SketchUp.SendAction（“EditUndo”）+，以编程方式触发撤消。","name":"onTransactionUndo","namespace":"Sketchup::ModelObserver","path":"Sketchup::ModelObserver#onTransactionUndo","type":"instance_method","visibility":"public","parameters":[["model",["Sketchup::Model"],null]],"return":[["nil"],""]},"Sketchup::OptionsManager":{"description":"OptionsManager类在一个模型上管理各种类型的OptionsProviders。","name":"OptionsManager","namespace":"Sketchup","path":"Sketchup::OptionsManager","type":"class","visibility":"public"},"Sketchup::OptionsManager#[]":{"description":"[]方法用于按名称或索引获取选项提供者。\\n \\n例如，要获取模型上的UnitsOptions，可以使用以下命令：","name":"[]","namespace":"Sketchup::OptionsManager","path":"Sketchup::OptionsManager#[]","type":"instance_method","visibility":"public"},"Sketchup::OptionsManager#count":{"description":"","name":"count","namespace":"Sketchup::OptionsManager","path":"Sketchup::OptionsManager#count","type":"instance_method","visibility":"public","return":[null,"integer-如果成功，则为OptionsProvider个对象的数目"]},"Sketchup::OptionsManager#each":{"description":"each方法用于迭代选项提供程序。","name":"each","namespace":"Sketchup::OptionsManager","path":"Sketchup::OptionsManager#each","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::OptionsManager#keys":{"description":"keys方法用于获取OptionsManager中的密钥列表。","name":"keys","namespace":"Sketchup::OptionsManager","path":"Sketchup::OptionsManager#keys","type":"instance_method","visibility":"public","return":[null,"keys-字符串键数组"]},"Sketchup::OptionsManager#length":{"description":"{#length}方法是{#size}的别名。","name":"length","namespace":"Sketchup::OptionsManager","path":"Sketchup::OptionsManager#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::OptionsManager#size":{"description":"{#size}方法返回{OptionsManager}中{OptionsProvider}个对象的数目。","name":"size","namespace":"Sketchup::OptionsManager","path":"Sketchup::OptionsManager#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::OptionsProvider":{"description":"OptionsProvider类提供了模型上的各种选项。你从OptionsManager中得到一个OptionsProvider。这些选项以名称/值对的形式给出。","name":"OptionsProvider","namespace":"Sketchup","path":"Sketchup::OptionsProvider","type":"class","visibility":"public"},"Sketchup::OptionsProvider#[]":{"description":"[]方法用于按键的名称或索引获取值。","name":"[]","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#[]","type":"instance_method","visibility":"public"},"Sketchup::OptionsProvider#[]=":{"description":"[]=方法用于设置特定键的值。\\n \\n如果需要，为给定的键创建一个新属性。","name":"[]=","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#[]=","type":"instance_method","visibility":"public","parameters":[["key",null,"有效的密钥。"],["value",null,"要设置的值。"]],"return":[null,"值-成功时设置的值，或失败时设置为假。"]},"Sketchup::OptionsProvider#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::OptionsProvider#count":{"description":"","name":"count","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::OptionsProvider#each":{"description":"{#each}方法用于迭代所有选项。","name":"each","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::OptionsProvider#each_key":{"description":"{#each_key}方法用于迭代所有属性键。","name":"each_key","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#each_key","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::OptionsProvider#each_pair":{"description":"{#each}方法用于迭代所有选项。","name":"each_pair","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#each_pair","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::OptionsProvider#each_value":{"description":"each_value方法用于迭代所有属性值。\\n \\n如果没有密钥，则引发异常。","name":"each_value","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#each_value","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::OptionsProvider#has_key?":{"description":"{#has_key?}方法是{#key?}的别名。","name":"has_key?","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#has_key?","type":"instance_method","visibility":"public","parameters":[["name",["String"],"您要查找的密钥的名称。"]],"return":[["Boolean"],""]},"Sketchup::OptionsProvider#key?":{"description":"{#key?}方法用于确定选项提供程序是否具有特定键。","name":"key?","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#key?","type":"instance_method","visibility":"public","parameters":[["name",["String"],"您要查找的密钥的名称。"]],"return":[["Boolean"],""]},"Sketchup::OptionsProvider#keys":{"description":"keys方法用于检索具有所有属性键的数组。","name":"keys","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#keys","type":"instance_method","visibility":"public","return":[null,"keys-如果成功，选项提供程序中的一个键数组"]},"Sketchup::OptionsProvider#length":{"description":"{#length}方法是{#size}的别名。","name":"length","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::OptionsProvider#name":{"description":"name方法用于检索选项提供程序的名称。","name":"name","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#name","type":"instance_method","visibility":"public","return":[null,"name-选项提供程序的名称（如果成功）"]},"Sketchup::OptionsProvider#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::OptionsProvider#size":{"description":"{#size}方法用于检索选项提供程序的大小（元素数）。","name":"size","namespace":"Sketchup::OptionsProvider","path":"Sketchup::OptionsProvider#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::OptionsProviderObserver":{"description":"这个观察者接口被实现来响应操作提供者事件。这意味着当用户更改草图选项并对其做出反应时，您可以观看。以下{Sketchup::OptionsProviders}在API中定义：\\n \\n-<code>\"UnitsOptions\"</code> \\n-<code>\"PrintOptions\"</code> \\n-<code>\"PageOptions\"</code> \\n-<code>\"SlideshowOptions\"</code> \\n-<code>\"NamedOptions\"</code> \\n \\n每个都有用户可以设置的特定选项列表。有关详细信息，请参见{Sketchup::OptionsManager}和{Sketchup::OptionsProvider}类。\\n \\n若要实现此观察者，请创建此类型的Ruby类\\n重写所需的方法，并向感兴趣的对象添加该观察者的实例。","name":"OptionsProviderObserver","namespace":"Sketchup","path":"Sketchup::OptionsProviderObserver","type":"class","visibility":"public"},"Sketchup::OptionsProviderObserver#onOptionsProviderChanged":{"description":"当{Sketchup::OptionsProvider}的属性更改时，将调用{#onOptionsProviderChanged}方法。","name":"onOptionsProviderChanged","namespace":"Sketchup::OptionsProviderObserver","path":"Sketchup::OptionsProviderObserver#onOptionsProviderChanged","type":"instance_method","visibility":"public","parameters":[["provider",["Sketchup::OptionsProvider"],null],["name",["String"],"已更改的特定选项的名称。"]],"return":[["nil"],""]},"Sketchup::Page":{"description":"page类包含提取信息和修改单个页面属性的方法。\\n \\n请注意，在SketchUp用户界面页面内称为“场景”。","name":"Page","namespace":"Sketchup","path":"Sketchup::Page","type":"class","visibility":"public"},"Sketchup::Page#axes":{"description":"axes方法返回页面的绘图轴。","name":"axes","namespace":"Sketchup::Page","path":"Sketchup::Page#axes","type":"instance_method","visibility":"public","return":[null,"轴-页面的轴。"]},"Sketchup::Page#camera":{"description":"camera方法检索特定页面的相机。","name":"camera","namespace":"Sketchup::Page","path":"Sketchup::Page#camera","type":"instance_method","visibility":"public","return":[null,"相机-相机对象（如果成功），nil（如果页面未保存相机信息）"]},"Sketchup::Page#delay_time":{"description":"delay_time方法检索一个页面在巡更期间转换到另一个页面之前显示的时间量（以秒为单位）。\\n \\n可以在SketchUp用户界面的“模型信息>动画”面板中修改默认延迟时间。如果此方法返回-1，则使用默认延迟时间。","name":"delay_time","namespace":"Sketchup::Page","path":"Sketchup::Page#delay_time","type":"instance_method","visibility":"public","return":[null,"时间-延迟秒数"]},"Sketchup::Page#delay_time=":{"description":"delay_time=方法设置在巡更期间转换到另一个页面之前显示页面的时间量（以秒为单位）。如果将页面延迟设置为-1，则将使用默认延迟时间。\\n \\n可以在SketchUp用户界面的“模型信息>动画”面板中修改默认延迟时间。","name":"delay_time=","namespace":"Sketchup::Page","path":"Sketchup::Page#delay_time=","type":"instance_method","visibility":"public","parameters":[["seconds",null,"设置为延迟时间的秒数。"]],"return":[null,"时间-延迟秒数"]},"Sketchup::Page#description":{"description":"description方法检索在“场景管理器”对话框中找到的页面说明。","name":"description","namespace":"Sketchup::Page","path":"Sketchup::Page#description","type":"instance_method","visibility":"public","return":[null,"描述-页面的文本描述。"]},"Sketchup::Page#description=":{"description":"description方法设置在“场景管理器”对话框中找到的页面说明。","name":"description=","namespace":"Sketchup::Page","path":"Sketchup::Page#description=","type":"instance_method","visibility":"public","parameters":[["description",null,"页面的字符串说明。"]],"return":[null,"说明-页面的新字符串说明"]},"Sketchup::Page#hidden_entities":{"description":"hidden_entities方法检索页面中的所有隐藏实体。","name":"hidden_entities","namespace":"Sketchup::Page","path":"Sketchup::Page#hidden_entities","type":"instance_method","visibility":"public","return":[null,"实体-页面上包含隐藏实体的实体对象。"]},"Sketchup::Page#label":{"description":"label方法从页选项卡中检索页的标签。","name":"label","namespace":"Sketchup::Page","path":"Sketchup::Page#label","type":"instance_method","visibility":"public","return":[null,"标签-页选项卡的字符串标签"]},"Sketchup::Page#layers":{"description":"layers方法检索与页面关联的不可见层。","name":"layers","namespace":"Sketchup::Page","path":"Sketchup::Page#layers","type":"instance_method","visibility":"public","return":[null,"层-具有零个或多个层对象的数组。"]},"Sketchup::Page#name":{"description":"name方法从页面选项卡中检索页面的名称。","name":"name","namespace":"Sketchup::Page","path":"Sketchup::Page#name","type":"instance_method","visibility":"public","return":[null,"标签-页选项卡的字符串名称"]},"Sketchup::Page#name=":{"description":"name=方法设置页面选项卡的名称。","name":"name=","namespace":"Sketchup::Page","path":"Sketchup::Page#name=","type":"instance_method","visibility":"public","parameters":[["name",null,"要设置的页的名称。"]],"return":[null,"名称-您设置的名称"]},"Sketchup::Page#rendering_options":{"description":"rendering_options方法为页检索一个RenderingOptions对象。","name":"rendering_options","namespace":"Sketchup::Page","path":"Sketchup::Page#rendering_options","type":"instance_method","visibility":"public","return":[null,"renderingoptions-一个RenderingOptions对象"]},"Sketchup::Page#set_visibility":{"description":"set_visibility方法为页面上的层设置可见性。","name":"set_visibility","namespace":"Sketchup::Page","path":"Sketchup::Page#set_visibility","type":"instance_method","visibility":"public","parameters":[["layer",null,"正在设置其可见性的层。"],["visibility",null,"如果希望层上的项目可见，则为true；如果不希望项目可见，则为false。"]],"return":[null,"页面-设置了可见性的页面。"]},"Sketchup::Page#shadow_info":{"description":"shadow_info方法检索页面的ShadowInfo对象。","name":"shadow_info","namespace":"Sketchup::Page","path":"Sketchup::Page#shadow_info","type":"instance_method","visibility":"public","return":[null,"shadowinfo-如果成功，则为ShadowInfo对象；如果页面不保存阴影信息，则为nil对象。"]},"Sketchup::Page#style":{"description":"style方法检索与页面关联的样式。","name":"style","namespace":"Sketchup::Page","path":"Sketchup::Page#style","type":"instance_method","visibility":"public","return":[null,"Style-如果成功，则为Style对象"]},"Sketchup::Page#transition_time":{"description":"获取在幻灯片放映或动画导出期间转换到此页所需的时间。如果该值为-1，则表示使用默认过渡时间。","name":"transition_time","namespace":"Sketchup::Page","path":"Sketchup::Page#transition_time","type":"instance_method","visibility":"public","return":[null,"TransitionTime-在幻灯片放映或动画导出期间转换到此页所需的时间。"]},"Sketchup::Page#transition_time=":{"description":"使用transition_time=方法设置过渡时间。","name":"transition_time=","namespace":"Sketchup::Page","path":"Sketchup::Page#transition_time=","type":"instance_method","visibility":"public","parameters":[["trans_time",null,"以秒为单位的转换时间。"]],"return":[null,"过渡时间-新的过渡时间"]},"Sketchup::Page#update":{"description":"update方法根据用户的当前视图对页面属性执行更新。页面的哪些部分得到更新是通过一个整数控制的，该整数的位表示要更新的部分。您可以通过将这些数字相加来确定需要传递的整数：\\n \n  - 1 - Camera Location,\n  - 2 - Drawing Style,\n  - 4 - Shadow Settings,\n  - 8 - Axes Location,\n  - 16 - Hidden Geometry,\n  - 32 - Visible Layers,\n  - 64 - Active Section Planes.\n\\n位代码值相加以提供标志值。例如，要更新相机位置、轴位置和活动截面平面属性，标志将为73（1+8+64）。","name":"update","namespace":"Sketchup::Page","path":"Sketchup::Page#update","type":"instance_method","visibility":"public","parameters":[["flags",null,"表示位标志总和的整数。"]],"return":[null,"状态-如果成功为真，如果失败为假"]},"Sketchup::Page#use_axes=":{"description":"use_axes=方法设置页面的轴属性。","name":"use_axes=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_axes=","type":"instance_method","visibility":"public","parameters":[["pagesettings",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_axes?":{"description":"use_axes?方法确定是否将axs属性与页面一起存储。","name":"use_axes?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_axes?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_camera=":{"description":"use_camera=方法设置页的Camera属性。","name":"use_camera=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_camera=","type":"instance_method","visibility":"public","parameters":[["setting",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_camera?":{"description":"use_camera?方法确定是否将相机属性与页面一起存储。","name":"use_camera?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_camera?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_hidden=":{"description":"use_hidden=方法设置页的隐藏属性。","name":"use_hidden=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_hidden=","type":"instance_method","visibility":"public","parameters":[["setting",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_hidden?":{"description":"use_hidden?方法确定是否将隐藏属性与页一起存储。","name":"use_hidden?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_hidden?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_hidden_layers=":{"description":"use_hidden_layers=方法设置页面的隐藏层属性。","name":"use_hidden_layers=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_hidden_layers=","type":"instance_method","visibility":"public","parameters":[["setting",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_hidden_layers?":{"description":"use_hidden_layers?方法确定是否将隐藏层属性与页一起存储。","name":"use_hidden_layers?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_hidden_layers?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_rendering_options=":{"description":"use_rendering_optoins=方法设置页面的显示设置属性。","name":"use_rendering_options=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_rendering_options=","type":"instance_method","visibility":"public","parameters":[["setting",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_rendering_options?":{"description":"use_rendering_options?方法确定是否将呈现选项属性与页面一起存储。","name":"use_rendering_options?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_rendering_options?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_section_planes=":{"description":"use_section_planes=方法设置页的“剖面”属性。","name":"use_section_planes=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_section_planes=","type":"instance_method","visibility":"public","parameters":[["setting",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_section_planes?":{"description":"use_section_planes?方法确定是否将“截面平面”属性与页面一起存储。","name":"use_section_planes?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_section_planes?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_shadow_info=":{"description":"use_shadow_info=方法设置页面的阴影信息属性。","name":"use_shadow_info=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_shadow_info=","type":"instance_method","visibility":"public","parameters":[["setting",null,"如果希望页面保存此属性，则为true；如果不希望页面保存此属性，则为false。"]],"return":[null,"状态-如果正在保存属性，则为真；如果不保存属性，则为假。"]},"Sketchup::Page#use_shadow_info?":{"description":"use_shadow_info?方法确定是否将shadow info属性与页面一起存储。","name":"use_shadow_info?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_shadow_info?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Page#use_style=":{"description":"use_style=方法设置页面使用的样式。","name":"use_style=","namespace":"Sketchup::Page","path":"Sketchup::Page#use_style=","type":"instance_method","visibility":"public","parameters":[["style",null,"要使用的样式对象。"]],"return":[null,"零"]},"Sketchup::Page#use_style?":{"description":"use_style?方法确定是否将样式存储在页面中。","name":"use_style?","namespace":"Sketchup::Page","path":"Sketchup::Page#use_style?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果要将此属性与页一起存储，则为true；如果不将此属性与页一起存储，则为false。"]},"Sketchup::Pages":{"description":"pages类包含用于在模型中操作页面（场景）集合的方法。\\n \\n您可以通过调用model.pages获得此集合的句柄。","name":"Pages","namespace":"Sketchup","path":"Sketchup::Pages","type":"class","visibility":"public"},"Sketchup::Pages#[]":{"description":"[]方法按名称或索引检索页面。","name":"[]","namespace":"Sketchup::Pages","path":"Sketchup::Pages#[]","type":"instance_method","visibility":"public","parameters":[["index_or_name",null,"特定页的索引或字符串名称。"]],"return":[null,"page-成功时的page对象"]},"Sketchup::Pages#add":{"description":"add方法用于将空页对象添加到集合中。\\n \\n如果未指定名称，则使用新页的默认名称生成新名称。如果指定了名称，则会添加具有该名称的新页。\\n \\n如果给定了flags参数，它将控制随页面保存的属性。有关可以设置的标志的说明，请参阅Page.update方法。\\n \\n如果给定了索引，则指定在页列表中添加新页的位置。否则，新页面将添加到末尾。","name":"add","namespace":"Sketchup::Pages","path":"Sketchup::Pages#add","type":"instance_method","visibility":"public","parameters":[["name",null,"特定页的名称。"],["flags",["optional"],"整数形式的位标志。"],["index",["optional"],"插入位置索引。"]],"return":[null,"零"]},"Sketchup::Pages#add_matchphoto_page":{"description":"add_matchphoto_page方法用于向模型添加照片匹配页。这是一个高级功能，已添加以支持内部草图绘制工作，因此它不太可能对您有用。","name":"add_matchphoto_page","namespace":"Sketchup::Pages","path":"Sketchup::Pages#add_matchphoto_page","type":"instance_method","visibility":"public","parameters":[["image_name",null,"字符串图像名称。"],["camera",["optional"],"相机对象。"],["page_name",["optional"],"字符串页名称。"]],"return":[null,"页面-新的照片匹配页面。"]},"Sketchup::Pages#add_observer":{"description":"add_observer方法用于向Pages对象添加观察器。\\n有关详细信息，请参阅PagesObserver接口。","name":"add_observer","namespace":"Sketchup::Pages","path":"Sketchup::Pages#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::Pages#count":{"description":"","name":"count","namespace":"Sketchup::Pages","path":"Sketchup::Pages#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Pages#each":{"description":"each方法用于遍历页面。","name":"each","namespace":"Sketchup::Pages","path":"Sketchup::Pages#each","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::Pages#erase":{"description":"erase方法用于从集合中删除页。","name":"erase","namespace":"Sketchup::Pages","path":"Sketchup::Pages#erase","type":"instance_method","visibility":"public","parameters":[["page",null,"要删除的页。"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::Pages#length":{"description":"{#length}方法是{#size}的别名。","name":"length","namespace":"Sketchup::Pages","path":"Sketchup::Pages#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Pages#parent":{"description":"parent方法用于确定页面集合的模型。","name":"parent","namespace":"Sketchup::Pages","path":"Sketchup::Pages#parent","type":"instance_method","visibility":"public","return":[null,"模型-成功时包含页面的模型"]},"Sketchup::Pages#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。有关详细信息，请参见PagesObserver界面。","name":"remove_observer","namespace":"Sketchup::Pages","path":"Sketchup::Pages#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::Pages#selected_page":{"description":"selected_page方法用于检索当前选定的页面。","name":"selected_page","namespace":"Sketchup::Pages","path":"Sketchup::Pages#selected_page","type":"instance_method","visibility":"public","return":[null,"page-当前选定的page对象（如果成功）"]},"Sketchup::Pages#selected_page=":{"description":"selected_page方法用于设置当前选定的页面。设置好之后，SketchUp将为该页面设置动画，就像用户单击了其“场景”选项卡一样。","name":"selected_page=","namespace":"Sketchup::Pages","path":"Sketchup::Pages#selected_page=","type":"instance_method","visibility":"public","parameters":[["page",["Sketchup::Page"],null]],"return":[null,"状态-成功时为真"]},"Sketchup::Pages#show_frame_at":{"description":"show_frame_at方法用于在给定时间以秒为单位显示动画（幻灯片放映）中的帧。","name":"show_frame_at","namespace":"Sketchup::Pages","path":"Sketchup::Pages#show_frame_at","type":"instance_method","visibility":"public","parameters":[["seconds",null,"以秒为单位的时间。"]],"return":[null,"零"]},"Sketchup::Pages#size":{"description":"{#size}方法用于检索页数。","name":"size","namespace":"Sketchup::Pages","path":"Sketchup::Pages#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Pages#slideshow_time":{"description":"slideshow_time方法用于获取所有页面的幻灯片放映所需的时间。这将考虑到每个页面的转换时间和每个页面显示的时间量。","name":"slideshow_time","namespace":"Sketchup::Pages","path":"Sketchup::Pages#slideshow_time","type":"instance_method","visibility":"public","return":[null,"状态-成功时为真"]},"Sketchup::Pages.add_frame_change_observer":{"description":"{.add_frame_change_observer}方法用于添加一个新的帧更改观察者，该观察者与动画的每个帧一起调用，这意味着最终用户已经单击了SketchUp中的场景选项卡（也称为页面），并且相机正在为该场景设置动画。\\n \\n此方法返回一个整数ID，可以存储该ID，稍后使用SketchUp:：Pages删除观察者。请删除Frame Change Observer方法。","name":"add_frame_change_observer","namespace":"Sketchup::Pages","path":"Sketchup::Pages.add_frame_change_observer","type":"class_method","visibility":"public","parameters":[["object",["#frameChange"],"实现{Sketchup::FrameChangeObserver#frameChange}方法的对象。"]],"return":[["Integer"],"观察者的唯一ID"]},"Sketchup::Pages.remove_frame_change_observer":{"description":"{remove_frame_change_observer}方法用于删除帧更改观察器","name":"remove_frame_change_observer","namespace":"Sketchup::Pages","path":"Sketchup::Pages.remove_frame_change_observer","type":"class_method","visibility":"public","parameters":[["observer_id",["Integer"],"{.add_frame_change_observer}返回的唯一ID"]],"return":[["Boolean"],""]},"Sketchup::PagesObserver":{"description":"这个观察者接口被实现来响应页面事件。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并向感兴趣的对象添加观察者的实例。","name":"PagesObserver","namespace":"Sketchup","path":"Sketchup::PagesObserver","type":"class","visibility":"public"},"Sketchup::PagesObserver#onContentsModified":{"description":"每当页面更改时，都会调用{#onContentsModified}方法。","name":"onContentsModified","namespace":"Sketchup::PagesObserver","path":"Sketchup::PagesObserver#onContentsModified","type":"instance_method","visibility":"public","parameters":[["pages",["Sketchup::Pages"],null]],"return":[["nil"],""]},"Sketchup::PagesObserver#onElementAdded":{"description":"将元素添加到{Sketchup::Pages}对象时调用{#onElementAdded}方法。","name":"onElementAdded","namespace":"Sketchup::PagesObserver","path":"Sketchup::PagesObserver#onElementAdded","type":"instance_method","visibility":"public","parameters":[["pages",["Sketchup::Pages"],null],["page",["Sketchup::Page"],null]],"return":[["nil"],""]},"Sketchup::PagesObserver#onElementRemoved":{"description":"当从{Sketchup::Pages}对象中移除元素时，将调用{#onElementRemoved}方法。","name":"onElementRemoved","namespace":"Sketchup::PagesObserver","path":"Sketchup::PagesObserver#onElementRemoved","type":"instance_method","visibility":"public","parameters":[["pages",["Sketchup::Pages"],null],["page",["Sketchup::Page"],null]],"return":[["nil"],""]},"Sketchup::PickHelper":{"description":"PickHelper类用于选择驻留在当前光标位置下的实体。PickHelper和InputPoint相似，但InputPoint也使用推断。可以使用视图对象上的pick_helper方法来检索PickHelper对象。\\n \\n选取的实体（当鼠标或键盘事件发生时，在光标下找到）称为选取记录，并放置在索引列表中。","name":"PickHelper","namespace":"Sketchup","path":"Sketchup::PickHelper","type":"class","visibility":"public"},"Sketchup::PickHelper#all_picked":{"description":"all_picked方法用于从所有拾取路径的活动实体中获取实体数组。如果在一个组或组件中结束的实体有多个拾取路径，则可能会发生重复。\\n \\n例如，如果拾取击中边的边界，并且在组内面，则会有两个拾取路径-一个用于面，一个用于边。由于此方法从活动实体返回实体，它将返回两次带有组的数组。","name":"all_picked","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#all_picked","type":"instance_method","visibility":"public","return":[null,"元素-拾取中的元素数组。"]},"Sketchup::PickHelper#best_picked":{"description":"best_picked方法用于检索拾取的“最佳”实体（如果使用选择工具，则会拾取的实体）。\\n \\n如果未选择任何内容，则返回nil。在调用此方法之前，必须调用了do_pick\\n。","name":"best_picked","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#best_picked","type":"instance_method","visibility":"public","return":[null,"实体-最佳选择的实体"]},"Sketchup::PickHelper#boundingbox_pick":{"description":"用于从BoundingBox模型中选择一组实体。拾取条件可以用于完全包含或部分包含的实体，与选择工具的工作方式类似。","name":"boundingbox_pick","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#boundingbox_pick","type":"instance_method","visibility":"public","parameters":[["bounding_box",null,"定义要用于拾取的体积的BoundingBox对象"],["pick_type",null,"选择“内部”以选择完全包含的实体，或选择“PICK_CROSSING”以选择部分包含的实体。"],["transformation",["optional"],"将应用于由BoundingBox定义的允许旋转的卷的转换。"]],"return":[null,"拾取的实体对象数"]},"Sketchup::PickHelper#count":{"description":"count方法用于计算拾取的实体数（拾取记录数）","name":"count","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#count","type":"instance_method","visibility":"public","return":[null,"Number-拾取的实体数"]},"Sketchup::PickHelper#depth_at":{"description":"depth_at方法检索拾取记录列表中当前拾取的一个实体的深度。","name":"depth_at","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#depth_at","type":"instance_method","visibility":"public","parameters":[["index",null,"从0到所选项目数减去1的数字。"]],"return":[null,"integer-成功时实体的深度"]},"Sketchup::PickHelper#do_pick":{"description":"do_pick方法用于执行初始拾取。通常在PickHelper类中的任何其他方法之前调用此方法。\\n \\n返回选取的实体数。x和y值是要进行拾取的点的屏幕坐标。","name":"do_pick","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#do_pick","type":"instance_method","visibility":"public","parameters":[["x",null,"选择的X屏幕坐标。"],["y",null,"选择的Y屏幕坐标。"],["aperture",null,"拾取光圈的大小。"]],"return":[null,"整数-拾取的实体对象数"]},"Sketchup::PickHelper#element_at":{"description":"element_at方法用于检索所选元素列表中的特定实体。此元素将来自活动实体。\\n \\n使用count（）获取可能的选取路径数。","name":"element_at","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#element_at","type":"instance_method","visibility":"public","parameters":[["index",null,"从0到所选项目数减去1的数字。"]],"return":[null,"实体-选中实体列表中索引位置处的实体。"]},"Sketchup::PickHelper#init":{"description":"init方法用于初始化测试点的PickHelper。\\n \\n您通常不需要调用此方法，但如果要在很多点上调用test_point或pick_segment，则可以使用此方法。\\n \\n如果给定可选光圈，则以像素为单位。","name":"init","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#init","type":"instance_method","visibility":"public","parameters":[["x",null,"选择的X屏幕坐标。"],["y",null,"选择的Y屏幕坐标。"],["aperture",["optional"],"以像素为单位的光圈。"]],"return":[null,"P-接收器PickHelper对象"]},"Sketchup::PickHelper#leaf_at":{"description":"leaf_at方法检索拾取路径中最深的内容。\\n \\n例如，如果有一个面位于另一个组件内的组件内，则leaf_at将返回该面。\\n \\n使用count（）获取可能的选取路径数。","name":"leaf_at","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#leaf_at","type":"instance_method","visibility":"public","parameters":[["index",null,"从0到所选项目数减去1的数字。"]],"return":[null,"实体-叶实体"]},"Sketchup::PickHelper#path_at":{"description":"path_at方法用于检索拾取列表中实体的整个路径（作为数组）。\\n \\n如果其中一个拾取路径以嵌套在组件中的组中的面结束，则此方法将返回这些实体的数组。小组第一，脸最后。\\n \\n数组中的第一个项将来自活动实体，最后一个项将是不是组、组件或图像的绘图元素。","name":"path_at","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#path_at","type":"instance_method","visibility":"public","parameters":[["index",null,"从0到所选项目数减去1的数字。"]],"return":[null,"数组-包含叶的实体数组"]},"Sketchup::PickHelper#pick_segment":{"description":"pick_segment方法用于拾取由点数组定义的多段线曲线段。\\n \\n如果单击多段线曲线中的点，则返回曲线中点的索引（从0开始）。如果单击多段线曲线中的某段，则返回该段的索引。\\n段从索引-1开始（对于连接前两个点的段），并增加-1倍（例如，连接第二个点和第三个点的段为-2）。\\n \\n不需要为此调用do_pick，并且结果不相关。","name":"pick_segment","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#pick_segment","type":"instance_method","visibility":"public","parameters":[["array_or_list",null,"折线中的一系列Point3d个对象，作为参数列表或包含Point3d个对象的数组。"],["x",["optional"],"以像素为单位的屏幕鼠标位置。"],["aperture",["optional but requires x and y"],"以像素为单位的光圈。"],["y",["optional(required if x given)"],"屏幕鼠标位置\\n以像素为单位。"]],"return":[null,"索引-如果单击点，则为数组中点的索引；如果单击段，则为段的索引（如果成功）"]},"Sketchup::PickHelper#picked_edge":{"description":"picked_edge方法用于检索拾取的“最佳”边。\\n \\n如果没有选取边缘，则返回nil。在调用此方法之前，必须先调用do_pick\\n。","name":"picked_edge","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#picked_edge","type":"instance_method","visibility":"public","return":[null,"边缘-成功时的边缘对象"]},"Sketchup::PickHelper#picked_element":{"description":"picked_element方法检索最佳绘图元素，该元素不是拾取的边或面。\\n \\n如果未选择任何内容，则返回nil。在调用此方法之前，必须先调用do_pick\\n。","name":"picked_element","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#picked_element","type":"instance_method","visibility":"public","parameters":[["index",null,null]],"return":[null,"元素-如果成功，则不是边或面的绘图元素"]},"Sketchup::PickHelper#picked_face":{"description":"picked_face方法用于检索拾取的最佳面。\\n \\n如果没有拾取面，则返回nil。在调用此方法之前，必须调用了do_pick \\n。","name":"picked_face","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#picked_face","type":"instance_method","visibility":"public","return":[null,"面-如果成功，则为面对象"]},"Sketchup::PickHelper#test_point":{"description":"test_point方法用于测试一个点，以查看是否将使用默认或给定的拾取光圈选择该点。\\n \\n在第一个表单中，您必须已使用init方法初始化了PickHelper。如果您想使用相同的屏幕点测试很多点，这会更有效。\\n \\n在第二和第三种形式中，它使用屏幕点和作为第二到第四个参数传入的可选拾取光圈初始化PickHelper。\\n \\n没有必要为此调用do_pick，结果是不相关的。","name":"test_point","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#test_point","type":"instance_method","visibility":"public","parameters":[["point",null,"屏幕点。"],["x",["optional"],"x拾取位置。"],["aperture",["optional"],"以像素为单位的光圈。"],["y",["optional"],"y拾取位置。"]],"return":[null,"你会被选中-对还是错"]},"Sketchup::PickHelper#transformation_at":{"description":"transformation_at方法用于在pick helper中的特定pick path索引处获取转换。\\n \\n转换组合了选取路径中所有组、组件和图像的转换。此转换可用于将叶实体的坐标转换为活动实体的坐标。","name":"transformation_at","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#transformation_at","type":"instance_method","visibility":"public","parameters":[["index",null,"应在其中检索转换的索引。"]],"return":[null,"转换-找到的转换"]},"Sketchup::PickHelper#view":{"description":"view方法用于获取与PickHelper关联的视图。","name":"view","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#view","type":"instance_method","visibility":"public","return":[null,"视图-关联视图"]},"Sketchup::PickHelper#window_pick":{"description":"用于根据两点定义的屏幕坐标矩形区域从模型中选择一组实体。拾取条件可以用于完全包含或部分包含的实体，类似于选择工具的工作方式。忽略传入点的z值。","name":"window_pick","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper#window_pick","type":"instance_method","visibility":"public","parameters":[["start_point",null,"第一屏坐标点。"],["end_point",null,"第二屏坐标点。"],["pick_type",null,"选择“内部”以选择完全包含的实体，或选择“PICK_CROSSING”以选择部分包含的实体。"]],"return":[null,"拾取的实体对象数"]},"Sketchup::PickHelper::PICK_CROSSING":{"description":"常量","name":"PICK_CROSSING","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper::PICK_CROSSING","type":"constant","return":null,"visibility":"public"},"Sketchup::PickHelper::PICK_INSIDE":{"description":"存根值。","name":"PICK_INSIDE","namespace":"Sketchup::PickHelper","path":"Sketchup::PickHelper::PICK_INSIDE","type":"constant","return":null,"visibility":"public"},"Sketchup::RegionalSettings":{"description":"{Sketchup::RegionalSettings}模块包含获取用户区域设置信息的方法。\\n \\n请注意，当您在单位和字符串之间转换时，您不需要自己分析它，而是可以使用{String#to_l}和{Length#to_s}。","name":"RegionalSettings","namespace":"Sketchup","path":"Sketchup::RegionalSettings","type":"module","visibility":"public"},"Sketchup::RegionalSettings.decimal_separator":{"description":"返回当前用户区域设置的十进制字符。","name":"decimal_separator","namespace":"Sketchup::RegionalSettings","path":"Sketchup::RegionalSettings.decimal_separator","type":"module_function","visibility":"public","return":[["String"],"十进制分隔符"]},"Sketchup::RegionalSettings.list_separator":{"description":"返回当前用户区域设置的列表分隔符。","name":"list_separator","namespace":"Sketchup::RegionalSettings","path":"Sketchup::RegionalSettings.list_separator","type":"module_function","visibility":"public","return":[["String"],"列表分隔符"]},"Sketchup::RenderingOptions":{"description":"RenderingOptions类包含提取模型的呈现信息的方法。返回的大部分渲染信息都存在于样式对话框中。在SketchUp中维护以下呈现信息键：\\n \\n-+BackgroundColor+ \\n-+HighlightColor+8 \\n-+ConstructionColor+ \\n-+DepthQueWidth+ \\n-+HorizonColor+1 \\n-+HorizonColor+2 \\n-+HorizonColor+3 \\n-+DisplayWatermarks+ \\n-+GroundColor+ \\n-+DrawGround+ \\n-+DrawHidden+ \\n-+HorizonColor+8 \\n-+HorizonColor+9 \\n-+DrawProfilesOnly+ \\n-+DrawSilhouettes+ \\n-+DrawUnderground+ \\n-+EdgeColorMode+ \\n-+EdgeDisplayMode+ \\n-+EdgeType+ \\n-+ExtendLines+ \\n-+FaceBackColor+ \\n-+FaceColorMode+ \\n-+FaceFrontColor+ \\n-+FogColor+ \\n-+FogEndDist+ \\n-+FogStartDist+ \\n-+FogUseBkColor+ \\n-+FogUseBkColor+ \\n-+ForegroundColor+ \\n-+GroundColor+ \\n-+GroundTransparency+ \\n-+HideConstructionGeometry+ \\n-+HighlightColor+ \\n-+HighlightColor+ \\n-+HorizonColor+ \\n-+HorizonColor+ \\n-+JitterEdges+0 \\n-+JitterEdges+1 \\n-+JitterEdges+2 \\n-+JitterEdges+2 \\ \\n-+JitterEdges+3 \\ \\n-+JitterEdges+4 \\n-+JitterEdges+4 \\n-+JitterEdges+5 \\n-+JitterEdges+5 \\ \\n-+JitterEdges+6 \\n-+JitterEdges+26 \\-+JitterEdges+6 \\-+JitterEdges+6 \\ \\n--+ShowViewName+\\n-+SilhouetteWidth+\\n-+SkyColor+ \\n-+Texture+ \\n-+TransparencySort+ SketchUp 2017将中等透明度处理得更快。\\n \\n在SketchUp 7中添加\\n-+DisplayDims+ \\n-+DisplaySketchAxes+ \\n-+DisplayText+ \\n \\n在SketchUp 8中添加\\n-+InactiveFade+ \\n-+LineExtension+2 \\n \\n在SketchUp 2014中添加\\n-+DisplaySectionPlanes+ \\n \\n在SketchUp 2015中添加\\n-+DisplaySectionCuts+ \\n-+DrawBackEdges+ \\n-+SectionCutDrawEdges+","name":"RenderingOptions","namespace":"Sketchup","path":"Sketchup::RenderingOptions","type":"class","visibility":"public"},"Sketchup::RenderingOptions#[]":{"description":"set value[]方法用于获取呈现选项数组中的值。","name":"[]","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#[]","type":"instance_method","visibility":"public","parameters":[["key",["String"],"要设置的呈现选项值的键。"]],"return":[["Object","nil"],"找到的值。"]},"Sketchup::RenderingOptions#[]=":{"description":"设置值[]=方法用于设置渲染选项数组中的值。","name":"[]=","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#[]=","type":"instance_method","visibility":"public","parameters":[["key",["String"],"要设置的呈现选项值的键。"],["value",["Object"],"要设置的值。"]],"return":[["Object"],"设置的值"]},"Sketchup::RenderingOptions#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::RenderingOptions#count":{"description":"{#count}方法继承自+Enumerable+混入模块。","name":"count","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::RenderingOptions#each":{"description":"{#each}方法迭代所有呈现选项键/值对。","name":"each","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::RenderingOptions#each_key":{"description":"each_key方法迭代所有渲染选项键。","name":"each_key","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#each_key","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::RenderingOptions#each_pair":{"description":"{#each_pair}方法是{#each}的别名。","name":"each_pair","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#each_pair","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::RenderingOptions#keys":{"description":"keys方法返回一个包含所有属性键的数组。","name":"keys","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#keys","type":"instance_method","visibility":"public","return":[["Array<String>"],"一组键"]},"Sketchup::RenderingOptions#length":{"description":"{#length}方法返回“渲染选项”集合中的选项数。","name":"length","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::RenderingOptions#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::RenderingOptions#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::RenderingOptions.each_key":{"description":"each_key方法迭代所有渲染选项键。","name":"each_key","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions.each_key","type":"class_method","visibility":"public","return":[["nil"],""]},"Sketchup::RenderingOptions.keys":{"description":"keys方法返回一个包含所有属性键的数组。","name":"keys","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions.keys","type":"class_method","visibility":"public","return":[["Array<String>"],"一组键"]},"Sketchup::RenderingOptions::ROPAssign":{"description":"常量","name":"ROPAssign","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPAssign","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPDrawHidden":{"description":"存根值。","name":"ROPDrawHidden","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPDrawHidden","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPEditComponent":{"description":"存根值。","name":"ROPEditComponent","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPEditComponent","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetBackgroundColor":{"description":"存根值。","name":"ROPSetBackgroundColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetBackgroundColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetConstructionColor":{"description":"存根值。","name":"ROPSetConstructionColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetConstructionColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDepthQueEdges":{"description":"存根值。","name":"ROPSetDepthQueEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDepthQueEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDepthQueWidth":{"description":"存根值。","name":"ROPSetDepthQueWidth","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDepthQueWidth","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplayColorByLayer":{"description":"存根值。","name":"ROPSetDisplayColorByLayer","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplayColorByLayer","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplayDims":{"description":"存根值。","name":"ROPSetDisplayDims","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplayDims","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplayFog":{"description":"存根值。","name":"ROPSetDisplayFog","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplayFog","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplayInstanceAxes":{"description":"存根值。","name":"ROPSetDisplayInstanceAxes","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplayInstanceAxes","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplaySketchAxes":{"description":"存根值。","name":"ROPSetDisplaySketchAxes","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplaySketchAxes","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplayText":{"description":"存根值。","name":"ROPSetDisplayText","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplayText","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDisplayWatermarks":{"description":"存根值。","name":"ROPSetDisplayWatermarks","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDisplayWatermarks","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDrawBackEdges":{"description":"存根值。","name":"ROPSetDrawBackEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDrawBackEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDrawGround":{"description":"存根值。","name":"ROPSetDrawGround","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDrawGround","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDrawHorizon":{"description":"存根值。","name":"ROPSetDrawHorizon","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDrawHorizon","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetDrawUnderground":{"description":"存根值。","name":"ROPSetDrawUnderground","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetDrawUnderground","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetEdgeColorMode":{"description":"存根值。","name":"ROPSetEdgeColorMode","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetEdgeColorMode","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetEdgeDisplayMode":{"description":"存根值。","name":"ROPSetEdgeDisplayMode","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetEdgeDisplayMode","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetEdgeType":{"description":"存根值。","name":"ROPSetEdgeType","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetEdgeType","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetExtendEdges":{"description":"存根值。","name":"ROPSetExtendEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetExtendEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetExtendLines":{"description":"存根值。","name":"ROPSetExtendLines","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetExtendLines","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetFaceColor":{"description":"存根值。","name":"ROPSetFaceColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetFaceColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetFaceColorMode":{"description":"存根值。","name":"ROPSetFaceColorMode","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetFaceColorMode","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetFogColor":{"description":"存根值。","name":"ROPSetFogColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetFogColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetFogDist":{"description":"存根值。","name":"ROPSetFogDist","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetFogDist","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetFogHint":{"description":"存根值。","name":"ROPSetFogHint","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetFogHint","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetFogUseBkColor":{"description":"存根值。","name":"ROPSetFogUseBkColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetFogUseBkColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetForegroundColor":{"description":"存根值。","name":"ROPSetForegroundColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetForegroundColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetGroundColor":{"description":"存根值。","name":"ROPSetGroundColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetGroundColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetGroundTransparency":{"description":"存根值。","name":"ROPSetGroundTransparency","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetGroundTransparency","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetHideConstructionGeometry":{"description":"存根值。","name":"ROPSetHideConstructionGeometry","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetHideConstructionGeometry","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetHighlightColor":{"description":"存根值。","name":"ROPSetHighlightColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetHighlightColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetJitterEdges":{"description":"存根值。","name":"ROPSetJitterEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetJitterEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetLineEndEdges":{"description":"存根值。","name":"ROPSetLineEndEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetLineEndEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetLineEndWidth":{"description":"存根值。","name":"ROPSetLineEndWidth","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetLineEndWidth","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetLineExtension":{"description":"存根值。","name":"ROPSetLineExtension","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetLineExtension","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetLockedColor":{"description":"存根值。","name":"ROPSetLockedColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetLockedColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetMaterialTransparency":{"description":"存根值。","name":"ROPSetMaterialTransparency","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetMaterialTransparency","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetModelTransparency":{"description":"存根值。","name":"ROPSetModelTransparency","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetModelTransparency","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetPhotomatchBackgroundOpacity":{"description":"存根值。","name":"ROPSetPhotomatchBackgroundOpacity","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetPhotomatchBackgroundOpacity","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetPhotomatchDrawBackground":{"description":"存根值。","name":"ROPSetPhotomatchDrawBackground","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetPhotomatchDrawBackground","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetPhotomatchDrawOverlay":{"description":"存根值。","name":"ROPSetPhotomatchDrawOverlay","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetPhotomatchDrawOverlay","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetPhotomatchOverlayOpacity":{"description":"存根值。","name":"ROPSetPhotomatchOverlayOpacity","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetPhotomatchOverlayOpacity","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetProfileEdges":{"description":"存根值。","name":"ROPSetProfileEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetProfileEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetProfileWidth":{"description":"存根值。","name":"ROPSetProfileWidth","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetProfileWidth","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetProfilesOnlyEdges":{"description":"存根值。","name":"ROPSetProfilesOnlyEdges","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetProfilesOnlyEdges","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetRenderMode":{"description":"存根值。","name":"ROPSetRenderMode","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetRenderMode","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetSectionActiveColor":{"description":"存根值。","name":"ROPSetSectionActiveColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetSectionActiveColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetSectionCutWidth":{"description":"存根值。","name":"ROPSetSectionCutWidth","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetSectionCutWidth","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetSectionDefaultCutColor":{"description":"存根值。","name":"ROPSetSectionDefaultCutColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetSectionDefaultCutColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetSectionDisplayMode":{"description":"存根值。","name":"ROPSetSectionDisplayMode","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetSectionDisplayMode","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetSectionInactiveColor":{"description":"存根值。","name":"ROPSetSectionInactiveColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetSectionInactiveColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetSkyColor":{"description":"存根值。","name":"ROPSetSkyColor","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetSkyColor","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetTexture":{"description":"存根值。","name":"ROPSetTexture","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetTexture","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetTransparencyObsolete":{"description":"存根值。","name":"ROPSetTransparencyObsolete","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetTransparencyObsolete","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPSetXRayOpacity":{"description":"存根值。","name":"ROPSetXRayOpacity","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPSetXRayOpacity","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptions::ROPTransparencySortMethod":{"description":"存根值。","name":"ROPTransparencySortMethod","namespace":"Sketchup::RenderingOptions","path":"Sketchup::RenderingOptions::ROPTransparencySortMethod","type":"constant","return":null,"visibility":"public"},"Sketchup::RenderingOptionsObserver":{"description":"此观察器接口实现为响应呈现选项事件。\\n若要实现此观察者，请创建此类型的Ruby类，实现所需的方法，并向感兴趣的对象添加该观察者的实例。","name":"RenderingOptionsObserver","namespace":"Sketchup","path":"Sketchup::RenderingOptionsObserver","type":"class","visibility":"public"},"Sketchup::RenderingOptionsObserver#onRenderingOptionsChanged":{"description":"每当用户更改其呈现选项时，都会调用onRenderingOptionsChanged方法。","name":"onRenderingOptionsChanged","namespace":"Sketchup::RenderingOptionsObserver","path":"Sketchup::RenderingOptionsObserver#onRenderingOptionsChanged","type":"instance_method","visibility":"public","parameters":[["type",["Integer"],"一个指示哪个选项被更改的数字，由{Sketchup::RenderingOptions}中定义的一个常量表示。"],["rendering_options",["Sketchup::RenderingOptions"],null]]},"Sketchup::SectionPlane":{"description":"SectionPlane类表示草图模型中的剖面。注意，在SketchUp 2014之前，没有办法使用Ruby创建一个SectionPlane对象。对于旧版本的SketchUp，必须使用SketchUp中的“截面平面”工具手动创建截面平面，然后查询实体数组以查找SectionPlane对象。","name":"SectionPlane","namespace":"Sketchup","path":"Sketchup::SectionPlane","type":"class","visibility":"public"},"Sketchup::SectionPlane#activate":{"description":"activate方法用于使截面平面成为其父组件/组的活动平面。","name":"activate","namespace":"Sketchup::SectionPlane","path":"Sketchup::SectionPlane#activate","type":"instance_method","visibility":"public","return":[null,"成功的话就自己"]},"Sketchup::SectionPlane#active?":{"description":"active?方法指示截面平面是否处于活动状态。","name":"active?","namespace":"Sketchup::SectionPlane","path":"Sketchup::SectionPlane#active?","type":"instance_method","visibility":"public","return":[["Boolean"],"布尔值-如果激活则为真"]},"Sketchup::SectionPlane#get_plane":{"description":"get_plane方法用于检索剖面所在的平面。","name":"get_plane","namespace":"Sketchup::SectionPlane","path":"Sketchup::SectionPlane#get_plane","type":"instance_method","visibility":"public","return":[null,"飞机-飞机。有关平面的详细信息，请参见geom模块和数组类。"]},"Sketchup::SectionPlane#set_plane":{"description":"set_plane方法用于设置截面平面所在的平面。","name":"set_plane","namespace":"Sketchup::SectionPlane","path":"Sketchup::SectionPlane#set_plane","type":"instance_method","visibility":"public","parameters":[["plane",null,"表示新平面的数组，"]],"return":[null,"剖面图-更新的SectionPlane。"]},"Sketchup::Selection":{"description":"一组当前选定的实体。使用Model.selection方法获取选择对象。请注意，集合中实体的顺序\\n（+ModelTransparency+2、+ModelTransparency+3等）不是特定的顺序，不应假定为与用户选择实体的顺序相同。","name":"Selection","namespace":"Sketchup","path":"Sketchup::Selection","type":"class","visibility":"public"},"Sketchup::Selection#[]":{"description":"[]方法用于按索引从所选内容中检索\\n {Sketchup::Entity}。索引0是所选内容中的第一个实体。\\n \\n此方法不是很有效。如果需要查看所选内容中的每个实体，请考虑使用{#each}而不是使用此方法手动获取每个实体。","name":"[]","namespace":"Sketchup::Selection","path":"Sketchup::Selection#[]","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"要检索的实体对象的索引。"]],"return":[["Sketchup::Entitiy","nil"],""]},"Sketchup::Selection#add":{"description":"add方法用于向选择中添加实体。添加到选择中的实体由选择边界框直观地指示。\\n \\n您可以将单个实体或实体数组传递给它：\\n请注意，添加、删除和切换方法都是彼此的别名。因此，如果对未选中的实体调用“删除”，则该实体将被切换为选中，而不是删除！在编写代码时要小心，不要假设给定实体的当前选定状态。","name":"add","namespace":"Sketchup::Selection","path":"Sketchup::Selection#add","type":"instance_method","visibility":"public","parameters":[["ents_or_array",["Array<Sketchup::Entity>"],"实体对象的列表或数组。"]],"return":[["Integer"],"添加的实体对象数"]},"Sketchup::Selection#add_observer":{"description":"add_observer方法用于向选择对象添加观察者。","name":"add_observer","namespace":"Sketchup::Selection","path":"Sketchup::Selection#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Selection#at":{"description":"{#at}方法是[]的别名。","name":"at","namespace":"Sketchup::Selection","path":"Sketchup::Selection#at","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"要检索的实体对象的索引。"]],"return":[["Sketchup::Entitiy","nil"],""]},"Sketchup::Selection#clear":{"description":"clear方法用于清除选择。","name":"clear","namespace":"Sketchup::Selection","path":"Sketchup::Selection#clear","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Selection#contains?":{"description":"{contains?}方法是{#include?}的和别名。","name":"contains?","namespace":"Sketchup::Selection","path":"Sketchup::Selection#contains?","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],""]],"return":[["Boolean"],""]},"Sketchup::Selection#count":{"description":"","name":"count","namespace":"Sketchup::Selection","path":"Sketchup::Selection#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Selection#each":{"description":"each方法用于迭代所有选定的实体。\\n \\n如果要对所有选定的实体执行某些操作，则这比使用[]更有效。","name":"each","namespace":"Sketchup::Selection","path":"Sketchup::Selection#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Selection#empty?":{"description":"empty?方法用于确定选择中是否存在实体。","name":"empty?","namespace":"Sketchup::Selection","path":"Sketchup::Selection#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果选择为空，则为true。如果所选内容不为空，则为false。"]},"Sketchup::Selection#first":{"description":"first方法用于检索第一个选定的实体\\n \\n如果未选择任何内容，则返回nil。当您知道只选择了一个实体，或者您只对第一个选定的实体感兴趣时，此方法非常有用。","name":"first","namespace":"Sketchup::Selection","path":"Sketchup::Selection#first","type":"instance_method","visibility":"public","return":[["Sketchup::Entity"],"第一个选定实体对象（如果成功）"]},"Sketchup::Selection#include?":{"description":"{include?}方法用于确定给定的{Sketchup::Entity}是否在选择中。","name":"include?","namespace":"Sketchup::Selection","path":"Sketchup::Selection#include?","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],""]],"return":[["Boolean"],""]},"Sketchup::Selection#is_curve?":{"description":"is_curve?方法用于确定所选内容是否包含属于单个曲线的所有边。","name":"is_curve?","namespace":"Sketchup::Selection","path":"Sketchup::Selection#is_curve?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果所选内容包含属于单个曲线的所有边，则为true。如果所选内容不包含属于单个曲线的所有边，则为false。"]},"Sketchup::Selection#is_surface?":{"description":"is_surface?方法用于确定选择是否仅包含属于单个曲面的所有面。","name":"is_surface?","namespace":"Sketchup::Selection","path":"Sketchup::Selection#is_surface?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果所选内容包含属于单个曲面的所有面，则为true。如果所选内容不包含属于单个曲面的所有面，则为false。"]},"Sketchup::Selection#length":{"description":"{#length}方法用于检索选定实体的数量。","name":"length","namespace":"Sketchup::Selection","path":"Sketchup::Selection#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Selection#model":{"description":"model方法检索选择的模型。","name":"model","namespace":"Sketchup::Selection","path":"Sketchup::Selection#model","type":"instance_method","visibility":"public","return":[["Sketchup::Model"],"成功时包含所选内容的模型"]},"Sketchup::Selection#nitems":{"description":"{#nitems}方法是{#length}的别名。","name":"nitems","namespace":"Sketchup::Selection","path":"Sketchup::Selection#nitems","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Selection#remove":{"description":"remove方法用于从选择中删除实体。\\n \\n您可以将单个实体或实体数组传递给它：\\n请注意，添加、删除和切换方法都是彼此的别名。因此，如果对未选中的实体调用“删除”，则该实体将被切换为选中，而不是删除！在编写代码时要小心，不要假设给定实体的当前选定状态。","name":"remove","namespace":"Sketchup::Selection","path":"Sketchup::Selection#remove","type":"instance_method","visibility":"public","parameters":[["ents_or_array",["Array<Sketchup::Entity>"],"实体对象的列表或数组。"]],"return":[["Integer"],"删除的实体对象数"]},"Sketchup::Selection#remove_observer":{"description":"remove_observer方法用于从选择对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::Selection","path":"Sketchup::Selection#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Selection#shift":{"description":"shift方法用于从所选内容中删除第一个实体并返回它。","name":"shift","namespace":"Sketchup::Selection","path":"Sketchup::Selection#shift","type":"instance_method","visibility":"public","return":[["Sketchup::Entity"],"选择集中的第一个实体对象（如果成功）"]},"Sketchup::Selection#single_object?":{"description":"single_object?方法用于确定所选内容是否包含单个对象。\\n \\n它可以是单个实体，也可以是一组“曲线”实体。\\n还是\\u surface？将返回true。","name":"single_object?","namespace":"Sketchup::Selection","path":"Sketchup::Selection#single_object?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果所选内容包含单个对象，则为true。如果所选内容不包含单个对象，则为false。"]},"Sketchup::Selection#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::Selection","path":"Sketchup::Selection#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Selection#toggle":{"description":"toggle方法用于更改实体是否是所选内容的一部分。将添加尚未选定的实体。已选定的实体将被删除。\\n \\n您可以将单个实体或实体数组传递给它：\\n请注意，添加、删除和切换方法都是彼此的别名。因此，如果对未选中的实体调用“删除”，则该实体将被切换为选中，而不是删除！在编写代码时要小心，不要假设给定实体的当前选定状态。","name":"toggle","namespace":"Sketchup::Selection","path":"Sketchup::Selection#toggle","type":"instance_method","visibility":"public","parameters":[["ents_or_array",["Array<Sketchup::Entity>"],"实体对象的列表或数组。"]],"return":[["Integer"],"更改的实体对象数"]},"Sketchup::SelectionObserver":{"description":"这个观测器接口被实现来响应选择事件。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并向感兴趣的对象添加观察者的实例。","name":"SelectionObserver","namespace":"Sketchup","path":"Sketchup::SelectionObserver","type":"class","visibility":"public"},"Sketchup::SelectionObserver#onSelectionAdded":{"description":"","name":"onSelectionAdded","namespace":"Sketchup::SelectionObserver","path":"Sketchup::SelectionObserver#onSelectionAdded","type":"instance_method","visibility":"public","parameters":[["selection",["Sketchup::Selection"],null],["entity",["Sketchup::Entity"],null]],"return":[["nil"],""]},"Sketchup::SelectionObserver#onSelectionBulkChange":{"description":"每当从选择集中添加或删除项时，都会调用{#onSelectionBulkChange}方法。\\n \\n如果通过单击空模型空间清除选择，则不会触发\\n {#onSelectionBulkChange}回调。使用{#onSelectionCleared} \\n方法捕获此情况。","name":"onSelectionBulkChange","namespace":"Sketchup::SelectionObserver","path":"Sketchup::SelectionObserver#onSelectionBulkChange","type":"instance_method","visibility":"public","parameters":[["selection",["Sketchup::Selection"],null]],"return":[["nil"],""]},"Sketchup::SelectionObserver#onSelectionCleared":{"description":"当选择被完全清空时，调用{#onSelectionCleared}方法。","name":"onSelectionCleared","namespace":"Sketchup::SelectionObserver","path":"Sketchup::SelectionObserver#onSelectionCleared","type":"instance_method","visibility":"public","parameters":[["selection",["Sketchup::Selection"],null]],"return":[["nil"],""]},"Sketchup::SelectionObserver#onSelectionRemoved":{"description":"","name":"onSelectionRemoved","namespace":"Sketchup::SelectionObserver","path":"Sketchup::SelectionObserver#onSelectionRemoved","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],null],["selection",["Sketchup::Selection"],null]],"return":[["nil"],""]},"Sketchup::Set":{"description":"set类表示唯一对象的集合。此类对于跟踪一组相关实体非常有用，有点像一个选择集，它可以在需要时一直保留。\\n \\n若要创建自己的集合，请使用SketchUp:：Set.New创建一个空集合，然后向其中添加项。","name":"Set","namespace":"Sketchup","path":"Sketchup::Set","type":"class","visibility":"public"},"Sketchup::Set#clear":{"description":"clear方法用于清除集合中的所有对象。","name":"clear","namespace":"Sketchup::Set","path":"Sketchup::Set#clear","type":"instance_method","visibility":"public","return":[null,"set-空的set对象"]},"Sketchup::Set#contains?":{"description":"{#contains?}方法是{#include?}的别名。","name":"contains?","namespace":"Sketchup::Set","path":"Sketchup::Set#contains?","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],null]],"return":[["Boolean"],""]},"Sketchup::Set#delete":{"description":"删除对象用于从集合中删除对象。","name":"delete","namespace":"Sketchup::Set","path":"Sketchup::Set#delete","type":"instance_method","visibility":"public","parameters":[["object",null,"要删除的对象。"]],"return":[null,"对象-已删除的对象。"]},"Sketchup::Set#each":{"description":"each方法用于遍历集合中的所有对象。","name":"each","namespace":"Sketchup::Set","path":"Sketchup::Set#each","type":"instance_method","visibility":"public"},"Sketchup::Set#empty?":{"description":"empty?方法用于确定集合是否为空。","name":"empty?","namespace":"Sketchup::Set","path":"Sketchup::Set#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],"状态-如果集合为空，则为真；如果集合不为空，则为假。"]},"Sketchup::Set#include?":{"description":"{#include?}方法用于确定集合是否包含特定对象。","name":"include?","namespace":"Sketchup::Set","path":"Sketchup::Set#include?","type":"instance_method","visibility":"public","parameters":[["entity",["Sketchup::Entity"],null]],"return":[["Boolean"],""]},"Sketchup::Set#insert":{"description":"insert方法用于将对象插入到集合中。","name":"insert","namespace":"Sketchup::Set","path":"Sketchup::Set#insert","type":"instance_method","visibility":"public","parameters":[["object",null,"要插入到集合中的对象。"]],"return":[null,"大小-集合中的对象数"]},"Sketchup::Set#length":{"description":"{#length}方法是{#size}的别名。","name":"length","namespace":"Sketchup::Set","path":"Sketchup::Set#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Set#size":{"description":"{#size}方法用于确定集合中的对象数。","name":"size","namespace":"Sketchup::Set","path":"Sketchup::Set#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Set#to_a":{"description":"to_a方法用于获取集合中的实体数组。","name":"to_a","namespace":"Sketchup::Set","path":"Sketchup::Set#to_a","type":"instance_method","visibility":"public","return":[null,"数组-集合中实体的数组。"]},"Sketchup::ShadowInfo":{"description":"ShadowInfo类包含提取模型阴影信息的方法。返回的大部分阴影信息存在于SketchUp内的“模型信息>位置和模型信息>阴影”对话框中。\\n \\n在SketchUp中维护以下阴影信息键：\\n \\n-+City+（在模型信息>地理位置>设置手动位置…）请注意，在UI中“城市”称为“位置”（在模型信息>地理位置>设置手动位置…）\\n-+Dark+（在窗口>阴影中）\\n-+DayOfYear+\\n-+DaylightSavings+\\n-+DisplayNorth+（在视图>T中）oolbars>solar north）注意，“工具栏”在mac上称为“工具选项板”。在mac上\\n-+DisplayOnAllFaces+（在window中>shadows中）：n-+DisplayOnGroundPlane+（在window中>shadows中）：n-+DisplayShadows+（在window中>shadows中）：n-+EdgesCastShadows+（在window中>shadows中）：n-+Latitude+（在model info中>geo location中>set manual location…）\\n-+Light+（在window中>shadows中）：n-+Longitude+（在model info中地理位置>设置手动位置…）\\n-+North+角度（在“视图>工具栏>太阳北”中），注意“工具栏”在Mac上称为“工具选项板”。\\n-+ShadowTime+（在“窗口>阴影”中），n-+ShadowTime_time_t+（在epoch时间中为ShadowTime），n-+SunDirection+（基于ShadowTime生成），n-+SunRise+（基于ShadowTime生成），n-+SunRise_time_t+（在epoch时间中为SunRise），n-+SunDirection+6（基于ShadowTime生成）\\n-+SunSet_time_t+（在epoch time中为SunSet）\\n-+TZOffset+（在window>shadows中）\\n-+UseSunForAllShading+（在window>shadows中）\\n \\n通过调用model.shadow\\u info访问ShadowInfo对象：","name":"ShadowInfo","namespace":"Sketchup","path":"Sketchup::ShadowInfo","type":"class","visibility":"public"},"Sketchup::ShadowInfo#[]":{"description":"[]方法从键数组中检索值","name":"[]","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#[]","type":"instance_method","visibility":"public","parameters":[["key",["String"],"要检索的shadowInfo值的键。"]],"return":[["Object","nil"],"检索到的值。"]},"Sketchup::ShadowInfo#[]=":{"description":"set value[]=方法用于设置阴影信息选项数组中的值。","name":"[]=","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#[]=","type":"instance_method","visibility":"public","parameters":[["key",["String"],"要设置的shadowInfo值的键。"],["value",["Object"],"要设置的值。"]],"return":[["Object"],"成功时设置的值，或失败时设置为false。"]},"Sketchup::ShadowInfo#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::ShadowInfo#count":{"description":"count方法继承自可枚举混合输入模块。","name":"count","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::ShadowInfo#each":{"description":"{#each}方法迭代所有阴影信息键/值对。","name":"each","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::ShadowInfo#each_key":{"description":"each_key方法迭代所有阴影信息键。","name":"each_key","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#each_key","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::ShadowInfo#each_pair":{"description":"{each_pair}方法是{#each}的别名。","name":"each_pair","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#each_pair","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::ShadowInfo#keys":{"description":"keys方法是一个类方法，它返回具有所有属性键的数组","name":"keys","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#keys","type":"instance_method","visibility":"public","return":[["Array<String>"],"一组键"]},"Sketchup::ShadowInfo#length":{"description":"{#length}方法返回shadow options集合中的选项数","name":"length","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::ShadowInfo#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::ShadowInfo#size":{"description":"{#size}方法是{#length}的别名。","name":"size","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::ShadowInfo.each_key":{"description":"each_key方法迭代所有阴影信息键。","name":"each_key","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo.each_key","type":"class_method","visibility":"public","return":[["nil"],""]},"Sketchup::ShadowInfo.keys":{"description":"keys方法是一个类方法，它返回具有所有属性键的数组","name":"keys","namespace":"Sketchup::ShadowInfo","path":"Sketchup::ShadowInfo.keys","type":"class_method","visibility":"public","return":[["Array<String>"],"一组键"]},"Sketchup::ShadowInfoObserver":{"description":"此观察器接口实现为响应对阴影设置的更改。要实现这个观察者，请创建一个这种类型的Ruby类，覆盖所需的方法，并向{Sketchup::ShadowInfo}对象添加一个观察者实例。","name":"ShadowInfoObserver","namespace":"Sketchup","path":"Sketchup::ShadowInfoObserver","type":"class","visibility":"public"},"Sketchup::ShadowInfoObserver#onShadowInfoChanged":{"description":"每当用户更改“阴影和模型信息”对话框中的设置时，都会调用{#onShadowInfoChanged}方法。type参数包含一个数字，用于标识更改了哪个选项。以下是预期的类型：\\n\\n-0=时间/日期滑块\\n-1=显示阴影复选框\\n-2=亮/暗滑块\\n-3=地理位置（在模型信息>位置中）\\n-4=日光方向（在模型信息>位置中）\\n-7=使用日光进行着色复选框\\n-8=从边缘显示复选框\\n-9=地面显示复选框\\n-10=显示在面上复选框","name":"onShadowInfoChanged","namespace":"Sketchup::ShadowInfoObserver","path":"Sketchup::ShadowInfoObserver#onShadowInfoChanged","type":"instance_method","visibility":"public","parameters":[["shadow_info",["Sketchup::ShadowInfo"],null],["type",["Integer"],"标识更改了哪个设置的数字。"]],"return":[["nil"],""]},"Sketchup::Style":{"description":"Style类包含用于修改特定样式信息的方法。样式是指示SketchUp如何绘制模型的显示设置的集合。","name":"Style","namespace":"Sketchup","path":"Sketchup::Style","type":"class","visibility":"public"},"Sketchup::Style#description":{"description":"{#description}方法获取{Sketchup::Style}的描述。","name":"description","namespace":"Sketchup::Style","path":"Sketchup::Style#description","type":"instance_method","visibility":"public","return":[["String"],"描述"]},"Sketchup::Style#description=":{"description":"{#description=}方法为{Sketchup::Style}设置描述。","name":"description=","namespace":"Sketchup::Style","path":"Sketchup::Style#description=","type":"instance_method","visibility":"public","parameters":[["description",["String"],null]]},"Sketchup::Style#name":{"description":"{#name}方法获取{Sketchup::Style}的名称。","name":"name","namespace":"Sketchup::Style","path":"Sketchup::Style#name","type":"instance_method","visibility":"public","return":[["String"],""]},"Sketchup::Style#name=":{"description":"{#name=}方法为{Sketchup::Style}设置名称。","name":"name=","namespace":"Sketchup::Style","path":"Sketchup::Style#name=","type":"instance_method","visibility":"public","parameters":[["name",["String"],null]]},"Sketchup::Styles":{"description":"Styles类包含用于操作模型中样式集合的方法。通常，您将通过活动的\\模型访问：","name":"Styles","namespace":"Sketchup","path":"Sketchup::Styles","type":"class","visibility":"public"},"Sketchup::Styles#[]":{"description":"使用[]方法按名称或索引检索样式。","name":"[]","namespace":"Sketchup::Styles","path":"Sketchup::Styles#[]","type":"instance_method","visibility":"public"},"Sketchup::Styles#active_style":{"description":"{active_style}方法用于检索活动样式。","name":"active_style","namespace":"Sketchup::Styles","path":"Sketchup::Styles#active_style","type":"instance_method","visibility":"public","return":[["Sketchup::Style"],""]},"Sketchup::Styles#active_style_changed":{"description":"{#active_style_changed}方法告诉您自上次保存活动样式以来，该样式是否已被用户编辑过。","name":"active_style_changed","namespace":"Sketchup::Styles","path":"Sketchup::Styles#active_style_changed","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Sketchup::Styles#add_style":{"description":"{#add_style}方法用于从给定文件创建和加载样式。","name":"add_style","namespace":"Sketchup::Styles","path":"Sketchup::Styles#add_style","type":"instance_method","visibility":"public","parameters":[["filename",["String"],null],["select",["Boolean"],"+true+如果要将样式设置为活动样式。"]],"return":[["Boolean"],""]},"Sketchup::Styles#count":{"description":"","name":"count","namespace":"Sketchup::Styles","path":"Sketchup::Styles#count","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Styles#each":{"description":"{#each}方法用于迭代样式。","name":"each","namespace":"Sketchup::Styles","path":"Sketchup::Styles#each","type":"instance_method","visibility":"public","return":[["nil"],""]},"Sketchup::Styles#length":{"description":"{#length}方法是{#size}的别名。","name":"length","namespace":"Sketchup::Styles","path":"Sketchup::Styles#length","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Styles#parent":{"description":"{#parent}方法用于返回样式的模型。","name":"parent","namespace":"Sketchup::Styles","path":"Sketchup::Styles#parent","type":"instance_method","visibility":"public","return":[["Sketchup::Model"],""]},"Sketchup::Styles#purge_unused":{"description":"{#purge_unused}方法用于从模型中删除未使用的样式。","name":"purge_unused","namespace":"Sketchup::Styles","path":"Sketchup::Styles#purge_unused","type":"instance_method","visibility":"public","return":[["true"],""]},"Sketchup::Styles#selected_style":{"description":"{#selected_style}方法用于检索当前选定的样式。","name":"selected_style","namespace":"Sketchup::Styles","path":"Sketchup::Styles#selected_style","type":"instance_method","visibility":"public","return":[["Sketchup::Style"],"风格"]},"Sketchup::Styles#selected_style=":{"description":"{#selected_style=}方法用于设置当前选定的样式。","name":"selected_style=","namespace":"Sketchup::Styles","path":"Sketchup::Styles#selected_style=","type":"instance_method","visibility":"public","parameters":[["style",["Sketchup::Style"],null]],"return":[["false"],""]},"Sketchup::Styles#size":{"description":"{#size}方法用于检索集合中的样式数。","name":"size","namespace":"Sketchup::Styles","path":"Sketchup::Styles#size","type":"instance_method","visibility":"public","return":[["Integer"],""]},"Sketchup::Styles#update_selected_style":{"description":"{#update_selected_style}方法将当前样式设置提交到样式浏览器中选择的样式。","name":"update_selected_style","namespace":"Sketchup::Styles","path":"Sketchup::Styles#update_selected_style","type":"instance_method","visibility":"public","return":[["true"],""]},"Sketchup::Text":{"description":"文本类包含操作文本实体对象的方法。","name":"Text","namespace":"Sketchup","path":"Sketchup::Text","type":"class","visibility":"public"},"Sketchup::Text#arrow_type":{"description":"arrow_type方法检索用于引线文本的当前箭头类型。\\n \\n有效的箭头类型为0表示无，2表示点，3表示闭合箭头，4表示开放箭头。","name":"arrow_type","namespace":"Sketchup::Text","path":"Sketchup::Text#arrow_type","type":"instance_method","visibility":"public","return":[["Integer"],"箭头类型的数字表示。"]},"Sketchup::Text#arrow_type=":{"description":"arrow_type=方法设置用于引线文本的箭头类型。\\n \\n有效的箭头类型为0表示无，2表示点，3表示闭合箭头，4表示开放箭头。","name":"arrow_type=","namespace":"Sketchup::Text","path":"Sketchup::Text#arrow_type=","type":"instance_method","visibility":"public","parameters":[["type",["Integer"],"要设置的箭头类型的数字表示。"]],"return":[["Integer"],"箭头类型的数字表示。"]},"Sketchup::Text#display_leader=":{"description":"对于是否显示引线，display_leader=方法接受“真”或“假”。\\n \\n未显示的前导文字设为隐藏类型。","name":"display_leader=","namespace":"Sketchup::Text","path":"Sketchup::Text#display_leader=","type":"instance_method","visibility":"public","parameters":[["status",["Boolean"],"如果要显示引线文本，则为true；如果不想显示引线文本，则为false。"]],"return":[["Boolean"],"您设置的状态。"]},"Sketchup::Text#display_leader?":{"description":"display_leader?方法返回领队的状态。","name":"display_leader?","namespace":"Sketchup::Text","path":"Sketchup::Text#display_leader?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果显示引线，则为真；如果不显示引线，则为假。"]},"Sketchup::Text#has_leader?":{"description":"has_leader方法用于确定文本对象是否有引线。","name":"has_leader?","namespace":"Sketchup::Text","path":"Sketchup::Text#has_leader?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果文本对象有引线，则为true。如果文本对象没有引线，则为false。"]},"Sketchup::Text#leader_type":{"description":"leader_type方法检索当前设置的引线类型。","name":"leader_type","namespace":"Sketchup::Text","path":"Sketchup::Text#leader_type","type":"instance_method","visibility":"public","return":[["Integer"],"表示当前设置的引线类型的数值。"]},"Sketchup::Text#leader_type=":{"description":"leader_type=方法设置引线类型。\\n \\n有效的引线类型为0表示无，1表示基于视图，2表示图钉","name":"leader_type=","namespace":"Sketchup::Text","path":"Sketchup::Text#leader_type=","type":"instance_method","visibility":"public","parameters":[["type",["Integer"],"表示要设置的引线类型的数值。"]],"return":[["Integer"],"表示刚刚设置的引线类型的数值。"]},"Sketchup::Text#line_weight":{"description":"line_weight方法返回以像素为单位的行权重。\\n \\n defalt-line-weight为1。","name":"line_weight","namespace":"Sketchup::Text","path":"Sketchup::Text#line_weight","type":"instance_method","visibility":"public","return":[["Integer"],"线条粗细（像素）"]},"Sketchup::Text#line_weight=":{"description":"line_weight=方法以像素为单位设置线条粗细。\\n \\n预设线条粗细为1。","name":"line_weight=","namespace":"Sketchup::Text","path":"Sketchup::Text#line_weight=","type":"instance_method","visibility":"public","parameters":[["weight",["Integer"],"要设置的线条粗细（像素）。"]],"return":[["Integer"],"已设置的行权重。"]},"Sketchup::Text#point":{"description":"point方法用于获取与文本关联的点。","name":"point","namespace":"Sketchup::Text","path":"Sketchup::Text#point","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"一个Point3d对象。"]},"Sketchup::Text#point=":{"description":"point=方法用于设置与文本关联的点。","name":"point=","namespace":"Sketchup::Text","path":"Sketchup::Text#point=","type":"instance_method","visibility":"public","parameters":[["point3d",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::Point3d"],"如果成功则为真，如果失败则为假。"]},"Sketchup::Text#set_text":{"description":"set_text方法用于在不记录撤消操作的情况下设置文本对象中的文本。","name":"set_text","namespace":"Sketchup::Text","path":"Sketchup::Text#set_text","type":"instance_method","visibility":"public","parameters":[["textstring",["String"],"要在文本对象中设置的字符串。"]],"return":[["Sketchup::Text"],"文本对象"]},"Sketchup::Text#text":{"description":"text方法用于检索文本对象的字符串版本。","name":"text","namespace":"Sketchup::Text","path":"Sketchup::Text#text","type":"instance_method","visibility":"public","return":[["String"],"文本对象的字符串表示形式"]},"Sketchup::Text#text=":{"description":"text=方法用于设置文本对象的字符串版本。","name":"text=","namespace":"Sketchup::Text","path":"Sketchup::Text#text=","type":"instance_method","visibility":"public","parameters":[["textstring",["String"],""]],"return":[["String"],"新设置的文本"]},"Sketchup::Text#vector":{"description":"vector方法用于获取与文本关联的向量。","name":"vector","namespace":"Sketchup::Text","path":"Sketchup::Text#vector","type":"instance_method","visibility":"public","return":[["Geom::Vector3d"],"一个Vector3d对象。"]},"Sketchup::Text#vector=":{"description":"vector=方法用于设置与文本关联的向量。","name":"vector=","namespace":"Sketchup::Text","path":"Sketchup::Text#vector=","type":"instance_method","visibility":"public","parameters":[["vector",["Geom::Vector3d"],"一个Vector3d对象。"]],"return":[["Geom::Vector3d"],""]},"Sketchup::Texture":{"description":"纹理类包含用于获取模型中作为材质一部分的纹理信息的方法（在“材质浏览器”的“在模型中”部分中）。请记住，纹理是可重复的图像，当在表面上绘制时\\n“平铺”。","name":"Texture","namespace":"Sketchup","path":"Sketchup::Texture","type":"class","visibility":"public"},"Sketchup::Texture#average_color":{"description":"average_color方法检索具有纹理中找到的平均颜色的颜色对象。","name":"average_color","namespace":"Sketchup::Texture","path":"Sketchup::Texture#average_color","type":"instance_method","visibility":"public","return":[["Sketchup::Color","nil"],"颜色对象（如果成功），如果失败，则为nil。"]},"Sketchup::Texture#filename":{"description":"filename方法检索纹理对象的整个路径，包括文件。","name":"filename","namespace":"Sketchup::Texture","path":"Sketchup::Texture#filename","type":"instance_method","visibility":"public","return":[["String"],"用于纹理的路径和文件名的字符串表示形式。"]},"Sketchup::Texture#height":{"description":"height方法用于获取可重复纹理图像的高度，单位为英寸。","name":"height","namespace":"Sketchup::Texture","path":"Sketchup::Texture#height","type":"instance_method","visibility":"public","return":[["Integer"],"纹理图案的高度（英寸）"]},"Sketchup::Texture#image_height":{"description":"image_height方法检索可重复纹理图像的高度（像素）。","name":"image_height","namespace":"Sketchup::Texture","path":"Sketchup::Texture#image_height","type":"instance_method","visibility":"public","return":[["Integer"],"纹理图案的高度（像素）"]},"Sketchup::Texture#image_width":{"description":"image_width方法检索可重复纹理图像的宽度，以像素为单位。","name":"image_width","namespace":"Sketchup::Texture","path":"Sketchup::Texture#image_width","type":"instance_method","visibility":"public","return":[["Integer"],"纹理图案的宽度（像素）"]},"Sketchup::Texture#size=":{"description":"size=方法允许您设置可重复纹理图像的大小，单位为英寸，","name":"size=","namespace":"Sketchup::Texture","path":"Sketchup::Texture#size=","type":"instance_method","visibility":"public","parameters":[["size",["Integer","Array(Integer, Integer)"],"纹理的大小，以英寸为单位。此数字将应用于高度和宽度，以保持纵横比。\\n您也可以将两个数值组成的数组作为参数传递，该数组将设置宽度和高度，而不考虑保持高度/宽度比。"]],"return":[["Integer","Array(Integer, Integer)"],"纹理的大小，以英寸为单位。此数字将应用于高度和宽度，以保持纵横比。\\n如果您传入了一个宽度和高度为两个数字的数组，则如果成功，将返回相同的数组。"]},"Sketchup::Texture#valid?":{"description":"valid?方法确保纹理有效。","name":"valid?","namespace":"Sketchup::Texture","path":"Sketchup::Texture#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果有效则为真，如果无效则为假。"]},"Sketchup::Texture#width":{"description":"width方法用于获取可重复纹理图像的宽度，单位为英寸。","name":"width","namespace":"Sketchup::Texture","path":"Sketchup::Texture#width","type":"instance_method","visibility":"public","return":[["Integer"],"纹理图案的宽度（英寸）"]},"Sketchup::Texture#write":{"description":"使用选项将纹理写入文件，以保留材质所做的颜色调整。","name":"write","namespace":"Sketchup::Texture","path":"Sketchup::Texture#write","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"string-写入纹理的文件名。"],["colorize",["Boolean"],"布尔-允许使用颜色调整导出纹理。"]],"return":[["Boolean"],"如果方法成功，则为true"]},"Sketchup::TextureWriter":{"description":"TextureWriter类主要用于将SketchUp模型中使用的纹理写入文件，作为导出的一部分，以供在其他应用程序中使用。这些方法通常按以下顺序调用：\\n \n  - 1. load - load one or more textures from a model into the TextureWriter.\n-2。write_all或写入-将纹理写入文件。","name":"TextureWriter","namespace":"Sketchup","path":"Sketchup::TextureWriter","type":"class","visibility":"public"},"Sketchup::TextureWriter#count":{"description":"{#length}方法用于确定加载到纹理编写器中的纹理数。\\n \\n {#count}方法是{#length}的别名。","name":"count","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#count","type":"instance_method","visibility":"public","return":[["Integer"],"长度-加载到纹理编写器中的纹理数"]},"Sketchup::TextureWriter#filename":{"description":"filename方法用于检索特定纹理的原始文件名。","name":"filename","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#filename","type":"instance_method","visibility":"public","parameters":[["handle",["Integer"],"纹理编写器中纹理的索引或句柄。"]],"return":[["String"],"文件名-文件系统上纹理的文件名。\\n可以不使用文件名生成纹理，因此如果纹理没有名称write_all，则会将纹理保存到名为“i.png”的图像文件中。其中i是大于零的第一个整数，该整数尚未用于PNG文件名。"]},"Sketchup::TextureWriter#handle":{"description":"handle方法用于检索纹理编写器中特定纹理的句柄或索引。","name":"handle","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#handle","type":"instance_method","visibility":"public"},"Sketchup::TextureWriter#length":{"description":"{#length}方法用于确定加载到纹理编写器中的纹理数。\\n \\n {#count}方法是{#length}的别名。","name":"length","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#length","type":"instance_method","visibility":"public","return":[["Integer"],"长度-加载到纹理编写器中的纹理数"]},"Sketchup::TextureWriter#load":{"description":"load方法用于将一个或多个纹理加载到纹理编写器中以写入文件。","name":"load","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#load","type":"instance_method","visibility":"public"},"Sketchup::TextureWriter#write":{"description":"write方法用于将纹理编写器中的单个纹理写入文件。必须先将实体的纹理加载到纹理编写器中，然后才能使用此方法编写实体的纹理。\\n \\n此方法将返回下列状态消息之一。（这些是由API定义的常量。）\\n \n  - 0 = FILE_WRITE_OK\n  - 1 = FILE_WRITE_FAILED_INVALID_TIFF\n-2=file_write_failed_unknown","name":"write","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#write","type":"instance_method","visibility":"public"},"Sketchup::TextureWriter#write_all":{"description":"write_all方法用于将纹理编写器中的所有纹理写入文件。它将返回三个状态号中的一个：n \n  - 0 = FILE_WRITE_OK\n  - 1 = FILE_WRITE_FAILED_INVALID_TIFF\n-2=文件\\写入\\失败\\未知","name":"write_all","namespace":"Sketchup::TextureWriter","path":"Sketchup::TextureWriter#write_all","type":"instance_method","visibility":"public","parameters":[["dirname",["String"],"要写入的目录。"],["filename_format",["Boolean"],"如果使用8.3 DOS名称格式，则为true。"]],"return":[["Integer"],"状态-三条状态消息之一（参见注释）。"]},"Sketchup::Tool":{"description":"工具是用于创建SketchUp工具的接口。\\n有关如何在Ruby中创建自定义工具的示例，请参见文件Plugins/Examples/linetool.rb（在SketchUp安装目录中）。\\n \\n若要在Ruby中创建新工具，必须定义一个新类，该类为要响应的事件实现方法。您不必为工具可以响应的每个可能事件实现方法。\\n \\n一旦定义了工具类，就可以通过创建该工具的实例并将其传递给\\n {Sketchup::Model#select_tool}来选择该工具。例如：\\n \n  my_tool = MyTool.new\n  Sketchup.active_model.select_tool(my_tool)\n0102431 \\n下表包含几个常量，您可以在检查处理回调的键盘内的某些按键时使用这些常量：\\n \\n-+CONSTRAIN_MODIFIER_KEY+=shift key \\n-+CONSTRAIN_MODIFIER_MASK+=shift key \\n-+COPY_MODIFIER_KEY+=alt/option on mac，ctrl on pc \\n-+COPY_MODIFIER_MASK+=alt/option on mac，ctrl on pc \\n-+ALT_MODIFIER_KEY+=command on mac，alt onpc\\n-+ALT_MODIFIER_MASK+=mac上的命令，pc上的alt","name":"Tool","namespace":"Sketchup","path":"Sketchup::Tool","type":"class","visibility":"public"},"Sketchup::Tool#activate":{"description":"当选择工具时，SketchUp将调用activate方法。\\n这是放置大部分初始化（如实例变量）以跟踪工具状态的好地方。","name":"activate","namespace":"Sketchup::Tool","path":"Sketchup::Tool#activate","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::Tool#deactivate":{"description":"由于选择了不同的工具，因此当工具被停用时，将调用deactivate方法。","name":"deactivate","namespace":"Sketchup::Tool","path":"Sketchup::Tool#deactivate","type":"instance_method","visibility":"public","parameters":[["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#draw":{"description":"每当刷新视图以允许工具绘制自己的图形时，SketchUp就会调用{#draw}方法。如果工具有一些临时图形需要在激活时显示，则应实现此方法并绘制到{Sketchup::View}。","name":"draw","namespace":"Sketchup::Tool","path":"Sketchup::Tool#draw","type":"instance_method","visibility":"public","parameters":[["view",["Sketchup::View"],"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#enableVCB?":{"description":"enableVCB?方法用于告诉SketchUp是否允许用户在VCB中输入文本（值控制框，也称为“测量”面板）。\\n如果不实现此方法，则默认情况下禁用VCB。","name":"enableVCB?","namespace":"Sketchup::Tool","path":"Sketchup::Tool#enableVCB?","type":"instance_method","visibility":"public","return":[["Boolean"],"启用-如果要启用VCB，则为真"]},"Sketchup::Tool#getExtents":{"description":"为了精确地绘制事物，SketchUp需要知道它所绘制的内容的范围。如果工具正在绘制自己的图形，则可能需要实现此方法来告诉SketchUp将要绘制的图形的范围。如果不实现此方法，您可能会发现工具正在绘制的部分将被剪切到模型其余部分的范围内。\\n \\n这必须返回一个BoundingBox。在典型的实现中，您将创建一个新的BoundingBox，添加点以设置工具将要执行的图形范围，然后返回该范围。","name":"getExtents","namespace":"Sketchup::Tool","path":"Sketchup::Tool#getExtents","type":"instance_method","visibility":"public","return":[null,"边界框-一个BoundingBox对象"]},"Sketchup::Tool#getInstructorContentDirectory":{"description":"getInstructorContentDirectory方法用于告诉SketchUp包含工具讲师内容的目录。若要使用此目录，请创建一个自定义讲师目录，在其中放入一个index.html文件，然后\\n通过此方法返回该路径。如果SketchUp用户在激活工具时打开了讲师窗口，他们将看到您的HTML文件。\\n \\n NOTE:在SketchUp 2014之前，此方法将假定路径相对于SketchUp资源文件夹。从2014年起，您可以指定指向HTML文件的绝对路径或指向包含index.html文件的目录的绝对路径。","name":"getInstructorContentDirectory","namespace":"Sketchup::Tool","path":"Sketchup::Tool#getInstructorContentDirectory","type":"instance_method","visibility":"public","return":[null,"目录-讲师内容所在的字符串目录。"]},"Sketchup::Tool#getMenu":{"description":"SketchUp调用了getMenu方法，以便工具提供自己的上下文菜单。大多数工具不希望实现此方法，而是使用在所有实体上找到的普通上下文菜单。\\n \\n如果确实实现此方法，则参数是一个菜单。您应该使用add_item方法来构建上下文菜单。\\n \\n如果不实现此方法，默认情况下，您的工具将使用标准上下文菜单。如果希望上下文单击以显示此默认上下文菜单以外的内容，请实现此方法。\\n \\n在SketchUp 2015中，添加了标志x、y和视图参数。如果需要在鼠标位置下拾取实体，则需要这些实体。新参数是可选的，但如果需要使用一个参数，则必须将它们全部包括在内。","name":"getMenu","namespace":"Sketchup::Tool","path":"Sketchup::Tool#getMenu","type":"instance_method","visibility":"public","parameters":[["flags",["optional"],"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。\\n在SU2015中添加。"],["menu",null,"菜单对象。"],["x",["optional"],"事件发生的屏幕上的X坐标。增加了SU2015。"],["view",["optional"],"调用方法的视图对象。\\n在SU2015中添加。"],["y",["optional"],"事件发生的屏幕上的Y坐标。增加了SU2015。"]],"return":[null,"零"]},"Sketchup::Tool#onCancel":{"description":"SketchUp调用onCancel方法以取消工具的当前操作。典型的响应是将工具重置为初始状态。\\n \\n原因标识触发调用的操作。原因可以是以下值之一：\\n\\n-+0+：用户通过按Escape键取消了当前操作。\\n-+1+：用户从工具栏或菜单中重新选择了相同的工具。\\n-+2+：用户在工具处于活动状态时执行了撤消操作。","name":"onCancel","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onCancel","type":"instance_method","visibility":"public","parameters":[["reason",null,"原因值（参见注释）。"],["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#onKeyDown":{"description":"当用户按下键盘上的键时，sketchUp会调用onKeyDown方法。如果您想从VCB获得输入，应该实现onUserText，而不是这个方法。\\n \\n此方法可用于特殊键（如shift键、ctrl键等），或仅用于确定用户按下的键。实际上，对所有按下的键都调用此方法。\\n \\n有几个“虚拟密钥”定义为您可以使用的常量。它们的用途是跨平台的。它们是：\\n \\n-+VK_ALT+ \\n-+VK_COMMAND+ \\n-+VK_CONTROL+ \\n-+VK_DELETE+ \\n-+VK_DOWN+ \\n-+VK_END+ \\n-+VK_HOME+ \\n-+VK_INSERT+ \\n-+VK_LEFT+ \\n-+VK_MENU+ \\n-+VK_NEXT+ \\n-+VK_PRIOR+ \\n-+VK_RIGHT+ \\n-+VK_SHIFT+ \\n-+VK_SPACE+ \\n-+VK_UP+ \\n \\n V6:在类型效果不起作用的Windows上存在错误。在Mac电脑上打字效果很好。","name":"onKeyDown","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onKeyDown","type":"instance_method","visibility":"public","parameters":[["key",null,"按下的键。"],["repeat",null,"一次按键值为1。如果用户已按下某个键并按住该键，则值为2。"],["view",null,"调用方法的视图对象。"],["flags",null,"一个位掩码，在onkeydown时告知修改键的状态。"]],"return":[null,"零"]},"Sketchup::Tool#onKeyUp":{"description":"当用户释放键盘上的一个键时，SketchUp会调用onKeyUp方法。","name":"onKeyUp","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onKeyUp","type":"instance_method","visibility":"public","parameters":[["key",null,"按下的键。"],["repeat",null,"一次按键值为1。如果用户已按下某个键并按住该键，则值为2。"],["view",null,"调用方法的视图对象。"],["flags",null,"一种位掩码，在onkeyup时告知修改键的状态。"]],"return":[null,"零"]},"Sketchup::Tool#onLButtonDoubleClick":{"description":"当用户用鼠标左键双击时，SketchUp会调用OnlbuttonDoubleClick。","name":"onLButtonDoubleClick","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onLButtonDoubleClick","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onLButtonDown":{"description":"当按下鼠标左键时，SketchUp调用onLButtonDown方法。大多数工具都将实现此方法。","name":"onLButtonDown","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onLButtonDown","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onLButtonUp":{"description":"当释放鼠标左键时，SketchUp调用onLButtonUp方法。","name":"onLButtonUp","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onLButtonUp","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onMButtonDoubleClick":{"description":"注意：虽然这个方法在RubyAPI中已经被记录了很多年了，但是它从来没有正常工作过。我们暂时将此文档保留在适当的位置，以希望修复实现，但是您在SU7和更早版本中使用它不会有任何运气。\\n \\n双击鼠标中键（在三键鼠标上）时，SketchUp调用onMButtonDoubleClick方法。\\n \\n只有当您希望SketchUp对双击的鼠标中键做出反应时，才实现此方法。","name":"onMButtonDoubleClick","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onMButtonDoubleClick","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onMButtonDown":{"description":"当鼠标中键（在三键鼠标上）向下时，SketchUp会调用onMButtonDown方法。\\n \\n当鼠标中键按下时，默认情况下会激活“动态观察”工具。\\n如果希望鼠标中键执行除调用轨道工具以外的其他操作，请实现此方法。","name":"onMButtonDown","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onMButtonDown","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onMButtonUp":{"description":"当释放鼠标中键（在三键鼠标上）时，SketchUp将调用onMButtonUp方法。\\n \\n释放鼠标中键后，SketchUp将从“动态观察”工具返回上一个工具。如果希望鼠标中键在“动态观察”工具中执行除返回上一个工具以外的操作，请实现此方法。","name":"onMButtonUp","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onMButtonUp","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onMouseEnter":{"description":"当鼠标进入视图对象时，SketchUp调用onMouseEnter方法。","name":"onMouseEnter","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onMouseEnter","type":"instance_method","visibility":"public","parameters":[["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#onMouseLeave":{"description":"当鼠标离开视图对象时，SketchUp调用onMouseLeave方法。","name":"onMouseLeave","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onMouseLeave","type":"instance_method","visibility":"public","parameters":[["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#onMouseMove":{"description":"每当移动鼠标时，SketchUp都会调用onMouseMove方法。\\n您通常希望实现此方法。\\n \\n尝试使此方法尽可能高效，因为经常调用此方法。","name":"onMouseMove","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onMouseMove","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onRButtonDoubleClick":{"description":"当用户用鼠标右键双击时，SketchUp将调用OnrButtonDoubleClick。","name":"onRButtonDoubleClick","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onRButtonDoubleClick","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onRButtonDown":{"description":"当用户按下鼠标右键时，SketchUp调用onRButtonDown方法。当您希望工具在单击鼠标右键时执行除显示默认上下文菜单之外的其他操作时，请实现此方法以及\\n tool.getMenu方法。","name":"onRButtonDown","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onRButtonDown","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onRButtonUp":{"description":"当用户释放鼠标右键时，SketchUp将调用onRButtonUp方法。","name":"onRButtonUp","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onRButtonUp","type":"instance_method","visibility":"public","parameters":[["flags",null,"一个位掩码，它告诉修改器键和其他鼠标按钮的状态。"],["x",null,"事件发生的屏幕上的X坐标。"],["view",null,"调用方法的视图对象。"],["y",null,"事件发生的屏幕上的Y坐标。"]],"return":[null,"零"]},"Sketchup::Tool#onReturn":{"description":"当用户点击返回键以完成工具中的操作时，SketchUp会调用onReturn方法。这种方法很少需要实现。","name":"onReturn","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onReturn","type":"instance_method","visibility":"public","parameters":[["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#onSetCursor":{"description":"当工具想要设置光标时，SketchUp会调用onSetCursor方法。","name":"onSetCursor","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onSetCursor","type":"instance_method","visibility":"public","return":[null,"零"]},"Sketchup::Tool#onUserText":{"description":"当用户在VCB中键入文本并单击返回时，SketchUp将调用onUserText方法。","name":"onUserText","namespace":"Sketchup::Tool","path":"Sketchup::Tool#onUserText","type":"instance_method","visibility":"public","parameters":[["text",null,"在VCB中键入的文本字符串。"],["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#resume":{"description":"当工具在挂起后再次处于活动状态时，SketchUp将调用resume方法。","name":"resume","namespace":"Sketchup::Tool","path":"Sketchup::Tool#resume","type":"instance_method","visibility":"public","parameters":[["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tool#suspend":{"description":"当工具因另一个工具被激活而暂时处于非活动状态时，SketchUp会调用suspend方法。这通常在激活查看工具时发生，例如，由于鼠标中键而激活“动态观察”时。","name":"suspend","namespace":"Sketchup::Tool","path":"Sketchup::Tool#suspend","type":"instance_method","visibility":"public","parameters":[["view",null,"调用方法的视图对象。"]],"return":[null,"零"]},"Sketchup::Tools":{"description":"工具类包含操作SketchUp工具集合的方法。您可以通过调用Model.tools方法来访问此集合。","name":"Tools","namespace":"Sketchup","path":"Sketchup::Tools","type":"class","visibility":"public"},"Sketchup::Tools#active_tool_id":{"description":"active_tool_id方法用于检索活动工具的ID。","name":"active_tool_id","namespace":"Sketchup::Tools","path":"Sketchup::Tools#active_tool_id","type":"instance_method","visibility":"public","return":[null,"ID-活动工具的ID。"]},"Sketchup::Tools#active_tool_name":{"description":"active_tool_name方法用于检索活动工具的名称。","name":"active_tool_name","namespace":"Sketchup::Tools","path":"Sketchup::Tools#active_tool_name","type":"instance_method","visibility":"public","return":[null,"名称=活动工具的名称。"]},"Sketchup::Tools#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::Tools","path":"Sketchup::Tools#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"状态-如果成功为真，如果不成功为假。"]},"Sketchup::Tools#model":{"description":"model方法用于获取与此工具对象关联的模型。","name":"model","namespace":"Sketchup::Tools","path":"Sketchup::Tools#model","type":"instance_method","visibility":"public","return":[null,"模型-与此工具集合关联的模型对象。"]},"Sketchup::Tools#pop_tool":{"description":"pop_tool方法用于将最后一个推送的刀具弹出刀具堆栈。","name":"pop_tool","namespace":"Sketchup::Tools","path":"Sketchup::Tools#pop_tool","type":"instance_method","visibility":"public","return":[null,"最后一个推送的工具对象（如果它是Ruby工具）。如果本机工具处于活动状态，则选择默认本机工具并返回nil。"]},"Sketchup::Tools#push_tool":{"description":"push_tool方法用于推送（即激活）用户定义的工具。\\n有关创建自己的SketchUp工具的详细信息，请参见工具界面。","name":"push_tool","namespace":"Sketchup::Tools","path":"Sketchup::Tools#push_tool","type":"instance_method","visibility":"public","parameters":[["tool",null,"一个用户。"]],"return":[null,"状态-如果成功为真，如果不成功为假。"]},"Sketchup::Tools#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::Tools","path":"Sketchup::Tools#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",null,"观察者"]],"return":[null,"如果成功则为真，如果失败则为假。"]},"Sketchup::ToolsObserver":{"description":"这个观察者接口被实现来对工具事件做出反应。要实现这个观察者，请创建一个这种类型的Ruby类，重写所需的方法，并向{Sketchup::Tools}对象添加一个观察者实例。\\n \\n下面的一些代码提到了+tool_names+和+tool_ids+。以下是常用工具ID和名称列表：\\n\\n-+21013+=3dtexttool\\n-+21065+=ArcTool\\n-+10523+=CameraDollyTool\\n-+10508+=CameraOrbitTool\\n-+10525+=CameraPanTool\\n-+21169+=PositionCameraTool\\n-+10520+=CameraWalkTool\\n-+10509+=CameraZoomTool\\n-+10526+=CameraZoomWindowTool\\n-+21096+=CircleTool\\n-+21013+=ComponentTool\\n-+21126+=componentcstool\\n-+21410+=DimensionTool \\n-+21019+=EraseTool \\n-+21031+=FreehandTool \\n-+21525+=ExtrudeTool \\n-+21126+=sksksttool \\n-+21048+=MoveTool \\n-+21024+=MeasureTool \\n-+21100+=OffsetTool \\n-+21074+=PaintTool \\n-+21013+=PasteTool \\n-+21048+ 30=PolyTool \\n-+21515+=PositionTextureTool \\n-+21041+=PushPullTool \\n-+21057+=ProtractorTool \\n-ProtractorTool=ProtractorTool \\n-+21094+=RectangleTool \\n-+21094+=RectangleTool \\n-+21094+=RectangleTool \\n-100个2535=RotateTool \\n-+21236+=ScaleTool \\n-+21022+=SelectionTool \\n-+21337+=SectionPlaneTool \\n-+21020+=SketchTool \\n-+21405+=文本工具","name":"ToolsObserver","namespace":"Sketchup","path":"Sketchup::ToolsObserver","type":"class","visibility":"public"},"Sketchup::ToolsObserver#onActiveToolChanged":{"description":"一旦使用唯一类将{Sketchup::ToolsObserver}子类化，就可以\\n重写{#onActiveToolChanged}方法来接收工具更改通知。","name":"onActiveToolChanged","namespace":"Sketchup::ToolsObserver","path":"Sketchup::ToolsObserver#onActiveToolChanged","type":"instance_method","visibility":"public","parameters":[["tool_id",["Integer"],"工具的ID。这是给定工具独有的预定义数字。例如，Materials浏览器是tool_id\\n 21074。"],["tool_name",["String"],"工具的名称。"],["tools",["Sketchup::Tools"],"工具对象。"]],"return":[["nil"],""]},"Sketchup::ToolsObserver#onToolStateChanged":{"description":"每次用户使用工具执行操作时，都会调用{#onToolStateChanged}方法。返回的实际状态是一个内部数字，它随工具变化。如果您想为每个交互观察现有的工具，您需要对工具状态进行实验，以确定您关心的状态。工具之间几乎没有一致性工具。","name":"onToolStateChanged","namespace":"Sketchup::ToolsObserver","path":"Sketchup::ToolsObserver#onToolStateChanged","type":"instance_method","visibility":"public","parameters":[["tool_state",["Integer"],"标识工具刚输入的状态的数字。"],["tools",["Sketchup::Tools"],"工具对象。"],["tool_id",["Integer"],"工具的ID。这是给定工具独有的预定义数字。例如，Materials浏览器是tool_id\\n 21074。"],["tool_name",["String"],"工具的名称。"]],"return":[["nil"],""]},"Sketchup::UVHelper":{"description":"uv helper类包含方法，允许您确定面上纹理的位置（uv坐标）。此类在确定导出到其他文件类型时，使用“纹理调整器”操纵的纹理应如何显示时特别有用\\n \\n使用Face.get_UVHelper方法为给定面创建uvHelper。\\n请参阅TextureWriter类。","name":"UVHelper","namespace":"Sketchup","path":"Sketchup::UVHelper","type":"class","visibility":"public"},"Sketchup::UVHelper#get_back_UVQ":{"description":"get_back_UVQ方法用于获取面背面的UV坐标。","name":"get_back_UVQ","namespace":"Sketchup::UVHelper","path":"Sketchup::UVHelper#get_back_UVQ","type":"instance_method","visibility":"public","parameters":[["point",null,"一个Point3d对象，包含面的一个三维顶点。"]],"return":[null,"点-一个Point3d，包含u v坐标，其中x值是u值，y值是v值，z值是q值（未使用）。"]},"Sketchup::UVHelper#get_front_UVQ":{"description":"get_front_UVQ方法用于获取面前面的UV坐标。","name":"get_front_UVQ","namespace":"Sketchup::UVHelper","path":"Sketchup::UVHelper#get_front_UVQ","type":"instance_method","visibility":"public","parameters":[["point",null,"一个Point3d对象，包含面的一个三维顶点。"]],"return":[null,"点-一个Point3d，包含u v坐标，其中x值是u值，y值是v值，z值是q值（未使用）。"]},"Sketchup::Vertex":{"description":"顶点。顶点表示面内边或点的末端。","name":"Vertex","namespace":"Sketchup","path":"Sketchup::Vertex","type":"class","visibility":"public"},"Sketchup::Vertex#common_edge":{"description":"common_edge方法用于查找由该顶点和另一个顶点定义的公共边。","name":"common_edge","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#common_edge","type":"instance_method","visibility":"public","parameters":[["vertex2",["Sketchup::Vertex"],"顶点对象。"]],"return":[["Sketchup::Edge","nil"],"如果成功，两个顶点共用的边对象。如果两个顶点之间没有边，则返回nil。"]},"Sketchup::Vertex#curve_interior?":{"description":"curve_interior?方法用于确定该顶点是否位于曲线内部。","name":"curve_interior?","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#curve_interior?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果两条边都是同一曲线的一部分，则为真。"]},"Sketchup::Vertex#edges":{"description":"edges方法用于检索使用顶点的边数组。","name":"edges","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#edges","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Edge>"],"边缘对象数组（如果成功）"]},"Sketchup::Vertex#faces":{"description":"faces方法用于检索使用顶点的面数组。","name":"faces","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#faces","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Face>"],"如果成功，则使用顶点的面数组"]},"Sketchup::Vertex#loops":{"description":"loops方法用于检索使用顶点的循环数组。","name":"loops","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#loops","type":"instance_method","visibility":"public","return":[["Array<Sketchup::Loop>"],"如果成功，则使用顶点的循环数组"]},"Sketchup::Vertex#position":{"description":"position方法用于检索顶点的Point3d位置。","name":"position","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#position","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"如果成功，表示顶点位置的Point3d对象"]},"Sketchup::Vertex#used_by?":{"description":"used_by?方法用于确定给定边或面是否使用顶点。","name":"used_by?","namespace":"Sketchup::Vertex","path":"Sketchup::Vertex#used_by?","type":"instance_method","visibility":"public","parameters":[["face_or_edge",["Sketchup::Edge","Sketchup::Face"],"测试的面或边。"]],"return":[["Boolean"],"如果在给定实体中使用顶点，则为true。"]},"Sketchup::View":{"description":"此类包含操作模型当前视图点的方法。这里的drawing方法（绘制直线、绘制多段线等）将在工具的Tool.draw方法中调用。在Tool.draw之外呼叫它们\\n将无效。\\n \\n您可以通过调用Model.active_view方法访问视图。","name":"View","namespace":"Sketchup","path":"Sketchup::View","type":"class","visibility":"public"},"Sketchup::View#add_observer":{"description":"add_observer方法用于向当前对象添加观察者。","name":"add_observer","namespace":"Sketchup::View","path":"Sketchup::View#add_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::View#animation=":{"description":"animation=方法用于设置为视图显示的动画。有关如何创建动画对象的详细信息，请参见动画。","name":"animation=","namespace":"Sketchup::View","path":"Sketchup::View#animation=","type":"instance_method","visibility":"public","parameters":[["animation",["#nextFrame"],"动画对象。"]],"return":[["#nextFrame"],"新设置的动画对象"]},"Sketchup::View#average_refresh_time":{"description":"average_refresh_time用于设置用于刷新视图中当前模型的平均时间。这可用于估计动画的帧速率。","name":"average_refresh_time","namespace":"Sketchup::View","path":"Sketchup::View#average_refresh_time","type":"instance_method","visibility":"public","return":[["Float"],"以秒为单位的时间"]},"Sketchup::View#camera":{"description":"camera方法用于检索视图的相机。","name":"camera","namespace":"Sketchup::View","path":"Sketchup::View#camera","type":"instance_method","visibility":"public","return":[["Sketchup::Camera"],"相机对象"]},"Sketchup::View#camera=":{"description":"camera=方法用于设置视图的相机。如果给定了一个转换时间，则它将动画化从当前相机到新相机的转换。","name":"camera=","namespace":"Sketchup::View","path":"Sketchup::View#camera=","type":"instance_method","visibility":"public"},"Sketchup::View#center":{"description":"center方法用于检索以像素为单位的视图中心坐标。对于x和y，它作为2个值的数组返回。","name":"center","namespace":"Sketchup::View","path":"Sketchup::View#center","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"视图的中心"]},"Sketchup::View#corner":{"description":"corner方法用于检索视图某个角的坐标。参数是介于0和3之间的索引，用于标识所需的角点。此方法返回一个包含两个整数的数组，这两个整数是视图空间中视图角的坐标。如果视图使用具有固定纵横比的相机，则角是视图的角，而角可能与视图本身的实际角不同。\\n \\n索引编号如下：\\n-0:左上角、-1:右上角、-2:左下角、-3:右下角。","name":"corner","namespace":"Sketchup::View","path":"Sketchup::View#corner","type":"instance_method","visibility":"public","parameters":[["index",["Integer"],"一个介于（或包括）0和3之间的值，用于标识要检索其坐标的角点。"]],"return":[["Array(Integer, Integer)"],"表示屏幕点的二维数组[w，h]"]},"Sketchup::View#draw":{"description":"采用{#draw}法绘制基础图。只能从在Ruby中实现的工具的{Tool#draw}方法中调用此方法。\\n \\n下列常量均为OpenGL术语，已外部化为Ruby。以下是其含义的摘要：\\n \\n[GL_POINTS]\n  Treats each vertex as a single point. Vertex n defines point n. N\n  points are drawn.\n \\n[GL_LINES]\n  Treats each pair of vertices as\n  an independent line segment. Vertices 2n-1 and 2n define line n. N/2 lines\n  are drawn.\n \\n[GL_LINE_STRIP]\n  Draws a connected group of line\n  segments from the first vertex to the last. Vertices n and n+1 define\n  line n. N-1 lines are drawn.\n \\n[GL_LINE_LOOP]\n  Draws a connected group of line segments from the first vertex to the last,\n  then back to the first. Vertices n and n+1 define line n. The last line,\n  however, is defined by vertices N and 1. N lines are drawn.\n \\n[GL_TRIANGLES]\n  Treats each triplet of vertices as an independent\n  triangle. Vertices 3n-2, 3n-1, and 3n define triangle n. N/3 triangles are\n  drawn.\n \\n[GL_TRIANGLE_STRIP]\n  Draws a connected group of triangles. One triangle is defined for each\n  vertex presented after the first two vertices. For odd n, vertices n, n+1,\n  and n+2 define triangle n. For even n, vertices n+1, n, and n+2 define\n  triangle n. N-2 triangles are drawn.\n \\n[GL_TRIANGLE_FAN]\n  Draws a connected group of triangles.\n  One triangle is defined for each vertex presented after the first two\n  vertices. Vertices 1, n+1, and n+2 define triangle n. N-2 triangles are\n  drawn.\n \\n[GL_QUADS]\n  Treats each group of four vertices as an\n  independent quadrilateral. Vertices 4n-3, 4n-2, 4n-1, and 4n define\n  quadrilateral n. N/4 quadrilaterals are drawn.\n \\n[GL_QUAD_STRIP]\n  Draws a connected group of quadrilaterals. One quadrilateral is\n  defined for each pair of vertices presented after the first pair.\n  Vertices 2n-1, 2n, 2n+2, and 2n+1 define quadrilateral n. N/2-1\n  quadrilaterals are drawn. Note that the order in which vertices are used to\n  construct a quadrilateral from strip data is different from that used with\n  independent data.\n \\n[GL_POLYGON]\n  Draws a single, convex polygon. Vertices 1\n通过n定义此多边形。","name":"draw","namespace":"Sketchup::View","path":"Sketchup::View#draw","type":"instance_method","visibility":"public","parameters":[["openglenum",["Integer"],"将要绘制的项，注释中的常量之一，如+GL_LINES+。"],["points",["Array<Geom::Point3d>"],""]],"return":[["Sketchup::View"],""]},"Sketchup::View#draw2d":{"description":"{#draw2d}方法用于绘制屏幕空间（使用二维屏幕坐标）而不是三维空间。\\n \\n第二个参数是{Geom::Point3d}个对象中的{Array}个（或几个单独的{Geom::Point3d}个对象）。这些{Geom::Point3d}对象位于屏幕空间，而不是三维空间。\\n x值对应于绘图区域左边缘的像素数。Y值对应于从绘图区域顶部向下的像素数。未使用Z值。","name":"draw2d","namespace":"Sketchup::View","path":"Sketchup::View#draw2d","type":"instance_method","visibility":"public","parameters":[["points",["Array<Geom::Point3d>"],""],["openglenum",["Integer"],"OpenGL枚举器（无符号整数）。有关常量列表，请参见{#draw}方法中的注释。"]],"return":[["Sketchup::View"],"返回视图对象。"]},"Sketchup::View#draw_line":{"description":"draw_lines方法用于绘制断开的线路。\\n \\n您必须有偶数个点。此方法通常在工具的draw方法中调用。","name":"draw_line","namespace":"Sketchup::View","path":"Sketchup::View#draw_line","type":"instance_method","visibility":"public"},"Sketchup::View#draw_lines":{"description":"draw_lines方法用于绘制断开的线路。\\n \\n您必须有偶数个点。此方法通常在工具的draw方法中调用。","name":"draw_lines","namespace":"Sketchup::View","path":"Sketchup::View#draw_lines","type":"instance_method","visibility":"public"},"Sketchup::View#draw_points":{"description":"此方法用于绘制点。\\n \\n此方法通常在工具的draw方法中调用。","name":"draw_points","namespace":"Sketchup::View","path":"Sketchup::View#draw_points","type":"instance_method","visibility":"public","parameters":[["pts",["Array<Geom::Point3d>"],"由Point3d个对象组成的数组。"],["pointsize",["Integer"],"（可选）点的大小（像素）。"],["pointcolor",["Sketchup::Color"],"（可选）点的颜色。"],["pointstyle",["Integer"],"（可选）点的样式。1=开放正方形，2=填充正方形，3=“+”，4=“x”，5=“*”，\\n 6=开放三角形，7=填充三角形。"]],"return":[["Sketchup::View"],"视图对象"]},"Sketchup::View#draw_polyline":{"description":"采用draw_polyline方法，从pt1到pt2到PT3绘制一系列连接的线段，以此类推。\\n \\n此方法通常在工具的draw方法中调用。","name":"draw_polyline","namespace":"Sketchup::View","path":"Sketchup::View#draw_polyline","type":"instance_method","visibility":"public"},"Sketchup::View#draw_text":{"description":"此方法用于在屏幕上绘制文本，通常在工具的绘制方法中调用。","name":"draw_text","namespace":"Sketchup::View","path":"Sketchup::View#draw_text","type":"instance_method","visibility":"public","parameters":[["options",["Hash"],"可以通过提供选项的哈希或命名参数来自定义文本。可从SketchUp 2016获得。"],["text",["String"],"要绘制的文本字符串。"],["point",["Geom::Point3d"],"表示视图空间中二维坐标的Point3d对象。"]],"return":[["Sketchup::View"],""]},"Sketchup::View#drawing_color=":{"description":"drawing_color方法用于将用于绘制的颜色设置为视图。\\n \\n此方法通常在工具的draw方法中调用。","name":"drawing_color=","namespace":"Sketchup::View","path":"Sketchup::View#drawing_color=","type":"instance_method","visibility":"public","parameters":[["color",["Sketchup::Color","String"],"一个颜色对象。"]],"return":[["Sketchup::View"],""]},"Sketchup::View#dynamic=":{"description":"dynamic=方法允许您在模型较大且视图刷新时间较慢时降低视觉质量，同时提高性能。例如，如果您使用Ruby脚本在大场景中为相机设置动画，那么您可能希望在这段时间内将dynamic设置为true。\\n \\n另请参阅camera.rb，它是电影和舞台Ruby脚本的一部分。","name":"dynamic=","namespace":"Sketchup::View","path":"Sketchup::View#dynamic=","type":"instance_method","visibility":"public","parameters":[["value",["Boolean"],"真与假"]],"return":[["Boolean"],""]},"Sketchup::View#field_of_view":{"description":"使用field_of_view方法获取视图的视野设置，以度为单位。","name":"field_of_view","namespace":"Sketchup::View","path":"Sketchup::View#field_of_view","type":"instance_method","visibility":"public","return":[["Float"],"视野"]},"Sketchup::View#field_of_view=":{"description":"使用field_of_view=方法设置视图的视野设置，以度为单位。","name":"field_of_view=","namespace":"Sketchup::View","path":"Sketchup::View#field_of_view=","type":"instance_method","visibility":"public","parameters":[["fov",["Numeric"],"视野"]],"return":[["Numeric"],""]},"Sketchup::View#guess_target":{"description":"guess_target方法用于猜测当您具有透视视图时用户正在查看的内容。\\n \\n此方法在写入查看工具时很有用。另请参见camera.rb，它是电影和舞台Ruby脚本的一部分。","name":"guess_target","namespace":"Sketchup::View","path":"Sketchup::View#guess_target","type":"instance_method","visibility":"public","return":[["Geom::Point3d"],"一个Point3d对象，表示用户可能感兴趣的模型中的点。"]},"Sketchup::View#inference_locked?":{"description":"inference_locked?方法用于确定视图的推理锁定是否打开。","name":"inference_locked?","namespace":"Sketchup::View","path":"Sketchup::View#inference_locked?","type":"instance_method","visibility":"public","return":[["Boolean"],"锁定为真，解锁为假"]},"Sketchup::View#inputpoint":{"description":"inputpoint方法用于检索输入点。\\n \\n这通常会在工具中的一个鼠标事件处理方法中使用。通常，最好先创建InputPoint，然后对其使用pick方法。","name":"inputpoint","namespace":"Sketchup::View","path":"Sketchup::View#inputpoint","type":"instance_method","visibility":"public","parameters":[["x",["Numeric"],"一个x值。"],["y",["Numeric"],"一个y值。"],["inputpoint1",["Sketchup::InputPoint"],"一个InputPoint对象。"]],"return":[["Sketchup::InputPoint"],""]},"Sketchup::View#invalidate":{"description":"使用invalidate方法将视图标记为需要重新绘制。","name":"invalidate","namespace":"Sketchup::View","path":"Sketchup::View#invalidate","type":"instance_method","visibility":"public","return":[["Sketchup::View"],"无效的视图对象"]},"Sketchup::View#last_refresh_time":{"description":"last_refresh_time方法用于检索上次完全视图刷新的时间。","name":"last_refresh_time","namespace":"Sketchup::View","path":"Sketchup::View#last_refresh_time","type":"instance_method","visibility":"public","return":[["Float"],"时间（毫秒）"]},"Sketchup::View#line_stipple=":{"description":"line_stipple=方法用于设置要用于绘制的线条图案。\\n点画图案以字符串形式给出。\\n有效字符串为：\n  \".\" (Dotted Line),\n  \"-\" (Short Dashes Line),\n  \"_\" (Long Dashes Line),\n  \"-.-\" (Dash Dot Dash Line),\n  \"\" (Solid Line).\n \\n此方法通常在工具的draw方法中调用。","name":"line_stipple=","namespace":"Sketchup::View","path":"Sketchup::View#line_stipple=","type":"instance_method","visibility":"public","parameters":[["pattern",["String"],"一种字符串点画图案，如“—”。"]],"return":[["Sketchup::View"],"视图对象"]},"Sketchup::View#line_width=":{"description":"line_width=方法用于设置要用于绘图的线条宽度。该值是一个双精度值，以像素表示所需的宽度。\\n \\n此方法通常在工具的draw方法中调用。","name":"line_width=","namespace":"Sketchup::View","path":"Sketchup::View#line_width=","type":"instance_method","visibility":"public","parameters":[["width",["Integer"],"以像素为单位的宽度。"]],"return":[["Integer"],""]},"Sketchup::View#lock_inference":{"description":"lock_inference方法用于锁定或解锁推理。\\n \\n当用户按下SHIFT键时，通常会从工具类内部调用此方法。\\n \\n如果没有参数，它将解锁所有推断。使用一个或两个参数，它将根据给定的InputPoint锁定推理。","name":"lock_inference","namespace":"Sketchup::View","path":"Sketchup::View#lock_inference","type":"instance_method","visibility":"public","parameters":[["inputpoint",["Sketchup::InputPoint"],"（可选\\n 1st InputPoint to interrusion to。"],["inputpoint2",["Sketchup::InputPoint"],"（可选）\\n 2nd InputPoint to interrusion to。"]],"return":[["Sketchup::View"],"视图对象"]},"Sketchup::View#model":{"description":"model方法用于检索当前视图的模型。","name":"model","namespace":"Sketchup::View","path":"Sketchup::View#model","type":"instance_method","visibility":"public","return":[["Sketchup::Model"],"此视图的模型"]},"Sketchup::View#pick_helper":{"description":"pick_helper方法用于检索视图的拾取助手。有关选择助手的信息，请参见PickHelper类。\\n \\n此调用返回初始化的PickHelper。","name":"pick_helper","namespace":"Sketchup::View","path":"Sketchup::View#pick_helper","type":"instance_method","visibility":"public"},"Sketchup::View#pickray":{"description":"pickray方法用于检索在查看方向上通过给定屏幕位置的射线。","name":"pickray","namespace":"Sketchup::View","path":"Sketchup::View#pickray","type":"instance_method","visibility":"public"},"Sketchup::View#pixels_to_model":{"description":"pixels_to_model方法用于从给定点的像素大小计算模型大小。\\n \\n此方法对于根据所需大小（以像素为单位）决定绘制内容的大小很有用。","name":"pixels_to_model","namespace":"Sketchup::View","path":"Sketchup::View#pixels_to_model","type":"instance_method","visibility":"public","parameters":[["pixels",["Numeric"],"像素大小。"],["point",["Geom::Point3d"],"将从中计算大小的Point3d对象。"]],"return":[["Float"],"模型尺寸"]},"Sketchup::View#refresh":{"description":"refresh方法用于立即强制重新绘制视图。","name":"refresh","namespace":"Sketchup::View","path":"Sketchup::View#refresh","type":"instance_method","visibility":"public","return":[["Sketchup::View"],"刷新的视图对象"]},"Sketchup::View#remove_observer":{"description":"remove_observer方法用于从当前对象中删除观察者。","name":"remove_observer","namespace":"Sketchup::View","path":"Sketchup::View#remove_observer","type":"instance_method","visibility":"public","parameters":[["observer",["Object"],"观察者"]],"return":[["Boolean"],"如果成功则为真，如果失败则为假。"]},"Sketchup::View#screen_coords":{"description":"screen_coords方法用于检索屏幕上给定点的屏幕坐标。\\n \\n返回的x和y值对应于x和y屏幕坐标。\\n忽略z值。如果参考点不在当前视区中，则x和/或y值可能为负值。","name":"screen_coords","namespace":"Sketchup::View","path":"Sketchup::View#screen_coords","type":"instance_method","visibility":"public","parameters":[["point3d",["Geom::Point3d"],"一个Point3d物体。"]],"return":[["Geom::Point3d"],"包含屏幕位置的Point3d"]},"Sketchup::View#set_color_from_line":{"description":"根据要绘制的线的方向设置视图的绘图颜色。这些颜色将与SketchUp模型中的轴颜色相匹配\\n（对于笔直上下等，通常为蓝色）。\\n \\n此方法通常在工具的绘制方法中调用。","name":"set_color_from_line","namespace":"Sketchup::View","path":"Sketchup::View#set_color_from_line","type":"instance_method","visibility":"public","parameters":[["point1",["Geom::Point3d"],"Point3D对象表示行中的第一个点。"],["point2",["Geom::Point3d"],"Point3D对象表示行中的第二个点。"]],"return":[["Sketchup::View"],"视图对象"]},"Sketchup::View#show_frame":{"description":"show_frame方法用于在当前视图中显示动画对象的帧。\\n \\n在显示下一帧之前，您可以提供以秒为单位的可选延迟以等待。这对于控制动画的运行速度很有用。","name":"show_frame","namespace":"Sketchup::View","path":"Sketchup::View#show_frame","type":"instance_method","visibility":"public","parameters":[["delay",["Numeric"],"以秒为单位的可选延迟。"]],"return":[["Sketchup::View"],""]},"Sketchup::View#tooltip=":{"description":"设置要在视图中显示的工具提示。这对于在用Ruby编写的工具中显示工具提示很有用。","name":"tooltip=","namespace":"Sketchup::View","path":"Sketchup::View#tooltip=","type":"instance_method","visibility":"public","parameters":[["string",["String"],"字符串工具提示。"]],"return":[["String"],"新的工具提示字符串"]},"Sketchup::View#vpheight":{"description":"vpheight方法用于检索视图的视区高度。","name":"vpheight","namespace":"Sketchup::View","path":"Sketchup::View#vpheight","type":"instance_method","visibility":"public","return":[["Integer"],"以像素为单位的视区高度。"]},"Sketchup::View#vpwidth":{"description":"vpwidth方法用于检索视图的视区宽度。","name":"vpwidth","namespace":"Sketchup::View","path":"Sketchup::View#vpwidth","type":"instance_method","visibility":"public","return":[["Integer"],"视区的宽度（像素）。"]},"Sketchup::View#write_image":{"description":"write_image方法用于将当前视图写入图像文件。\\n \\n除文件名外，所有参数都是可选的。\\n \\n如果指定了抗锯齿，则应为true或false。\\n \\n如果将哈希作为第一个参数传递，则该哈希的内容定义如何导出图像。\\n键是：\\n-filename保存的图像的文件名。\\n-宽度（可选）宽度（像素）（最大16000）。\\n-高度（可选）高度（像素）（最大16000）。\\n-抗锯齿（可选）真或假\\n-JPEG个图像的压缩（可选）浮点压缩因子，\n                   between 0.0 and 1.0\n-透明真或假","name":"write_image","namespace":"Sketchup::View","path":"Sketchup::View#write_image","type":"instance_method","visibility":"public","parameters":[["width",["Integer"],"（可选）宽度（像素）。"],["filename_or_hash",["String","Hash"],"已保存图像的文件名或包含一组键的哈希。"],["height",["Integer"],"（可选）高度（像素）。"],["compression",["Float"],"（可选）JPEG个图像的浮点压缩因子，介于0.0和1.0之间"],["antialias",["Boolean"],"（可选）真或假"]],"return":[["Boolean"],""]},"Sketchup::View#zoom":{"description":"zoom方法用于通过某种缩放因子放大或缩小。","name":"zoom","namespace":"Sketchup::View","path":"Sketchup::View#zoom","type":"instance_method","visibility":"public","parameters":[["zoom_or_ents",["Numeric","Sketchup::Selection","Sketchup::Entity","Array<Sketchup::Entity>"],"从1.0或更大的浮动缩放系数，或实体数组或集合以“缩放范围”为中心。"]],"return":[["Sketchup::View"],"缩放视图对象"]},"Sketchup::View#zoom_extents":{"description":"zoom_extents方法用于缩放整个模型的范围，就像用户从菜单中选择了“缩放范围”命令一样。","name":"zoom_extents","namespace":"Sketchup::View","path":"Sketchup::View#zoom_extents","type":"instance_method","visibility":"public","return":[["Sketchup::View"],"缩放视图对象"]},"Sketchup::ViewObserver":{"description":"这个观察者接口被实现为对视图事件做出反应。要实现这个观察者，请创建这种类型的Ruby类，重写所需的方法，并向视图对象添加观察者的实例。","name":"ViewObserver","namespace":"Sketchup","path":"Sketchup::ViewObserver","type":"class","visibility":"public"},"Sketchup::ViewObserver#onViewChanged":{"description":"每当更改视图时，例如当用户使用平移、动态观察或缩放工具时，都会调用{#onViewChanged}方法。","name":"onViewChanged","namespace":"Sketchup::ViewObserver","path":"Sketchup::ViewObserver#onViewChanged","type":"instance_method","visibility":"public","parameters":[["view",["Sketchup::View"],null]],"return":[["nil"],""]},"LanguageHandler":{"description":"LanguageHandler类包含用于帮助使草图扩展更容易在不同语言中本地化的方法。它在扩展的目录结构的resources文件夹中查找已翻译的资源。所有翻译的资源都应该位于适当的语言文件夹中，并以UTF-8编码。字符串文件应包括以下格式的\\n“key”=“value”字符串对：","name":"LanguageHandler","namespace":"","path":"LanguageHandler","type":"class","visibility":"public"},"LanguageHandler#[]":{"description":"根据当前运行的SketchUp语言和“资源”文件夹中的可用翻译，查找并返回给定字符串的本地化版本。","name":"[]","namespace":"LanguageHandler","path":"LanguageHandler#[]","type":"instance_method","visibility":"public","parameters":[["key",["String"],"要检索的字符串的键。"]],"return":[["String"],"本地化字符串。"]},"LanguageHandler#initialize":{"description":"new方法用于创建新的LanguageHandler对象。","name":"initialize","namespace":"LanguageHandler","path":"LanguageHandler#initialize","type":"instance_method","visibility":"public","parameters":[["filename",["String"],"包含本地化字符串及其密钥的文件名，采用UTF-8编码。"]],"return":[["LanguageHandler"],"新的LanguageHandler对象"]},"LanguageHandler#resource_path":{"description":"如果可以在资源文件夹中找到给定文件名的路径，则返回一个字符串。","name":"resource_path","namespace":"LanguageHandler","path":"LanguageHandler#resource_path","type":"instance_method","visibility":"public","return":[["String"],"文件在资源文件夹中的位置。"]},"LanguageHandler#strings":{"description":"返回包含本地化字典的哈希对象。","name":"strings","namespace":"LanguageHandler","path":"LanguageHandler#strings","type":"instance_method","visibility":"public","return":[["Hash"],"本地化字典。"]},"SketchupExtension":{"description":"SketchupExtension类包含允许您创建和操作SketchUp扩展的方法。扩展是可以使用扩展管理器（首选项对话框的扩展面板）加载和卸载的Ruby脚本。通常，您应该将Ruby脚本注册为一个扩展，以使SketchUp用户能够通过用户界面禁用它。\\n \\n这里的想法是采用实际创建功能的Ruby脚本，并将其放在/plugins文件夹之外的某个文件夹中，通常是/Plugins/MyExtension这样的子目录。然后\\n在/plugins目录中创建一个新的ruby脚本，该脚本将设置扩展项，并在用户打开扩展时加载原始脚本。\\n \\n这是一个示例扩展加载脚本。对于这个例子，下面的代码将保存在/Plugins/StairTools.rb中，而实际的插件本身将位于/Plugins/StairTools/core.rb中。\\n \\n您可以在/plugins/文件夹下找到SketchUp附带的两个示例扩展名，分别是su_dynamiccomponents.rb和su_sandboxtools.rb。","name":"SketchupExtension","namespace":"","path":"SketchupExtension","type":"class","visibility":"public"},"SketchupExtension#check":{"description":"加载扩展，这意味着可以立即解释底层的Ruby脚本。这相当于在“首选项>扩展”列表中选中扩展的复选框。","name":"check","namespace":"SketchupExtension","path":"SketchupExtension#check","type":"instance_method","visibility":"public","return":[["Boolean"],"加载是否成功"]},"SketchupExtension#copyright":{"description":"copyright方法返回版权字符串，该字符串显示在“扩展管理器”对话框中的扩展下面。","name":"copyright","namespace":"SketchupExtension","path":"SketchupExtension#copyright","type":"instance_method","visibility":"public","return":[["String"],"扩展版权"]},"SketchupExtension#copyright=":{"description":"copyright=方法设置版权字符串，该字符串显示在“扩展管理器”对话框中的扩展下面。","name":"copyright=","namespace":"SketchupExtension","path":"SketchupExtension#copyright=","type":"instance_method","visibility":"public","parameters":[["copyright",["String"],"设置的版权"]],"return":[["String"],"新版权"]},"SketchupExtension#creator":{"description":"creator方法返回创建者字符串，该字符串显示在“扩展管理器”对话框中的扩展名下。","name":"creator","namespace":"SketchupExtension","path":"SketchupExtension#creator","type":"instance_method","visibility":"public","return":[["String"],"扩展创建者"]},"SketchupExtension#creator=":{"description":"creator=方法设置创建者字符串，该字符串显示在“扩展管理器”对话框中的扩展名下面。","name":"creator=","namespace":"SketchupExtension","path":"SketchupExtension#creator=","type":"instance_method","visibility":"public","parameters":[["creator",["String"],"要设置的创建者"]],"return":[["String"],"新创造者"]},"SketchupExtension#description":{"description":"description方法返回长描述，该描述显示在扩展管理器对话框中扩展的下面。","name":"description","namespace":"SketchupExtension","path":"SketchupExtension#description","type":"instance_method","visibility":"public","return":[["String"],"扩展说明"]},"SketchupExtension#description=":{"description":"description=方法设置长描述，该描述显示在扩展管理器对话框中的扩展下面。","name":"description=","namespace":"SketchupExtension","path":"SketchupExtension#description=","type":"instance_method","visibility":"public","parameters":[["description",["String"],"要设置的描述字符串。"]],"return":[["String"],"扩展说明"]},"SketchupExtension#extension_path":{"description":"extension_path方法返回扩展的外部RB文件的文件系统路径。","name":"extension_path","namespace":"SketchupExtension","path":"SketchupExtension#extension_path","type":"instance_method","visibility":"public","return":[["String"],"扩展名的文件系统路径"]},"SketchupExtension#id":{"description":"id方法返回扩展仓库ID字符串。","name":"id","namespace":"SketchupExtension","path":"SketchupExtension#id","type":"instance_method","visibility":"public","return":[["String"],"扩展仓库ID"]},"SketchupExtension#initialize":{"description":"new方法用于创建新的SketchupExtension对象。请注意，一旦创建了扩展对象，它将不会出现在“扩展管理器”对话框中，直到用Sketchup.register_extension方法注册它。","name":"initialize","namespace":"SketchupExtension","path":"SketchupExtension#initialize","type":"instance_method","visibility":"public","parameters":[["title",["String"],"扩展名的名称"],["path",["String"],"加载插件的脚本的相对路径。"]],"return":[["Sketchup::Extension"],"新的扩展对象"]},"SketchupExtension#load_on_start?":{"description":"返回是否将扩展设置为在SketchUp启动时加载。","name":"load_on_start?","namespace":"SketchupExtension","path":"SketchupExtension#load_on_start?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果在启动时加载扩展，则为true。"]},"SketchupExtension#loaded?":{"description":"返回扩展是否当前已加载，这意味着实现扩展的实际Ruby脚本已被评估。","name":"loaded?","namespace":"SketchupExtension","path":"SketchupExtension#loaded?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果已加载扩展名，则为true"]},"SketchupExtension#name":{"description":"name方法返回在“扩展管理器”对话框中为扩展显示的名称。","name":"name","namespace":"SketchupExtension","path":"SketchupExtension#name","type":"instance_method","visibility":"public","return":[["String"],"扩展名"]},"SketchupExtension#name=":{"description":"name=方法设置在“扩展管理器”对话框中为扩展显示的名称。","name":"name=","namespace":"SketchupExtension","path":"SketchupExtension#name=","type":"instance_method","visibility":"public","parameters":[["name",["String"],"新名字"]],"return":[["String"],"扩展名"]},"SketchupExtension#registered?":{"description":"返回扩展是否已通过Sketchup.register扩展注册。","name":"registered?","namespace":"SketchupExtension","path":"SketchupExtension#registered?","type":"instance_method","visibility":"public","return":[["Boolean"],"如果扩展名已注册，则为true。"]},"SketchupExtension#uncheck":{"description":"卸载扩展。这相当于取消选中“首选项>扩展名”列表中扩展名的复选框。\\n \\n请注意，从技术上讲，扩展不会“卸载”，因为它在当前SketchUp会话期间停止运行，但下次用户重新启动SketchUp时，扩展将不会处于活动状态。","name":"uncheck","namespace":"SketchupExtension","path":"SketchupExtension#uncheck","type":"instance_method","visibility":"public","return":[["Boolean"],"卸载是否成功"]},"SketchupExtension#version":{"description":"version方法返回在“扩展管理器”对话框中的扩展下面显示的版本。","name":"version","namespace":"SketchupExtension","path":"SketchupExtension#version","type":"instance_method","visibility":"public","return":[["String"],"扩展版本"]},"SketchupExtension#version=":{"description":"version方法设置在“扩展管理器”对话框中的扩展下面显示的版本。","name":"version=","namespace":"SketchupExtension","path":"SketchupExtension#version=","type":"instance_method","visibility":"public","parameters":[["version",["String"],"要设置的版本字符串。"]],"return":[["String"],"扩展版本"]},"SketchupExtension#version_id":{"description":"version_id方法返回扩展仓库版本ID字符串。","name":"version_id","namespace":"SketchupExtension","path":"SketchupExtension#version_id","type":"instance_method","visibility":"public","return":[["String"],"扩展仓库版本ID字符串"]}}