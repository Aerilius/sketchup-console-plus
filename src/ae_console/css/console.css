/*          General Styles          */

* {
    margin: 0;
    padding: 0;
}

/* Extend html to the full viewport */
html {
    height: 100%;
    width: 100%;
    overflow: hidden;
}

/* Override bootstrap.css because device-width causes WebDialog/MSIE to show scrollbar */
@-ms-viewport {
  width: auto !important;
}

body {
    position: fixed; /* Prevents scrolling of content in IE. */
    width: inherit;
    height: inherit;
    overflow: hidden;
    background-color: Window;
    color: WindowText;
    font: message-box; /* use system font */
    font-size: 80% !important; /* This overrides the font-size contained in the system font if it does not follow dpi settings. */
    cursor: default;
}

input,
select,
label {
    /*min-height: 1.2em;*/
    vertical-align: middle;
    /*padding: 0.25em;*/
    font: message-box; /* use system font */
    font-size: 100% !important; /* This overrides the font-size contained in the system font if it does not follow dpi settings. */
    font-weight: normal;/* override bootstrap forms.less */
    display: inline-block; /* override bootstrap forms.less */
}

input[type=text],
input[type=number] {
    cursor: auto;
}

input[type=text][disabled],
input[type=number][disabled] {
    opacity: 0.5;
    filter: alpha(opacity=50);
}

input[type=text].num,
input[type=number] {
    text-align: right;
    width: 4em;
}

button {
    font: message-box; /* use system font */
    font-size: 100% !important; /* This overrides the font-size contained in the system font if it does not follow dpi settings. */
    color: ButtonText;
    vertical-align: middle;
}

form {
    margin: 0;
    padding: 0;
}

code {
    font-family: inherit !important; /* override bootstrap code.less */
    color: inherit; /* override bootstrap code.less without overriding inherited styles */
    font-size: inherit !important;
}

.hide {
    display: none !important;
}

ul {
    list-style: none outside none;
    margin: 0;
    padding: 0;
}

ul li {
    display: block;
    margin: 0;
    padding: 0;
    clear: both;
}

hr {
    margin: 0 !important; /* override bootstrap.css */
}

table {
    border-spacing: 0;
    border-collapse: collapse;
}

/*       General Styles Classes      */

.unselectable:after {
    /* CSS pseudo-element text is never included in selection ranges.
       By adding text through a data-text attribute, we can avoid that it 
       appears inbetween console commands when selecting and copying text. */
    content: attr(data-text);
}

.active, .selected {
    color: HighlightText;
    background-color: Highlight;
}

.ellipsis {
    overflow: hidden;        /* Hide any overflow */
    white-space: nowrap;     /* Prevent any line-break */
    text-overflow: ellipsis; /* Add ellipsis at end of line */
}

.ellipsis-left {
    overflow: hidden;        /* Hide any overflow */
    white-space: nowrap;     /* Prevent any line-break */
    text-overflow: ellipsis; /* Add ellipsis at end of line */
    direction: rtl;
    float: right;
    width: 100%;
}
/* Not working clearfix */
.ellipsis-left:after {
    display: block;
    clear: both;
}

/*          Individual Styles          */

/* Toolbar left, center, right */

.toolbar {
    background-color: Menu;
    color: MenuText;
    /* layout */
    display: table-row;
    height: 3em;
    /* vertical centering */
    line-height: 3em;
}

.toolbar > .toolbar-left,
.toolbar > .toolbar-right {
    padding: 0 0.5em;
    line-height: inherit;
}

.toolbar > .toolbar-left,
.toolbar > .toolbar-center,
.toolbar > .toolbar-right {
    /* expand to content width */
    display: table-cell;
    white-space: nowrap;
    max-width: 100%;
}

.toolbar > .toolbar-left > *,
.toolbar > .toolbar-right > * {
    display: inline-block;
    /* vertical centering */
    line-height: 1em;
    min-height: 2.25em;
    min-width: 2.25em;
}

.toolbar > .toolbar-center.toolbar-center-expandable-outer {
    /* expand to all available space */
    position: relative;
    width: 100%;
}

.toolbar > .toolbar-center-expandable-outer > .toolbar-center-expandable-inner {
    position: absolute; /* prevent overflow */
    width: inherit; /* 100% */
    top: 0;
    left: 0;
}

.toolbar > .toolbar-center .toolbar-center-centering {
    /* horizontal centering */
    text-align: center;
    /* vertical centering */
    display: inline-block; /* inlining */
    vertical-align: middle;
    /* enable ellipsis on content */
    width: inherit;
}

.toolbar > .toolbar-center .toolbar-center-centering > * {
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Toolbar buttons */

.toolbar button img {
    vertical-align: middle;
    width: 1.5em;
    height: 1.5em;
    padding: 0.25em;
}

.toolbar h1 {
    font: Menu;
    font-weight: bold !important;
    font-size: inherit;
    margin: 0;
    padding: 0;
}

.toolbar h2 {
    font: Menu;
    font-weight: normal !important;
    font-size: 75%;
    opacity: 0.66;
    margin: 0;
    padding: 0;
}

/* Menu */

.dispatch {
    position: relative;
    display: inline-block;
    vertical-align: bottom !important;
    overflow: visible;
}

.menu, .dropdown-menu {
    width: 15em;
    /*position: absolute;*/
    /*z-index: 1000;*/
    /*text-align: left;*/
    background-color: Menu !important;
    color: MenuText !important;
    font: menu !important;
    font-size: 100% !important;
    border: 1px solid ButtonShadow;
    box-shadow: 0 0.25em 1em 0 rgba(0, 0, 0, 0.25);
}

.menu.right {
    right: 0;
}

.menu li {
    padding: 0.5em 0.5em 0.25em 1em !important; /* overrides jquery-ui.css */
}

.menu li:hover {
    background-color: Highlight;
    color: HighlightText;
}
.menu li.disabled:hover,
.menu li.dropdown-header:hover {
    background-color: transparent;
    color: inherit;
}

.menu li > label:only-child {
    display: block;
}

.menu label input,
.menu label select {
    float: right;
    max-width: 100%;
    color: MenuText;
}
.menu label input[type=radio],
.menu label input[type=checkbox] {
    float: left;
    margin-right: 0.5em;
}
.menu label:after { /* clear fix */
    clear: both;
    content: "";
    display: block;
}

/* Bootstrap Popover*/

.popover {
    font: inherit;
    font-family: inherit !important;
    font-size: inherit !important;
    font-style: inherit !important;
    font-weight: inherit !important;
    width: 20em;
    max-width: inherit; /* Override bootstrap pixel dimensions */
    font-size: inherit; /* Override bootstrap pixel dimensions */
}

.popover-title {
    font-size: inherit; /* Override bootstrap pixel dimensions */
}

/* Make popover arrow match the popover title background-color (gray instead of default white). */
.popover.bottom > .arrow:after {
    border-bottom-color: #f7f7f7; /* bootstrap popover.less: .popover-title[background-color] */
}

/* Main Page Layout */

#consoleToolbar, #editorToolbar {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: 10; /* above the console/editor content wrapper (for MSIE) */
}
#consoleContentWrapper, #editorContentWrapper {
    position: absolute;
    top: 3em; /* toolbar height */
    left: 0;
    width: 100%;
    bottom: 0;
    /*border: 0;*/
}

#consoleContentWrapper {
    /* Make content scrollable */
    overflow-x: hidden;
    overflow-y: auto;
}

#consoleContent {
    /* Scrollable */
    position: relative; /* Make layout so that child elements can use height:100% */
    /* If content is smaller than parent, fill the complete parent.
       This is important to have a consistent background color with different themes. */
    min-height: 100%;
}

#consoleOutputFakeGutter {
    /*width: 3em; /* 1.75em */
    position: absolute;
    height: 100%;
    z-index: 0;
}

#consoleInput {
    position: relative;
    height: 100%;
    min-height: 5em;
    bottom: 0;
}

#editorInput {
    position: absolute;
    width: 100%;
    top: 0;
    bottom: 0;
}

/* Output */

#consoleOutput {
    font-size: inherit!important; /* override hard-coded font-size in .ace_editor */
}

#consoleOutput .message {
    position: relative;
    display: block;
    padding-left: 3em;
    min-height: 1em;
    overflow: visible;
}

#consoleOutput .message.input,
.message.result + .message,
#consoleInput,
#editorInput {
    border-top: 1px #ddd solid;
    border-top: 1px rgba(128, 128, 128, 0.2) solid;
}

#consoleOutput .message .content {
    display: block;
    font-family: inherit;
    position: relative;
    padding-left: 4px; /* from ace_layer ace_text-layer */
    white-space: pre; /* if not .wrap_line */
}

#consoleOutput.wrap_lines .message .content {
    white-space: pre-wrap;
    word-wrap: break-word; /* needs layout in Internet Explorer */
    zoom: 1; /* makes layout */
}

#consoleOutput .message .gutter {
    position: absolute;
    /*width: 3em;  /* 1.75 em */
    background-position: 90% -2px !important; /* Fallback for unsupported calc() */
    background-position: right 10% top calc(0.5em - 9px) !important; /* Align image vertically at center of first row (minus half of image height) */
    background-repeat: no-repeat !important;
}

#consoleOutput .message.input .gutter {
    background: url("../images/gutter_input.png"); /* fallback for no svg support */
    background-image: url("../images/gutter_input.svg"), none;
}

#consoleOutput .message.result .gutter {
    background: url("../images/gutter_result.png");
    background-image: url("../images/gutter_result.svg"), none;
}

#consoleOutput .message.error .gutter {
    background: url("../images/gutter_error.png");
    background-image: url("../images/gutter_error.svg"), none;
}

#consoleOutput .message.warn .gutter {
    background: url("../images/gutter_warn.png");
    background-image: url("../images/gutter_warn.svg"), none;
}

#consoleOutput .message.stdout .gutter {
    background: url("../images/gutter_puts.png");
    background-image: url("../images/gutter_puts.svg"), none;
}

#consoleOutput .message.puts .gutter {
    background: url("../images/gutter_puts.png");
    background-image: url("../images/gutter_puts.svg"), none;
}

#consoleOutput .message.print .gutter {
    background: url("../images/gutter_puts.png");
    background-image: url("../images/gutter_puts.svg"), none;
}

#consoleOutput .message .counter {
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 1;
    min-width: 1em;
    background: red;
    color: white;
    border-radius: 0.5em;
    text-align: center;
}

#consoleOutput .message .time {
    position: absolute;
    right: 0;
    bottom: 0;
    color: GrayText;
    opacity: 0.5;
}

#consoleOutput .message.error .header {
    color: #ca0000;
}

#consoleOutput .message.error .header:not(:only-child),
#consoleOutput .message.warn .header:not(:only-child) { /* only .header if followed by .backtrace */
    cursor: pointer;
}

/*          ACE Tweaks          */

/* Hide line number for single lines. */
.ace_gutter-cell:first-child:last-child {
    visibility: hidden;
}

.ace_folding-enabled > .ace_gutter-cell {
    padding-right: 40%;
}

/* Reduce gutter width. */
.ace_gutter-layer,
#consoleOutputFakeGutter,
#consoleOutput .message .gutter {
    width: 3em !important; /* 1.75em */
}

#consoleInput .ace_gutter {
    min-height: inherit; /* #consoleInput{ height } */
}

.ace_gutter-cell {
    padding-left: 2px !important;
}

/* Hide scrollbar. */
/*.ace_scrollbar {
    display: none;
}*/

/* Additional highlighter class for ace/mode/ruby_sketchup */
.ace_sketchup {
    color: rgb(77, 82, 89) !important;
}

.ace_dark .ace_sketchup {
    color: rgb(178, 173, 166) !important;
}

/* Shortcut menu: centering */
#kbshortcutmenu {
    left: 0; right: 0;
    margin: 1em auto !important;
    width: 30em;
    max-width: 100%;
    border-radius: 0.5em;
}

/* Search & Replace box: Move it to the top of dialog just below the toolbar */
.ace_search {
    position: fixed !important;
    top: 3em !important; /* .toolbar height */
}

/* Avoid text overflow in bootstrap notify plugin */
.alert {
    word-break: break-word;
}
