{"Base64":{"description":"The Base64 module provides for the encoding (#encode64, #strict_encode64,\n#urlsafe_encode64) and decoding (#decode64, #strict_decode64,\n#urlsafe_decode64) of binary data using a Base64 representation.\n\n== Example\n\nA simple encoding and decoding.\n\n    require \"base64\"\n\n    enc   = Base64.encode64('Send reinforcements')\n                        # -> \"U2VuZCByZWluZm9yY2VtZW50cw==\\n\"\n    plain = Base64.decode64(enc)\n                        # -> \"Send reinforcements\"\n\nThe purpose of using base64 to encode data is that it translates any\nbinary data into purely printable characters.","name":"Base64","namespace":"","path":"Base64","type":"module","visibility":"public"},"Base64#decode64":{"description":"Returns the Base64-decoded version of +str+.\nThis method complies with RFC 2045.\nCharacters outside the base alphabet are ignored.\n\n  require 'base64'\n  str = 'VGhpcyBpcyBsaW5lIG9uZQpUaGlzIG' +\n        'lzIGxpbmUgdHdvClRoaXMgaXMgbGlu' +\n        'ZSB0aHJlZQpBbmQgc28gb24uLi4K'\n  puts Base64.decode64(str)\n\n<i>Generates:</i>\n\n   This is line one\n   This is line two\n   This is line three\n   And so on...","name":"decode64","namespace":"Base64","path":"Base64#decode64","type":"module_function","visibility":"private"},"Base64#encode64":{"description":"Returns the Base64-encoded version of +bin+.\nThis method complies with RFC 2045.\nLine feeds are added to every 60 encoded characters.\n\n   require 'base64'\n   Base64.encode64(\"Now is the time for all good coders\\nto learn Ruby\")\n\n<i>Generates:</i>\n\n   Tm93IGlzIHRoZSB0aW1lIGZvciBhbGwgZ29vZCBjb2RlcnMKdG8gbGVhcm4g\n   UnVieQ==","name":"encode64","namespace":"Base64","path":"Base64#encode64","type":"module_function","visibility":"private"},"Base64#strict_decode64":{"description":"Returns the Base64-decoded version of +str+.\nThis method complies with RFC 4648.\nArgumentError is raised if +str+ is incorrectly padded or contains\nnon-alphabet characters.  Note that CR or LF are also rejected.","name":"strict_decode64","namespace":"Base64","path":"Base64#strict_decode64","type":"module_function","visibility":"private"},"Base64#strict_encode64":{"description":"Returns the Base64-encoded version of +bin+.\nThis method complies with RFC 4648.\nNo line feeds are added.","name":"strict_encode64","namespace":"Base64","path":"Base64#strict_encode64","type":"module_function","visibility":"private"},"Base64#urlsafe_decode64":{"description":"Returns the Base64-decoded version of +str+.\nThis method complies with ``Base 64 Encoding with URL and Filename Safe\nAlphabet'' in RFC 4648.\nThe alphabet uses '-' instead of '+' and '_' instead of '/'.","name":"urlsafe_decode64","namespace":"Base64","path":"Base64#urlsafe_decode64","type":"module_function","visibility":"private"},"Base64#urlsafe_encode64":{"description":"Returns the Base64-encoded version of +bin+.\nThis method complies with ``Base 64 Encoding with URL and Filename Safe\nAlphabet'' in RFC 4648.\nThe alphabet uses '-' instead of '+' and '_' instead of '/'.","name":"urlsafe_encode64","namespace":"Base64","path":"Base64#urlsafe_encode64","type":"module_function","visibility":"private"},"Base64.decode64":{"description":"Returns the Base64-decoded version of +str+.\nThis method complies with RFC 2045.\nCharacters outside the base alphabet are ignored.\n\n  require 'base64'\n  str = 'VGhpcyBpcyBsaW5lIG9uZQpUaGlzIG' +\n        'lzIGxpbmUgdHdvClRoaXMgaXMgbGlu' +\n        'ZSB0aHJlZQpBbmQgc28gb24uLi4K'\n  puts Base64.decode64(str)\n\n<i>Generates:</i>\n\n   This is line one\n   This is line two\n   This is line three\n   And so on...","name":"decode64","namespace":"Base64","path":"Base64.decode64","type":"module_function","visibility":"public"},"Base64.encode64":{"description":"Returns the Base64-encoded version of +bin+.\nThis method complies with RFC 2045.\nLine feeds are added to every 60 encoded characters.\n\n   require 'base64'\n   Base64.encode64(\"Now is the time for all good coders\\nto learn Ruby\")\n\n<i>Generates:</i>\n\n   Tm93IGlzIHRoZSB0aW1lIGZvciBhbGwgZ29vZCBjb2RlcnMKdG8gbGVhcm4g\n   UnVieQ==","name":"encode64","namespace":"Base64","path":"Base64.encode64","type":"module_function","visibility":"public"},"Base64.strict_decode64":{"description":"Returns the Base64-decoded version of +str+.\nThis method complies with RFC 4648.\nArgumentError is raised if +str+ is incorrectly padded or contains\nnon-alphabet characters.  Note that CR or LF are also rejected.","name":"strict_decode64","namespace":"Base64","path":"Base64.strict_decode64","type":"module_function","visibility":"public"},"Base64.strict_encode64":{"description":"Returns the Base64-encoded version of +bin+.\nThis method complies with RFC 4648.\nNo line feeds are added.","name":"strict_encode64","namespace":"Base64","path":"Base64.strict_encode64","type":"module_function","visibility":"public"},"Base64.urlsafe_decode64":{"description":"Returns the Base64-decoded version of +str+.\nThis method complies with ``Base 64 Encoding with URL and Filename Safe\nAlphabet'' in RFC 4648.\nThe alphabet uses '-' instead of '+' and '_' instead of '/'.","name":"urlsafe_decode64","namespace":"Base64","path":"Base64.urlsafe_decode64","type":"module_function","visibility":"public"},"Base64.urlsafe_encode64":{"description":"Returns the Base64-encoded version of +bin+.\nThis method complies with ``Base 64 Encoding with URL and Filename Safe\nAlphabet'' in RFC 4648.\nThe alphabet uses '-' instead of '+' and '_' instead of '/'.","name":"urlsafe_encode64","namespace":"Base64","path":"Base64.urlsafe_encode64","type":"module_function","visibility":"public"},"Benchmark":{"description":"The Benchmark module provides methods to measure and report the time\nused to execute Ruby code.\n\n* Measure the time to construct the string given by the expression\n  <code>\"a\"*1_000_000_000</code>:\n\n      require 'benchmark'\n\n      puts Benchmark.measure { \"a\"*1_000_000_000 }\n\n  On my machine (OSX 10.8.3 on i5 1.7 Ghz) this generates:\n\n      0.350000   0.400000   0.750000 (  0.835234)\n\n  This report shows the user CPU time, system CPU time, the sum of\n  the user and system CPU times, and the elapsed real time. The unit\n  of time is seconds.\n\n* Do some experiments sequentially using the #bm method:\n\n      require 'benchmark'\n\n      n = 5000000\n      Benchmark.bm do |x|\n        x.report { for i in 1..n; a = \"1\"; end }\n        x.report { n.times do   ; a = \"1\"; end }\n        x.report { 1.upto(n) do ; a = \"1\"; end }\n      end\n\n  The result:\n\n             user     system      total        real\n         1.010000   0.000000   1.010000 (  1.014479)\n         1.000000   0.000000   1.000000 (  0.998261)\n         0.980000   0.000000   0.980000 (  0.981335)\n\n* Continuing the previous example, put a label in each report:\n\n      require 'benchmark'\n\n      n = 5000000\n      Benchmark.bm(7) do |x|\n        x.report(\"for:\")   { for i in 1..n; a = \"1\"; end }\n        x.report(\"times:\") { n.times do   ; a = \"1\"; end }\n        x.report(\"upto:\")  { 1.upto(n) do ; a = \"1\"; end }\n      end\n\nThe result:\n\n                    user     system      total        real\n      for:      1.010000   0.000000   1.010000 (  1.015688)\n      times:    1.000000   0.000000   1.000000 (  1.003611)\n      upto:     1.030000   0.000000   1.030000 (  1.028098)\n\n* The times for some benchmarks depend on the order in which items\n  are run.  These differences are due to the cost of memory\n  allocation and garbage collection. To avoid these discrepancies,\n  the #bmbm method is provided.  For example, to compare ways to\n  sort an array of floats:\n\n      require 'benchmark'\n\n      array = (1..1000000).map { rand }\n\n      Benchmark.bmbm do |x|\n        x.report(\"sort!\") { array.dup.sort! }\n        x.report(\"sort\")  { array.dup.sort  }\n      end\n\n  The result:\n\n       Rehearsal -----------------------------------------\n       sort!   1.490000   0.010000   1.500000 (  1.490520)\n       sort    1.460000   0.000000   1.460000 (  1.463025)\n       -------------------------------- total: 2.960000sec\n\n                   user     system      total        real\n       sort!   1.460000   0.000000   1.460000 (  1.460465)\n       sort    1.450000   0.010000   1.460000 (  1.448327)\n\n* Report statistics of sequential experiments with unique labels,\n  using the #benchmark method:\n\n      require 'benchmark'\n      include Benchmark         # we need the CAPTION and FORMAT constants\n\n      n = 5000000\n      Benchmark.benchmark(CAPTION, 7, FORMAT, \">total:\", \">avg:\") do |x|\n        tf = x.report(\"for:\")   { for i in 1..n; a = \"1\"; end }\n        tt = x.report(\"times:\") { n.times do   ; a = \"1\"; end }\n        tu = x.report(\"upto:\")  { 1.upto(n) do ; a = \"1\"; end }\n        [tf+tt+tu, (tf+tt+tu)/3]\n      end\n\n  The result:\n\n                    user     system      total        real\n       for:      0.950000   0.000000   0.950000 (  0.952039)\n       times:    0.980000   0.000000   0.980000 (  0.984938)\n       upto:     0.950000   0.000000   0.950000 (  0.946787)\n       >total:   2.880000   0.000000   2.880000 (  2.883764)\n       >avg:     0.960000   0.000000   0.960000 (  0.961255)","name":"Benchmark","namespace":"","path":"Benchmark","type":"module","visibility":"public"},"Benchmark#benchmark":{"description":"Invokes the block with a Benchmark::Report object, which\nmay be used to collect and report on the results of individual\nbenchmark tests. Reserves +label_width+ leading spaces for\nlabels on each line. Prints +caption+ at the top of the\nreport, and uses +format+ to format each line.\nReturns an array of Benchmark::Tms objects.\n\nIf the block returns an array of\nBenchmark::Tms objects, these will be used to format\nadditional lines of output. If +label+ parameters are\ngiven, these are used to label these extra lines.\n\n_Note_: Other methods provide a simpler interface to this one, and are\nsuitable for nearly all benchmarking requirements.  See the examples in\nBenchmark, and the #bm and #bmbm methods.\n\nExample:\n\n    require 'benchmark'\n    include Benchmark          # we need the CAPTION and FORMAT constants\n\n    n = 5000000\n    Benchmark.benchmark(CAPTION, 7, FORMAT, \">total:\", \">avg:\") do |x|\n      tf = x.report(\"for:\")   { for i in 1..n; a = \"1\"; end }\n      tt = x.report(\"times:\") { n.times do   ; a = \"1\"; end }\n      tu = x.report(\"upto:\")  { 1.upto(n) do ; a = \"1\"; end }\n      [tf+tt+tu, (tf+tt+tu)/3]\n    end\n\nGenerates:\n\n                    user     system      total        real\n      for:      0.970000   0.000000   0.970000 (  0.970493)\n      times:    0.990000   0.000000   0.990000 (  0.989542)\n      upto:     0.970000   0.000000   0.970000 (  0.972854)\n      >total:   2.930000   0.000000   2.930000 (  2.932889)\n      >avg:     0.976667   0.000000   0.976667 (  0.977630)","name":"benchmark","namespace":"Benchmark","path":"Benchmark#benchmark","type":"module_function","visibility":"private"},"Benchmark#bm":{"description":"A simple interface to the #benchmark method, #bm generates sequential\nreports with labels.  The parameters have the same meaning as for\n#benchmark.\n\n    require 'benchmark'\n\n    n = 5000000\n    Benchmark.bm(7) do |x|\n      x.report(\"for:\")   { for i in 1..n; a = \"1\"; end }\n      x.report(\"times:\") { n.times do   ; a = \"1\"; end }\n      x.report(\"upto:\")  { 1.upto(n) do ; a = \"1\"; end }\n    end\n\nGenerates:\n\n                    user     system      total        real\n      for:      0.960000   0.000000   0.960000 (  0.957966)\n      times:    0.960000   0.000000   0.960000 (  0.960423)\n      upto:     0.950000   0.000000   0.950000 (  0.954864)","name":"bm","namespace":"Benchmark","path":"Benchmark#bm","type":"module_function","visibility":"private"},"Benchmark#bmbm":{"description":"Sometimes benchmark results are skewed because code executed\nearlier encounters different garbage collection overheads than\nthat run later. #bmbm attempts to minimize this effect by running\nthe tests twice, the first time as a rehearsal in order to get the\nruntime environment stable, the second time for\nreal. GC.start is executed before the start of each of\nthe real timings; the cost of this is not included in the\ntimings. In reality, though, there's only so much that #bmbm can\ndo, and the results are not guaranteed to be isolated from garbage\ncollection and other effects.\n\nBecause #bmbm takes two passes through the tests, it can\ncalculate the required label width.\n\n      require 'benchmark'\n\n      array = (1..1000000).map { rand }\n\n      Benchmark.bmbm do |x|\n        x.report(\"sort!\") { array.dup.sort! }\n        x.report(\"sort\")  { array.dup.sort  }\n      end\n\nGenerates:\n\n       Rehearsal -----------------------------------------\n       sort!   1.440000   0.010000   1.450000 (  1.446833)\n       sort    1.440000   0.000000   1.440000 (  1.448257)\n       -------------------------------- total: 2.890000sec\n\n                   user     system      total        real\n       sort!   1.460000   0.000000   1.460000 (  1.458065)\n       sort    1.450000   0.000000   1.450000 (  1.455963)\n\n#bmbm yields a Benchmark::Job object and returns an array of\nBenchmark::Tms objects.","name":"bmbm","namespace":"Benchmark","path":"Benchmark#bmbm","type":"module_function","visibility":"private"},"Benchmark#measure":{"description":"Returns the time used to execute the given block as a\nBenchmark::Tms object.","name":"measure","namespace":"Benchmark","path":"Benchmark#measure","type":"module_function","visibility":"private"},"Benchmark#realtime":{"description":"Returns the elapsed real time used to execute the given block.","name":"realtime","namespace":"Benchmark","path":"Benchmark#realtime","type":"module_function","visibility":"private"},"Benchmark.benchmark":{"description":"Invokes the block with a Benchmark::Report object, which\nmay be used to collect and report on the results of individual\nbenchmark tests. Reserves +label_width+ leading spaces for\nlabels on each line. Prints +caption+ at the top of the\nreport, and uses +format+ to format each line.\nReturns an array of Benchmark::Tms objects.\n\nIf the block returns an array of\nBenchmark::Tms objects, these will be used to format\nadditional lines of output. If +label+ parameters are\ngiven, these are used to label these extra lines.\n\n_Note_: Other methods provide a simpler interface to this one, and are\nsuitable for nearly all benchmarking requirements.  See the examples in\nBenchmark, and the #bm and #bmbm methods.\n\nExample:\n\n    require 'benchmark'\n    include Benchmark          # we need the CAPTION and FORMAT constants\n\n    n = 5000000\n    Benchmark.benchmark(CAPTION, 7, FORMAT, \">total:\", \">avg:\") do |x|\n      tf = x.report(\"for:\")   { for i in 1..n; a = \"1\"; end }\n      tt = x.report(\"times:\") { n.times do   ; a = \"1\"; end }\n      tu = x.report(\"upto:\")  { 1.upto(n) do ; a = \"1\"; end }\n      [tf+tt+tu, (tf+tt+tu)/3]\n    end\n\nGenerates:\n\n                    user     system      total        real\n      for:      0.970000   0.000000   0.970000 (  0.970493)\n      times:    0.990000   0.000000   0.990000 (  0.989542)\n      upto:     0.970000   0.000000   0.970000 (  0.972854)\n      >total:   2.930000   0.000000   2.930000 (  2.932889)\n      >avg:     0.976667   0.000000   0.976667 (  0.977630)","name":"benchmark","namespace":"Benchmark","path":"Benchmark.benchmark","type":"module_function","visibility":"public"},"Benchmark.bm":{"description":"A simple interface to the #benchmark method, #bm generates sequential\nreports with labels.  The parameters have the same meaning as for\n#benchmark.\n\n    require 'benchmark'\n\n    n = 5000000\n    Benchmark.bm(7) do |x|\n      x.report(\"for:\")   { for i in 1..n; a = \"1\"; end }\n      x.report(\"times:\") { n.times do   ; a = \"1\"; end }\n      x.report(\"upto:\")  { 1.upto(n) do ; a = \"1\"; end }\n    end\n\nGenerates:\n\n                    user     system      total        real\n      for:      0.960000   0.000000   0.960000 (  0.957966)\n      times:    0.960000   0.000000   0.960000 (  0.960423)\n      upto:     0.950000   0.000000   0.950000 (  0.954864)","name":"bm","namespace":"Benchmark","path":"Benchmark.bm","type":"module_function","visibility":"public"},"Benchmark.bmbm":{"description":"Sometimes benchmark results are skewed because code executed\nearlier encounters different garbage collection overheads than\nthat run later. #bmbm attempts to minimize this effect by running\nthe tests twice, the first time as a rehearsal in order to get the\nruntime environment stable, the second time for\nreal. GC.start is executed before the start of each of\nthe real timings; the cost of this is not included in the\ntimings. In reality, though, there's only so much that #bmbm can\ndo, and the results are not guaranteed to be isolated from garbage\ncollection and other effects.\n\nBecause #bmbm takes two passes through the tests, it can\ncalculate the required label width.\n\n      require 'benchmark'\n\n      array = (1..1000000).map { rand }\n\n      Benchmark.bmbm do |x|\n        x.report(\"sort!\") { array.dup.sort! }\n        x.report(\"sort\")  { array.dup.sort  }\n      end\n\nGenerates:\n\n       Rehearsal -----------------------------------------\n       sort!   1.440000   0.010000   1.450000 (  1.446833)\n       sort    1.440000   0.000000   1.440000 (  1.448257)\n       -------------------------------- total: 2.890000sec\n\n                   user     system      total        real\n       sort!   1.460000   0.000000   1.460000 (  1.458065)\n       sort    1.450000   0.000000   1.450000 (  1.455963)\n\n#bmbm yields a Benchmark::Job object and returns an array of\nBenchmark::Tms objects.","name":"bmbm","namespace":"Benchmark","path":"Benchmark.bmbm","type":"module_function","visibility":"public"},"Benchmark.measure":{"description":"Returns the time used to execute the given block as a\nBenchmark::Tms object.","name":"measure","namespace":"Benchmark","path":"Benchmark.measure","type":"module_function","visibility":"public"},"Benchmark.realtime":{"description":"Returns the elapsed real time used to execute the given block.","name":"realtime","namespace":"Benchmark","path":"Benchmark.realtime","type":"module_function","visibility":"public"},"Benchmark::BENCHMARK_VERSION":{"description":":nodoc:","name":"BENCHMARK_VERSION","namespace":"Benchmark","path":"Benchmark::BENCHMARK_VERSION","type":"constant","return":null,"visibility":"public"},"Benchmark::CAPTION":{"description":"The default caption string (heading above the output times).","name":"CAPTION","namespace":"Benchmark","path":"Benchmark::CAPTION","type":"constant","return":null,"visibility":"public"},"Benchmark::FORMAT":{"description":"The default format string used to display times.  See also Benchmark::Tms#format.","name":"FORMAT","namespace":"Benchmark","path":"Benchmark::FORMAT","type":"constant","return":null,"visibility":"public"},"Benchmark::Job":{"description":"A Job is a sequence of labelled blocks to be processed by the\nBenchmark.bmbm method.  It is of little direct interest to the user.","name":"Job","namespace":"Benchmark","path":"Benchmark::Job","type":"class","visibility":"public"},"Benchmark::Job#initialize":{"description":"Returns an initialized Job instance.\nUsually, one doesn't call this method directly, as new\nJob objects are created by the #bmbm method.\n+width+ is a initial value for the label offset used in formatting;\nthe #bmbm method passes its +width+ argument to this constructor.","name":"initialize","namespace":"Benchmark::Job","path":"Benchmark::Job#initialize","type":"instance_method","visibility":"public","return":[["Job"],"a new instance of Job"]},"Benchmark::Job#item":{"description":"Registers the given label and block pair in the job list.","name":"report","namespace":"Benchmark::Job","path":"Benchmark::Job#report","type":"instance_method","visibility":"public"},"Benchmark::Job#report":{"description":"Registers the given label and block pair in the job list.","name":"report","namespace":"Benchmark::Job","path":"Benchmark::Job#report","type":"instance_method","visibility":"public"},"Benchmark::Job#list":{"description":"An array of 2-element arrays, consisting of label and block pairs.","name":"list","namespace":"Benchmark::Job","path":"Benchmark::Job#list","type":"instance_method","visibility":"public"},"Benchmark::Job#width":{"description":"Length of the widest label in the #list.","name":"width","namespace":"Benchmark::Job","path":"Benchmark::Job#width","type":"instance_method","visibility":"public"},"Benchmark::Report":{"description":"This class is used by the Benchmark.benchmark and Benchmark.bm methods.\nIt is of little direct interest to the user.","name":"Report","namespace":"Benchmark","path":"Benchmark::Report","type":"class","visibility":"public"},"Benchmark::Report#initialize":{"description":"Returns an initialized Report instance.\nUsually, one doesn't call this method directly, as new\nReport objects are created by the #benchmark and #bm methods.\n+width+ and +format+ are the label offset and\nformat string used by Tms#format.","name":"initialize","namespace":"Benchmark::Report","path":"Benchmark::Report#initialize","type":"instance_method","visibility":"public","return":[["Report"],"a new instance of Report"]},"Benchmark::Report#item":{"description":"Prints the +label+ and measured time for the block,\nformatted by +format+. See Tms#format for the\nformatting rules.","name":"report","namespace":"Benchmark::Report","path":"Benchmark::Report#report","type":"instance_method","visibility":"public"},"Benchmark::Report#report":{"description":"Prints the +label+ and measured time for the block,\nformatted by +format+. See Tms#format for the\nformatting rules.","name":"report","namespace":"Benchmark::Report","path":"Benchmark::Report#report","type":"instance_method","visibility":"public"},"Benchmark::Report#list":{"description":"An array of Benchmark::Tms objects representing each item.","name":"list","namespace":"Benchmark::Report","path":"Benchmark::Report#list","type":"instance_method","visibility":"public"},"Benchmark::Tms":{"description":"A data object, representing the times associated with a benchmark\nmeasurement.","name":"Tms","namespace":"Benchmark","path":"Benchmark::Tms","type":"class","visibility":"public"},"Benchmark::Tms#*":{"description":"Returns a new Tms object obtained by memberwise multiplication\nof the individual times for this Tms object by _x_.","name":"*","namespace":"Benchmark::Tms","path":"Benchmark::Tms#*","type":"instance_method","visibility":"public"},"Benchmark::Tms#+":{"description":"Returns a new Tms object obtained by memberwise summation\nof the individual times for this Tms object with those of the other\nTms object.\nThis method and #/() are useful for taking statistics.","name":"+","namespace":"Benchmark::Tms","path":"Benchmark::Tms#+","type":"instance_method","visibility":"public"},"Benchmark::Tms#-":{"description":"Returns a new Tms object obtained by memberwise subtraction\nof the individual times for the other Tms object from those of this\nTms object.","name":"-","namespace":"Benchmark::Tms","path":"Benchmark::Tms#-","type":"instance_method","visibility":"public"},"Benchmark::Tms#/":{"description":"Returns a new Tms object obtained by memberwise division\nof the individual times for this Tms object by _x_.\nThis method and #+() are useful for taking statistics.","name":"/","namespace":"Benchmark::Tms","path":"Benchmark::Tms#/","type":"instance_method","visibility":"public"},"Benchmark::Tms#add":{"description":"Returns a new Tms object whose times are the sum of the times for this\nTms object, plus the time required to execute the code block (+blk+).","name":"add","namespace":"Benchmark::Tms","path":"Benchmark::Tms#add","type":"instance_method","visibility":"public"},"Benchmark::Tms#add!":{"description":"An in-place version of #add.","name":"add!","namespace":"Benchmark::Tms","path":"Benchmark::Tms#add!","type":"instance_method","visibility":"public"},"Benchmark::Tms#cstime":{"description":"System CPU time of children","name":"cstime","namespace":"Benchmark::Tms","path":"Benchmark::Tms#cstime","type":"instance_method","visibility":"public"},"Benchmark::Tms#cutime":{"description":"User CPU time of children","name":"cutime","namespace":"Benchmark::Tms","path":"Benchmark::Tms#cutime","type":"instance_method","visibility":"public"},"Benchmark::Tms#format":{"description":"Returns the contents of this Tms object as\na formatted string, according to a format string\nlike that passed to Kernel.format. In addition, #format\naccepts the following extensions:\n\n<tt>%u</tt>::     Replaced by the user CPU time, as reported by Tms#utime.\n<tt>%y</tt>::     Replaced by the system CPU time, as reported by #stime (Mnemonic: y of \"s*y*stem\")\n<tt>%U</tt>::     Replaced by the children's user CPU time, as reported by Tms#cutime\n<tt>%Y</tt>::     Replaced by the children's system CPU time, as reported by Tms#cstime\n<tt>%t</tt>::     Replaced by the total CPU time, as reported by Tms#total\n<tt>%r</tt>::     Replaced by the elapsed real time, as reported by Tms#real\n<tt>%n</tt>::     Replaced by the label string, as reported by Tms#label (Mnemonic: n of \"*n*ame\")\n\nIf _format_ is not given, FORMAT is used as default value, detailing the\nuser, system and real elapsed time.","name":"format","namespace":"Benchmark::Tms","path":"Benchmark::Tms#format","type":"instance_method","visibility":"public"},"Benchmark::Tms#initialize":{"description":"Returns an initialized Tms object which has\n+utime+ as the user CPU time, +stime+ as the system CPU time,\n+cutime+ as the children's user CPU time, +cstime+ as the children's\nsystem CPU time, +real+ as the elapsed real time and +label+ as the label.","name":"initialize","namespace":"Benchmark::Tms","path":"Benchmark::Tms#initialize","type":"instance_method","visibility":"public","return":[["Tms"],"a new instance of Tms"]},"Benchmark::Tms#label":{"description":"Label","name":"label","namespace":"Benchmark::Tms","path":"Benchmark::Tms#label","type":"instance_method","visibility":"public"},"Benchmark::Tms#memberwise":{"description":"Returns a new Tms object obtained by memberwise operation +op+\nof the individual times for this Tms object with those of the other\nTms object.\n\n+op+ can be a mathematical operation such as <tt>+</tt>, <tt>-</tt>,\n<tt>*</tt>, <tt>/</tt>","name":"memberwise","namespace":"Benchmark::Tms","path":"Benchmark::Tms#memberwise","type":"instance_method","visibility":"protected"},"Benchmark::Tms#real":{"description":"Elapsed real time","name":"real","namespace":"Benchmark::Tms","path":"Benchmark::Tms#real","type":"instance_method","visibility":"public"},"Benchmark::Tms#stime":{"description":"System CPU time","name":"stime","namespace":"Benchmark::Tms","path":"Benchmark::Tms#stime","type":"instance_method","visibility":"public"},"Benchmark::Tms#to_a":{"description":"Returns a new 6-element array, consisting of the\nlabel, user CPU time, system CPU time, children's\nuser CPU time, children's system CPU time and elapsed\nreal time.","name":"to_a","namespace":"Benchmark::Tms","path":"Benchmark::Tms#to_a","type":"instance_method","visibility":"public"},"Benchmark::Tms#to_s":{"description":"Same as #format.","name":"to_s","namespace":"Benchmark::Tms","path":"Benchmark::Tms#to_s","type":"instance_method","visibility":"public"},"Benchmark::Tms#total":{"description":"Total time, that is +utime+ + +stime+ + +cutime+ + +cstime+","name":"total","namespace":"Benchmark::Tms","path":"Benchmark::Tms#total","type":"instance_method","visibility":"public"},"Benchmark::Tms#utime":{"description":"User CPU time","name":"utime","namespace":"Benchmark::Tms","path":"Benchmark::Tms#utime","type":"instance_method","visibility":"public"},"Benchmark::Tms::CAPTION":{"description":"Default caption, see also Benchmark::CAPTION","name":"CAPTION","namespace":"Benchmark::Tms","path":"Benchmark::Tms::CAPTION","type":"constant","return":null,"visibility":"public"},"Benchmark::Tms::FORMAT":{"description":"Default format string, see also Benchmark::FORMAT","name":"FORMAT","namespace":"Benchmark::Tms","path":"Benchmark::Tms::FORMAT","type":"constant","return":null,"visibility":"public"},"CMath":{"description":"= Trigonometric and transcendental functions for complex numbers.\n\nCMath is a library that provides trigonometric and transcendental\nfunctions for complex numbers. The functions in this module accept\nintegers, floating-point numbers or complex numbers as arguments.\n\nNote that the selection of functions is similar, but not identical,\nto that in module math. The reason for having two modules is that\nsome users aren't interested in complex numbers, and perhaps don't\neven know what they are. They would rather have Math.sqrt(-1) raise\nan exception than return a complex number.\n\n== Usage\n\nTo start using this library, simply require cmath library:\n\n  require \"cmath\"\n\nAnd after call any CMath function. For example:\n\n  CMath.sqrt(-9)          #=> 0+3.0i\n  CMath.exp(0 + 0i)       #=> 1.0+0.0i\n  CMath.log10(-5.to_c)    #=> (0.6989700043360187+1.3643763538418412i)\n\n\nFor more information you can see Complec class.","name":"CMath","namespace":"","path":"CMath","type":"module","visibility":"public"},"CMath#acos":{"description":"returns the arc cosine of +z+\n\n  CMath.acos(1 + 1i) #=> (0.9045568943023813-1.0612750619050357i)","name":"acos","namespace":"CMath","path":"CMath#acos","type":"module_function","visibility":"private"},"CMath#acos!":{"description":"","name":"acos!","namespace":"CMath","path":"CMath#acos!","type":"module_function","visibility":"private"},"CMath#acosh":{"description":"returns the inverse hyperbolic cosine of +z+\n\n  CMath.acosh(1 + 1i) #=> (1.0612750619050357+0.9045568943023813i)","name":"acosh","namespace":"CMath","path":"CMath#acosh","type":"module_function","visibility":"private"},"CMath#acosh!":{"description":"","name":"acosh!","namespace":"CMath","path":"CMath#acosh!","type":"module_function","visibility":"private"},"CMath#asin":{"description":"returns the arc sine of +z+\n\n  CMath.asin(1 + 1i) #=> (0.6662394324925153+1.0612750619050355i)","name":"asin","namespace":"CMath","path":"CMath#asin","type":"module_function","visibility":"private"},"CMath#asin!":{"description":"","name":"asin!","namespace":"CMath","path":"CMath#asin!","type":"module_function","visibility":"private"},"CMath#asinh":{"description":"returns the inverse hyperbolic sine of +z+\n\n  CMath.asinh(1 + 1i) #=> (1.0612750619050357+0.6662394324925153i)","name":"asinh","namespace":"CMath","path":"CMath#asinh","type":"module_function","visibility":"private"},"CMath#asinh!":{"description":"","name":"asinh!","namespace":"CMath","path":"CMath#asinh!","type":"module_function","visibility":"private"},"CMath#atan":{"description":"returns the arc tangent of +z+\n\n  CMath.atan(1 + 1i) #=> (1.0172219678978514+0.4023594781085251i)","name":"atan","namespace":"CMath","path":"CMath#atan","type":"module_function","visibility":"private"},"CMath#atan!":{"description":"","name":"atan!","namespace":"CMath","path":"CMath#atan!","type":"module_function","visibility":"private"},"CMath#atan2":{"description":"returns the arc tangent of +y+ divided by +x+ using the signs of +y+ and\n+x+ to determine the quadrant\n\n  CMath.atan2(1 + 1i, 0) #=> (1.5707963267948966+0.0i)","name":"atan2","namespace":"CMath","path":"CMath#atan2","type":"module_function","visibility":"private"},"CMath#atan2!":{"description":"","name":"atan2!","namespace":"CMath","path":"CMath#atan2!","type":"module_function","visibility":"private"},"CMath#atanh":{"description":"returns the inverse hyperbolic tangent of +z+\n\n  CMath.atanh(1 + 1i) #=> (0.4023594781085251+1.0172219678978514i)","name":"atanh","namespace":"CMath","path":"CMath#atanh","type":"module_function","visibility":"private"},"CMath#atanh!":{"description":"","name":"atanh!","namespace":"CMath","path":"CMath#atanh!","type":"module_function","visibility":"private"},"CMath#cbrt":{"description":"returns the principal value of the cube root of +z+\n\n  CMath.cbrt(1 + 4i) #=> (1.449461632813119+0.6858152562177092i)","name":"cbrt","namespace":"CMath","path":"CMath#cbrt","type":"module_function","visibility":"private"},"CMath#cbrt!":{"description":"","name":"cbrt!","namespace":"CMath","path":"CMath#cbrt!","type":"module_function","visibility":"private"},"CMath#cos":{"description":"returns the cosine of +z+, where +z+ is given in radians\n\n  CMath.cos(1 + 1i) #=> (0.8337300251311491-0.9888977057628651i)","name":"cos","namespace":"CMath","path":"CMath#cos","type":"module_function","visibility":"private"},"CMath#cos!":{"description":"","name":"cos!","namespace":"CMath","path":"CMath#cos!","type":"module_function","visibility":"private"},"CMath#cosh":{"description":"returns the hyperbolic cosine of +z+, where +z+ is given in radians\n\n  CMath.cosh(1 + 1i) #=> (0.8337300251311491+0.9888977057628651i)","name":"cosh","namespace":"CMath","path":"CMath#cosh","type":"module_function","visibility":"private"},"CMath#cosh!":{"description":"","name":"cosh!","namespace":"CMath","path":"CMath#cosh!","type":"module_function","visibility":"private"},"CMath#erf":{"description":"","name":"erf","namespace":"CMath","path":"CMath#erf","type":"module_function","visibility":"private"},"CMath#erfc":{"description":"","name":"erfc","namespace":"CMath","path":"CMath#erfc","type":"module_function","visibility":"private"},"CMath#exp":{"description":"Math::E raised to the +z+ power\n\n  CMath.exp(2i) #=> (-0.4161468365471424+0.9092974268256817i)","name":"exp","namespace":"CMath","path":"CMath#exp","type":"module_function","visibility":"private"},"CMath#exp!":{"description":"","name":"exp!","namespace":"CMath","path":"CMath#exp!","type":"module_function","visibility":"private"},"CMath#frexp":{"description":"","name":"frexp","namespace":"CMath","path":"CMath#frexp","type":"module_function","visibility":"private"},"CMath#gamma":{"description":"","name":"gamma","namespace":"CMath","path":"CMath#gamma","type":"module_function","visibility":"private"},"CMath#handle_no_method_error":{"description":":nodoc:","name":"handle_no_method_error","namespace":"CMath","path":"CMath#handle_no_method_error","type":"module_function","visibility":"private"},"CMath#hypot":{"description":"","name":"hypot","namespace":"CMath","path":"CMath#hypot","type":"module_function","visibility":"private"},"CMath#ldexp":{"description":"","name":"ldexp","namespace":"CMath","path":"CMath#ldexp","type":"module_function","visibility":"private"},"CMath#lgamma":{"description":"","name":"lgamma","namespace":"CMath","path":"CMath#lgamma","type":"module_function","visibility":"private"},"CMath#log":{"description":"Returns the natural logarithm of Complex. If a second argument is given,\nit will be the base of logarithm.\n\n  CMath.log(1 + 4i)     #=> (1.416606672028108+1.3258176636680326i)\n  CMath.log(1 + 4i, 10) #=> (0.6152244606891369+0.5757952953408879i)","name":"log","namespace":"CMath","path":"CMath#log","type":"module_function","visibility":"private"},"CMath#log!":{"description":"","name":"log!","namespace":"CMath","path":"CMath#log!","type":"module_function","visibility":"private"},"CMath#log10":{"description":"returns the base 10 logarithm of +z+\n\n  CMath.log10(-1) #=> (0.0+1.3643763538418412i)","name":"log10","namespace":"CMath","path":"CMath#log10","type":"module_function","visibility":"private"},"CMath#log10!":{"description":"","name":"log10!","namespace":"CMath","path":"CMath#log10!","type":"module_function","visibility":"private"},"CMath#log2":{"description":"returns the base 2 logarithm of +z+\n\n  CMath.log2(-1) => (0.0+4.532360141827194i)","name":"log2","namespace":"CMath","path":"CMath#log2","type":"module_function","visibility":"private"},"CMath#log2!":{"description":"","name":"log2!","namespace":"CMath","path":"CMath#log2!","type":"module_function","visibility":"private"},"CMath#sin":{"description":"returns the sine of +z+, where +z+ is given in radians\n\n  CMath.sin(1 + 1i) #=> (1.2984575814159773+0.6349639147847361i)","name":"sin","namespace":"CMath","path":"CMath#sin","type":"module_function","visibility":"private"},"CMath#sin!":{"description":"","name":"sin!","namespace":"CMath","path":"CMath#sin!","type":"module_function","visibility":"private"},"CMath#sinh":{"description":"returns the hyperbolic sine of +z+, where +z+ is given in radians\n\n  CMath.sinh(1 + 1i) #=> (0.6349639147847361+1.2984575814159773i)","name":"sinh","namespace":"CMath","path":"CMath#sinh","type":"module_function","visibility":"private"},"CMath#sinh!":{"description":"","name":"sinh!","namespace":"CMath","path":"CMath#sinh!","type":"module_function","visibility":"private"},"CMath#sqrt":{"description":"Returns the non-negative square root of Complex.\n\n  CMath.sqrt(-1 + 0i) #=> 0.0+1.0i","name":"sqrt","namespace":"CMath","path":"CMath#sqrt","type":"module_function","visibility":"private"},"CMath#sqrt!":{"description":"","name":"sqrt!","namespace":"CMath","path":"CMath#sqrt!","type":"module_function","visibility":"private"},"CMath#tan":{"description":"returns the tangent of +z+, where +z+ is given in radians\n\n  CMath.tan(1 + 1i) #=> (0.27175258531951174+1.0839233273386943i)","name":"tan","namespace":"CMath","path":"CMath#tan","type":"module_function","visibility":"private"},"CMath#tan!":{"description":"","name":"tan!","namespace":"CMath","path":"CMath#tan!","type":"module_function","visibility":"private"},"CMath#tanh":{"description":"returns the hyperbolic tangent of +z+, where +z+ is given in radians\n\n  CMath.tanh(1 + 1i) #=> (1.0839233273386943+0.27175258531951174i)","name":"tanh","namespace":"CMath","path":"CMath#tanh","type":"module_function","visibility":"private"},"CMath#tanh!":{"description":"","name":"tanh!","namespace":"CMath","path":"CMath#tanh!","type":"module_function","visibility":"private"},"CMath.acos":{"description":"returns the arc cosine of +z+\n\n  CMath.acos(1 + 1i) #=> (0.9045568943023813-1.0612750619050357i)","name":"acos","namespace":"CMath","path":"CMath.acos","type":"module_function","visibility":"public"},"CMath.acos!":{"description":"","name":"acos!","namespace":"CMath","path":"CMath.acos!","type":"module_function","visibility":"public"},"CMath.acosh":{"description":"returns the inverse hyperbolic cosine of +z+\n\n  CMath.acosh(1 + 1i) #=> (1.0612750619050357+0.9045568943023813i)","name":"acosh","namespace":"CMath","path":"CMath.acosh","type":"module_function","visibility":"public"},"CMath.acosh!":{"description":"","name":"acosh!","namespace":"CMath","path":"CMath.acosh!","type":"module_function","visibility":"public"},"CMath.asin":{"description":"returns the arc sine of +z+\n\n  CMath.asin(1 + 1i) #=> (0.6662394324925153+1.0612750619050355i)","name":"asin","namespace":"CMath","path":"CMath.asin","type":"module_function","visibility":"public"},"CMath.asin!":{"description":"","name":"asin!","namespace":"CMath","path":"CMath.asin!","type":"module_function","visibility":"public"},"CMath.asinh":{"description":"returns the inverse hyperbolic sine of +z+\n\n  CMath.asinh(1 + 1i) #=> (1.0612750619050357+0.6662394324925153i)","name":"asinh","namespace":"CMath","path":"CMath.asinh","type":"module_function","visibility":"public"},"CMath.asinh!":{"description":"","name":"asinh!","namespace":"CMath","path":"CMath.asinh!","type":"module_function","visibility":"public"},"CMath.atan":{"description":"returns the arc tangent of +z+\n\n  CMath.atan(1 + 1i) #=> (1.0172219678978514+0.4023594781085251i)","name":"atan","namespace":"CMath","path":"CMath.atan","type":"module_function","visibility":"public"},"CMath.atan!":{"description":"","name":"atan!","namespace":"CMath","path":"CMath.atan!","type":"module_function","visibility":"public"},"CMath.atan2":{"description":"returns the arc tangent of +y+ divided by +x+ using the signs of +y+ and\n+x+ to determine the quadrant\n\n  CMath.atan2(1 + 1i, 0) #=> (1.5707963267948966+0.0i)","name":"atan2","namespace":"CMath","path":"CMath.atan2","type":"module_function","visibility":"public"},"CMath.atan2!":{"description":"","name":"atan2!","namespace":"CMath","path":"CMath.atan2!","type":"module_function","visibility":"public"},"CMath.atanh":{"description":"returns the inverse hyperbolic tangent of +z+\n\n  CMath.atanh(1 + 1i) #=> (0.4023594781085251+1.0172219678978514i)","name":"atanh","namespace":"CMath","path":"CMath.atanh","type":"module_function","visibility":"public"},"CMath.atanh!":{"description":"","name":"atanh!","namespace":"CMath","path":"CMath.atanh!","type":"module_function","visibility":"public"},"CMath.cbrt":{"description":"returns the principal value of the cube root of +z+\n\n  CMath.cbrt(1 + 4i) #=> (1.449461632813119+0.6858152562177092i)","name":"cbrt","namespace":"CMath","path":"CMath.cbrt","type":"module_function","visibility":"public"},"CMath.cbrt!":{"description":"","name":"cbrt!","namespace":"CMath","path":"CMath.cbrt!","type":"module_function","visibility":"public"},"CMath.cos":{"description":"returns the cosine of +z+, where +z+ is given in radians\n\n  CMath.cos(1 + 1i) #=> (0.8337300251311491-0.9888977057628651i)","name":"cos","namespace":"CMath","path":"CMath.cos","type":"module_function","visibility":"public"},"CMath.cos!":{"description":"","name":"cos!","namespace":"CMath","path":"CMath.cos!","type":"module_function","visibility":"public"},"CMath.cosh":{"description":"returns the hyperbolic cosine of +z+, where +z+ is given in radians\n\n  CMath.cosh(1 + 1i) #=> (0.8337300251311491+0.9888977057628651i)","name":"cosh","namespace":"CMath","path":"CMath.cosh","type":"module_function","visibility":"public"},"CMath.cosh!":{"description":"","name":"cosh!","namespace":"CMath","path":"CMath.cosh!","type":"module_function","visibility":"public"},"CMath.erf":{"description":"","name":"erf","namespace":"CMath","path":"CMath.erf","type":"module_function","visibility":"public"},"CMath.erfc":{"description":"","name":"erfc","namespace":"CMath","path":"CMath.erfc","type":"module_function","visibility":"public"},"CMath.exp":{"description":"Math::E raised to the +z+ power\n\n  CMath.exp(2i) #=> (-0.4161468365471424+0.9092974268256817i)","name":"exp","namespace":"CMath","path":"CMath.exp","type":"module_function","visibility":"public"},"CMath.exp!":{"description":"","name":"exp!","namespace":"CMath","path":"CMath.exp!","type":"module_function","visibility":"public"},"CMath.frexp":{"description":"","name":"frexp","namespace":"CMath","path":"CMath.frexp","type":"module_function","visibility":"public"},"CMath.gamma":{"description":"","name":"gamma","namespace":"CMath","path":"CMath.gamma","type":"module_function","visibility":"public"},"CMath.handle_no_method_error":{"description":":nodoc:","name":"handle_no_method_error","namespace":"CMath","path":"CMath.handle_no_method_error","type":"module_function","visibility":"public"},"CMath.hypot":{"description":"","name":"hypot","namespace":"CMath","path":"CMath.hypot","type":"module_function","visibility":"public"},"CMath.ldexp":{"description":"","name":"ldexp","namespace":"CMath","path":"CMath.ldexp","type":"module_function","visibility":"public"},"CMath.lgamma":{"description":"","name":"lgamma","namespace":"CMath","path":"CMath.lgamma","type":"module_function","visibility":"public"},"CMath.log":{"description":"Returns the natural logarithm of Complex. If a second argument is given,\nit will be the base of logarithm.\n\n  CMath.log(1 + 4i)     #=> (1.416606672028108+1.3258176636680326i)\n  CMath.log(1 + 4i, 10) #=> (0.6152244606891369+0.5757952953408879i)","name":"log","namespace":"CMath","path":"CMath.log","type":"module_function","visibility":"public"},"CMath.log!":{"description":"","name":"log!","namespace":"CMath","path":"CMath.log!","type":"module_function","visibility":"public"},"CMath.log10":{"description":"returns the base 10 logarithm of +z+\n\n  CMath.log10(-1) #=> (0.0+1.3643763538418412i)","name":"log10","namespace":"CMath","path":"CMath.log10","type":"module_function","visibility":"public"},"CMath.log10!":{"description":"","name":"log10!","namespace":"CMath","path":"CMath.log10!","type":"module_function","visibility":"public"},"CMath.log2":{"description":"returns the base 2 logarithm of +z+\n\n  CMath.log2(-1) => (0.0+4.532360141827194i)","name":"log2","namespace":"CMath","path":"CMath.log2","type":"module_function","visibility":"public"},"CMath.log2!":{"description":"","name":"log2!","namespace":"CMath","path":"CMath.log2!","type":"module_function","visibility":"public"},"CMath.sin":{"description":"returns the sine of +z+, where +z+ is given in radians\n\n  CMath.sin(1 + 1i) #=> (1.2984575814159773+0.6349639147847361i)","name":"sin","namespace":"CMath","path":"CMath.sin","type":"module_function","visibility":"public"},"CMath.sin!":{"description":"","name":"sin!","namespace":"CMath","path":"CMath.sin!","type":"module_function","visibility":"public"},"CMath.sinh":{"description":"returns the hyperbolic sine of +z+, where +z+ is given in radians\n\n  CMath.sinh(1 + 1i) #=> (0.6349639147847361+1.2984575814159773i)","name":"sinh","namespace":"CMath","path":"CMath.sinh","type":"module_function","visibility":"public"},"CMath.sinh!":{"description":"","name":"sinh!","namespace":"CMath","path":"CMath.sinh!","type":"module_function","visibility":"public"},"CMath.sqrt":{"description":"Returns the non-negative square root of Complex.\n\n  CMath.sqrt(-1 + 0i) #=> 0.0+1.0i","name":"sqrt","namespace":"CMath","path":"CMath.sqrt","type":"module_function","visibility":"public"},"CMath.sqrt!":{"description":"","name":"sqrt!","namespace":"CMath","path":"CMath.sqrt!","type":"module_function","visibility":"public"},"CMath.tan":{"description":"returns the tangent of +z+, where +z+ is given in radians\n\n  CMath.tan(1 + 1i) #=> (0.27175258531951174+1.0839233273386943i)","name":"tan","namespace":"CMath","path":"CMath.tan","type":"module_function","visibility":"public"},"CMath.tan!":{"description":"","name":"tan!","namespace":"CMath","path":"CMath.tan!","type":"module_function","visibility":"public"},"CMath.tanh":{"description":"returns the hyperbolic tangent of +z+, where +z+ is given in radians\n\n  CMath.tanh(1 + 1i) #=> (1.0839233273386943+0.27175258531951174i)","name":"tanh","namespace":"CMath","path":"CMath.tanh","type":"module_function","visibility":"public"},"CMath.tanh!":{"description":"","name":"tanh!","namespace":"CMath","path":"CMath.tanh!","type":"module_function","visibility":"public"},"CSV":{"description":"This class provides a complete interface to CSV files and data.  It offers\ntools to enable you to read and write to and from Strings or IO objects, as\nneeded.\n\n== Reading\n\n=== From a File\n\n==== A Line at a Time\n\n  CSV.foreach(\"path/to/file.csv\") do |row|\n    # use row here...\n  end\n\n==== All at Once\n\n  arr_of_arrs = CSV.read(\"path/to/file.csv\")\n\n=== From a String\n\n==== A Line at a Time\n\n  CSV.parse(\"CSV,data,String\") do |row|\n    # use row here...\n  end\n\n==== All at Once\n\n  arr_of_arrs = CSV.parse(\"CSV,data,String\")\n\n== Writing\n\n=== To a File\n\n  CSV.open(\"path/to/file.csv\", \"wb\") do |csv|\n    csv << [\"row\", \"of\", \"CSV\", \"data\"]\n    csv << [\"another\", \"row\"]\n    # ...\n  end\n\n=== To a String\n\n  csv_string = CSV.generate do |csv|\n    csv << [\"row\", \"of\", \"CSV\", \"data\"]\n    csv << [\"another\", \"row\"]\n    # ...\n  end\n\n== Convert a Single Line\n\n  csv_string = [\"CSV\", \"data\"].to_csv   # to CSV\n  csv_array  = \"CSV,String\".parse_csv   # from CSV\n\n== Shortcut Interface\n\n  CSV             { |csv_out| csv_out << %w{my data here} }  # to $stdout\n  CSV(csv = \"\")   { |csv_str| csv_str << %w{my data here} }  # to a String\n  CSV($stderr)    { |csv_err| csv_err << %w{my data here} }  # to $stderr\n  CSV($stdin)     { |csv_in|  csv_in.each { |row| p row } }  # from $stdin\n\n== Advanced Usage\n\n=== Wrap an IO Object\n\n  csv = CSV.new(io, options)\n  # ... read (with gets() or each()) from and write (with <<) to csv here ...\n\n== CSV and Character Encodings (M17n or Multilingualization)\n\nThis new CSV parser is m17n savvy.  The parser works in the Encoding of the IO\nor String object being read from or written to.  Your data is never transcoded\n(unless you ask Ruby to transcode it for you) and will literally be parsed in\nthe Encoding it is in.  Thus CSV will return Arrays or Rows of Strings in the\nEncoding of your data.  This is accomplished by transcoding the parser itself\ninto your Encoding.\n\nSome transcoding must take place, of course, to accomplish this multiencoding\nsupport.  For example, <tt>:col_sep</tt>, <tt>:row_sep</tt>, and\n<tt>:quote_char</tt> must be transcoded to match your data.  Hopefully this\nmakes the entire process feel transparent, since CSV's defaults should just\nmagically work for you data.  However, you can set these values manually in\nthe target Encoding to avoid the translation.\n\nIt's also important to note that while all of CSV's core parser is now\nEncoding agnostic, some features are not.  For example, the built-in\nconverters will try to transcode data to UTF-8 before making conversions.\nAgain, you can provide custom converters that are aware of your Encodings to\navoid this translation.  It's just too hard for me to support native\nconversions in all of Ruby's Encodings.\n\nAnyway, the practical side of this is simple:  make sure IO and String objects\npassed into CSV have the proper Encoding set and everything should just work.\nCSV methods that allow you to open IO objects (CSV::foreach(), CSV::open(),\nCSV::read(), and CSV::readlines()) do allow you to specify the Encoding.\n\nOne minor exception comes when generating CSV into a String with an Encoding\nthat is not ASCII compatible.  There's no existing data for CSV to use to\nprepare itself and thus you will probably need to manually specify the desired\nEncoding for most of those cases.  It will try to guess using the fields in a\nrow of output though, when using CSV::generate_line() or Array#to_csv().\n\nI try to point out any other Encoding issues in the documentation of methods\nas they come up.\n\nThis has been tested to the best of my ability with all non-\"dummy\" Encodings\nRuby ships with.  However, it is brave new code and may have some bugs.\nPlease feel free to {report}[mailto:james@grayproductions.net] any issues you\nfind with it.","name":"CSV","namespace":"","path":"CSV","type":"class","visibility":"public"},"CSV#<<":{"description":"The primary write method for wrapped Strings and IOs, +row+ (an Array or\nCSV::Row) is converted to CSV and appended to the data source.  When a\nCSV::Row is passed, only the row's fields() are appended to the output.\n\nThe data source must be open for writing.","name":"puts","namespace":"CSV","path":"CSV#puts","type":"instance_method","visibility":"public"},"CSV#add_row":{"description":"The primary write method for wrapped Strings and IOs, +row+ (an Array or\nCSV::Row) is converted to CSV and appended to the data source.  When a\nCSV::Row is passed, only the row's fields() are appended to the output.\n\nThe data source must be open for writing.","name":"add_row","namespace":"CSV","path":"CSV#add_row","type":"instance_method","visibility":"public"},"CSV#puts":{"description":"The primary write method for wrapped Strings and IOs, +row+ (an Array or\nCSV::Row) is converted to CSV and appended to the data source.  When a\nCSV::Row is passed, only the row's fields() are appended to the output.\n\nThe data source must be open for writing.","name":"puts","namespace":"CSV","path":"CSV#puts","type":"instance_method","visibility":"public"},"CSV#add_converter":{"description":"The actual work method for adding converters, used by both CSV.convert() and\nCSV.header_convert().\n\nThis method requires the +var_name+ of the instance variable to place the\nconverters in, the +const+ Hash to lookup named converters in, and the\nnormal parameters of the CSV.convert() and CSV.header_convert() methods.","name":"add_converter","namespace":"CSV","path":"CSV#add_converter","type":"instance_method","visibility":"private"},"CSV#add_unconverted_fields":{"description":"This method injects an instance variable <tt>unconverted_fields</tt> into\n+row+ and an accessor method for +row+ called unconverted_fields().  The\nvariable is set to the contents of +fields+.","name":"add_unconverted_fields","namespace":"CSV","path":"CSV#add_unconverted_fields","type":"instance_method","visibility":"private"},"CSV#col_sep":{"description":"The encoded <tt>:col_sep</tt> used in parsing and writing.  See CSV::new\nfor details.","name":"col_sep","namespace":"CSV","path":"CSV#col_sep","type":"instance_method","visibility":"public"},"CSV#convert":{"description":":call-seq:\n  convert( name )\n  convert { |field| ... }\n  convert { |field, field_info| ... }\n\nYou can use this method to install a CSV::Converters built-in, or provide a\nblock that handles a custom conversion.\n\nIf you provide a block that takes one argument, it will be passed the field\nand is expected to return the converted value or the field itself.  If your\nblock takes two arguments, it will also be passed a CSV::FieldInfo Struct,\ncontaining details about the field.  Again, the block should return a\nconverted field or the field itself.","name":"convert","namespace":"CSV","path":"CSV#convert","type":"instance_method","visibility":"public"},"CSV#convert_fields":{"description":"Processes +fields+ with <tt>@converters</tt>, or <tt>@header_converters</tt>\nif +headers+ is passed as +true+, returning the converted field set.  Any\nconverter that changes the field into something other than a String halts\nthe pipeline of conversion for that field.  This is primarily an efficiency\nshortcut.","name":"convert_fields","namespace":"CSV","path":"CSV#convert_fields","type":"instance_method","visibility":"private"},"CSV#converters":{"description":"Returns the current list of converters in effect.  See CSV::new for details.\nBuilt-in converters will be returned by name, while others will be returned\nas is.","name":"converters","namespace":"CSV","path":"CSV#converters","type":"instance_method","visibility":"public"},"CSV#each":{"description":"Yields each row of the data source in turn.\n\nSupport for Enumerable.\n\nThe data source must be open for reading.","name":"each","namespace":"CSV","path":"CSV#each","type":"instance_method","visibility":"public"},"CSV#encode_re":{"description":"Builds a regular expression in <tt>@encoding</tt>.  All +chunks+ will be\ntranscoded to that encoding.","name":"encode_re","namespace":"CSV","path":"CSV#encode_re","type":"instance_method","visibility":"private"},"CSV#encode_str":{"description":"Builds a String in <tt>@encoding</tt>.  All +chunks+ will be transcoded to\nthat encoding.","name":"encode_str","namespace":"CSV","path":"CSV#encode_str","type":"instance_method","visibility":"private"},"CSV#encoding":{"description":"The Encoding CSV is parsing or writing in.  This will be the Encoding you\nreceive parsed data in and/or the Encoding data will be written in.","name":"encoding","namespace":"CSV","path":"CSV#encoding","type":"instance_method","visibility":"public"},"CSV#escape_re":{"description":"This method is an encoding safe version of Regexp::escape().  It will escape\nany characters that would change the meaning of a regular expression in the\nencoding of +str+.  Regular expression characters that cannot be transcoded\nto the target encoding will be skipped and no escaping will be performed if\na backslash cannot be transcoded.","name":"escape_re","namespace":"CSV","path":"CSV#escape_re","type":"instance_method","visibility":"private"},"CSV#field_size_limit":{"description":"The limit for field size, if any.  See CSV::new for details.","name":"field_size_limit","namespace":"CSV","path":"CSV#field_size_limit","type":"instance_method","visibility":"public"},"CSV#force_quotes?":{"description":"Returns +true+ if all output fields are quoted. See CSV::new for details.","name":"force_quotes?","namespace":"CSV","path":"CSV#force_quotes?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV#gets":{"description":"The primary read method for wrapped Strings and IOs, a single row is pulled\nfrom the data source, parsed and returned as an Array of fields (if header\nrows are not used) or a CSV::Row (when header rows are used).\n\nThe data source must be open for reading.","name":"readline","namespace":"CSV","path":"CSV#readline","type":"instance_method","visibility":"public"},"CSV#header_convert":{"description":":call-seq:\n  header_convert( name )\n  header_convert { |field| ... }\n  header_convert { |field, field_info| ... }\n\nIdentical to CSV#convert(), but for header rows.\n\nNote that this method must be called before header rows are read to have any\neffect.","name":"header_convert","namespace":"CSV","path":"CSV#header_convert","type":"instance_method","visibility":"public"},"CSV#header_converters":{"description":"Returns the current list of converters in effect for headers.  See CSV::new\nfor details.  Built-in converters will be returned by name, while others\nwill be returned as is.","name":"header_converters","namespace":"CSV","path":"CSV#header_converters","type":"instance_method","visibility":"public"},"CSV#header_row?":{"description":"Returns +true+ if the next row read will be a header row.","name":"header_row?","namespace":"CSV","path":"CSV#header_row?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV#headers":{"description":"Returns +nil+ if headers will not be used, +true+ if they will but have not\nyet been read, or the actual headers after they have been read.  See\nCSV::new for details.","name":"headers","namespace":"CSV","path":"CSV#headers","type":"instance_method","visibility":"public"},"CSV#init_comments":{"description":"Stores the pattern of comments to skip from the provided options.\n\nThe pattern must respond to +.match+, else ArgumentError is raised.\nStrings are converted to a Regexp.\n\nSee also CSV.new","name":"init_comments","namespace":"CSV","path":"CSV#init_comments","type":"instance_method","visibility":"private"},"CSV#init_converters":{"description":"Loads any converters requested during construction.\n\nIf +field_name+ is set <tt>:converters</tt> (the default) field converters\nare set.  When +field_name+ is <tt>:header_converters</tt> header converters\nare added instead.\n\nThe <tt>:unconverted_fields</tt> option is also actived for\n<tt>:converters</tt> calls, if requested.","name":"init_converters","namespace":"CSV","path":"CSV#init_converters","type":"instance_method","visibility":"private"},"CSV#init_headers":{"description":"Stores header row settings and loads header converters, if needed.","name":"init_headers","namespace":"CSV","path":"CSV#init_headers","type":"instance_method","visibility":"private"},"CSV#init_parsers":{"description":"Pre-compiles parsers and stores them by name for access during reads.","name":"init_parsers","namespace":"CSV","path":"CSV#init_parsers","type":"instance_method","visibility":"private"},"CSV#init_separators":{"description":"Stores the indicated separators for later use.\n\nIf auto-discovery was requested for <tt>@row_sep</tt>, this method will read\nahead in the <tt>@io</tt> and try to find one.  +ARGF+, +STDIN+, +STDOUT+,\n+STDERR+ and any stream open for output only with a default\n<tt>@row_sep</tt> of <tt>$INPUT_RECORD_SEPARATOR</tt> (<tt>$/</tt>).\n\nThis method also establishes the quoting rules used for CSV output.","name":"init_separators","namespace":"CSV","path":"CSV#init_separators","type":"instance_method","visibility":"private"},"CSV#initialize":{"description":"This constructor will wrap either a String or IO object passed in +data+ for\nreading and/or writing.  In addition to the CSV instance methods, several IO\nmethods are delegated.  (See CSV::open() for a complete list.)  If you pass\na String for +data+, you can later retrieve it (after writing to it, for\nexample) with CSV.string().\n\nNote that a wrapped String will be positioned at at the beginning (for\nreading).  If you want it at the end (for writing), use CSV::generate().\nIf you want any other positioning, pass a preset StringIO object instead.\n\nYou may set any reading and/or writing preferences in the +options+ Hash.\nAvailable options are:\n\n<b><tt>:col_sep</tt></b>::            The String placed between each field.\n                                      This String will be transcoded into\n                                      the data's Encoding before parsing.\n<b><tt>:row_sep</tt></b>::            The String appended to the end of each\n                                      row.  This can be set to the special\n                                      <tt>:auto</tt> setting, which requests\n                                      that CSV automatically discover this\n                                      from the data.  Auto-discovery reads\n                                      ahead in the data looking for the next\n                                      <tt>\"\\r\\n\"</tt>, <tt>\"\\n\"</tt>, or\n                                      <tt>\"\\r\"</tt> sequence.  A sequence\n                                      will be selected even if it occurs in\n                                      a quoted field, assuming that you\n                                      would have the same line endings\n                                      there.  If none of those sequences is\n                                      found, +data+ is <tt>ARGF</tt>,\n                                      <tt>STDIN</tt>, <tt>STDOUT</tt>, or\n                                      <tt>STDERR</tt>, or the stream is only\n                                      available for output, the default\n                                      <tt>$INPUT_RECORD_SEPARATOR</tt>\n                                      (<tt>$/</tt>) is used.  Obviously,\n                                      discovery takes a little time.  Set\n                                      manually if speed is important.  Also\n                                      note that IO objects should be opened\n                                      in binary mode on Windows if this\n                                      feature will be used as the\n                                      line-ending translation can cause\n                                      problems with resetting the document\n                                      position to where it was before the\n                                      read ahead. This String will be\n                                      transcoded into the data's Encoding\n                                      before parsing.\n<b><tt>:quote_char</tt></b>::         The character used to quote fields.\n                                      This has to be a single character\n                                      String.  This is useful for\n                                      application that incorrectly use\n                                      <tt>'</tt> as the quote character\n                                      instead of the correct <tt>\"</tt>.\n                                      CSV will always consider a double\n                                      sequence of this character to be an\n                                      escaped quote. This String will be\n                                      transcoded into the data's Encoding\n                                      before parsing.\n<b><tt>:field_size_limit</tt></b>::   This is a maximum size CSV will read\n                                      ahead looking for the closing quote\n                                      for a field.  (In truth, it reads to\n                                      the first line ending beyond this\n                                      size.)  If a quote cannot be found\n                                      within the limit CSV will raise a\n                                      MalformedCSVError, assuming the data\n                                      is faulty.  You can use this limit to\n                                      prevent what are effectively DoS\n                                      attacks on the parser.  However, this\n                                      limit can cause a legitimate parse to\n                                      fail and thus is set to +nil+, or off,\n                                      by default.\n<b><tt>:converters</tt></b>::         An Array of names from the Converters\n                                      Hash and/or lambdas that handle custom\n                                      conversion.  A single converter\n                                      doesn't have to be in an Array.  All\n                                      built-in converters try to transcode\n                                      fields to UTF-8 before converting.\n                                      The conversion will fail if the data\n                                      cannot be transcoded, leaving the\n                                      field unchanged.\n<b><tt>:unconverted_fields</tt></b>:: If set to +true+, an\n                                      unconverted_fields() method will be\n                                      added to all returned rows (Array or\n                                      CSV::Row) that will return the fields\n                                      as they were before conversion.  Note\n                                      that <tt>:headers</tt> supplied by\n                                      Array or String were not fields of the\n                                      document and thus will have an empty\n                                      Array attached.\n<b><tt>:headers</tt></b>::            If set to <tt>:first_row</tt> or\n                                      +true+, the initial row of the CSV\n                                      file will be treated as a row of\n                                      headers.  If set to an Array, the\n                                      contents will be used as the headers.\n                                      If set to a String, the String is run\n                                      through a call of CSV::parse_line()\n                                      with the same <tt>:col_sep</tt>,\n                                      <tt>:row_sep</tt>, and\n                                      <tt>:quote_char</tt> as this instance\n                                      to produce an Array of headers.  This\n                                      setting causes CSV#shift() to return\n                                      rows as CSV::Row objects instead of\n                                      Arrays and CSV#read() to return\n                                      CSV::Table objects instead of an Array\n                                      of Arrays.\n<b><tt>:return_headers</tt></b>::     When +false+, header rows are silently\n                                      swallowed.  If set to +true+, header\n                                      rows are returned in a CSV::Row object\n                                      with identical headers and\n                                      fields (save that the fields do not go\n                                      through the converters).\n<b><tt>:write_headers</tt></b>::      When +true+ and <tt>:headers</tt> is\n                                      set, a header row will be added to the\n                                      output.\n<b><tt>:header_converters</tt></b>::  Identical in functionality to\n                                      <tt>:converters</tt> save that the\n                                      conversions are only made to header\n                                      rows.  All built-in converters try to\n                                      transcode headers to UTF-8 before\n                                      converting.  The conversion will fail\n                                      if the data cannot be transcoded,\n                                      leaving the header unchanged.\n<b><tt>:skip_blanks</tt></b>::        When set to a +true+ value, CSV will\n                                      skip over any empty rows. Note that\n                                      this setting will not skip rows that\n                                      contain column separators, even if\n                                      the rows contain no actual data. If\n                                      you want to skip rows that contain\n                                      separators but no content, consider\n                                      using <tt>:skip_lines</tt>, or\n                                      inspecting fields.compact.empty? on\n                                      each row.\n<b><tt>:force_quotes</tt></b>::       When set to a +true+ value, CSV will\n                                      quote all CSV fields it creates.\n<b><tt>:skip_lines</tt></b>::         When set to an object responding to\n                                      <tt>match</tt>, every line matching\n                                      it is considered a comment and ignored\n                                      during parsing. When set to a String,\n                                      it is first converted to a Regexp.\n                                      When set to +nil+ no line is considered\n                                      a comment. If the passed object does\n                                      not respond to <tt>match</tt>,\n                                      <tt>ArgumentError</tt> is thrown.\n\nSee CSV::DEFAULT_OPTIONS for the default settings.\n\nOptions cannot be overridden in the instance methods for performance reasons,\nso be sure to set what you want here.","name":"initialize","namespace":"CSV","path":"CSV#initialize","type":"instance_method","visibility":"public","return":[["CSV"],"a new instance of CSV"]},"CSV#inspect":{"description":"Returns a simplified description of the key CSV attributes in an\nASCII compatible String.","name":"inspect","namespace":"CSV","path":"CSV#inspect","type":"instance_method","visibility":"public"},"CSV#lineno":{"description":"The line number of the last row read from this file.  Fields with nested\nline-end characters will not affect this count.","name":"lineno","namespace":"CSV","path":"CSV#lineno","type":"instance_method","visibility":"public"},"CSV#parse_headers":{"description":"This method is used to turn a finished +row+ into a CSV::Row.  Header rows\nare also dealt with here, either by returning a CSV::Row with identical\nheaders and fields (save that the fields do not go through the converters)\nor by reading past them to return a field row. Headers are also saved in\n<tt>@headers</tt> for use in future rows.\n\nWhen +nil+, +row+ is assumed to be a header row not based on an actual row\nof the stream.","name":"parse_headers","namespace":"CSV","path":"CSV#parse_headers","type":"instance_method","visibility":"private"},"CSV#quote_char":{"description":"The encoded <tt>:quote_char</tt> used in parsing and writing.  See CSV::new\nfor details.","name":"quote_char","namespace":"CSV","path":"CSV#quote_char","type":"instance_method","visibility":"public"},"CSV#raw_encoding":{"description":"Returns the encoding of the internal IO object or the +default+ if the\nencoding cannot be determined.","name":"raw_encoding","namespace":"CSV","path":"CSV#raw_encoding","type":"instance_method","visibility":"private"},"CSV#read":{"description":"Slurps the remaining rows and returns an Array of Arrays.\n\nThe data source must be open for reading.","name":"readlines","namespace":"CSV","path":"CSV#readlines","type":"instance_method","visibility":"public"},"CSV#readlines":{"description":"Slurps the remaining rows and returns an Array of Arrays.\n\nThe data source must be open for reading.","name":"readlines","namespace":"CSV","path":"CSV#readlines","type":"instance_method","visibility":"public"},"CSV#readline":{"description":"The primary read method for wrapped Strings and IOs, a single row is pulled\nfrom the data source, parsed and returned as an Array of fields (if header\nrows are not used) or a CSV::Row (when header rows are used).\n\nThe data source must be open for reading.","name":"readline","namespace":"CSV","path":"CSV#readline","type":"instance_method","visibility":"public"},"CSV#return_headers?":{"description":"Returns +true+ if headers will be returned as a row of results.\nSee CSV::new for details.","name":"return_headers?","namespace":"CSV","path":"CSV#return_headers?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV#rewind":{"description":"Rewinds the underlying IO object and resets CSV's lineno() counter.","name":"rewind","namespace":"CSV","path":"CSV#rewind","type":"instance_method","visibility":"public"},"CSV#row_sep":{"description":"The encoded <tt>:row_sep</tt> used in parsing and writing.  See CSV::new\nfor details.","name":"row_sep","namespace":"CSV","path":"CSV#row_sep","type":"instance_method","visibility":"public"},"CSV#shift":{"description":"The primary read method for wrapped Strings and IOs, a single row is pulled\nfrom the data source, parsed and returned as an Array of fields (if header\nrows are not used) or a CSV::Row (when header rows are used).\n\nThe data source must be open for reading.","name":"readline","namespace":"CSV","path":"CSV#readline","type":"instance_method","visibility":"public"},"CSV#skip_blanks?":{"description":"Returns +true+ blank lines are skipped by the parser. See CSV::new\nfor details.","name":"skip_blanks?","namespace":"CSV","path":"CSV#skip_blanks?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV#skip_lines":{"description":"The regex marking a line as a comment. See CSV::new for details","name":"skip_lines","namespace":"CSV","path":"CSV#skip_lines","type":"instance_method","visibility":"public"},"CSV#unconverted_fields?":{"description":"Returns +true+ if unconverted_fields() to parsed results.  See CSV::new\nfor details.","name":"unconverted_fields?","namespace":"CSV","path":"CSV#unconverted_fields?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV#write_headers?":{"description":"Returns +true+ if headers are written in output. See CSV::new for details.","name":"write_headers?","namespace":"CSV","path":"CSV#write_headers?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV.filter":{"description":":call-seq:\n  filter( options = Hash.new ) { |row| ... }\n  filter( input, options = Hash.new ) { |row| ... }\n  filter( input, output, options = Hash.new ) { |row| ... }\n\nThis method is a convenience for building Unix-like filters for CSV data.\nEach row is yielded to the provided block which can alter it as needed.\nAfter the block returns, the row is appended to +output+ altered or not.\n\nThe +input+ and +output+ arguments can be anything CSV::new() accepts\n(generally String or IO objects).  If not given, they default to\n<tt>ARGF</tt> and <tt>$stdout</tt>.\n\nThe +options+ parameter is also filtered down to CSV::new() after some\nclever key parsing.  Any key beginning with <tt>:in_</tt> or\n<tt>:input_</tt> will have that leading identifier stripped and will only\nbe used in the +options+ Hash for the +input+ object.  Keys starting with\n<tt>:out_</tt> or <tt>:output_</tt> affect only +output+.  All other keys\nare assigned to both objects.\n\nThe <tt>:output_row_sep</tt> +option+ defaults to\n<tt>$INPUT_RECORD_SEPARATOR</tt> (<tt>$/</tt>).","name":"filter","namespace":"CSV","path":"CSV.filter","type":"class_method","visibility":"public"},"CSV.foreach":{"description":"This method is intended as the primary interface for reading CSV files.  You\npass a +path+ and any +options+ you wish to set for the read.  Each row of\nfile will be passed to the provided +block+ in turn.\n\nThe +options+ parameter can be anything CSV::new() understands.  This method\nalso understands an additional <tt>:encoding</tt> parameter that you can use\nto specify the Encoding of the data in the file to be read. You must provide\nthis unless your data is in Encoding::default_external().  CSV will use this\nto determine how to parse the data.  You may provide a second Encoding to\nhave the data transcoded as it is read.  For example,\n<tt>encoding: \"UTF-32BE:UTF-8\"</tt> would read UTF-32BE data from the file\nbut transcode it to UTF-8 before CSV parses it.","name":"foreach","namespace":"CSV","path":"CSV.foreach","type":"class_method","visibility":"public"},"CSV.generate":{"description":":call-seq:\n  generate( str, options = Hash.new ) { |csv| ... }\n  generate( options = Hash.new ) { |csv| ... }\n\nThis method wraps a String you provide, or an empty default String, in a\nCSV object which is passed to the provided block.  You can use the block to\nappend CSV rows to the String and when the block exits, the final String\nwill be returned.\n\nNote that a passed String *is* modified by this method.  Call dup() before\npassing if you need a new String.\n\nThe +options+ parameter can be anything CSV::new() understands.  This method\nunderstands an additional <tt>:encoding</tt> parameter when not passed a\nString to set the base Encoding for the output.  CSV needs this hint if you\nplan to output non-ASCII compatible data.","name":"generate","namespace":"CSV","path":"CSV.generate","type":"class_method","visibility":"public"},"CSV.generate_line":{"description":"This method is a shortcut for converting a single row (Array) into a CSV\nString.\n\nThe +options+ parameter can be anything CSV::new() understands.  This method\nunderstands an additional <tt>:encoding</tt> parameter to set the base\nEncoding for the output.  This method will try to guess your Encoding from\nthe first non-+nil+ field in +row+, if possible, but you may need to use\nthis parameter as a backup plan.\n\nThe <tt>:row_sep</tt> +option+ defaults to <tt>$INPUT_RECORD_SEPARATOR</tt>\n(<tt>$/</tt>) when calling this method.","name":"generate_line","namespace":"CSV","path":"CSV.generate_line","type":"class_method","visibility":"public"},"CSV.instance":{"description":"This method will return a CSV instance, just like CSV::new(), but the\ninstance will be cached and returned for all future calls to this method for\nthe same +data+ object (tested by Object#object_id()) with the same\n+options+.\n\nIf a block is given, the instance is passed to the block and the return\nvalue becomes the return value of the block.","name":"instance","namespace":"CSV","path":"CSV.instance","type":"class_method","visibility":"public"},"CSV.open":{"description":":call-seq:\n  open( filename, mode = \"rb\", options = Hash.new ) { |faster_csv| ... }\n  open( filename, options = Hash.new ) { |faster_csv| ... }\n  open( filename, mode = \"rb\", options = Hash.new )\n  open( filename, options = Hash.new )\n\nThis method opens an IO object, and wraps that with CSV.  This is intended\nas the primary interface for writing a CSV file.\n\nYou must pass a +filename+ and may optionally add a +mode+ for Ruby's\nopen().  You may also pass an optional Hash containing any +options+\nCSV::new() understands as the final argument.\n\nThis method works like Ruby's open() call, in that it will pass a CSV object\nto a provided block and close it when the block terminates, or it will\nreturn the CSV object when no block is provided.  (*Note*: This is different\nfrom the Ruby 1.8 CSV library which passed rows to the block.  Use\nCSV::foreach() for that behavior.)\n\nYou must provide a +mode+ with an embedded Encoding designator unless your\ndata is in Encoding::default_external().  CSV will check the Encoding of the\nunderlying IO object (set by the +mode+ you pass) to determine how to parse\nthe data.   You may provide a second Encoding to have the data transcoded as\nit is read just as you can with a normal call to IO::open().  For example,\n<tt>\"rb:UTF-32BE:UTF-8\"</tt> would read UTF-32BE data from the file but\ntranscode it to UTF-8 before CSV parses it.\n\nAn opened CSV object will delegate to many IO methods for convenience.  You\nmay call:\n\n* binmode()\n* binmode?()\n* close()\n* close_read()\n* close_write()\n* closed?()\n* eof()\n* eof?()\n* external_encoding()\n* fcntl()\n* fileno()\n* flock()\n* flush()\n* fsync()\n* internal_encoding()\n* ioctl()\n* isatty()\n* path()\n* pid()\n* pos()\n* pos=()\n* reopen()\n* seek()\n* stat()\n* sync()\n* sync=()\n* tell()\n* to_i()\n* to_io()\n* truncate()\n* tty?()","name":"open","namespace":"CSV","path":"CSV.open","type":"class_method","visibility":"public"},"CSV.parse":{"description":":call-seq:\n  parse( str, options = Hash.new ) { |row| ... }\n  parse( str, options = Hash.new )\n\nThis method can be used to easily parse CSV out of a String.  You may either\nprovide a +block+ which will be called with each row of the String in turn,\nor just use the returned Array of Arrays (when no +block+ is given).\n\nYou pass your +str+ to read from, and an optional +options+ Hash containing\nanything CSV::new() understands.","name":"parse","namespace":"CSV","path":"CSV.parse","type":"class_method","visibility":"public"},"CSV.parse_line":{"description":"This method is a shortcut for converting a single line of a CSV String into\nan Array.  Note that if +line+ contains multiple rows, anything beyond the\nfirst row is ignored.\n\nThe +options+ parameter can be anything CSV::new() understands.","name":"parse_line","namespace":"CSV","path":"CSV.parse_line","type":"class_method","visibility":"public"},"CSV.read":{"description":"Use to slurp a CSV file into an Array of Arrays.  Pass the +path+ to the\nfile and any +options+ CSV::new() understands.  This method also understands\nan additional <tt>:encoding</tt> parameter that you can use to specify the\nEncoding of the data in the file to be read. You must provide this unless\nyour data is in Encoding::default_external().  CSV will use this to determine\nhow to parse the data.  You may provide a second Encoding to have the data\ntranscoded as it is read.  For example,\n<tt>encoding: \"UTF-32BE:UTF-8\"</tt> would read UTF-32BE data from the file\nbut transcode it to UTF-8 before CSV parses it.","name":"read","namespace":"CSV","path":"CSV.read","type":"class_method","visibility":"public"},"CSV.readlines":{"description":"Alias for CSV::read().","name":"readlines","namespace":"CSV","path":"CSV.readlines","type":"class_method","visibility":"public"},"CSV.table":{"description":"A shortcut for:\n\n  CSV.read( path, { headers:           true,\n                    converters:        :numeric,\n                    header_converters: :symbol }.merge(options) )","name":"table","namespace":"CSV","path":"CSV.table","type":"class_method","visibility":"public"},"CSV::ConverterEncoding":{"description":"The encoding used by all converters.","name":"ConverterEncoding","namespace":"CSV","path":"CSV::ConverterEncoding","type":"constant","return":null,"visibility":"public"},"CSV::Converters":{"description":"This Hash holds the built-in converters of CSV that can be accessed by name.\nYou can select Converters with CSV.convert() or through the +options+ Hash\npassed to CSV::new().\n\n<b><tt>:integer</tt></b>::    Converts any field Integer() accepts.\n<b><tt>:float</tt></b>::      Converts any field Float() accepts.\n<b><tt>:numeric</tt></b>::    A combination of <tt>:integer</tt>\n                              and <tt>:float</tt>.\n<b><tt>:date</tt></b>::       Converts any field Date::parse() accepts.\n<b><tt>:date_time</tt></b>::  Converts any field DateTime::parse() accepts.\n<b><tt>:all</tt></b>::        All built-in converters.  A combination of\n                              <tt>:date_time</tt> and <tt>:numeric</tt>.\n\nAll built-in converters transcode field data to UTF-8 before attempting a\nconversion.  If your data cannot be transcoded to UTF-8 the conversion will\nfail and the field will remain unchanged.\n\nThis Hash is intentionally left unfrozen and users should feel free to add\nvalues to it that can be accessed by all CSV objects.\n\nTo add a combo field, the value should be an Array of names.  Combo fields\ncan be nested with other combo fields.","name":"Converters","namespace":"CSV","path":"CSV::Converters","type":"constant","return":null,"visibility":"public"},"CSV::DEFAULT_OPTIONS":{"description":"The options used when no overrides are given by calling code.  They are:\n\n<b><tt>:col_sep</tt></b>::            <tt>\",\"</tt>\n<b><tt>:row_sep</tt></b>::            <tt>:auto</tt>\n<b><tt>:quote_char</tt></b>::         <tt>'\"'</tt>\n<b><tt>:field_size_limit</tt></b>::   +nil+\n<b><tt>:converters</tt></b>::         +nil+\n<b><tt>:unconverted_fields</tt></b>:: +nil+\n<b><tt>:headers</tt></b>::            +false+\n<b><tt>:return_headers</tt></b>::     +false+\n<b><tt>:header_converters</tt></b>::  +nil+\n<b><tt>:skip_blanks</tt></b>::        +false+\n<b><tt>:force_quotes</tt></b>::       +false+\n<b><tt>:skip_lines</tt></b>::         +nil+","name":"DEFAULT_OPTIONS","namespace":"CSV","path":"CSV::DEFAULT_OPTIONS","type":"constant","return":null,"visibility":"public"},"CSV::DateMatcher":{"description":"A Regexp used to find and convert some common Date formats.","name":"DateMatcher","namespace":"CSV","path":"CSV::DateMatcher","type":"constant","return":null,"visibility":"public"},"CSV::DateTimeMatcher":{"description":"A Regexp used to find and convert some common DateTime formats.","name":"DateTimeMatcher","namespace":"CSV","path":"CSV::DateTimeMatcher","type":"constant","return":null,"visibility":"public"},"CSV::FieldInfo":{"description":"A FieldInfo Struct contains details about a field's position in the data\nsource it was read from.  CSV will pass this Struct to some blocks that make\ndecisions based on field structure.  See CSV.convert_fields() for an\nexample.\n\n<b><tt>index</tt></b>::  The zero-based index of the field in its row.\n<b><tt>line</tt></b>::   The line of the data source this row is from.\n<b><tt>header</tt></b>:: The header for the column, when available.","name":"FieldInfo","namespace":"CSV","path":"CSV::FieldInfo","type":"class","visibility":"public"},"CSV::FieldInfo#header":{"description":"Returns the value of attribute header","name":"header","namespace":"CSV::FieldInfo","path":"CSV::FieldInfo#header","type":"instance_method","visibility":"public","return":[["Object"],"the current value of header"]},"CSV::FieldInfo#header=":{"description":"Sets the attribute header","name":"header=","namespace":"CSV::FieldInfo","path":"CSV::FieldInfo#header=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute header to."]],"return":[["Object"],"the newly set value"]},"CSV::FieldInfo#index":{"description":"Returns the value of attribute index","name":"index","namespace":"CSV::FieldInfo","path":"CSV::FieldInfo#index","type":"instance_method","visibility":"public","return":[["Object"],"the current value of index"]},"CSV::FieldInfo#index=":{"description":"Sets the attribute index","name":"index=","namespace":"CSV::FieldInfo","path":"CSV::FieldInfo#index=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute index to."]],"return":[["Object"],"the newly set value"]},"CSV::FieldInfo#line":{"description":"Returns the value of attribute line","name":"line","namespace":"CSV::FieldInfo","path":"CSV::FieldInfo#line","type":"instance_method","visibility":"public","return":[["Object"],"the current value of line"]},"CSV::FieldInfo#line=":{"description":"Sets the attribute line","name":"line=","namespace":"CSV::FieldInfo","path":"CSV::FieldInfo#line=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute line to."]],"return":[["Object"],"the newly set value"]},"CSV::HeaderConverters":{"description":"This Hash holds the built-in header converters of CSV that can be accessed\nby name.  You can select HeaderConverters with CSV.header_convert() or\nthrough the +options+ Hash passed to CSV::new().\n\n<b><tt>:downcase</tt></b>::  Calls downcase() on the header String.\n<b><tt>:symbol</tt></b>::    The header String is downcased, spaces are\n                             replaced with underscores, non-word characters\n                             are dropped, and finally to_sym() is called.\n\nAll built-in header converters transcode header data to UTF-8 before\nattempting a conversion.  If your data cannot be transcoded to UTF-8 the\nconversion will fail and the header will remain unchanged.\n\nThis Hash is intentionally left unfrozen and users should feel free to add\nvalues to it that can be accessed by all CSV objects.\n\nTo add a combo field, the value should be an Array of names.  Combo fields\ncan be nested with other combo fields.","name":"HeaderConverters","namespace":"CSV","path":"CSV::HeaderConverters","type":"constant","return":null,"visibility":"public"},"CSV::MalformedCSVError":{"description":"The error thrown when the parser encounters illegal CSV formatting.","name":"MalformedCSVError","namespace":"CSV","path":"CSV::MalformedCSVError","type":"class","visibility":"public"},"CSV::Row":{"description":"A CSV::Row is part Array and part Hash.  It retains an order for the fields\nand allows duplicates just as an Array would, but also allows you to access\nfields by name just as you could if they were in a Hash.\n\nAll rows returned by CSV will be constructed from this class, if header row\nprocessing is activated.","name":"Row","namespace":"CSV","path":"CSV::Row","type":"class","visibility":"public"},"CSV::Row#<<":{"description":":call-seq:\n  <<( field )\n  <<( header_and_field_array )\n  <<( header_and_field_hash )\n\nIf a two-element Array is provided, it is assumed to be a header and field\nand the pair is appended.  A Hash works the same way with the key being\nthe header and the value being the field.  Anything else is assumed to be\na lone field which is appended with a +nil+ header.\n\nThis method returns the row for chaining.","name":"<<","namespace":"CSV::Row","path":"CSV::Row#<<","type":"instance_method","visibility":"public"},"CSV::Row#==":{"description":"Returns +true+ if this row contains the same headers and fields in the\nsame order as +other+.","name":"==","namespace":"CSV::Row","path":"CSV::Row#==","type":"instance_method","visibility":"public"},"CSV::Row#[]":{"description":":call-seq:\n  field( header )\n  field( header, offset )\n  field( index )\n\nThis method will return the field value by +header+ or +index+.  If a field\nis not found, +nil+ is returned.\n\nWhen provided, +offset+ ensures that a header match occurs on or later\nthan the +offset+ index.  You can use this to find duplicate headers,\nwithout resorting to hard-coding exact indices.","name":"[]","namespace":"CSV::Row","path":"CSV::Row#[]","type":"instance_method","visibility":"public"},"CSV::Row#[]=":{"description":":call-seq:\n  []=( header, value )\n  []=( header, offset, value )\n  []=( index, value )\n\nLooks up the field by the semantics described in CSV::Row.field() and\nassigns the +value+.\n\nAssigning past the end of the row with an index will set all pairs between\nto <tt>[nil, nil]</tt>.  Assigning to an unused header appends the new\npair.","name":"[]=","namespace":"CSV::Row","path":"CSV::Row#[]=","type":"instance_method","visibility":"public"},"CSV::Row#delete":{"description":":call-seq:\n  delete( header )\n  delete( header, offset )\n  delete( index )\n\nUsed to remove a pair from the row by +header+ or +index+.  The pair is\nlocated as described in CSV::Row.field().  The deleted pair is returned,\nor +nil+ if a pair could not be found.","name":"delete","namespace":"CSV::Row","path":"CSV::Row#delete","type":"instance_method","visibility":"public"},"CSV::Row#delete_if":{"description":"The provided +block+ is passed a header and field for each pair in the row\nand expected to return +true+ or +false+, depending on whether the pair\nshould be deleted.\n\nThis method returns the row for chaining.","name":"delete_if","namespace":"CSV::Row","path":"CSV::Row#delete_if","type":"instance_method","visibility":"public"},"CSV::Row#each":{"description":"Yields each pair of the row as header and field tuples (much like\niterating over a Hash).\n\nSupport for Enumerable.\n\nThis method returns the row for chaining.","name":"each","namespace":"CSV::Row","path":"CSV::Row#each","type":"instance_method","visibility":"public"},"CSV::Row#fetch":{"description":":call-seq:\n  fetch( header )\n  fetch( header ) { |row| ... }\n  fetch( header, default )\n\nThis method will fetch the field value by +header+. It has the same\nbehavior as Hash#fetch: if there is a field with the given +header+, its\nvalue is returned. Otherwise, if a block is given, it is yielded the\n+header+ and its result is returned; if a +default+ is given as the\nsecond argument, it is returned; otherwise a KeyError is raised.","name":"fetch","namespace":"CSV::Row","path":"CSV::Row#fetch","type":"instance_method","visibility":"public"},"CSV::Row#field":{"description":":call-seq:\n  field( header )\n  field( header, offset )\n  field( index )\n\nThis method will return the field value by +header+ or +index+.  If a field\nis not found, +nil+ is returned.\n\nWhen provided, +offset+ ensures that a header match occurs on or later\nthan the +offset+ index.  You can use this to find duplicate headers,\nwithout resorting to hard-coding exact indices.","name":"[]","namespace":"CSV::Row","path":"CSV::Row#[]","type":"instance_method","visibility":"public"},"CSV::Row#field?":{"description":"Returns +true+ if +data+ matches a field in this row, and +false+\notherwise.","name":"field?","namespace":"CSV::Row","path":"CSV::Row#field?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#field_row?":{"description":"Returns +true+ if this is a field row.","name":"field_row?","namespace":"CSV::Row","path":"CSV::Row#field_row?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#fields":{"description":"This method accepts any number of arguments which can be headers, indices,\nRanges of either, or two-element Arrays containing a header and offset.\nEach argument will be replaced with a field lookup as described in\nCSV::Row.field().\n\nIf called with no arguments, all fields are returned.","name":"values_at","namespace":"CSV::Row","path":"CSV::Row#values_at","type":"instance_method","visibility":"public"},"CSV::Row#values_at":{"description":"This method accepts any number of arguments which can be headers, indices,\nRanges of either, or two-element Arrays containing a header and offset.\nEach argument will be replaced with a field lookup as described in\nCSV::Row.field().\n\nIf called with no arguments, all fields are returned.","name":"values_at","namespace":"CSV::Row","path":"CSV::Row#values_at","type":"instance_method","visibility":"public"},"CSV::Row#has_key?":{"description":"Returns +true+ if there is a field with the given +header+.","name":"member?","namespace":"CSV::Row","path":"CSV::Row#member?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#key?":{"description":"Returns +true+ if there is a field with the given +header+.","name":"key?","namespace":"CSV::Row","path":"CSV::Row#key?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#member?":{"description":"Returns +true+ if there is a field with the given +header+.","name":"member?","namespace":"CSV::Row","path":"CSV::Row#member?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#header?":{"description":"Returns +true+ if +name+ is a header for this row, and +false+ otherwise.","name":"include?","namespace":"CSV::Row","path":"CSV::Row#include?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#include?":{"description":"Returns +true+ if +name+ is a header for this row, and +false+ otherwise.","name":"include?","namespace":"CSV::Row","path":"CSV::Row#include?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#header_row?":{"description":"Returns +true+ if this is a header row.","name":"header_row?","namespace":"CSV::Row","path":"CSV::Row#header_row?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"CSV::Row#headers":{"description":"Returns the headers of this row.","name":"headers","namespace":"CSV::Row","path":"CSV::Row#headers","type":"instance_method","visibility":"public"},"CSV::Row#index":{"description":":call-seq:\n  index( header )\n  index( header, offset )\n\nThis method will return the index of a field with the provided +header+.\nThe +offset+ can be used to locate duplicate header names, as described in\nCSV::Row.field().","name":"index","namespace":"CSV::Row","path":"CSV::Row#index","type":"instance_method","visibility":"public"},"CSV::Row#initialize":{"description":"Construct a new CSV::Row from +headers+ and +fields+, which are expected\nto be Arrays.  If one Array is shorter than the other, it will be padded\nwith +nil+ objects.\n\nThe optional +header_row+ parameter can be set to +true+ to indicate, via\nCSV::Row.header_row?() and CSV::Row.field_row?(), that this is a header\nrow.  Otherwise, the row is assumes to be a field row.\n\nA CSV::Row object supports the following Array methods through delegation:\n\n* empty?()\n* length()\n* size()","name":"initialize","namespace":"CSV::Row","path":"CSV::Row#initialize","type":"instance_method","visibility":"public","return":[["Row"],"a new instance of Row"]},"CSV::Row#inspect":{"description":"A summary of fields, by header, in an ASCII compatible String.","name":"inspect","namespace":"CSV::Row","path":"CSV::Row#inspect","type":"instance_method","visibility":"public"},"CSV::Row#push":{"description":"A shortcut for appending multiple fields.  Equivalent to:\n\n  args.each { |arg| csv_row << arg }\n\nThis method returns the row for chaining.","name":"push","namespace":"CSV::Row","path":"CSV::Row#push","type":"instance_method","visibility":"public"},"CSV::Row#row":{"description":"Internal data format used to compare equality.","name":"row","namespace":"CSV::Row","path":"CSV::Row#row","type":"instance_method","visibility":"protected"},"CSV::Row#to_csv":{"description":"Returns the row as a CSV String.  Headers are not used.  Equivalent to:\n\n  csv_row.fields.to_csv( options )","name":"to_s","namespace":"CSV::Row","path":"CSV::Row#to_s","type":"instance_method","visibility":"public"},"CSV::Row#to_s":{"description":"Returns the row as a CSV String.  Headers are not used.  Equivalent to:\n\n  csv_row.fields.to_csv( options )","name":"to_s","namespace":"CSV::Row","path":"CSV::Row#to_s","type":"instance_method","visibility":"public"},"CSV::Row#to_hash":{"description":"Collapses the row into a simple Hash.  Be warning that this discards field\norder and clobbers duplicate fields.","name":"to_hash","namespace":"CSV::Row","path":"CSV::Row#to_hash","type":"instance_method","visibility":"public"},"CSV::Table":{"description":"A CSV::Table is a two-dimensional data structure for representing CSV\ndocuments.  Tables allow you to work with the data by row or column,\nmanipulate the data, and even convert the results back to CSV, if needed.\n\nAll tables returned by CSV will be constructed from this class, if header\nrow processing is activated.","name":"Table","namespace":"CSV","path":"CSV::Table","type":"class","visibility":"public"},"CSV::Table#<<":{"description":"Adds a new row to the bottom end of this table.  You can provide an Array,\nwhich will be converted to a CSV::Row (inheriting the table's headers()),\nor a CSV::Row.\n\nThis method returns the table for chaining.","name":"<<","namespace":"CSV::Table","path":"CSV::Table#<<","type":"instance_method","visibility":"public"},"CSV::Table#==":{"description":"Returns +true+ if all rows of this table ==() +other+'s rows.","name":"==","namespace":"CSV::Table","path":"CSV::Table#==","type":"instance_method","visibility":"public"},"CSV::Table#[]":{"description":"In the default mixed mode, this method returns rows for index access and\ncolumns for header access.  You can force the index association by first\ncalling by_col!() or by_row!().\n\nColumns are returned as an Array of values.  Altering that Array has no\neffect on the table.","name":"[]","namespace":"CSV::Table","path":"CSV::Table#[]","type":"instance_method","visibility":"public"},"CSV::Table#[]=":{"description":"In the default mixed mode, this method assigns rows for index access and\ncolumns for header access.  You can force the index association by first\ncalling by_col!() or by_row!().\n\nRows may be set to an Array of values (which will inherit the table's\nheaders()) or a CSV::Row.\n\nColumns may be set to a single value, which is copied to each row of the\ncolumn, or an Array of values.  Arrays of values are assigned to rows top\nto bottom in row major order.  Excess values are ignored and if the Array\ndoes not have a value for each row the extra rows will receive a +nil+.\n\nAssigning to an existing column or row clobbers the data.  Assigning to\nnew columns creates them at the right end of the table.","name":"[]=","namespace":"CSV::Table","path":"CSV::Table#[]=","type":"instance_method","visibility":"public"},"CSV::Table#by_col":{"description":"Returns a duplicate table object, in column mode.  This is handy for\nchaining in a single call without changing the table mode, but be aware\nthat this method can consume a fair amount of memory for bigger data sets.\n\nThis method returns the duplicate table for chaining.  Don't chain\ndestructive methods (like []=()) this way though, since you are working\nwith a duplicate.","name":"by_col","namespace":"CSV::Table","path":"CSV::Table#by_col","type":"instance_method","visibility":"public"},"CSV::Table#by_col!":{"description":"Switches the mode of this table to column mode.  All calls to indexing and\niteration methods will work with columns until the mode is changed again.\n\nThis method returns the table and is safe to chain.","name":"by_col!","namespace":"CSV::Table","path":"CSV::Table#by_col!","type":"instance_method","visibility":"public"},"CSV::Table#by_col_or_row":{"description":"Returns a duplicate table object, in mixed mode.  This is handy for\nchaining in a single call without changing the table mode, but be aware\nthat this method can consume a fair amount of memory for bigger data sets.\n\nThis method returns the duplicate table for chaining.  Don't chain\ndestructive methods (like []=()) this way though, since you are working\nwith a duplicate.","name":"by_col_or_row","namespace":"CSV::Table","path":"CSV::Table#by_col_or_row","type":"instance_method","visibility":"public"},"CSV::Table#by_col_or_row!":{"description":"Switches the mode of this table to mixed mode.  All calls to indexing and\niteration methods will use the default intelligent indexing system until\nthe mode is changed again.  In mixed mode an index is assumed to be a row\nreference while anything else is assumed to be column access by headers.\n\nThis method returns the table and is safe to chain.","name":"by_col_or_row!","namespace":"CSV::Table","path":"CSV::Table#by_col_or_row!","type":"instance_method","visibility":"public"},"CSV::Table#by_row":{"description":"Returns a duplicate table object, in row mode.  This is handy for chaining\nin a single call without changing the table mode, but be aware that this\nmethod can consume a fair amount of memory for bigger data sets.\n\nThis method returns the duplicate table for chaining.  Don't chain\ndestructive methods (like []=()) this way though, since you are working\nwith a duplicate.","name":"by_row","namespace":"CSV::Table","path":"CSV::Table#by_row","type":"instance_method","visibility":"public"},"CSV::Table#by_row!":{"description":"Switches the mode of this table to row mode.  All calls to indexing and\niteration methods will work with rows until the mode is changed again.\n\nThis method returns the table and is safe to chain.","name":"by_row!","namespace":"CSV::Table","path":"CSV::Table#by_row!","type":"instance_method","visibility":"public"},"CSV::Table#delete":{"description":"Removes and returns the indicated column or row.  In the default mixed\nmode indices refer to rows and everything else is assumed to be a column\nheader.  Use by_col!() or by_row!() to force the lookup.","name":"delete","namespace":"CSV::Table","path":"CSV::Table#delete","type":"instance_method","visibility":"public"},"CSV::Table#delete_if":{"description":"Removes any column or row for which the block returns +true+.  In the\ndefault mixed mode or row mode, iteration is the standard row major\nwalking of rows.  In column mode, iteration will +yield+ two element\ntuples containing the column name and an Array of values for that column.\n\nThis method returns the table for chaining.","name":"delete_if","namespace":"CSV::Table","path":"CSV::Table#delete_if","type":"instance_method","visibility":"public"},"CSV::Table#each":{"description":"In the default mixed mode or row mode, iteration is the standard row major\nwalking of rows.  In column mode, iteration will +yield+ two element\ntuples containing the column name and an Array of values for that column.\n\nThis method returns the table for chaining.","name":"each","namespace":"CSV::Table","path":"CSV::Table#each","type":"instance_method","visibility":"public"},"CSV::Table#headers":{"description":"Returns the headers for the first row of this table (assumed to match all\nother rows).  An empty Array is returned for empty tables.","name":"headers","namespace":"CSV::Table","path":"CSV::Table#headers","type":"instance_method","visibility":"public"},"CSV::Table#initialize":{"description":"Construct a new CSV::Table from +array_of_rows+, which are expected\nto be CSV::Row objects.  All rows are assumed to have the same headers.\n\nA CSV::Table object supports the following Array methods through\ndelegation:\n\n* empty?()\n* length()\n* size()","name":"initialize","namespace":"CSV::Table","path":"CSV::Table#initialize","type":"instance_method","visibility":"public","return":[["Table"],"a new instance of Table"]},"CSV::Table#inspect":{"description":"Shows the mode and size of this table in a US-ASCII String.","name":"inspect","namespace":"CSV::Table","path":"CSV::Table#inspect","type":"instance_method","visibility":"public"},"CSV::Table#mode":{"description":"The current access mode for indexing and iteration.","name":"mode","namespace":"CSV::Table","path":"CSV::Table#mode","type":"instance_method","visibility":"public"},"CSV::Table#push":{"description":"A shortcut for appending multiple rows.  Equivalent to:\n\n  rows.each { |row| self << row }\n\nThis method returns the table for chaining.","name":"push","namespace":"CSV::Table","path":"CSV::Table#push","type":"instance_method","visibility":"public"},"CSV::Table#table":{"description":"Internal data format used to compare equality.","name":"table","namespace":"CSV::Table","path":"CSV::Table#table","type":"instance_method","visibility":"protected"},"CSV::Table#to_a":{"description":"Returns the table as an Array of Arrays.  Headers will be the first row,\nthen all of the field rows will follow.","name":"to_a","namespace":"CSV::Table","path":"CSV::Table#to_a","type":"instance_method","visibility":"public"},"CSV::Table#to_csv":{"description":"Returns the table as a complete CSV String.  Headers will be listed first,\nthen all of the field rows.\n\nThis method assumes you want the Table.headers(), unless you explicitly\npass <tt>:write_headers => false</tt>.","name":"to_s","namespace":"CSV::Table","path":"CSV::Table#to_s","type":"instance_method","visibility":"public"},"CSV::Table#to_s":{"description":"Returns the table as a complete CSV String.  Headers will be listed first,\nthen all of the field rows.\n\nThis method assumes you want the Table.headers(), unless you explicitly\npass <tt>:write_headers => false</tt>.","name":"to_s","namespace":"CSV::Table","path":"CSV::Table#to_s","type":"instance_method","visibility":"public"},"CSV::Table#values_at":{"description":"The mixed mode default is to treat a list of indices as row access,\nreturning the rows indicated.  Anything else is considered columnar\naccess.  For columnar access, the return set has an Array for each row\nwith the values indicated by the headers in each Array.  You can force\ncolumn or row mode using by_col!() or by_row!().\n\nYou cannot mix column and row access.","name":"values_at","namespace":"CSV::Table","path":"CSV::Table#values_at","type":"instance_method","visibility":"public"},"CSV::VERSION":{"description":"The version of the installed library.","name":"VERSION","namespace":"CSV","path":"CSV::VERSION","type":"constant","return":null,"visibility":"public"},"Array":{"description":":nodoc:","name":"Array","namespace":"","path":"Array","type":"class","visibility":"public"},"Array#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Array","path":"Array#pretty_print","type":"instance_method","visibility":"public"},"Array#pretty_print_cycle":{"description":":nodoc:","name":"pretty_print_cycle","namespace":"Array","path":"Array#pretty_print_cycle","type":"instance_method","visibility":"public"},"Array#to_csv":{"description":"Equivalent to CSV::generate_line(self, options)\n\n  [\"CSV\", \"data\"].to_csv\n    #=> \"CSV,data\\n\"","name":"to_csv","namespace":"Array","path":"Array#to_csv","type":"instance_method","visibility":"public"},"String":{"description":"additions to class String for Unicode normalization","name":"String","namespace":"","path":"String","type":"class","visibility":"public"},"String#block_scanf":{"description":"Scans the current string until the match is exhausted\nyielding each match as it is encountered in the string.\nA block is not necessary as the results will simply\nbe aggregated into the final array.\n\n  \"123 456\".block_scanf(\"%d\")\n  # => [123, 456]\n\nIf a block is given, the value from that is returned from\nthe yield is added to an output array.\n\n  \"123 456\".block_scanf(\"%d) do |digit,| # the ',' unpacks the Array\n    digit + 100\n  end\n  # => [223, 556]\n\nSee Scanf for details on creating a format string.\n\nYou will need to require 'scanf' to use String#block_scanf","name":"block_scanf","namespace":"String","path":"String#block_scanf","type":"instance_method","visibility":"public"},"String#parse_csv":{"description":"Equivalent to CSV::parse_line(self, options)\n\n  \"CSV,data\".parse_csv\n    #=> [\"CSV\", \"data\"]","name":"parse_csv","namespace":"String","path":"String#parse_csv","type":"instance_method","visibility":"public"},"String#scanf":{"description":"Scans the current string. If a block is given, it\nfunctions exactly like block_scanf.\n\n  arr = \"123 456\".scanf(\"%d%d\")\n  # => [123, 456]\n\n  require 'pp'\n\n  \"this 123 read that 456 other\".scanf(\"%s%d%s\") {|m| pp m}\n\n  # [\"this\", 123, \"read\"]\n  # [\"that\", 456, \"other\"]\n  # => [[\"this\", 123, \"read\"], [\"that\", 456, \"other\"]]\n\nSee Scanf for details on creating a format string.\n\nYou will need to require 'scanf' to use String#scanf","name":"scanf","namespace":"String","path":"String#scanf","type":"instance_method","visibility":"public"},"String#unicode_normalize":{"description":"=== Unicode Normalization\n\n:call-seq:\n   str.unicode_normalize(form=:nfc)\n\nReturns a normalized form of +str+, using Unicode normalizations\nNFC, NFD, NFKC, or NFKD. The normalization form used is determined\nby +form+, which is any of the four values :nfc, :nfd, :nfkc, or :nfkd.\nThe default is :nfc.\n\nIf the string is not in a Unicode Encoding, then an Exception is raised.\nIn this context, 'Unicode Encoding' means any of  UTF-8, UTF-16BE/LE,\nand UTF-32BE/LE, as well as GB18030, UCS_2BE, and UCS_4BE. Anything\nelse than UTF-8 is implemented by converting to UTF-8,\nwhich makes it slower than UTF-8.\n\n_Examples_\n\n  \"a\\u0300\".unicode_normalize        #=> 'à' (same as \"\\u00E0\")\n  \"a\\u0300\".unicode_normalize(:nfc)  #=> 'à' (same as \"\\u00E0\")\n  \"\\u00E0\".unicode_normalize(:nfd)   #=> 'à' (same as \"a\\u0300\")\n  \"\\xE0\".force_encoding('ISO-8859-1').unicode_normalize(:nfd)\n                                     #=> Encoding::CompatibilityError raised","name":"unicode_normalize","namespace":"String","path":"String#unicode_normalize","type":"instance_method","visibility":"public"},"String#unicode_normalize!":{"description":":call-seq:\n   str.unicode_normalize!(form=:nfc)\n\nDestructive version of String#unicode_normalize, doing Unicode\nnormalization in place.","name":"unicode_normalize!","namespace":"String","path":"String#unicode_normalize!","type":"instance_method","visibility":"public"},"String#unicode_normalized?":{"description":":call-seq:\n   str.unicode_normalized?(form=:nfc)\n\nChecks whether +str+ is in Unicode normalization form +form+,\nwhich is any of the four values :nfc, :nfd, :nfkc, or :nfkd.\nThe default is :nfc.\n\nIf the string is not in a Unicode Encoding, then an Exception is raised.\nFor details, see String#unicode_normalize.\n\n_Examples_\n\n  \"a\\u0300\".unicode_normalized?        #=> false\n  \"a\\u0300\".unicode_normalized?(:nfd)  #=> true\n  \"\\u00E0\".unicode_normalized?         #=> true\n  \"\\u00E0\".unicode_normalized?(:nfd)   #=> false\n  \"\\xE0\".force_encoding('ISO-8859-1').unicode_normalized?\n                                       #=> Encoding::CompatibilityError raised","name":"unicode_normalized?","namespace":"String","path":"String#unicode_normalized?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Tracer":{"description":":nodoc:","name":"Tracer","namespace":"","path":"Tracer","type":"class","visibility":"public"},"Tracer.trace_func":{"description":"","name":"trace_func","namespace":"Tracer","path":"Tracer.trace_func","type":"class_method","visibility":"public"},"DEBUGGER__":{"description":"This library provides debugging functionality to Ruby.\n\nTo add a debugger to your code, start by requiring +debug+ in your\nprogram:\n\n  def say(word)\n    require 'debug'\n    puts word\n  end\n\nThis will cause Ruby to interrupt execution and show a prompt when the +say+\nmethod is run.\n\nOnce you're inside the prompt, you can start debugging your program.\n\n  (rdb:1) p word\n  \"hello\"\n\n== Getting help\n\nYou can get help at any time by pressing +h+.\n\n  (rdb:1) h\n  Debugger help v.-0.002b\n  Commands\n    b[reak] [file:|class:]<line|method>\n    b[reak] [class.]<line|method>\n                               set breakpoint to some position\n    wat[ch] <expression>       set watchpoint to some expression\n    cat[ch] (<exception>|off)  set catchpoint to an exception\n    b[reak]                    list breakpoints\n    cat[ch]                    show catchpoint\n    del[ete][ nnn]             delete some or all breakpoints\n    disp[lay] <expression>     add expression into display expression list\n    undisp[lay][ nnn]          delete one particular or all display expressions\n    c[ont]                     run until program ends or hit breakpoint\n    s[tep][ nnn]               step (into methods) one line or till line nnn\n    n[ext][ nnn]               go over one line or till line nnn\n    w[here]                    display frames\n    f[rame]                    alias for where\n    l[ist][ (-|nn-mm)]         list program, - lists backwards\n                               nn-mm lists given lines\n    up[ nn]                    move to higher frame\n    down[ nn]                  move to lower frame\n    fin[ish]                   return to outer frame\n    tr[ace] (on|off)           set trace mode of current thread\n    tr[ace] (on|off) all       set trace mode of all threads\n    q[uit]                     exit from debugger\n    v[ar] g[lobal]             show global variables\n    v[ar] l[ocal]              show local variables\n    v[ar] i[nstance] <object>  show instance variables of object\n    v[ar] c[onst] <object>     show constants of object\n    m[ethod] i[nstance] <obj>  show methods of object\n    m[ethod] <class|module>    show instance methods of class or module\n    th[read] l[ist]            list all threads\n    th[read] c[ur[rent]]       show current thread\n    th[read] [sw[itch]] <nnn>  switch thread context to nnn\n    th[read] stop <nnn>        stop thread nnn\n    th[read] resume <nnn>      resume thread nnn\n    p expression               evaluate expression and print its value\n    h[elp]                     print this help\n    <everything else>          evaluate\n\n== Usage\n\nThe following is a list of common functionalities that the debugger\nprovides.\n\n=== Navigating through your code\n\nIn general, a debugger is used to find bugs in your program, which\noften means pausing execution and inspecting variables at some point\nin time.\n\nLet's look at an example:\n\n  def my_method(foo)\n    require 'debug'\n    foo = get_foo if foo.nil?\n    raise if foo.nil?\n  end\n\nWhen you run this program, the debugger will kick in just before the\n+foo+ assignment.\n\n  (rdb:1) p foo\n  nil\n\nIn this example, it'd be interesting to move to the next line and\ninspect the value of +foo+ again. You can do that by pressing +n+:\n\n  (rdb:1) n # goes to next line\n  (rdb:1) p foo\n  nil\n\nYou now know that the original value of +foo+ was nil, and that it\nstill was nil after calling +get_foo+.\n\nOther useful commands for navigating through your code are:\n\n+c+::\n  Runs the program until it either exists or encounters another breakpoint.\n  You usually press +c+ when you are finished debugging your program and\n  want to resume its execution.\n+s+::\n  Steps into method definition. In the previous example, +s+ would take you\n  inside the method definition of +get_foo+.\n+r+::\n  Restart the program.\n+q+::\n  Quit the program.\n\n=== Inspecting variables\n\nYou can use the debugger to easily inspect both local and global variables.\nWe've seen how to inspect local variables before:\n\n  (rdb:1) p my_arg\n  42\n\nYou can also pretty print the result of variables or expressions:\n\n  (rdb:1) pp %w{a very long long array containing many words}\n  [\"a\",\n   \"very\",\n   \"long\",\n   ...\n  ]\n\nYou can list all local variables with +v l+:\n\n  (rdb:1) v l\n    foo => \"hello\"\n\nSimilarly, you can show all global variables with +v g+:\n\n  (rdb:1) v g\n    all global variables\n\nFinally, you can omit +p+ if you simply want to evaluate a variable or\nexpression\n\n  (rdb:1) 5**2\n  25\n\n=== Going beyond basics\n\nRuby Debug provides more advanced functionalities like switching\nbetween threads, setting breakpoints and watch expressions, and more.\nThe full list of commands is available at any time by pressing +h+.\n\n== Staying out of trouble\n\nMake sure you remove every instance of +require 'debug'+ before\nshipping your code. Failing to do so may result in your program\nhanging unpredictably.\n\nDebug is not available in safe mode.","name":"DEBUGGER__","namespace":"","path":"DEBUGGER__","type":"class","visibility":"public"},"DEBUGGER__.break_points":{"description":"Returns the list of break points where execution will be stopped.\n\nSee DEBUGGER__ for more usage","name":"break_points","namespace":"DEBUGGER__","path":"DEBUGGER__.break_points","type":"class_method","visibility":"public"},"DEBUGGER__.context":{"description":"","name":"context","namespace":"DEBUGGER__","path":"DEBUGGER__.context","type":"class_method","visibility":"public"},"DEBUGGER__.debug_thread_info":{"description":"","name":"debug_thread_info","namespace":"DEBUGGER__","path":"DEBUGGER__.debug_thread_info","type":"class_method","visibility":"public"},"DEBUGGER__.display":{"description":"Returns the display expression list\n\nSee DEBUGGER__ for more usage","name":"display","namespace":"DEBUGGER__","path":"DEBUGGER__.display","type":"class_method","visibility":"public"},"DEBUGGER__.get_thread":{"description":"","name":"get_thread","namespace":"DEBUGGER__","path":"DEBUGGER__.get_thread","type":"class_method","visibility":"public"},"DEBUGGER__.interrupt":{"description":"","name":"interrupt","namespace":"DEBUGGER__","path":"DEBUGGER__.interrupt","type":"class_method","visibility":"public"},"DEBUGGER__.make_thread_list":{"description":"","name":"make_thread_list","namespace":"DEBUGGER__","path":"DEBUGGER__.make_thread_list","type":"class_method","visibility":"public"},"DEBUGGER__.resume":{"description":"","name":"resume","namespace":"DEBUGGER__","path":"DEBUGGER__.resume","type":"class_method","visibility":"public"},"DEBUGGER__.set_last_thread":{"description":"","name":"set_last_thread","namespace":"DEBUGGER__","path":"DEBUGGER__.set_last_thread","type":"class_method","visibility":"public"},"DEBUGGER__.set_trace":{"description":"","name":"set_trace","namespace":"DEBUGGER__","path":"DEBUGGER__.set_trace","type":"class_method","visibility":"public"},"DEBUGGER__.stdout":{"description":"Returns the IO used as stdout. Defaults to STDOUT","name":"stdout","namespace":"DEBUGGER__","path":"DEBUGGER__.stdout","type":"class_method","visibility":"public"},"DEBUGGER__.stdout=":{"description":"Sets the IO used as stdout. Defaults to STDOUT","name":"stdout=","namespace":"DEBUGGER__","path":"DEBUGGER__.stdout=","type":"class_method","visibility":"public"},"DEBUGGER__.suspend":{"description":"","name":"suspend","namespace":"DEBUGGER__","path":"DEBUGGER__.suspend","type":"class_method","visibility":"public"},"DEBUGGER__.thread_list":{"description":"","name":"thread_list","namespace":"DEBUGGER__","path":"DEBUGGER__.thread_list","type":"class_method","visibility":"public"},"DEBUGGER__.thread_list_all":{"description":"","name":"thread_list_all","namespace":"DEBUGGER__","path":"DEBUGGER__.thread_list_all","type":"class_method","visibility":"public"},"DEBUGGER__.waiting":{"description":"Returns the list of waiting threads.\n\nWhen stepping through the traces of a function, thread gets suspended, to\nbe resumed later.","name":"waiting","namespace":"DEBUGGER__","path":"DEBUGGER__.waiting","type":"class_method","visibility":"public"},"DEBUGGER__::Context":{"description":":nodoc:","name":"Context","namespace":"DEBUGGER__","path":"DEBUGGER__::Context","type":"class","visibility":"public"},"DEBUGGER__::Context#break_points":{"description":"","name":"break_points","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#break_points","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#check_break_points":{"description":"","name":"check_break_points","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#check_break_points","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#check_suspend":{"description":"","name":"check_suspend","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#check_suspend","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#clear_suspend":{"description":"","name":"clear_suspend","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#clear_suspend","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#context":{"description":"","name":"context","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#context","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_command":{"description":"","name":"debug_command","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_command","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_eval":{"description":"","name":"debug_eval","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_eval","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_funcname":{"description":"","name":"debug_funcname","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_funcname","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_method_info":{"description":"","name":"debug_method_info","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_method_info","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_print_help":{"description":"","name":"debug_print_help","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_print_help","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_silent_eval":{"description":"","name":"debug_silent_eval","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_silent_eval","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#debug_variable_info":{"description":"","name":"debug_variable_info","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#debug_variable_info","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#display":{"description":"","name":"display","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#display","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#display_expression":{"description":"","name":"display_expression","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#display_expression","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#display_expressions":{"description":"","name":"display_expressions","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#display_expressions","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#display_frames":{"description":"","name":"display_frames","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#display_frames","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#display_list":{"description":"","name":"display_list","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#display_list","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#excn_handle":{"description":"","name":"excn_handle","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#excn_handle","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#format_frame":{"description":"","name":"format_frame","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#format_frame","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#frame_set_pos":{"description":"","name":"frame_set_pos","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#frame_set_pos","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#initialize":{"description":"","name":"initialize","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#initialize","type":"instance_method","visibility":"public","return":[["Context"],"a new instance of Context"]},"DEBUGGER__::Context#line_at":{"description":"","name":"line_at","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#line_at","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#resume_all":{"description":"","name":"resume_all","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#resume_all","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#script_lines":{"description":"","name":"script_lines","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#script_lines","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#set_last_thread":{"description":"","name":"set_last_thread","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#set_last_thread","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#set_suspend":{"description":"","name":"set_suspend","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#set_suspend","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#set_trace":{"description":"","name":"set_trace","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#set_trace","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#set_trace_all":{"description":"","name":"set_trace_all","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#set_trace_all","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#stdout":{"description":"","name":"stdout","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#stdout","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#stop_next":{"description":"","name":"stop_next","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#stop_next","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#suspend_all":{"description":"","name":"suspend_all","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#suspend_all","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#thnum":{"description":"","name":"thnum","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#thnum","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#trace?":{"description":"","name":"trace?","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#trace?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"DEBUGGER__::Context#trace_func":{"description":"","name":"trace_func","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#trace_func","type":"instance_method","visibility":"public"},"DEBUGGER__::Context#var_list":{"description":"","name":"var_list","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context#var_list","type":"instance_method","visibility":"public"},"DEBUGGER__::Context::DEBUG_LAST_CMD":{"description":"","name":"DEBUG_LAST_CMD","namespace":"DEBUGGER__::Context","path":"DEBUGGER__::Context::DEBUG_LAST_CMD","type":"constant","return":null,"visibility":"public"},"DEBUGGER__::MUTEX":{"description":":nodoc:","name":"MUTEX","namespace":"DEBUGGER__","path":"DEBUGGER__::MUTEX","type":"constant","return":null,"visibility":"public"},"Delegator":{"description":"This library provides three different ways to delegate method calls to an\nobject.  The easiest to use is SimpleDelegator.  Pass an object to the\nconstructor and all methods supported by the object will be delegated.  This\nobject can be changed later.\n\nGoing a step further, the top level DelegateClass method allows you to easily\nsetup delegation through class inheritance.  This is considerably more\nflexible and thus probably the most common use for this library.\n\nFinally, if you need full control over the delegation scheme, you can inherit\nfrom the abstract class Delegator and customize as needed.  (If you find\nyourself needing this control, have a look at Forwardable which is also in\nthe standard library.  It may suit your needs better.)\n\nSimpleDelegator's implementation serves as a nice example if the use of\nDelegator:\n\n  class SimpleDelegator < Delegator\n    def initialize(obj)\n      super                  # pass obj to Delegator constructor, required\n      @delegate_sd_obj = obj # store obj for future use\n    end\n\n    def __getobj__\n      @delegate_sd_obj # return object we are delegating to, required\n    end\n\n    def __setobj__(obj)\n      @delegate_sd_obj = obj # change delegation object,\n                             # a feature we're providing\n    end\n  end\n\n== Notes\n\nBe advised, RDoc will not detect delegated methods.","name":"Delegator","namespace":"","path":"Delegator","type":"class","visibility":"public"},"Delegator#!":{"description":"Delegates ! to the \\_\\_getobj\\_\\_","name":"!","namespace":"Delegator","path":"Delegator#!","type":"instance_method","visibility":"public"},"Delegator#!=":{"description":"Returns true if two objects are not considered of equal value.","name":"!=","namespace":"Delegator","path":"Delegator#!=","type":"instance_method","visibility":"public"},"Delegator#==":{"description":"Returns true if two objects are considered of equal value.","name":"==","namespace":"Delegator","path":"Delegator#==","type":"instance_method","visibility":"public"},"Delegator#__getobj__":{"description":"This method must be overridden by subclasses and should return the object\nmethod calls are being delegated to.","name":"__getobj__","namespace":"Delegator","path":"Delegator#__getobj__","type":"instance_method","visibility":"public"},"Delegator#__setobj__":{"description":"This method must be overridden by subclasses and change the object delegate\nto _obj_.","name":"__setobj__","namespace":"Delegator","path":"Delegator#__setobj__","type":"instance_method","visibility":"public"},"Delegator#initialize":{"description":"Pass in the _obj_ to delegate method calls to.  All methods supported by\n_obj_ will be delegated to.","name":"initialize","namespace":"Delegator","path":"Delegator#initialize","type":"instance_method","visibility":"public","return":[["Delegator"],"a new instance of Delegator"]},"Delegator#initialize_clone":{"description":":nodoc:","name":"initialize_clone","namespace":"Delegator","path":"Delegator#initialize_clone","type":"instance_method","visibility":"private"},"Delegator#initialize_dup":{"description":":nodoc:","name":"initialize_dup","namespace":"Delegator","path":"Delegator#initialize_dup","type":"instance_method","visibility":"private"},"Delegator#marshal_dump":{"description":"Serialization support for the object returned by \\_\\_getobj\\_\\_.","name":"marshal_dump","namespace":"Delegator","path":"Delegator#marshal_dump","type":"instance_method","visibility":"public"},"Delegator#marshal_load":{"description":"Reinitializes delegation from a serialized object.","name":"marshal_load","namespace":"Delegator","path":"Delegator#marshal_load","type":"instance_method","visibility":"public"},"Delegator#method":{"description":":method: freeze\nFreeze both the object returned by \\_\\_getobj\\_\\_ and self.","name":"method","namespace":"Delegator","path":"Delegator#method","type":"instance_method","visibility":"public"},"Delegator#method_missing":{"description":"Handles the magic of delegation through \\_\\_getobj\\_\\_.","name":"method_missing","namespace":"Delegator","path":"Delegator#method_missing","type":"instance_method","visibility":"public"},"Delegator#methods":{"description":"Returns the methods available to this delegate object as the union\nof this object's and \\_\\_getobj\\_\\_ methods.","name":"methods","namespace":"Delegator","path":"Delegator#methods","type":"instance_method","visibility":"public"},"Delegator#protected_methods":{"description":"Returns the methods available to this delegate object as the union\nof this object's and \\_\\_getobj\\_\\_ protected methods.","name":"protected_methods","namespace":"Delegator","path":"Delegator#protected_methods","type":"instance_method","visibility":"public"},"Delegator#public_methods":{"description":"Returns the methods available to this delegate object as the union\nof this object's and \\_\\_getobj\\_\\_ public methods.","name":"public_methods","namespace":"Delegator","path":"Delegator#public_methods","type":"instance_method","visibility":"public"},"Delegator#respond_to_missing?":{"description":"Checks for a method provided by this the delegate object by forwarding the\ncall through \\_\\_getobj\\_\\_.","name":"respond_to_missing?","namespace":"Delegator","path":"Delegator#respond_to_missing?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Delegator.const_missing":{"description":":stopdoc:","name":"const_missing","namespace":"Delegator","path":"Delegator.const_missing","type":"class_method","visibility":"public"},"Delegator.delegating_block":{"description":":nodoc:","name":"delegating_block","namespace":"Delegator","path":"Delegator.delegating_block","type":"class_method","visibility":"public"},"Delegator.public_api":{"description":":nodoc:","name":"public_api","namespace":"Delegator","path":"Delegator.public_api","type":"class_method","visibility":"public"},"SimpleDelegator":{"description":"A concrete implementation of Delegator, this class provides the means to\ndelegate all supported method calls to the object passed into the constructor\nand even to change the object being delegated to at a later time with\n#__setobj__.\n\n  class User\n    def born_on\n      Date.new(1989, 9, 10)\n    end\n  end\n\n  class UserDecorator < SimpleDelegator\n    def birth_year\n      born_on.year\n    end\n  end\n\n  decorated_user = UserDecorator.new(User.new)\n  decorated_user.birth_year  #=> 1989\n  decorated_user.__getobj__  #=> #<User: ...>\n\nA SimpleDelegator instance can take advantage of the fact that SimpleDelegator\nis a subclass of +Delegator+ to call <tt>super</tt> to have methods called on\nthe object being delegated to.\n\n  class SuperArray < SimpleDelegator\n    def [](*args)\n      super + 1\n    end\n  end\n\n  SuperArray.new([1])[0]  #=> 2\n\nHere's a simple example that takes advantage of the fact that\nSimpleDelegator's delegation object can be changed at any time.\n\n  class Stats\n    def initialize\n      @source = SimpleDelegator.new([])\n    end\n\n    def stats(records)\n      @source.__setobj__(records)\n\n      \"Elements:  #{@source.size}\\n\" +\n      \" Non-Nil:  #{@source.compact.size}\\n\" +\n      \"  Unique:  #{@source.uniq.size}\\n\"\n    end\n  end\n\n  s = Stats.new\n  puts s.stats(%w{James Edward Gray II})\n  puts\n  puts s.stats([1, 2, 3, nil, 4, 5, 1, 2])\n\nPrints:\n\n  Elements:  4\n   Non-Nil:  4\n    Unique:  4\n\n  Elements:  8\n   Non-Nil:  7\n    Unique:  6","name":"SimpleDelegator","namespace":"","path":"SimpleDelegator","type":"class","visibility":"public"},"SimpleDelegator#__getobj__":{"description":"Returns the current object method calls are being delegated to.","name":"__getobj__","namespace":"SimpleDelegator","path":"SimpleDelegator#__getobj__","type":"instance_method","visibility":"public"},"SimpleDelegator#__setobj__":{"description":"Changes the delegate object to _obj_.\n\nIt's important to note that this does *not* cause SimpleDelegator's methods\nto change.  Because of this, you probably only want to change delegation\nto objects of the same type as the original delegate.\n\nHere's an example of changing the delegation object.\n\n  names = SimpleDelegator.new(%w{James Edward Gray II})\n  puts names[1]    # => Edward\n  names.__setobj__(%w{Gavin Sinclair})\n  puts names[1]    # => Sinclair","name":"__setobj__","namespace":"SimpleDelegator","path":"SimpleDelegator#__setobj__","type":"instance_method","visibility":"public"},"FileUtils":{"description":"= fileutils.rb\n\nCopyright (c) 2000-2007 Minero Aoki\n\nThis program is free software.\nYou can distribute/modify this program under the same terms of ruby.\n\n== module FileUtils\n\nNamespace for several file utility methods for copying, moving, removing, etc.\n\n=== Module Functions\n\n  require 'fileutils'\n\n  FileUtils.cd(dir, options)\n  FileUtils.cd(dir, options) {|dir| .... }\n  FileUtils.pwd()\n  FileUtils.mkdir(dir, options)\n  FileUtils.mkdir(list, options)\n  FileUtils.mkdir_p(dir, options)\n  FileUtils.mkdir_p(list, options)\n  FileUtils.rmdir(dir, options)\n  FileUtils.rmdir(list, options)\n  FileUtils.ln(old, new, options)\n  FileUtils.ln(list, destdir, options)\n  FileUtils.ln_s(old, new, options)\n  FileUtils.ln_s(list, destdir, options)\n  FileUtils.ln_sf(src, dest, options)\n  FileUtils.cp(src, dest, options)\n  FileUtils.cp(list, dir, options)\n  FileUtils.cp_r(src, dest, options)\n  FileUtils.cp_r(list, dir, options)\n  FileUtils.mv(src, dest, options)\n  FileUtils.mv(list, dir, options)\n  FileUtils.rm(list, options)\n  FileUtils.rm_r(list, options)\n  FileUtils.rm_rf(list, options)\n  FileUtils.install(src, dest, mode = <src's>, options)\n  FileUtils.chmod(mode, list, options)\n  FileUtils.chmod_R(mode, list, options)\n  FileUtils.chown(user, group, list, options)\n  FileUtils.chown_R(user, group, list, options)\n  FileUtils.touch(list, options)\n\nThe <tt>options</tt> parameter is a hash of options, taken from the list\n<tt>:force</tt>, <tt>:noop</tt>, <tt>:preserve</tt>, and <tt>:verbose</tt>.\n<tt>:noop</tt> means that no changes are made.  The other two are obvious.\nEach method documents the options that it honours.\n\nAll methods that have the concept of a \"source\" file or directory can take\neither one file or a list of files in that argument.  See the method\ndocumentation for examples.\n\nThere are some `low level' methods, which do not accept any option:\n\n  FileUtils.copy_entry(src, dest, preserve = false, dereference = false)\n  FileUtils.copy_file(src, dest, preserve = false, dereference = true)\n  FileUtils.copy_stream(srcstream, deststream)\n  FileUtils.remove_entry(path, force = false)\n  FileUtils.remove_entry_secure(path, force = false)\n  FileUtils.remove_file(path, force = false)\n  FileUtils.compare_file(path_a, path_b)\n  FileUtils.compare_stream(stream_a, stream_b)\n  FileUtils.uptodate?(file, cmp_list)\n\n== module FileUtils::Verbose\n\nThis module has all methods of FileUtils module, but it outputs messages\nbefore acting.  This equates to passing the <tt>:verbose</tt> flag to methods\nin FileUtils.\n\n== module FileUtils::NoWrite\n\nThis module has all methods of FileUtils module, but never changes\nfiles/directories.  This equates to passing the <tt>:noop</tt> flag to methods\nin FileUtils.\n\n== module FileUtils::DryRun\n\nThis module has all methods of FileUtils module, but never changes\nfiles/directories.  This equates to passing the <tt>:noop</tt> and\n<tt>:verbose</tt> flags to methods in FileUtils.","name":"FileUtils","namespace":"","path":"FileUtils","type":"module","visibility":"public"},"FileUtils#apply_mask":{"description":"","name":"apply_mask","namespace":"FileUtils","path":"FileUtils#apply_mask","type":"module_function","visibility":"public"},"FileUtils#cd":{"description":"Options: verbose\n\nChanges the current directory to the directory +dir+.\n\nIf this method is called with block, resumes to the old\nworking directory after the block execution finished.\n\n  FileUtils.cd('/', :verbose => true)   # chdir and report it\n\n  FileUtils.cd('/') do  # chdir\n    [...]               # do something\n  end                   # return to original directory","name":"chdir","namespace":"FileUtils","path":"FileUtils#chdir","type":"module_function","visibility":"private"},"FileUtils#chdir":{"description":"Options: verbose\n\nChanges the current directory to the directory +dir+.\n\nIf this method is called with block, resumes to the old\nworking directory after the block execution finished.\n\n  FileUtils.cd('/', :verbose => true)   # chdir and report it\n\n  FileUtils.cd('/') do  # chdir\n    [...]               # do something\n  end                   # return to original directory","name":"chdir","namespace":"FileUtils","path":"FileUtils#chdir","type":"module_function","visibility":"private"},"FileUtils#chmod":{"description":"Options: noop verbose\n\nChanges permission bits on the named files (in +list+) to the bit pattern\nrepresented by +mode+.\n\n+mode+ is the symbolic and absolute mode can be used.\n\nAbsolute mode is\n  FileUtils.chmod 0755, 'somecommand'\n  FileUtils.chmod 0644, %w(my.rb your.rb his.rb her.rb)\n  FileUtils.chmod 0755, '/usr/bin/ruby', :verbose => true\n\nSymbolic mode is\n  FileUtils.chmod \"u=wrx,go=rx\", 'somecommand'\n  FileUtils.chmod \"u=wr,go=rr\", %w(my.rb your.rb his.rb her.rb)\n  FileUtils.chmod \"u=wrx,go=rx\", '/usr/bin/ruby', :verbose => true\n\n\"a\" :: is user, group, other mask.\n\"u\" :: is user's mask.\n\"g\" :: is group's mask.\n\"o\" :: is other's mask.\n\"w\" :: is write permission.\n\"r\" :: is read permission.\n\"x\" :: is execute permission.\n\"X\" ::\n  is execute permission for directories only, must be used in conjunction with \"+\"\n\"s\" :: is uid, gid.\n\"t\" :: is sticky bit.\n\"+\" :: is added to a class given the specified mode.\n\"-\" :: Is removed from a given class given mode.\n\"=\" :: Is the exact nature of the class will be given a specified mode.","name":"chmod","namespace":"FileUtils","path":"FileUtils#chmod","type":"module_function","visibility":"private"},"FileUtils#chmod_R":{"description":"Options: noop verbose force\n\nChanges permission bits on the named files (in +list+)\nto the bit pattern represented by +mode+.\n\n  FileUtils.chmod_R 0700, \"/tmp/app.#{$$}\"\n  FileUtils.chmod_R \"u=wrx\", \"/tmp/app.#{$$}\"","name":"chmod_R","namespace":"FileUtils","path":"FileUtils#chmod_R","type":"module_function","visibility":"private"},"FileUtils#chown":{"description":"Options: noop verbose\n\nChanges owner and group on the named files (in +list+)\nto the user +user+ and the group +group+.  +user+ and +group+\nmay be an ID (Integer/String) or a name (String).\nIf +user+ or +group+ is nil, this method does not change\nthe attribute.\n\n  FileUtils.chown 'root', 'staff', '/usr/local/bin/ruby'\n  FileUtils.chown nil, 'bin', Dir.glob('/usr/bin/*'), :verbose => true","name":"chown","namespace":"FileUtils","path":"FileUtils#chown","type":"module_function","visibility":"private"},"FileUtils#chown_R":{"description":"Options: noop verbose force\n\nChanges owner and group on the named files (in +list+)\nto the user +user+ and the group +group+ recursively.\n+user+ and +group+ may be an ID (Integer/String) or\na name (String).  If +user+ or +group+ is nil, this\nmethod does not change the attribute.\n\n  FileUtils.chown_R 'www', 'www', '/var/www/htdocs'\n  FileUtils.chown_R 'cvs', 'cvs', '/var/cvs', :verbose => true","name":"chown_R","namespace":"FileUtils","path":"FileUtils#chown_R","type":"module_function","visibility":"private"},"FileUtils#cmp":{"description":"Returns true if the contents of a file A and a file B are identical.\n\n  FileUtils.compare_file('somefile', 'somefile')  #=> true\n  FileUtils.compare_file('/bin/cp', '/bin/mv')    #=> maybe false","name":"cmp","namespace":"FileUtils","path":"FileUtils#cmp","type":"module_function","visibility":"private"},"FileUtils#compare_file":{"description":"Returns true if the contents of a file A and a file B are identical.\n\n  FileUtils.compare_file('somefile', 'somefile')  #=> true\n  FileUtils.compare_file('/bin/cp', '/bin/mv')    #=> maybe false","name":"cmp","namespace":"FileUtils","path":"FileUtils#cmp","type":"module_function","visibility":"private"},"FileUtils#identical?":{"description":"Returns true if the contents of a file A and a file B are identical.\n\n  FileUtils.compare_file('somefile', 'somefile')  #=> true\n  FileUtils.compare_file('/bin/cp', '/bin/mv')    #=> maybe false","name":"identical?","namespace":"FileUtils","path":"FileUtils#identical?","type":"module_function","visibility":"private"},"FileUtils#compare_stream":{"description":"Returns true if the contents of a stream +a+ and +b+ are identical.","name":"compare_stream","namespace":"FileUtils","path":"FileUtils#compare_stream","type":"module_function","visibility":"private"},"FileUtils#copy":{"description":"Options: preserve noop verbose\n\nCopies a file content +src+ to +dest+.  If +dest+ is a directory,\ncopies +src+ to +dest/src+.\n\nIf +src+ is a list of files, then +dest+ must be a directory.\n\n  FileUtils.cp 'eval.c', 'eval.c.org'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6', :verbose => true\n  FileUtils.cp 'symlink', 'dest'   # copy content, \"dest\" is not a symlink","name":"copy","namespace":"FileUtils","path":"FileUtils#copy","type":"module_function","visibility":"private"},"FileUtils#copy_entry":{"description":"Copies a file system entry +src+ to +dest+.\nIf +src+ is a directory, this method copies its contents recursively.\nThis method preserves file types, c.f. symlink, directory...\n(FIFO, device files and etc. are not supported yet)\n\nBoth of +src+ and +dest+ must be a path name.\n+src+ must exist, +dest+ must not exist.\n\nIf +preserve+ is true, this method preserves owner, group, and\nmodified time.  Permissions are copied regardless +preserve+.\n\nIf +dereference_root+ is true, this method dereference tree root.\n\nIf +remove_destination+ is true, this method removes each destination file before copy.","name":"copy_entry","namespace":"FileUtils","path":"FileUtils#copy_entry","type":"module_function","visibility":"private"},"FileUtils#copy_file":{"description":"Copies file contents of +src+ to +dest+.\nBoth of +src+ and +dest+ must be a path name.","name":"copy_file","namespace":"FileUtils","path":"FileUtils#copy_file","type":"module_function","visibility":"private"},"FileUtils#copy_stream":{"description":"Copies stream +src+ to +dest+.\n+src+ must respond to #read(n) and\n+dest+ must respond to #write(str).","name":"copy_stream","namespace":"FileUtils","path":"FileUtils#copy_stream","type":"module_function","visibility":"private"},"FileUtils#cp":{"description":"Options: preserve noop verbose\n\nCopies a file content +src+ to +dest+.  If +dest+ is a directory,\ncopies +src+ to +dest/src+.\n\nIf +src+ is a list of files, then +dest+ must be a directory.\n\n  FileUtils.cp 'eval.c', 'eval.c.org'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6', :verbose => true\n  FileUtils.cp 'symlink', 'dest'   # copy content, \"dest\" is not a symlink","name":"copy","namespace":"FileUtils","path":"FileUtils#copy","type":"module_function","visibility":"private"},"FileUtils#cp_r":{"description":"Options: preserve noop verbose dereference_root remove_destination\n\nCopies +src+ to +dest+. If +src+ is a directory, this method copies\nall its contents recursively. If +dest+ is a directory, copies\n+src+ to +dest/src+.\n\n+src+ can be a list of files.\n\n  # Installing Ruby library \"mylib\" under the site_ruby\n  FileUtils.rm_r site_ruby + '/mylib', :force\n  FileUtils.cp_r 'lib/', site_ruby + '/mylib'\n\n  # Examples of copying several files to target directory.\n  FileUtils.cp_r %w(mail.rb field.rb debug/), site_ruby + '/tmail'\n  FileUtils.cp_r Dir.glob('*.rb'), '/home/aamine/lib/ruby', :noop => true, :verbose => true\n\n  # If you want to copy all contents of a directory instead of the\n  # directory itself, c.f. src/x -> dest/x, src/y -> dest/y,\n  # use following code.\n  FileUtils.cp_r 'src/.', 'dest'     # cp_r('src', 'dest') makes dest/src,\n                                     # but this doesn't.","name":"cp_r","namespace":"FileUtils","path":"FileUtils#cp_r","type":"module_function","visibility":"private"},"FileUtils#fu_check_options":{"description":":nodoc:","name":"fu_check_options","namespace":"FileUtils","path":"FileUtils#fu_check_options","type":"module_function","visibility":"private"},"FileUtils#fu_each_src_dest":{"description":":nodoc:","name":"fu_each_src_dest","namespace":"FileUtils","path":"FileUtils#fu_each_src_dest","type":"module_function","visibility":"private"},"FileUtils#fu_each_src_dest0":{"description":":nodoc:","name":"fu_each_src_dest0","namespace":"FileUtils","path":"FileUtils#fu_each_src_dest0","type":"module_function","visibility":"private"},"FileUtils#fu_get_gid":{"description":":nodoc:","name":"fu_get_gid","namespace":"FileUtils","path":"FileUtils#fu_get_gid","type":"module_function","visibility":"public"},"FileUtils#fu_get_uid":{"description":":nodoc:","name":"fu_get_uid","namespace":"FileUtils","path":"FileUtils#fu_get_uid","type":"module_function","visibility":"public"},"FileUtils#fu_have_symlink?":{"description":":nodoc:","name":"fu_have_symlink?","namespace":"FileUtils","path":"FileUtils#fu_have_symlink?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"FileUtils#fu_list":{"description":"class Entry_","name":"fu_list","namespace":"FileUtils","path":"FileUtils#fu_list","type":"module_function","visibility":"private"},"FileUtils#fu_mkdir":{"description":":nodoc:","name":"fu_mkdir","namespace":"FileUtils","path":"FileUtils#fu_mkdir","type":"module_function","visibility":"public"},"FileUtils#fu_mode":{"description":":nodoc:","name":"fu_mode","namespace":"FileUtils","path":"FileUtils#fu_mode","type":"module_function","visibility":"public"},"FileUtils#fu_output_message":{"description":":nodoc:","name":"fu_output_message","namespace":"FileUtils","path":"FileUtils#fu_output_message","type":"module_function","visibility":"private"},"FileUtils#fu_same?":{"description":":nodoc:","name":"fu_same?","namespace":"FileUtils","path":"FileUtils#fu_same?","type":"module_function","visibility":"private","return":[["Boolean"],""]},"FileUtils#fu_stat_identical_entry?":{"description":":nodoc:","name":"fu_stat_identical_entry?","namespace":"FileUtils","path":"FileUtils#fu_stat_identical_entry?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"FileUtils#fu_update_option":{"description":":nodoc:","name":"fu_update_option","namespace":"FileUtils","path":"FileUtils#fu_update_option","type":"module_function","visibility":"private"},"FileUtils#getwd":{"description":"Options: (none)\n\nReturns the name of the current directory.","name":"getwd","namespace":"FileUtils","path":"FileUtils#getwd","type":"module_function","visibility":"private"},"FileUtils#install":{"description":"Options: mode preserve noop verbose\n\nIf +src+ is not same as +dest+, copies it and changes the permission\nmode to +mode+.  If +dest+ is a directory, destination is +dest+/+src+.\nThis method removes destination before copy.\n\n  FileUtils.install 'ruby', '/usr/local/bin/ruby', :mode => 0755, :verbose => true\n  FileUtils.install 'lib.rb', '/usr/local/lib/ruby/site_ruby', :verbose => true","name":"install","namespace":"FileUtils","path":"FileUtils#install","type":"module_function","visibility":"private"},"FileUtils#link":{"description":"Options: force noop verbose\n\n<b><tt>ln(old, new, options = {})</tt></b>\n\nCreates a hard link +new+ which points to +old+.\nIf +new+ already exists and it is a directory, creates a link +new/old+.\nIf +new+ already exists and it is not a directory, raises Errno::EEXIST.\nBut if :force option is set, overwrite +new+.\n\n  FileUtils.ln 'gcc', 'cc', :verbose => true\n  FileUtils.ln '/usr/bin/emacs21', '/usr/bin/emacs'\n\n<b><tt>ln(list, destdir, options = {})</tt></b>\n\nCreates several hard links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  include FileUtils\n  cd '/sbin'\n  FileUtils.ln %w(cp mv mkdir), '/bin'   # Now /sbin/cp and /bin/cp are linked.","name":"link","namespace":"FileUtils","path":"FileUtils#link","type":"module_function","visibility":"private"},"FileUtils#ln":{"description":"Options: force noop verbose\n\n<b><tt>ln(old, new, options = {})</tt></b>\n\nCreates a hard link +new+ which points to +old+.\nIf +new+ already exists and it is a directory, creates a link +new/old+.\nIf +new+ already exists and it is not a directory, raises Errno::EEXIST.\nBut if :force option is set, overwrite +new+.\n\n  FileUtils.ln 'gcc', 'cc', :verbose => true\n  FileUtils.ln '/usr/bin/emacs21', '/usr/bin/emacs'\n\n<b><tt>ln(list, destdir, options = {})</tt></b>\n\nCreates several hard links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  include FileUtils\n  cd '/sbin'\n  FileUtils.ln %w(cp mv mkdir), '/bin'   # Now /sbin/cp and /bin/cp are linked.","name":"link","namespace":"FileUtils","path":"FileUtils#link","type":"module_function","visibility":"private"},"FileUtils#ln_s":{"description":"Options: force noop verbose\n\n<b><tt>ln_s(old, new, options = {})</tt></b>\n\nCreates a symbolic link +new+ which points to +old+.  If +new+ already\nexists and it is a directory, creates a symbolic link +new/old+.  If +new+\nalready exists and it is not a directory, raises Errno::EEXIST.  But if\n:force option is set, overwrite +new+.\n\n  FileUtils.ln_s '/usr/bin/ruby', '/usr/local/bin/ruby'\n  FileUtils.ln_s 'verylongsourcefilename.c', 'c', :force => true\n\n<b><tt>ln_s(list, destdir, options = {})</tt></b>\n\nCreates several symbolic links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\nIf +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  FileUtils.ln_s Dir.glob('bin/*.rb'), '/home/aamine/bin'","name":"symlink","namespace":"FileUtils","path":"FileUtils#symlink","type":"module_function","visibility":"private"},"FileUtils#symlink":{"description":"Options: force noop verbose\n\n<b><tt>ln_s(old, new, options = {})</tt></b>\n\nCreates a symbolic link +new+ which points to +old+.  If +new+ already\nexists and it is a directory, creates a symbolic link +new/old+.  If +new+\nalready exists and it is not a directory, raises Errno::EEXIST.  But if\n:force option is set, overwrite +new+.\n\n  FileUtils.ln_s '/usr/bin/ruby', '/usr/local/bin/ruby'\n  FileUtils.ln_s 'verylongsourcefilename.c', 'c', :force => true\n\n<b><tt>ln_s(list, destdir, options = {})</tt></b>\n\nCreates several symbolic links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\nIf +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  FileUtils.ln_s Dir.glob('bin/*.rb'), '/home/aamine/bin'","name":"symlink","namespace":"FileUtils","path":"FileUtils#symlink","type":"module_function","visibility":"private"},"FileUtils#ln_sf":{"description":"Options: noop verbose\n\nSame as\n  #ln_s(src, dest, :force => true)","name":"ln_sf","namespace":"FileUtils","path":"FileUtils#ln_sf","type":"module_function","visibility":"private"},"FileUtils#makedirs":{"description":"Options: mode noop verbose\n\nCreates a directory and all its parent directories.\nFor example,\n\n  FileUtils.mkdir_p '/usr/local/lib/ruby'\n\ncauses to make following directories, if it does not exist.\n    * /usr\n    * /usr/local\n    * /usr/local/lib\n    * /usr/local/lib/ruby\n\nYou can pass several directories at a time in a list.","name":"makedirs","namespace":"FileUtils","path":"FileUtils#makedirs","type":"module_function","visibility":"private"},"FileUtils#mkdir":{"description":"Options: mode noop verbose\n\nCreates one or more directories.\n\n  FileUtils.mkdir 'test'\n  FileUtils.mkdir %w( tmp data )\n  FileUtils.mkdir 'notexist', :noop => true  # Does not really create.\n  FileUtils.mkdir 'tmp', :mode => 0700","name":"mkdir","namespace":"FileUtils","path":"FileUtils#mkdir","type":"module_function","visibility":"private"},"FileUtils#mkdir_p":{"description":"Options: mode noop verbose\n\nCreates a directory and all its parent directories.\nFor example,\n\n  FileUtils.mkdir_p '/usr/local/lib/ruby'\n\ncauses to make following directories, if it does not exist.\n    * /usr\n    * /usr/local\n    * /usr/local/lib\n    * /usr/local/lib/ruby\n\nYou can pass several directories at a time in a list.","name":"makedirs","namespace":"FileUtils","path":"FileUtils#makedirs","type":"module_function","visibility":"private"},"FileUtils#mkpath":{"description":"Options: mode noop verbose\n\nCreates a directory and all its parent directories.\nFor example,\n\n  FileUtils.mkdir_p '/usr/local/lib/ruby'\n\ncauses to make following directories, if it does not exist.\n    * /usr\n    * /usr/local\n    * /usr/local/lib\n    * /usr/local/lib/ruby\n\nYou can pass several directories at a time in a list.","name":"mkpath","namespace":"FileUtils","path":"FileUtils#mkpath","type":"module_function","visibility":"private"},"FileUtils#mode_to_s":{"description":":nodoc:","name":"mode_to_s","namespace":"FileUtils","path":"FileUtils#mode_to_s","type":"module_function","visibility":"public"},"FileUtils#move":{"description":"Options: force noop verbose\n\nMoves file(s) +src+ to +dest+.  If +file+ and +dest+ exist on the different\ndisk partition, the file is copied then the original file is removed.\n\n  FileUtils.mv 'badname.rb', 'goodname.rb'\n  FileUtils.mv 'stuff.rb', '/notexist/lib/ruby', :force => true  # no error\n\n  FileUtils.mv %w(junk.txt dust.txt), '/home/aamine/.trash/'\n  FileUtils.mv Dir.glob('test*.rb'), 'test', :noop => true, :verbose => true","name":"move","namespace":"FileUtils","path":"FileUtils#move","type":"module_function","visibility":"private"},"FileUtils#mv":{"description":"Options: force noop verbose\n\nMoves file(s) +src+ to +dest+.  If +file+ and +dest+ exist on the different\ndisk partition, the file is copied then the original file is removed.\n\n  FileUtils.mv 'badname.rb', 'goodname.rb'\n  FileUtils.mv 'stuff.rb', '/notexist/lib/ruby', :force => true  # no error\n\n  FileUtils.mv %w(junk.txt dust.txt), '/home/aamine/.trash/'\n  FileUtils.mv Dir.glob('test*.rb'), 'test', :noop => true, :verbose => true","name":"move","namespace":"FileUtils","path":"FileUtils#move","type":"module_function","visibility":"private"},"FileUtils#pwd":{"description":"Options: (none)\n\nReturns the name of the current directory.","name":"getwd","namespace":"FileUtils","path":"FileUtils#getwd","type":"module_function","visibility":"private"},"FileUtils#remove":{"description":"Options: force noop verbose\n\nRemove file(s) specified in +list+.  This method cannot remove directories.\nAll StandardErrors are ignored when the :force option is set.\n\n  FileUtils.rm %w( junk.txt dust.txt )\n  FileUtils.rm Dir.glob('*.so')\n  FileUtils.rm 'NotExistFile', :force => true   # never raises exception","name":"remove","namespace":"FileUtils","path":"FileUtils#remove","type":"module_function","visibility":"private"},"FileUtils#remove_dir":{"description":"Removes a directory +dir+ and its contents recursively.\nThis method ignores StandardError if +force+ is true.","name":"remove_dir","namespace":"FileUtils","path":"FileUtils#remove_dir","type":"module_function","visibility":"private"},"FileUtils#remove_entry":{"description":"This method removes a file system entry +path+.\n+path+ might be a regular file, a directory, or something.\nIf +path+ is a directory, remove it recursively.\n\nSee also #remove_entry_secure.","name":"remove_entry","namespace":"FileUtils","path":"FileUtils#remove_entry","type":"module_function","visibility":"private"},"FileUtils#remove_entry_secure":{"description":"This method removes a file system entry +path+.  +path+ shall be a\nregular file, a directory, or something.  If +path+ is a directory,\nremove it recursively.  This method is required to avoid TOCTTOU\n(time-of-check-to-time-of-use) local security vulnerability of #rm_r.\n#rm_r causes security hole when:\n\n  * Parent directory is world writable (including /tmp).\n  * Removing directory tree includes world writable directory.\n  * The system has symbolic link.\n\nTo avoid this security hole, this method applies special preprocess.\nIf +path+ is a directory, this method chown(2) and chmod(2) all\nremoving directories.  This requires the current process is the\nowner of the removing whole directory tree, or is the super user (root).\n\nWARNING: You must ensure that *ALL* parent directories cannot be\nmoved by other untrusted users.  For example, parent directories\nshould not be owned by untrusted users, and should not be world\nwritable except when the sticky bit set.\n\nWARNING: Only the owner of the removing directory tree, or Unix super\nuser (root) should invoke this method.  Otherwise this method does not\nwork.\n\nFor details of this security vulnerability, see Perl's case:\n\n  http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2005-0448\n  http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2004-0452\n\nFor fileutils.rb, this vulnerability is reported in [ruby-dev:26100].","name":"remove_entry_secure","namespace":"FileUtils","path":"FileUtils#remove_entry_secure","type":"module_function","visibility":"private"},"FileUtils#remove_file":{"description":"Removes a file +path+.\nThis method ignores StandardError if +force+ is true.","name":"remove_file","namespace":"FileUtils","path":"FileUtils#remove_file","type":"module_function","visibility":"private"},"FileUtils#remove_tailing_slash":{"description":"","name":"remove_tailing_slash","namespace":"FileUtils","path":"FileUtils#remove_tailing_slash","type":"module_function","visibility":"public"},"FileUtils#rename_cannot_overwrite_file?":{"description":":nodoc:","name":"rename_cannot_overwrite_file?","namespace":"FileUtils","path":"FileUtils#rename_cannot_overwrite_file?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"FileUtils#rm":{"description":"Options: force noop verbose\n\nRemove file(s) specified in +list+.  This method cannot remove directories.\nAll StandardErrors are ignored when the :force option is set.\n\n  FileUtils.rm %w( junk.txt dust.txt )\n  FileUtils.rm Dir.glob('*.so')\n  FileUtils.rm 'NotExistFile', :force => true   # never raises exception","name":"remove","namespace":"FileUtils","path":"FileUtils#remove","type":"module_function","visibility":"private"},"FileUtils#rm_f":{"description":"Options: noop verbose\n\nEquivalent to\n\n  #rm(list, :force => true)","name":"safe_unlink","namespace":"FileUtils","path":"FileUtils#safe_unlink","type":"module_function","visibility":"private"},"FileUtils#safe_unlink":{"description":"Options: noop verbose\n\nEquivalent to\n\n  #rm(list, :force => true)","name":"safe_unlink","namespace":"FileUtils","path":"FileUtils#safe_unlink","type":"module_function","visibility":"private"},"FileUtils#rm_r":{"description":"Options: force noop verbose secure\n\nremove files +list+[0] +list+[1]... If +list+[n] is a directory,\nremoves its all contents recursively. This method ignores\nStandardError when :force option is set.\n\n  FileUtils.rm_r Dir.glob('/tmp/*')\n  FileUtils.rm_r '/', :force => true          #  :-)\n\nWARNING: This method causes local vulnerability\nif one of parent directories or removing directory tree are world\nwritable (including /tmp, whose permission is 1777), and the current\nprocess has strong privilege such as Unix super user (root), and the\nsystem has symbolic link.  For secure removing, read the documentation\nof #remove_entry_secure carefully, and set :secure option to true.\nDefault is :secure=>false.\n\nNOTE: This method calls #remove_entry_secure if :secure option is set.\nSee also #remove_entry_secure.","name":"rm_r","namespace":"FileUtils","path":"FileUtils#rm_r","type":"module_function","visibility":"private"},"FileUtils#rm_rf":{"description":"Options: noop verbose secure\n\nEquivalent to\n\n  #rm_r(list, :force => true)\n\nWARNING: This method causes local vulnerability.\nRead the documentation of #rm_r first.","name":"rmtree","namespace":"FileUtils","path":"FileUtils#rmtree","type":"module_function","visibility":"private"},"FileUtils#rmtree":{"description":"Options: noop verbose secure\n\nEquivalent to\n\n  #rm_r(list, :force => true)\n\nWARNING: This method causes local vulnerability.\nRead the documentation of #rm_r first.","name":"rmtree","namespace":"FileUtils","path":"FileUtils#rmtree","type":"module_function","visibility":"private"},"FileUtils#rmdir":{"description":"Options: parents, noop, verbose\n\nRemoves one or more directories.\n\n  FileUtils.rmdir 'somedir'\n  FileUtils.rmdir %w(somedir anydir otherdir)\n  # Does not really remove directory; outputs message.\n  FileUtils.rmdir 'somedir', :verbose => true, :noop => true","name":"rmdir","namespace":"FileUtils","path":"FileUtils#rmdir","type":"module_function","visibility":"private"},"FileUtils#symbolic_modes_to_i":{"description":":nodoc:","name":"symbolic_modes_to_i","namespace":"FileUtils","path":"FileUtils#symbolic_modes_to_i","type":"module_function","visibility":"public"},"FileUtils#touch":{"description":"Options: noop verbose mtime nocreate\n\nUpdates modification time (mtime) and access time (atime) of file(s) in\n+list+.  Files are created if they don't exist.\n\n  FileUtils.touch 'timestamp'\n  FileUtils.touch Dir.glob('*.c');  system 'make'","name":"touch","namespace":"FileUtils","path":"FileUtils#touch","type":"module_function","visibility":"private"},"FileUtils#uptodate?":{"description":"Options: (none)\n\nReturns true if +new+ is newer than all +old_list+.\nNon-existent files are older than any file.\n\n  FileUtils.uptodate?('hello.o', %w(hello.c hello.h)) or \\\n      system 'make hello.o'","name":"uptodate?","namespace":"FileUtils","path":"FileUtils#uptodate?","type":"module_function","visibility":"private","return":[["Boolean"],""]},"FileUtils#user_mask":{"description":":nodoc:","name":"user_mask","namespace":"FileUtils","path":"FileUtils#user_mask","type":"module_function","visibility":"public"},"FileUtils.cd":{"description":"Options: verbose\n\nChanges the current directory to the directory +dir+.\n\nIf this method is called with block, resumes to the old\nworking directory after the block execution finished.\n\n  FileUtils.cd('/', :verbose => true)   # chdir and report it\n\n  FileUtils.cd('/') do  # chdir\n    [...]               # do something\n  end                   # return to original directory","name":"cd","namespace":"FileUtils","path":"FileUtils.cd","type":"module_function","visibility":"public"},"FileUtils.chdir":{"description":"Options: verbose\n\nChanges the current directory to the directory +dir+.\n\nIf this method is called with block, resumes to the old\nworking directory after the block execution finished.\n\n  FileUtils.cd('/', :verbose => true)   # chdir and report it\n\n  FileUtils.cd('/') do  # chdir\n    [...]               # do something\n  end                   # return to original directory","name":"chdir","namespace":"FileUtils","path":"FileUtils.chdir","type":"module_function","visibility":"public"},"FileUtils.chmod":{"description":"Options: noop verbose\n\nChanges permission bits on the named files (in +list+) to the bit pattern\nrepresented by +mode+.\n\n+mode+ is the symbolic and absolute mode can be used.\n\nAbsolute mode is\n  FileUtils.chmod 0755, 'somecommand'\n  FileUtils.chmod 0644, %w(my.rb your.rb his.rb her.rb)\n  FileUtils.chmod 0755, '/usr/bin/ruby', :verbose => true\n\nSymbolic mode is\n  FileUtils.chmod \"u=wrx,go=rx\", 'somecommand'\n  FileUtils.chmod \"u=wr,go=rr\", %w(my.rb your.rb his.rb her.rb)\n  FileUtils.chmod \"u=wrx,go=rx\", '/usr/bin/ruby', :verbose => true\n\n\"a\" :: is user, group, other mask.\n\"u\" :: is user's mask.\n\"g\" :: is group's mask.\n\"o\" :: is other's mask.\n\"w\" :: is write permission.\n\"r\" :: is read permission.\n\"x\" :: is execute permission.\n\"X\" ::\n  is execute permission for directories only, must be used in conjunction with \"+\"\n\"s\" :: is uid, gid.\n\"t\" :: is sticky bit.\n\"+\" :: is added to a class given the specified mode.\n\"-\" :: Is removed from a given class given mode.\n\"=\" :: Is the exact nature of the class will be given a specified mode.","name":"chmod","namespace":"FileUtils","path":"FileUtils.chmod","type":"module_function","visibility":"public"},"FileUtils.chmod_R":{"description":"Options: noop verbose force\n\nChanges permission bits on the named files (in +list+)\nto the bit pattern represented by +mode+.\n\n  FileUtils.chmod_R 0700, \"/tmp/app.#{$$}\"\n  FileUtils.chmod_R \"u=wrx\", \"/tmp/app.#{$$}\"","name":"chmod_R","namespace":"FileUtils","path":"FileUtils.chmod_R","type":"module_function","visibility":"public"},"FileUtils.chown":{"description":"Options: noop verbose\n\nChanges owner and group on the named files (in +list+)\nto the user +user+ and the group +group+.  +user+ and +group+\nmay be an ID (Integer/String) or a name (String).\nIf +user+ or +group+ is nil, this method does not change\nthe attribute.\n\n  FileUtils.chown 'root', 'staff', '/usr/local/bin/ruby'\n  FileUtils.chown nil, 'bin', Dir.glob('/usr/bin/*'), :verbose => true","name":"chown","namespace":"FileUtils","path":"FileUtils.chown","type":"module_function","visibility":"public"},"FileUtils.chown_R":{"description":"Options: noop verbose force\n\nChanges owner and group on the named files (in +list+)\nto the user +user+ and the group +group+ recursively.\n+user+ and +group+ may be an ID (Integer/String) or\na name (String).  If +user+ or +group+ is nil, this\nmethod does not change the attribute.\n\n  FileUtils.chown_R 'www', 'www', '/var/www/htdocs'\n  FileUtils.chown_R 'cvs', 'cvs', '/var/cvs', :verbose => true","name":"chown_R","namespace":"FileUtils","path":"FileUtils.chown_R","type":"module_function","visibility":"public"},"FileUtils.cmp":{"description":"Returns true if the contents of a file A and a file B are identical.\n\n  FileUtils.compare_file('somefile', 'somefile')  #=> true\n  FileUtils.compare_file('/bin/cp', '/bin/mv')    #=> maybe false","name":"cmp","namespace":"FileUtils","path":"FileUtils.cmp","type":"module_function","visibility":"public"},"FileUtils.collect_method":{"description":"Returns an Array of method names which have the option +opt+.\n\n  p FileUtils.collect_method(:preserve) #=> [\"cp\", \"cp_r\", \"copy\", \"install\"]","name":"collect_method","namespace":"FileUtils","path":"FileUtils.collect_method","type":"module_function","visibility":"private"},"FileUtils.commands":{"description":"Returns an Array of method names which have any options.\n\n  p FileUtils.commands  #=> [\"chmod\", \"cp\", \"cp_r\", \"install\", ...]","name":"commands","namespace":"FileUtils","path":"FileUtils.commands","type":"module_function","visibility":"private"},"FileUtils.compare_file":{"description":"Returns true if the contents of a file A and a file B are identical.\n\n  FileUtils.compare_file('somefile', 'somefile')  #=> true\n  FileUtils.compare_file('/bin/cp', '/bin/mv')    #=> maybe false","name":"compare_file","namespace":"FileUtils","path":"FileUtils.compare_file","type":"module_function","visibility":"public"},"FileUtils.compare_stream":{"description":"Returns true if the contents of a stream +a+ and +b+ are identical.","name":"compare_stream","namespace":"FileUtils","path":"FileUtils.compare_stream","type":"module_function","visibility":"public"},"FileUtils.copy":{"description":"Options: preserve noop verbose\n\nCopies a file content +src+ to +dest+.  If +dest+ is a directory,\ncopies +src+ to +dest/src+.\n\nIf +src+ is a list of files, then +dest+ must be a directory.\n\n  FileUtils.cp 'eval.c', 'eval.c.org'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6', :verbose => true\n  FileUtils.cp 'symlink', 'dest'   # copy content, \"dest\" is not a symlink","name":"copy","namespace":"FileUtils","path":"FileUtils.copy","type":"module_function","visibility":"public"},"FileUtils.copy_entry":{"description":"Copies a file system entry +src+ to +dest+.\nIf +src+ is a directory, this method copies its contents recursively.\nThis method preserves file types, c.f. symlink, directory...\n(FIFO, device files and etc. are not supported yet)\n\nBoth of +src+ and +dest+ must be a path name.\n+src+ must exist, +dest+ must not exist.\n\nIf +preserve+ is true, this method preserves owner, group, and\nmodified time.  Permissions are copied regardless +preserve+.\n\nIf +dereference_root+ is true, this method dereference tree root.\n\nIf +remove_destination+ is true, this method removes each destination file before copy.","name":"copy_entry","namespace":"FileUtils","path":"FileUtils.copy_entry","type":"module_function","visibility":"public"},"FileUtils.copy_file":{"description":"Copies file contents of +src+ to +dest+.\nBoth of +src+ and +dest+ must be a path name.","name":"copy_file","namespace":"FileUtils","path":"FileUtils.copy_file","type":"module_function","visibility":"public"},"FileUtils.copy_stream":{"description":"Copies stream +src+ to +dest+.\n+src+ must respond to #read(n) and\n+dest+ must respond to #write(str).","name":"copy_stream","namespace":"FileUtils","path":"FileUtils.copy_stream","type":"module_function","visibility":"public"},"FileUtils.cp":{"description":"Options: preserve noop verbose\n\nCopies a file content +src+ to +dest+.  If +dest+ is a directory,\ncopies +src+ to +dest/src+.\n\nIf +src+ is a list of files, then +dest+ must be a directory.\n\n  FileUtils.cp 'eval.c', 'eval.c.org'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6'\n  FileUtils.cp %w(cgi.rb complex.rb date.rb), '/usr/lib/ruby/1.6', :verbose => true\n  FileUtils.cp 'symlink', 'dest'   # copy content, \"dest\" is not a symlink","name":"cp","namespace":"FileUtils","path":"FileUtils.cp","type":"module_function","visibility":"public"},"FileUtils.cp_r":{"description":"Options: preserve noop verbose dereference_root remove_destination\n\nCopies +src+ to +dest+. If +src+ is a directory, this method copies\nall its contents recursively. If +dest+ is a directory, copies\n+src+ to +dest/src+.\n\n+src+ can be a list of files.\n\n  # Installing Ruby library \"mylib\" under the site_ruby\n  FileUtils.rm_r site_ruby + '/mylib', :force\n  FileUtils.cp_r 'lib/', site_ruby + '/mylib'\n\n  # Examples of copying several files to target directory.\n  FileUtils.cp_r %w(mail.rb field.rb debug/), site_ruby + '/tmail'\n  FileUtils.cp_r Dir.glob('*.rb'), '/home/aamine/lib/ruby', :noop => true, :verbose => true\n\n  # If you want to copy all contents of a directory instead of the\n  # directory itself, c.f. src/x -> dest/x, src/y -> dest/y,\n  # use following code.\n  FileUtils.cp_r 'src/.', 'dest'     # cp_r('src', 'dest') makes dest/src,\n                                     # but this doesn't.","name":"cp_r","namespace":"FileUtils","path":"FileUtils.cp_r","type":"module_function","visibility":"public"},"FileUtils.getwd":{"description":"Options: (none)\n\nReturns the name of the current directory.","name":"getwd","namespace":"FileUtils","path":"FileUtils.getwd","type":"module_function","visibility":"public"},"FileUtils.have_option?":{"description":"Returns true if the method +mid+ have an option +opt+.\n\n  p FileUtils.have_option?(:cp, :noop)     #=> true\n  p FileUtils.have_option?(:rm, :force)    #=> true\n  p FileUtils.have_option?(:rm, :preserve) #=> false","name":"have_option?","namespace":"FileUtils","path":"FileUtils.have_option?","type":"module_function","visibility":"private","return":[["Boolean"],""]},"FileUtils.identical?":{"description":"Returns true if the contents of a file A and a file B are identical.\n\n  FileUtils.compare_file('somefile', 'somefile')  #=> true\n  FileUtils.compare_file('/bin/cp', '/bin/mv')    #=> maybe false","name":"identical?","namespace":"FileUtils","path":"FileUtils.identical?","type":"module_function","visibility":"public"},"FileUtils.install":{"description":"Options: mode preserve noop verbose\n\nIf +src+ is not same as +dest+, copies it and changes the permission\nmode to +mode+.  If +dest+ is a directory, destination is +dest+/+src+.\nThis method removes destination before copy.\n\n  FileUtils.install 'ruby', '/usr/local/bin/ruby', :mode => 0755, :verbose => true\n  FileUtils.install 'lib.rb', '/usr/local/lib/ruby/site_ruby', :verbose => true","name":"install","namespace":"FileUtils","path":"FileUtils.install","type":"module_function","visibility":"public"},"FileUtils.link":{"description":"Options: force noop verbose\n\n<b><tt>ln(old, new, options = {})</tt></b>\n\nCreates a hard link +new+ which points to +old+.\nIf +new+ already exists and it is a directory, creates a link +new/old+.\nIf +new+ already exists and it is not a directory, raises Errno::EEXIST.\nBut if :force option is set, overwrite +new+.\n\n  FileUtils.ln 'gcc', 'cc', :verbose => true\n  FileUtils.ln '/usr/bin/emacs21', '/usr/bin/emacs'\n\n<b><tt>ln(list, destdir, options = {})</tt></b>\n\nCreates several hard links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  include FileUtils\n  cd '/sbin'\n  FileUtils.ln %w(cp mv mkdir), '/bin'   # Now /sbin/cp and /bin/cp are linked.","name":"link","namespace":"FileUtils","path":"FileUtils.link","type":"module_function","visibility":"public"},"FileUtils.ln":{"description":"Options: force noop verbose\n\n<b><tt>ln(old, new, options = {})</tt></b>\n\nCreates a hard link +new+ which points to +old+.\nIf +new+ already exists and it is a directory, creates a link +new/old+.\nIf +new+ already exists and it is not a directory, raises Errno::EEXIST.\nBut if :force option is set, overwrite +new+.\n\n  FileUtils.ln 'gcc', 'cc', :verbose => true\n  FileUtils.ln '/usr/bin/emacs21', '/usr/bin/emacs'\n\n<b><tt>ln(list, destdir, options = {})</tt></b>\n\nCreates several hard links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  include FileUtils\n  cd '/sbin'\n  FileUtils.ln %w(cp mv mkdir), '/bin'   # Now /sbin/cp and /bin/cp are linked.","name":"ln","namespace":"FileUtils","path":"FileUtils.ln","type":"module_function","visibility":"public"},"FileUtils.ln_s":{"description":"Options: force noop verbose\n\n<b><tt>ln_s(old, new, options = {})</tt></b>\n\nCreates a symbolic link +new+ which points to +old+.  If +new+ already\nexists and it is a directory, creates a symbolic link +new/old+.  If +new+\nalready exists and it is not a directory, raises Errno::EEXIST.  But if\n:force option is set, overwrite +new+.\n\n  FileUtils.ln_s '/usr/bin/ruby', '/usr/local/bin/ruby'\n  FileUtils.ln_s 'verylongsourcefilename.c', 'c', :force => true\n\n<b><tt>ln_s(list, destdir, options = {})</tt></b>\n\nCreates several symbolic links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\nIf +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  FileUtils.ln_s Dir.glob('bin/*.rb'), '/home/aamine/bin'","name":"ln_s","namespace":"FileUtils","path":"FileUtils.ln_s","type":"module_function","visibility":"public"},"FileUtils.ln_sf":{"description":"Options: noop verbose\n\nSame as\n  #ln_s(src, dest, :force => true)","name":"ln_sf","namespace":"FileUtils","path":"FileUtils.ln_sf","type":"module_function","visibility":"public"},"FileUtils.makedirs":{"description":"Options: mode noop verbose\n\nCreates a directory and all its parent directories.\nFor example,\n\n  FileUtils.mkdir_p '/usr/local/lib/ruby'\n\ncauses to make following directories, if it does not exist.\n    * /usr\n    * /usr/local\n    * /usr/local/lib\n    * /usr/local/lib/ruby\n\nYou can pass several directories at a time in a list.","name":"makedirs","namespace":"FileUtils","path":"FileUtils.makedirs","type":"module_function","visibility":"public"},"FileUtils.mkdir":{"description":"Options: mode noop verbose\n\nCreates one or more directories.\n\n  FileUtils.mkdir 'test'\n  FileUtils.mkdir %w( tmp data )\n  FileUtils.mkdir 'notexist', :noop => true  # Does not really create.\n  FileUtils.mkdir 'tmp', :mode => 0700","name":"mkdir","namespace":"FileUtils","path":"FileUtils.mkdir","type":"module_function","visibility":"public"},"FileUtils.mkdir_p":{"description":"Options: mode noop verbose\n\nCreates a directory and all its parent directories.\nFor example,\n\n  FileUtils.mkdir_p '/usr/local/lib/ruby'\n\ncauses to make following directories, if it does not exist.\n    * /usr\n    * /usr/local\n    * /usr/local/lib\n    * /usr/local/lib/ruby\n\nYou can pass several directories at a time in a list.","name":"mkdir_p","namespace":"FileUtils","path":"FileUtils.mkdir_p","type":"module_function","visibility":"public"},"FileUtils.mkpath":{"description":"Options: mode noop verbose\n\nCreates a directory and all its parent directories.\nFor example,\n\n  FileUtils.mkdir_p '/usr/local/lib/ruby'\n\ncauses to make following directories, if it does not exist.\n    * /usr\n    * /usr/local\n    * /usr/local/lib\n    * /usr/local/lib/ruby\n\nYou can pass several directories at a time in a list.","name":"mkpath","namespace":"FileUtils","path":"FileUtils.mkpath","type":"module_function","visibility":"public"},"FileUtils.move":{"description":"Options: force noop verbose\n\nMoves file(s) +src+ to +dest+.  If +file+ and +dest+ exist on the different\ndisk partition, the file is copied then the original file is removed.\n\n  FileUtils.mv 'badname.rb', 'goodname.rb'\n  FileUtils.mv 'stuff.rb', '/notexist/lib/ruby', :force => true  # no error\n\n  FileUtils.mv %w(junk.txt dust.txt), '/home/aamine/.trash/'\n  FileUtils.mv Dir.glob('test*.rb'), 'test', :noop => true, :verbose => true","name":"move","namespace":"FileUtils","path":"FileUtils.move","type":"module_function","visibility":"public"},"FileUtils.mv":{"description":"Options: force noop verbose\n\nMoves file(s) +src+ to +dest+.  If +file+ and +dest+ exist on the different\ndisk partition, the file is copied then the original file is removed.\n\n  FileUtils.mv 'badname.rb', 'goodname.rb'\n  FileUtils.mv 'stuff.rb', '/notexist/lib/ruby', :force => true  # no error\n\n  FileUtils.mv %w(junk.txt dust.txt), '/home/aamine/.trash/'\n  FileUtils.mv Dir.glob('test*.rb'), 'test', :noop => true, :verbose => true","name":"mv","namespace":"FileUtils","path":"FileUtils.mv","type":"module_function","visibility":"public"},"FileUtils.options":{"description":"Returns an Array of option names.\n\n  p FileUtils.options  #=> [\"noop\", \"force\", \"verbose\", \"preserve\", \"mode\"]","name":"options","namespace":"FileUtils","path":"FileUtils.options","type":"module_function","visibility":"private"},"FileUtils.options_of":{"description":"Returns an Array of option names of the method +mid+.\n\n  p FileUtils.options_of(:rm)  #=> [\"noop\", \"verbose\", \"force\"]","name":"options_of","namespace":"FileUtils","path":"FileUtils.options_of","type":"module_function","visibility":"private"},"FileUtils.private_module_function":{"description":":nodoc:","name":"private_module_function","namespace":"FileUtils","path":"FileUtils.private_module_function","type":"module_function","visibility":"public"},"FileUtils.pwd":{"description":"Options: (none)\n\nReturns the name of the current directory.","name":"pwd","namespace":"FileUtils","path":"FileUtils.pwd","type":"module_function","visibility":"public"},"FileUtils.remove":{"description":"Options: force noop verbose\n\nRemove file(s) specified in +list+.  This method cannot remove directories.\nAll StandardErrors are ignored when the :force option is set.\n\n  FileUtils.rm %w( junk.txt dust.txt )\n  FileUtils.rm Dir.glob('*.so')\n  FileUtils.rm 'NotExistFile', :force => true   # never raises exception","name":"remove","namespace":"FileUtils","path":"FileUtils.remove","type":"module_function","visibility":"public"},"FileUtils.remove_dir":{"description":"Removes a directory +dir+ and its contents recursively.\nThis method ignores StandardError if +force+ is true.","name":"remove_dir","namespace":"FileUtils","path":"FileUtils.remove_dir","type":"module_function","visibility":"public"},"FileUtils.remove_entry":{"description":"This method removes a file system entry +path+.\n+path+ might be a regular file, a directory, or something.\nIf +path+ is a directory, remove it recursively.\n\nSee also #remove_entry_secure.","name":"remove_entry","namespace":"FileUtils","path":"FileUtils.remove_entry","type":"module_function","visibility":"public"},"FileUtils.remove_entry_secure":{"description":"This method removes a file system entry +path+.  +path+ shall be a\nregular file, a directory, or something.  If +path+ is a directory,\nremove it recursively.  This method is required to avoid TOCTTOU\n(time-of-check-to-time-of-use) local security vulnerability of #rm_r.\n#rm_r causes security hole when:\n\n  * Parent directory is world writable (including /tmp).\n  * Removing directory tree includes world writable directory.\n  * The system has symbolic link.\n\nTo avoid this security hole, this method applies special preprocess.\nIf +path+ is a directory, this method chown(2) and chmod(2) all\nremoving directories.  This requires the current process is the\nowner of the removing whole directory tree, or is the super user (root).\n\nWARNING: You must ensure that *ALL* parent directories cannot be\nmoved by other untrusted users.  For example, parent directories\nshould not be owned by untrusted users, and should not be world\nwritable except when the sticky bit set.\n\nWARNING: Only the owner of the removing directory tree, or Unix super\nuser (root) should invoke this method.  Otherwise this method does not\nwork.\n\nFor details of this security vulnerability, see Perl's case:\n\n  http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2005-0448\n  http://www.cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2004-0452\n\nFor fileutils.rb, this vulnerability is reported in [ruby-dev:26100].","name":"remove_entry_secure","namespace":"FileUtils","path":"FileUtils.remove_entry_secure","type":"module_function","visibility":"public"},"FileUtils.remove_file":{"description":"Removes a file +path+.\nThis method ignores StandardError if +force+ is true.","name":"remove_file","namespace":"FileUtils","path":"FileUtils.remove_file","type":"module_function","visibility":"public"},"FileUtils.rm":{"description":"Options: force noop verbose\n\nRemove file(s) specified in +list+.  This method cannot remove directories.\nAll StandardErrors are ignored when the :force option is set.\n\n  FileUtils.rm %w( junk.txt dust.txt )\n  FileUtils.rm Dir.glob('*.so')\n  FileUtils.rm 'NotExistFile', :force => true   # never raises exception","name":"rm","namespace":"FileUtils","path":"FileUtils.rm","type":"module_function","visibility":"public"},"FileUtils.rm_f":{"description":"Options: noop verbose\n\nEquivalent to\n\n  #rm(list, :force => true)","name":"rm_f","namespace":"FileUtils","path":"FileUtils.rm_f","type":"module_function","visibility":"public"},"FileUtils.rm_r":{"description":"Options: force noop verbose secure\n\nremove files +list+[0] +list+[1]... If +list+[n] is a directory,\nremoves its all contents recursively. This method ignores\nStandardError when :force option is set.\n\n  FileUtils.rm_r Dir.glob('/tmp/*')\n  FileUtils.rm_r '/', :force => true          #  :-)\n\nWARNING: This method causes local vulnerability\nif one of parent directories or removing directory tree are world\nwritable (including /tmp, whose permission is 1777), and the current\nprocess has strong privilege such as Unix super user (root), and the\nsystem has symbolic link.  For secure removing, read the documentation\nof #remove_entry_secure carefully, and set :secure option to true.\nDefault is :secure=>false.\n\nNOTE: This method calls #remove_entry_secure if :secure option is set.\nSee also #remove_entry_secure.","name":"rm_r","namespace":"FileUtils","path":"FileUtils.rm_r","type":"module_function","visibility":"public"},"FileUtils.rm_rf":{"description":"Options: noop verbose secure\n\nEquivalent to\n\n  #rm_r(list, :force => true)\n\nWARNING: This method causes local vulnerability.\nRead the documentation of #rm_r first.","name":"rm_rf","namespace":"FileUtils","path":"FileUtils.rm_rf","type":"module_function","visibility":"public"},"FileUtils.rmdir":{"description":"Options: parents, noop, verbose\n\nRemoves one or more directories.\n\n  FileUtils.rmdir 'somedir'\n  FileUtils.rmdir %w(somedir anydir otherdir)\n  # Does not really remove directory; outputs message.\n  FileUtils.rmdir 'somedir', :verbose => true, :noop => true","name":"rmdir","namespace":"FileUtils","path":"FileUtils.rmdir","type":"module_function","visibility":"public"},"FileUtils.rmtree":{"description":"Options: noop verbose secure\n\nEquivalent to\n\n  #rm_r(list, :force => true)\n\nWARNING: This method causes local vulnerability.\nRead the documentation of #rm_r first.","name":"rmtree","namespace":"FileUtils","path":"FileUtils.rmtree","type":"module_function","visibility":"public"},"FileUtils.safe_unlink":{"description":"Options: noop verbose\n\nEquivalent to\n\n  #rm(list, :force => true)","name":"safe_unlink","namespace":"FileUtils","path":"FileUtils.safe_unlink","type":"module_function","visibility":"public"},"FileUtils.symlink":{"description":"Options: force noop verbose\n\n<b><tt>ln_s(old, new, options = {})</tt></b>\n\nCreates a symbolic link +new+ which points to +old+.  If +new+ already\nexists and it is a directory, creates a symbolic link +new/old+.  If +new+\nalready exists and it is not a directory, raises Errno::EEXIST.  But if\n:force option is set, overwrite +new+.\n\n  FileUtils.ln_s '/usr/bin/ruby', '/usr/local/bin/ruby'\n  FileUtils.ln_s 'verylongsourcefilename.c', 'c', :force => true\n\n<b><tt>ln_s(list, destdir, options = {})</tt></b>\n\nCreates several symbolic links in a directory, with each one pointing to the\nitem in +list+.  If +destdir+ is not a directory, raises Errno::ENOTDIR.\n\nIf +destdir+ is not a directory, raises Errno::ENOTDIR.\n\n  FileUtils.ln_s Dir.glob('bin/*.rb'), '/home/aamine/bin'","name":"symlink","namespace":"FileUtils","path":"FileUtils.symlink","type":"module_function","visibility":"public"},"FileUtils.touch":{"description":"Options: noop verbose mtime nocreate\n\nUpdates modification time (mtime) and access time (atime) of file(s) in\n+list+.  Files are created if they don't exist.\n\n  FileUtils.touch 'timestamp'\n  FileUtils.touch Dir.glob('*.c');  system 'make'","name":"touch","namespace":"FileUtils","path":"FileUtils.touch","type":"module_function","visibility":"public"},"FileUtils.uptodate?":{"description":"Options: (none)\n\nReturns true if +new+ is newer than all +old_list+.\nNon-existent files are older than any file.\n\n  FileUtils.uptodate?('hello.o', %w(hello.c hello.h)) or \\\n      system 'make hello.o'","name":"uptodate?","namespace":"FileUtils","path":"FileUtils.uptodate?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"FileUtils::DryRun":{"description":"This module has all methods of FileUtils module, but never changes\nfiles/directories, with printing message before acting.\nThis equates to passing the <tt>:noop</tt> and <tt>:verbose</tt> flag\nto methods in FileUtils.","name":"DryRun","namespace":"FileUtils","path":"FileUtils::DryRun","type":"module","visibility":"public"},"FileUtils::Entry_":{"description":":nodoc: internal use only","name":"Entry_","namespace":"FileUtils","path":"FileUtils::Entry_","type":"class","visibility":"public"},"FileUtils::Entry_#blockdev?":{"description":"","name":"blockdev?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#blockdev?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#chardev?":{"description":"","name":"chardev?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#chardev?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#check_have_lchmod?":{"description":"","name":"check_have_lchmod?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#check_have_lchmod?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"FileUtils::Entry_#check_have_lchown?":{"description":"","name":"check_have_lchown?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#check_have_lchown?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"FileUtils::Entry_#chmod":{"description":"","name":"chmod","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#chmod","type":"instance_method","visibility":"public"},"FileUtils::Entry_#chown":{"description":"","name":"chown","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#chown","type":"instance_method","visibility":"public"},"FileUtils::Entry_#copy":{"description":"","name":"copy","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#copy","type":"instance_method","visibility":"public"},"FileUtils::Entry_#copy_file":{"description":"","name":"copy_file","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#copy_file","type":"instance_method","visibility":"public"},"FileUtils::Entry_#copy_metadata":{"description":"","name":"copy_metadata","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#copy_metadata","type":"instance_method","visibility":"public"},"FileUtils::Entry_#dereference?":{"description":"","name":"dereference?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#dereference?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#descendant_directory?":{"description":"","name":"descendant_directory?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#descendant_directory?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"FileUtils::Entry_#directory?":{"description":"","name":"directory?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#directory?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#door?":{"description":"","name":"door?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#door?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#entries":{"description":"","name":"entries","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#entries","type":"instance_method","visibility":"public"},"FileUtils::Entry_#exist?":{"description":"","name":"exist?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#exist?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#file?":{"description":"","name":"file?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#file?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#have_lchmod?":{"description":"","name":"have_lchmod?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#have_lchmod?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"FileUtils::Entry_#have_lchown?":{"description":"","name":"have_lchown?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#have_lchown?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"FileUtils::Entry_#initialize":{"description":"","name":"initialize","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#initialize","type":"instance_method","visibility":"public","return":[["Entry_"],"a new instance of Entry_"]},"FileUtils::Entry_#inspect":{"description":"","name":"inspect","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#inspect","type":"instance_method","visibility":"public"},"FileUtils::Entry_#join":{"description":"","name":"join","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#join","type":"instance_method","visibility":"private"},"FileUtils::Entry_#lstat":{"description":"","name":"lstat","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#lstat","type":"instance_method","visibility":"public"},"FileUtils::Entry_#lstat!":{"description":"","name":"lstat!","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#lstat!","type":"instance_method","visibility":"public"},"FileUtils::Entry_#path":{"description":"","name":"path","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#path","type":"instance_method","visibility":"public"},"FileUtils::Entry_#pipe?":{"description":"","name":"pipe?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#pipe?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#platform_support":{"description":"","name":"platform_support","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#platform_support","type":"instance_method","visibility":"public"},"FileUtils::Entry_#postorder_traverse":{"description":"","name":"postorder_traverse","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#postorder_traverse","type":"instance_method","visibility":"public"},"FileUtils::Entry_#prefix":{"description":"","name":"prefix","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#prefix","type":"instance_method","visibility":"public"},"FileUtils::Entry_#preorder_traverse":{"description":"","name":"traverse","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#traverse","type":"instance_method","visibility":"public"},"FileUtils::Entry_#traverse":{"description":"","name":"traverse","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#traverse","type":"instance_method","visibility":"public"},"FileUtils::Entry_#rel":{"description":"","name":"rel","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#rel","type":"instance_method","visibility":"public"},"FileUtils::Entry_#remove":{"description":"","name":"remove","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#remove","type":"instance_method","visibility":"public"},"FileUtils::Entry_#remove_dir1":{"description":"","name":"remove_dir1","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#remove_dir1","type":"instance_method","visibility":"public"},"FileUtils::Entry_#remove_file":{"description":"","name":"remove_file","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#remove_file","type":"instance_method","visibility":"public"},"FileUtils::Entry_#socket?":{"description":"","name":"socket?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#socket?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#stat":{"description":"","name":"stat","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#stat","type":"instance_method","visibility":"public"},"FileUtils::Entry_#stat!":{"description":"","name":"stat!","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#stat!","type":"instance_method","visibility":"public"},"FileUtils::Entry_#symlink?":{"description":"","name":"symlink?","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#symlink?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"FileUtils::Entry_#wrap_traverse":{"description":"","name":"wrap_traverse","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_#wrap_traverse","type":"instance_method","visibility":"public"},"FileUtils::Entry_::DIRECTORY_TERM":{"description":"","name":"DIRECTORY_TERM","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_::DIRECTORY_TERM","type":"constant","return":["String",""],"visibility":"private"},"FileUtils::Entry_::SYSCASE":{"description":"","name":"SYSCASE","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_::SYSCASE","type":"constant","return":["String",""],"visibility":"private"},"FileUtils::Entry_::S_IF_DOOR":{"description":"","name":"S_IF_DOOR","namespace":"FileUtils::Entry_","path":"FileUtils::Entry_::S_IF_DOOR","type":"constant","return":["Fixnum",""],"visibility":"public"},"FileUtils::LOW_METHODS":{"description":"","name":"LOW_METHODS","namespace":"FileUtils","path":"FileUtils::LOW_METHODS","type":"constant","return":["Array",""],"visibility":"private"},"FileUtils::LowMethods":{"description":"","name":"LowMethods","namespace":"FileUtils","path":"FileUtils::LowMethods","type":"module","visibility":"public"},"FileUtils::METHODS":{"description":"","name":"METHODS","namespace":"FileUtils","path":"FileUtils::METHODS","type":"constant","return":["Array",""],"visibility":"private"},"FileUtils::NoWrite":{"description":"This module has all methods of FileUtils module, but never changes\nfiles/directories.  This equates to passing the <tt>:noop</tt> flag\nto methods in FileUtils.","name":"NoWrite","namespace":"FileUtils","path":"FileUtils::NoWrite","type":"module","visibility":"public"},"FileUtils::OPT_TABLE":{"description":"This hash table holds command options.","name":"OPT_TABLE","namespace":"FileUtils","path":"FileUtils::OPT_TABLE","type":"constant","return":["Hash",""],"visibility":"public"},"FileUtils::StreamUtils_":{"description":"","name":"StreamUtils_","namespace":"FileUtils","path":"FileUtils::StreamUtils_","type":"module","visibility":"public"},"FileUtils::StreamUtils_#fu_blksize":{"description":"","name":"fu_blksize","namespace":"FileUtils::StreamUtils_","path":"FileUtils::StreamUtils_#fu_blksize","type":"module_function","visibility":"private"},"FileUtils::StreamUtils_#fu_copy_stream0":{"description":":nodoc:","name":"fu_copy_stream0","namespace":"FileUtils::StreamUtils_","path":"FileUtils::StreamUtils_#fu_copy_stream0","type":"module_function","visibility":"private"},"FileUtils::StreamUtils_#fu_default_blksize":{"description":"","name":"fu_default_blksize","namespace":"FileUtils::StreamUtils_","path":"FileUtils::StreamUtils_#fu_default_blksize","type":"module_function","visibility":"private"},"FileUtils::StreamUtils_#fu_stream_blksize":{"description":"","name":"fu_stream_blksize","namespace":"FileUtils::StreamUtils_","path":"FileUtils::StreamUtils_#fu_stream_blksize","type":"module_function","visibility":"private"},"FileUtils::StreamUtils_#fu_windows?":{"description":"","name":"fu_windows?","namespace":"FileUtils::StreamUtils_","path":"FileUtils::StreamUtils_#fu_windows?","type":"module_function","visibility":"private","return":[["Boolean"],""]},"FileUtils::Verbose":{"description":"This module has all methods of FileUtils module, but it outputs messages\nbefore acting.  This equates to passing the <tt>:verbose</tt> flag to\nmethods in FileUtils.","name":"Verbose","namespace":"FileUtils","path":"FileUtils::Verbose","type":"module","visibility":"public"},"Find":{"description":"The +Find+ module supports the top-down traversal of a set of file paths.\n\nFor example, to total the size of all files under your home directory,\nignoring anything in a \"dot\" directory (e.g. $HOME/.ssh):\n\n  require 'find'\n\n  total_size = 0\n\n  Find.find(ENV[\"HOME\"]) do |path|\n    if FileTest.directory?(path)\n      if File.basename(path)[0] == ?.\n        Find.prune       # Don't look any further into this directory.\n      else\n        next\n      end\n    else\n      total_size += FileTest.size(path)\n    end\n  end","name":"Find","namespace":"","path":"Find","type":"module","visibility":"public"},"Find#find":{"description":"Calls the associated block with the name of every file and directory listed\nas arguments, then recursively on their subdirectories, and so on.\n\nReturns an enumerator if no block is given.\n\nSee the +Find+ module documentation for an example.","name":"find","namespace":"Find","path":"Find#find","type":"module_function","visibility":"private"},"Find#prune":{"description":"Skips the current file or directory, restarting the loop with the next\nentry. If the current file is a directory, that directory will not be\nrecursively entered. Meaningful only within the block associated with\nFind::find.\n\nSee the +Find+ module documentation for an example.","name":"prune","namespace":"Find","path":"Find#prune","type":"module_function","visibility":"private"},"Find.find":{"description":"Calls the associated block with the name of every file and directory listed\nas arguments, then recursively on their subdirectories, and so on.\n\nReturns an enumerator if no block is given.\n\nSee the +Find+ module documentation for an example.","name":"find","namespace":"Find","path":"Find.find","type":"module_function","visibility":"public"},"Find.prune":{"description":"Skips the current file or directory, restarting the loop with the next\nentry. If the current file is a directory, that directory will not be\nrecursively entered. Meaningful only within the block associated with\nFind::find.\n\nSee the +Find+ module documentation for an example.","name":"prune","namespace":"Find","path":"Find.prune","type":"module_function","visibility":"public"},"Forwardable":{"description":"The Forwardable module provides delegation of specified\nmethods to a designated object, using the methods #def_delegator\nand #def_delegators.\n\nFor example, say you have a class RecordCollection which\ncontains an array <tt>@records</tt>.  You could provide the lookup method\n#record_number(), which simply calls #[] on the <tt>@records</tt>\narray, like this:\n\n  require 'forwardable'\n\n  class RecordCollection\n    attr_accessor :records\n    extend Forwardable\n    def_delegator :@records, :[], :record_number\n  end\n\nWe can use the lookup method like so:\n\n  r = RecordCollection.new\n  r.records = [4,5,6]\n  r.record_number(0)  # => 4\n\nFurther, if you wish to provide the methods #size, #<<, and #map,\nall of which delegate to @records, this is how you can do it:\n\n  class RecordCollection # re-open RecordCollection class\n    def_delegators :@records, :size, :<<, :map\n  end\n\n  r = RecordCollection.new\n  r.records = [1,2,3]\n  r.record_number(0)   # => 1\n  r.size               # => 3\n  r << 4               # => [1, 2, 3, 4]\n  r.map { |x| x * 2 }  # => [2, 4, 6, 8]\n\nYou can even extend regular objects with Forwardable.\n\n  my_hash = Hash.new\n  my_hash.extend Forwardable              # prepare object for delegation\n  my_hash.def_delegator \"STDOUT\", \"puts\"  # add delegation for STDOUT.puts()\n  my_hash.puts \"Howdy!\"\n\n== Another example\n\nWe want to rely on what has come before obviously, but with delegation we can\ntake just the methods we need and even rename them as appropriate.  In many\ncases this is preferable to inheritance, which gives us the entire old\ninterface, even if much of it isn't needed.\n\n  class Queue\n    extend Forwardable\n\n    def initialize\n      @q = [ ]    # prepare delegate object\n    end\n\n    # setup preferred interface, enq() and deq()...\n    def_delegator :@q, :push, :enq\n    def_delegator :@q, :shift, :deq\n\n    # support some general Array methods that fit Queues well\n    def_delegators :@q, :clear, :first, :push, :shift, :size\n  end\n\n  q = Queue.new\n  q.enq 1, 2, 3, 4, 5\n  q.push 6\n\n  q.shift    # => 1\n  while q.size > 0\n    puts q.deq\n  end\n\n  q.enq \"Ruby\", \"Perl\", \"Python\"\n  puts q.first\n  q.clear\n  puts q.first\n\nThis should output:\n\n  2\n  3\n  4\n  5\n  6\n  Ruby\n  nil\n\n== Notes\n\nBe advised, RDoc will not detect delegated methods.\n\n+forwardable.rb+ provides single-method delegation via the def_delegator and\ndef_delegators methods. For full-class delegation via DelegateClass, see\n+delegate.rb+.","name":"Forwardable","namespace":"","path":"Forwardable","type":"module","visibility":"public"},"Forwardable#def_delegator":{"description":"Define +method+ as delegator instance method with an optional\nalias name +ali+. Method calls to +ali+ will be delegated to\n+accessor.method+.\n\n  class MyQueue\n    extend Forwardable\n    attr_reader :queue\n    def initialize\n      @queue = []\n    end\n\n    def_delegator :@queue, :push, :mypush\n  end\n\n  q = MyQueue.new\n  q.mypush 42\n  q.queue    #=> [42]\n  q.push 23  #=> NoMethodError","name":"def_delegator","namespace":"Forwardable","path":"Forwardable#def_delegator","type":"module_function","visibility":"public"},"Forwardable#def_delegators":{"description":"Shortcut for defining multiple delegator methods, but with no\nprovision for using a different name.  The following two code\nsamples have the same effect:\n\n  def_delegators :@records, :size, :<<, :map\n\n  def_delegator :@records, :size\n  def_delegator :@records, :<<\n  def_delegator :@records, :map","name":"def_delegators","namespace":"Forwardable","path":"Forwardable#def_delegators","type":"module_function","visibility":"public"},"Forwardable#def_instance_delegator":{"description":"Define +method+ as delegator instance method with an optional\nalias name +ali+. Method calls to +ali+ will be delegated to\n+accessor.method+.\n\n  class MyQueue\n    extend Forwardable\n    attr_reader :queue\n    def initialize\n      @queue = []\n    end\n\n    def_delegator :@queue, :push, :mypush\n  end\n\n  q = MyQueue.new\n  q.mypush 42\n  q.queue    #=> [42]\n  q.push 23  #=> NoMethodError","name":"def_delegator","namespace":"Forwardable","path":"Forwardable#def_delegator","type":"module_function","visibility":"public"},"Forwardable#def_instance_delegators":{"description":"Shortcut for defining multiple delegator methods, but with no\nprovision for using a different name.  The following two code\nsamples have the same effect:\n\n  def_delegators :@records, :size, :<<, :map\n\n  def_delegator :@records, :size\n  def_delegator :@records, :<<\n  def_delegator :@records, :map","name":"def_delegators","namespace":"Forwardable","path":"Forwardable#def_delegators","type":"module_function","visibility":"public"},"Forwardable#delegate":{"description":"Takes a hash as its argument.  The key is a symbol or an array of\nsymbols.  These symbols correspond to method names.  The value is\nthe accessor to which the methods will be delegated.\n\n:call-seq:\n   delegate method => accessor\n   delegate [method, method, ...] => accessor","name":"delegate","namespace":"Forwardable","path":"Forwardable#delegate","type":"module_function","visibility":"public"},"Forwardable#instance_delegate":{"description":"Takes a hash as its argument.  The key is a symbol or an array of\nsymbols.  These symbols correspond to method names.  The value is\nthe accessor to which the methods will be delegated.\n\n:call-seq:\n   delegate method => accessor\n   delegate [method, method, ...] => accessor","name":"delegate","namespace":"Forwardable","path":"Forwardable#delegate","type":"module_function","visibility":"public"},"Forwardable.debug":{"description":"If true, <tt>__FILE__</tt> will remain in the backtrace in the event an\nException is raised.","name":"debug","namespace":"Forwardable","path":"Forwardable.debug","type":"module_function","visibility":"public"},"Forwardable.debug=":{"description":"If true, <tt>__FILE__</tt> will remain in the backtrace in the event an\nException is raised.","name":"debug=","namespace":"Forwardable","path":"Forwardable.debug=","type":"module_function","visibility":"public"},"Forwardable::FILE_REGEXP":{"description":"","name":"FILE_REGEXP","namespace":"Forwardable","path":"Forwardable::FILE_REGEXP","type":"constant","return":null,"visibility":"public"},"Forwardable::FORWARDABLE_VERSION":{"description":"Version of +forwardable.rb+","name":"FORWARDABLE_VERSION","namespace":"Forwardable","path":"Forwardable::FORWARDABLE_VERSION","type":"constant","return":null,"visibility":"public"},"SingleForwardable":{"description":"SingleForwardable can be used to setup delegation at the object level as well.\n\n   printer = String.new\n   printer.extend SingleForwardable        # prepare object for delegation\n   printer.def_delegator \"STDOUT\", \"puts\"  # add delegation for STDOUT.puts()\n   printer.puts \"Howdy!\"\n\nAlso, SingleForwardable can be used to set up delegation for a Class or Module.\n\n  class Implementation\n    def self.service\n      puts \"serviced!\"\n    end\n  end\n\n  module Facade\n    extend SingleForwardable\n    def_delegator :Implementation, :service\n  end\n\n  Facade.service #=> serviced!\n\nIf you want to use both Forwardable and SingleForwardable, you can\nuse methods def_instance_delegator and def_single_delegator, etc.","name":"SingleForwardable","namespace":"","path":"SingleForwardable","type":"module","visibility":"public"},"SingleForwardable#def_delegator":{"description":":call-seq:\n  def_single_delegator(accessor, method, new_name=method)\n\nDefines a method _method_ which delegates to _accessor_ (i.e. it calls\nthe method of the same name in _accessor_).  If _new_name_ is\nprovided, it is used as the name for the delegate method.","name":"def_delegator","namespace":"SingleForwardable","path":"SingleForwardable#def_delegator","type":"module_function","visibility":"public"},"SingleForwardable#def_delegators":{"description":"Shortcut for defining multiple delegator methods, but with no\nprovision for using a different name.  The following two code\nsamples have the same effect:\n\n  def_delegators :@records, :size, :<<, :map\n\n  def_delegator :@records, :size\n  def_delegator :@records, :<<\n  def_delegator :@records, :map","name":"def_delegators","namespace":"SingleForwardable","path":"SingleForwardable#def_delegators","type":"module_function","visibility":"public"},"SingleForwardable#def_single_delegator":{"description":":call-seq:\n  def_single_delegator(accessor, method, new_name=method)\n\nDefines a method _method_ which delegates to _accessor_ (i.e. it calls\nthe method of the same name in _accessor_).  If _new_name_ is\nprovided, it is used as the name for the delegate method.","name":"def_delegator","namespace":"SingleForwardable","path":"SingleForwardable#def_delegator","type":"module_function","visibility":"public"},"SingleForwardable#def_single_delegators":{"description":"Shortcut for defining multiple delegator methods, but with no\nprovision for using a different name.  The following two code\nsamples have the same effect:\n\n  def_delegators :@records, :size, :<<, :map\n\n  def_delegator :@records, :size\n  def_delegator :@records, :<<\n  def_delegator :@records, :map","name":"def_delegators","namespace":"SingleForwardable","path":"SingleForwardable#def_delegators","type":"module_function","visibility":"public"},"SingleForwardable#delegate":{"description":"Takes a hash as its argument.  The key is a symbol or an array of\nsymbols.  These symbols correspond to method names.  The value is\nthe accessor to which the methods will be delegated.\n\n:call-seq:\n   delegate method => accessor\n   delegate [method, method, ...] => accessor","name":"delegate","namespace":"SingleForwardable","path":"SingleForwardable#delegate","type":"module_function","visibility":"public"},"SingleForwardable#single_delegate":{"description":"Takes a hash as its argument.  The key is a symbol or an array of\nsymbols.  These symbols correspond to method names.  The value is\nthe accessor to which the methods will be delegated.\n\n:call-seq:\n   delegate method => accessor\n   delegate [method, method, ...] => accessor","name":"delegate","namespace":"SingleForwardable","path":"SingleForwardable#delegate","type":"module_function","visibility":"public"},"GetoptLong":{"description":"The GetoptLong class allows you to parse command line options similarly to\nthe GNU getopt_long() C library call. Note, however, that GetoptLong is a\npure Ruby implementation.\n\nGetoptLong allows for POSIX-style options like <tt>--file</tt> as well\nas single letter options like <tt>-f</tt>\n\nThe empty option <tt>--</tt> (two minus symbols) is used to end option\nprocessing. This can be particularly important if options have optional\narguments.\n\nHere is a simple example of usage:\n\n    require 'getoptlong'\n\n    opts = GetoptLong.new(\n      [ '--help', '-h', GetoptLong::NO_ARGUMENT ],\n      [ '--repeat', '-n', GetoptLong::REQUIRED_ARGUMENT ],\n      [ '--name', GetoptLong::OPTIONAL_ARGUMENT ]\n    )\n\n    dir = nil\n    name = nil\n    repetitions = 1\n    opts.each do |opt, arg|\n      case opt\n        when '--help'\n          puts <<-EOF\n    hello [OPTION] ... DIR\n\n    -h, --help:\n       show help\n\n    --repeat x, -n x:\n       repeat x times\n\n    --name [name]:\n       greet user by name, if name not supplied default is John\n\n    DIR: The directory in which to issue the greeting.\n          EOF\n        when '--repeat'\n          repetitions = arg.to_i\n        when '--name'\n          if arg == ''\n            name = 'John'\n          else\n            name = arg\n          end\n      end\n    end\n\n    if ARGV.length != 1\n      puts \"Missing dir argument (try --help)\"\n      exit 0\n    end\n\n    dir = ARGV.shift\n\n    Dir.chdir(dir)\n    for i in (1..repetitions)\n      print \"Hello\"\n      if name\n        print \", #{name}\"\n      end\n      puts\n    end\n\nExample command line:\n\n    hello -n 6 --name -- /tmp","name":"GetoptLong","namespace":"","path":"GetoptLong","type":"class","visibility":"public"},"GetoptLong#each":{"description":"Iterator version of `get'.\n\nThe block is called repeatedly with two arguments:\nThe first is the option name.\nThe second is the argument which followed it (if any).\nExample: ('--opt', 'value')\n\nThe option name is always converted to the first (preferred)\nname given in the original options to GetoptLong.new.","name":"each_option","namespace":"GetoptLong","path":"GetoptLong#each_option","type":"instance_method","visibility":"public"},"GetoptLong#each_option":{"description":"Iterator version of `get'.\n\nThe block is called repeatedly with two arguments:\nThe first is the option name.\nThe second is the argument which followed it (if any).\nExample: ('--opt', 'value')\n\nThe option name is always converted to the first (preferred)\nname given in the original options to GetoptLong.new.\n\n`each_option' is an alias of `each'.","name":"each_option","namespace":"GetoptLong","path":"GetoptLong#each_option","type":"instance_method","visibility":"public"},"GetoptLong#error":{"description":"Examine whether an option processing is failed.","name":"error?","namespace":"GetoptLong","path":"GetoptLong#error?","type":"instance_method","visibility":"public"},"GetoptLong#error?":{"description":"Examine whether an option processing is failed.\n\n`error?' is an alias of `error'.","name":"error?","namespace":"GetoptLong","path":"GetoptLong#error?","type":"instance_method","visibility":"public"},"GetoptLong#error_message":{"description":"Return the appropriate error message in POSIX-defined format.\nIf no error has occurred, returns nil.","name":"error_message","namespace":"GetoptLong","path":"GetoptLong#error_message","type":"instance_method","visibility":"public"},"GetoptLong#get":{"description":"Get next option name and its argument, as an Array of two elements.\n\nThe option name is always converted to the first (preferred)\nname given in the original options to GetoptLong.new.\n\nExample: ['--option', 'value']\n\nReturns nil if the processing is complete (as determined by\nSTATUS_TERMINATED).","name":"get_option","namespace":"GetoptLong","path":"GetoptLong#get_option","type":"instance_method","visibility":"public"},"GetoptLong#get_option":{"description":"Get next option name and its argument, as an Array of two elements.\n\nThe option name is always converted to the first (preferred)\nname given in the original options to GetoptLong.new.\n\nExample: ['--option', 'value']\n\nReturns nil if the processing is complete (as determined by\nSTATUS_TERMINATED).\n\n`get_option' is an alias of `get'.","name":"get_option","namespace":"GetoptLong","path":"GetoptLong#get_option","type":"instance_method","visibility":"public"},"GetoptLong#initialize":{"description":"Set up option processing.\n\nThe options to support are passed to new() as an array of arrays.\nEach sub-array contains any number of String option names which carry\nthe same meaning, and one of the following flags:\n\nGetoptLong::NO_ARGUMENT :: Option does not take an argument.\n\nGetoptLong::REQUIRED_ARGUMENT :: Option always takes an argument.\n\nGetoptLong::OPTIONAL_ARGUMENT :: Option may or may not take an argument.\n\nThe first option name is considered to be the preferred (canonical) name.\nOther than that, the elements of each sub-array can be in any order.","name":"initialize","namespace":"GetoptLong","path":"GetoptLong#initialize","type":"instance_method","visibility":"public","return":[["GetoptLong"],"a new instance of GetoptLong"]},"GetoptLong#ordering":{"description":"Return ordering.","name":"ordering","namespace":"GetoptLong","path":"GetoptLong#ordering","type":"instance_method","visibility":"public"},"GetoptLong#ordering=":{"description":"Set the handling of the ordering of options and arguments.\nA RuntimeError is raised if option processing has already started.\n\nThe supplied value must be a member of GetoptLong::ORDERINGS. It alters\nthe processing of options as follows:\n\n<b>REQUIRE_ORDER</b> :\n\nOptions are required to occur before non-options.\n\nProcessing of options ends as soon as a word is encountered that has not\nbeen preceded by an appropriate option flag.\n\nFor example, if -a and -b are options which do not take arguments,\nparsing command line arguments of '-a one -b two' would result in\n'one', '-b', 'two' being left in ARGV, and only ('-a', '') being\nprocessed as an option/arg pair.\n\nThis is the default ordering, if the environment variable\nPOSIXLY_CORRECT is set. (This is for compatibility with GNU getopt_long.)\n\n<b>PERMUTE</b> :\n\nOptions can occur anywhere in the command line parsed. This is the\ndefault behavior.\n\nEvery sequence of words which can be interpreted as an option (with or\nwithout argument) is treated as an option; non-option words are skipped.\n\nFor example, if -a does not require an argument and -b optionally takes\nan argument, parsing '-a one -b two three' would result in ('-a','') and\n('-b', 'two') being processed as option/arg pairs, and 'one','three'\nbeing left in ARGV.\n\nIf the ordering is set to PERMUTE but the environment variable\nPOSIXLY_CORRECT is set, REQUIRE_ORDER is used instead. This is for\ncompatibility with GNU getopt_long.\n\n<b>RETURN_IN_ORDER</b> :\n\nAll words on the command line are processed as options. Words not\npreceded by a short or long option flag are passed as arguments\nwith an option of '' (empty string).\n\nFor example, if -a requires an argument but -b does not, a command line\nof '-a one -b two three' would result in option/arg pairs of ('-a', 'one')\n('-b', ''), ('', 'two'), ('', 'three') being processed.","name":"ordering=","namespace":"GetoptLong","path":"GetoptLong#ordering=","type":"instance_method","visibility":"public"},"GetoptLong#quiet":{"description":"Return the flag of `quiet' mode.","name":"quiet?","namespace":"GetoptLong","path":"GetoptLong#quiet?","type":"instance_method","visibility":"public"},"GetoptLong#quiet?":{"description":"Return the flag of `quiet' mode.\n\n`quiet?' is an alias of `quiet'.","name":"quiet?","namespace":"GetoptLong","path":"GetoptLong#quiet?","type":"instance_method","visibility":"public"},"GetoptLong#quiet=":{"description":"Set/Unset `quiet' mode.","name":"quiet=","namespace":"GetoptLong","path":"GetoptLong#quiet=","type":"instance_method","visibility":"public"},"GetoptLong#set_error":{"description":"Set an error (a protected method).","name":"set_error","namespace":"GetoptLong","path":"GetoptLong#set_error","type":"instance_method","visibility":"protected"},"GetoptLong#set_options":{"description":"Set options. Takes the same argument as GetoptLong.new.\n\nRaises a RuntimeError if option processing has already started.","name":"set_options","namespace":"GetoptLong","path":"GetoptLong#set_options","type":"instance_method","visibility":"public"},"GetoptLong#terminate":{"description":"Explicitly terminate option processing.","name":"terminate","namespace":"GetoptLong","path":"GetoptLong#terminate","type":"instance_method","visibility":"public"},"GetoptLong#terminated?":{"description":"Returns true if option processing has terminated, false otherwise.","name":"terminated?","namespace":"GetoptLong","path":"GetoptLong#terminated?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"GetoptLong::ARGUMENT_FLAGS":{"description":"Argument flags.","name":"ARGUMENT_FLAGS","namespace":"GetoptLong","path":"GetoptLong::ARGUMENT_FLAGS","type":"constant","return":null,"visibility":"public"},"GetoptLong::AmbiguousOption":{"description":"","name":"AmbiguousOption","namespace":"GetoptLong","path":"GetoptLong::AmbiguousOption","type":"class","visibility":"public"},"GetoptLong::Error":{"description":"Error types.","name":"Error","namespace":"GetoptLong","path":"GetoptLong::Error","type":"class","visibility":"public"},"GetoptLong::InvalidOption":{"description":"","name":"InvalidOption","namespace":"GetoptLong","path":"GetoptLong::InvalidOption","type":"class","visibility":"public"},"GetoptLong::MissingArgument":{"description":"","name":"MissingArgument","namespace":"GetoptLong","path":"GetoptLong::MissingArgument","type":"class","visibility":"public"},"GetoptLong::NeedlessArgument":{"description":"","name":"NeedlessArgument","namespace":"GetoptLong","path":"GetoptLong::NeedlessArgument","type":"class","visibility":"public"},"GetoptLong::ORDERINGS":{"description":"Orderings.","name":"ORDERINGS","namespace":"GetoptLong","path":"GetoptLong::ORDERINGS","type":"constant","return":null,"visibility":"public"},"IPAddr":{"description":"IPAddr provides a set of methods to manipulate an IP address.  Both IPv4 and\nIPv6 are supported.\n\n== Example\n\n  require 'ipaddr'\n\n  ipaddr1 = IPAddr.new \"3ffe:505:2::1\"\n\n  p ipaddr1                   #=> #<IPAddr: IPv6:3ffe:0505:0002:0000:0000:0000:0000:0001/ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff>\n\n  p ipaddr1.to_s              #=> \"3ffe:505:2::1\"\n\n  ipaddr2 = ipaddr1.mask(48)  #=> #<IPAddr: IPv6:3ffe:0505:0002:0000:0000:0000:0000:0000/ffff:ffff:ffff:0000:0000:0000:0000:0000>\n\n  p ipaddr2.to_s              #=> \"3ffe:505:2::\"\n\n  ipaddr3 = IPAddr.new \"192.168.2.0/24\"\n\n  p ipaddr3                   #=> #<IPAddr: IPv4:192.168.2.0/255.255.255.0>","name":"IPAddr","namespace":"","path":"IPAddr","type":"class","visibility":"public"},"IPAddr#&":{"description":"Returns a new ipaddr built by bitwise AND.","name":"&","namespace":"IPAddr","path":"IPAddr#&","type":"instance_method","visibility":"public"},"IPAddr#<<":{"description":"Returns a new ipaddr built by bitwise left shift.","name":"<<","namespace":"IPAddr","path":"IPAddr#<<","type":"instance_method","visibility":"public"},"IPAddr#<=>":{"description":"Compares the ipaddr with another.","name":"<=>","namespace":"IPAddr","path":"IPAddr#<=>","type":"instance_method","visibility":"public"},"IPAddr#==":{"description":"Returns true if two ipaddrs are equal.","name":"==","namespace":"IPAddr","path":"IPAddr#==","type":"instance_method","visibility":"public"},"IPAddr#===":{"description":"Returns true if the given ipaddr is in the range.\n\ne.g.:\n  require 'ipaddr'\n  net1 = IPAddr.new(\"192.168.2.0/24\")\n  net2 = IPAddr.new(\"192.168.2.100\")\n  net3 = IPAddr.new(\"192.168.3.0\")\n  p net1.include?(net2)     #=> true\n  p net1.include?(net3)     #=> false","name":"===","namespace":"IPAddr","path":"IPAddr#===","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#>>":{"description":"Returns a new ipaddr built by bitwise right-shift.","name":">>","namespace":"IPAddr","path":"IPAddr#>>","type":"instance_method","visibility":"public"},"IPAddr#_reverse":{"description":"","name":"_reverse","namespace":"IPAddr","path":"IPAddr#_reverse","type":"instance_method","visibility":"private"},"IPAddr#_to_string":{"description":"","name":"_to_string","namespace":"IPAddr","path":"IPAddr#_to_string","type":"instance_method","visibility":"private"},"IPAddr#addr_mask":{"description":"","name":"addr_mask","namespace":"IPAddr","path":"IPAddr#addr_mask","type":"instance_method","visibility":"private"},"IPAddr#coerce_other":{"description":"","name":"coerce_other","namespace":"IPAddr","path":"IPAddr#coerce_other","type":"instance_method","visibility":"private"},"IPAddr#eql?":{"description":"Checks equality used by Hash.","name":"eql?","namespace":"IPAddr","path":"IPAddr#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#family":{"description":"Returns the address family of this IP address.","name":"family","namespace":"IPAddr","path":"IPAddr#family","type":"instance_method","visibility":"public"},"IPAddr#hash":{"description":"Returns a hash value used by Hash, Set, and Array classes","name":"hash","namespace":"IPAddr","path":"IPAddr#hash","type":"instance_method","visibility":"public"},"IPAddr#hton":{"description":"Returns a network byte ordered string form of the IP address.","name":"hton","namespace":"IPAddr","path":"IPAddr#hton","type":"instance_method","visibility":"public"},"IPAddr#in6_addr":{"description":"","name":"in6_addr","namespace":"IPAddr","path":"IPAddr#in6_addr","type":"instance_method","visibility":"private"},"IPAddr#in_addr":{"description":"","name":"in_addr","namespace":"IPAddr","path":"IPAddr#in_addr","type":"instance_method","visibility":"private"},"IPAddr#include?":{"description":"Returns true if the given ipaddr is in the range.\n\ne.g.:\n  require 'ipaddr'\n  net1 = IPAddr.new(\"192.168.2.0/24\")\n  net2 = IPAddr.new(\"192.168.2.100\")\n  net3 = IPAddr.new(\"192.168.3.0\")\n  p net1.include?(net2)     #=> true\n  p net1.include?(net3)     #=> false","name":"===","namespace":"IPAddr","path":"IPAddr#===","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#initialize":{"description":"Creates a new ipaddr object either from a human readable IP\naddress representation in string, or from a packed in_addr value\nfollowed by an address family.\n\nIn the former case, the following are the valid formats that will\nbe recognized: \"address\", \"address/prefixlen\" and \"address/mask\",\nwhere IPv6 address may be enclosed in square brackets (`[' and\n`]').  If a prefixlen or a mask is specified, it returns a masked\nIP address.  Although the address family is determined\nautomatically from a specified string, you can specify one\nexplicitly by the optional second argument.\n\nOtherwise an IP address is generated from a packed in_addr value\nand an address family.\n\nThe IPAddr class defines many methods and operators, and some of\nthose, such as &, |, include? and ==, accept a string, or a packed\nin_addr value instead of an IPAddr object.","name":"initialize","namespace":"IPAddr","path":"IPAddr#initialize","type":"instance_method","visibility":"private","return":[["IPAddr"],"a new instance of IPAddr"]},"IPAddr#inspect":{"description":"Returns a string containing a human-readable representation of the\nipaddr. (\"#<IPAddr: family:address/mask>\")","name":"inspect","namespace":"IPAddr","path":"IPAddr#inspect","type":"instance_method","visibility":"public"},"IPAddr#ip6_arpa":{"description":"Returns a string for DNS reverse lookup compatible with RFC3172.","name":"ip6_arpa","namespace":"IPAddr","path":"IPAddr#ip6_arpa","type":"instance_method","visibility":"public"},"IPAddr#ip6_int":{"description":"Returns a string for DNS reverse lookup compatible with RFC1886.","name":"ip6_int","namespace":"IPAddr","path":"IPAddr#ip6_int","type":"instance_method","visibility":"public"},"IPAddr#ipv4?":{"description":"Returns true if the ipaddr is an IPv4 address.","name":"ipv4?","namespace":"IPAddr","path":"IPAddr#ipv4?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#ipv4_compat":{"description":"Returns a new ipaddr built by converting the native IPv4 address\ninto an IPv4-compatible IPv6 address.","name":"ipv4_compat","namespace":"IPAddr","path":"IPAddr#ipv4_compat","type":"instance_method","visibility":"public"},"IPAddr#ipv4_compat?":{"description":"Returns true if the ipaddr is an IPv4-compatible IPv6 address.","name":"ipv4_compat?","namespace":"IPAddr","path":"IPAddr#ipv4_compat?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#ipv4_mapped":{"description":"Returns a new ipaddr built by converting the native IPv4 address\ninto an IPv4-mapped IPv6 address.","name":"ipv4_mapped","namespace":"IPAddr","path":"IPAddr#ipv4_mapped","type":"instance_method","visibility":"public"},"IPAddr#ipv4_mapped?":{"description":"Returns true if the ipaddr is an IPv4-mapped IPv6 address.","name":"ipv4_mapped?","namespace":"IPAddr","path":"IPAddr#ipv4_mapped?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#ipv6?":{"description":"Returns true if the ipaddr is an IPv6 address.","name":"ipv6?","namespace":"IPAddr","path":"IPAddr#ipv6?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IPAddr#mask":{"description":"Returns a new ipaddr built by masking IP address with the given\nprefixlen/netmask. (e.g. 8, 64, \"255.255.255.0\", etc.)","name":"mask","namespace":"IPAddr","path":"IPAddr#mask","type":"instance_method","visibility":"public"},"IPAddr#mask!":{"description":"Set current netmask to given mask.","name":"mask!","namespace":"IPAddr","path":"IPAddr#mask!","type":"instance_method","visibility":"protected"},"IPAddr#native":{"description":"Returns a new ipaddr built by converting the IPv6 address into a\nnative IPv4 address.  If the IP address is not an IPv4-mapped or\nIPv4-compatible IPv6 address, returns self.","name":"native","namespace":"IPAddr","path":"IPAddr#native","type":"instance_method","visibility":"public"},"IPAddr#reverse":{"description":"Returns a string for DNS reverse lookup.  It returns a string in\nRFC3172 form for an IPv6 address.","name":"reverse","namespace":"IPAddr","path":"IPAddr#reverse","type":"instance_method","visibility":"public"},"IPAddr#set":{"description":"Set +@addr+, the internal stored ip address, to given +addr+. The\nparameter +addr+ is validated using the first +family+ member,\nwhich is +Socket::AF_INET+ or +Socket::AF_INET6+.","name":"set","namespace":"IPAddr","path":"IPAddr#set","type":"instance_method","visibility":"protected"},"IPAddr#succ":{"description":"Returns the successor to the ipaddr.","name":"succ","namespace":"IPAddr","path":"IPAddr#succ","type":"instance_method","visibility":"public"},"IPAddr#to_i":{"description":"Returns the integer representation of the ipaddr.","name":"to_i","namespace":"IPAddr","path":"IPAddr#to_i","type":"instance_method","visibility":"public"},"IPAddr#to_range":{"description":"Creates a Range object for the network address.","name":"to_range","namespace":"IPAddr","path":"IPAddr#to_range","type":"instance_method","visibility":"public"},"IPAddr#to_s":{"description":"Returns a string containing the IP address representation.","name":"to_s","namespace":"IPAddr","path":"IPAddr#to_s","type":"instance_method","visibility":"public"},"IPAddr#to_string":{"description":"Returns a string containing the IP address representation in\ncanonical form.","name":"to_string","namespace":"IPAddr","path":"IPAddr#to_string","type":"instance_method","visibility":"public"},"IPAddr#|":{"description":"Returns a new ipaddr built by bitwise OR.","name":"|","namespace":"IPAddr","path":"IPAddr#|","type":"instance_method","visibility":"public"},"IPAddr#~":{"description":"Returns a new ipaddr built by bitwise negation.","name":"~","namespace":"IPAddr","path":"IPAddr#~","type":"instance_method","visibility":"public"},"IPAddr.new_ntoh":{"description":"Creates a new ipaddr containing the given network byte ordered\nstring form of an IP address.","name":"new_ntoh","namespace":"IPAddr","path":"IPAddr.new_ntoh","type":"class_method","visibility":"public"},"IPAddr.ntop":{"description":"Convert a network byte ordered string form of an IP address into\nhuman readable form.","name":"ntop","namespace":"IPAddr","path":"IPAddr.ntop","type":"class_method","visibility":"public"},"IPAddr::AddressFamilyError":{"description":"Raised when the address family is invalid such as an address with an\nunsupported family, an address with an inconsistent family, or an address\nwho's family cannot be determined.","name":"AddressFamilyError","namespace":"IPAddr","path":"IPAddr::AddressFamilyError","type":"class","visibility":"public"},"IPAddr::Error":{"description":"Generic IPAddr related error. Exceptions raised in this class should\ninherit from Error.","name":"Error","namespace":"IPAddr","path":"IPAddr::Error","type":"class","visibility":"public"},"IPAddr::IN4MASK":{"description":"32 bit mask for IPv4","name":"IN4MASK","namespace":"IPAddr","path":"IPAddr::IN4MASK","type":"constant","return":null,"visibility":"public"},"IPAddr::IN6FORMAT":{"description":"Format string for IPv6","name":"IN6FORMAT","namespace":"IPAddr","path":"IPAddr::IN6FORMAT","type":"constant","return":null,"visibility":"public"},"IPAddr::IN6MASK":{"description":"128 bit mask for IPv4","name":"IN6MASK","namespace":"IPAddr","path":"IPAddr::IN6MASK","type":"constant","return":null,"visibility":"public"},"IPAddr::InvalidAddressError":{"description":"Raised when the provided IP address is an invalid address.","name":"InvalidAddressError","namespace":"IPAddr","path":"IPAddr::InvalidAddressError","type":"class","visibility":"public"},"IPAddr::InvalidPrefixError":{"description":"Raised when the address is an invalid length.","name":"InvalidPrefixError","namespace":"IPAddr","path":"IPAddr::InvalidPrefixError","type":"class","visibility":"public"},"IPAddr::RE_IPV4ADDRLIKE":{"description":"Regexp _internally_ used for parsing IPv4 address.","name":"RE_IPV4ADDRLIKE","namespace":"IPAddr","path":"IPAddr::RE_IPV4ADDRLIKE","type":"constant","return":null,"visibility":"public"},"IPAddr::RE_IPV6ADDRLIKE_COMPRESSED":{"description":"Regexp _internally_ used for parsing IPv6 address.","name":"RE_IPV6ADDRLIKE_COMPRESSED","namespace":"IPAddr","path":"IPAddr::RE_IPV6ADDRLIKE_COMPRESSED","type":"constant","return":null,"visibility":"public"},"IPAddr::RE_IPV6ADDRLIKE_FULL":{"description":"Regexp _internally_ used for parsing IPv6 address.","name":"RE_IPV6ADDRLIKE_FULL","namespace":"IPAddr","path":"IPAddr::RE_IPV6ADDRLIKE_FULL","type":"constant","return":null,"visibility":"public"},"Socket":{"description":"Class +Socket+ provides access to the underlying operating system\nsocket implementations.  It can be used to provide more operating system\nspecific functionality than the protocol-specific socket classes.\n\nThe constants defined under Socket::Constants are also defined under\nSocket.  For example, Socket::AF_INET is usable as well as\nSocket::Constants::AF_INET.  See Socket::Constants for the list of\nconstants.\n\n=== What's a socket?\n\nSockets are endpoints of a bidirectional communication channel.\nSockets can communicate within a process, between processes on the same\nmachine or between different machines.  There are many types of socket:\nTCPSocket, UDPSocket or UNIXSocket for example.\n\nSockets have their own vocabulary:\n\n*domain:*\nThe family of protocols:\n*    Socket::PF_INET\n*    Socket::PF_INET6\n*    Socket::PF_UNIX\n*    etc.\n\n*type:*\nThe type of communications between the two endpoints, typically\n*    Socket::SOCK_STREAM\n*    Socket::SOCK_DGRAM.\n\n*protocol:*\nTypically _zero_.\nThis may be used to identify a variant of a protocol.\n\n*hostname:*\nThe identifier of a network interface:\n*    a string (hostname, IPv4 or IPv6 address or +broadcast+\n    which specifies a broadcast address)\n*    a zero-length string which specifies INADDR_ANY\n*    an integer (interpreted as binary address in host byte order).\n\n=== Quick start\n\nMany of the classes, such as TCPSocket, UDPSocket or UNIXSocket,\nease the use of sockets comparatively to the equivalent C programming interface.\n\nLet's create an internet socket using the IPv4 protocol in a C-like manner:\n\n  s = Socket.new Socket::AF_INET, Socket::SOCK_STREAM\n  s.connect Socket.pack_sockaddr_in(80, 'example.com')\n\nYou could also use the TCPSocket class:\n\n  s = TCPSocket.new 'example.com', 80\n\nA simple server might look like this:\n\n  require 'socket'\n\n  server = TCPServer.new 2000 # Server bound to port 2000\n\n  loop do\n    client = server.accept    # Wait for a client to connect\n    client.puts \"Hello !\"\n    client.puts \"Time is #{Time.now}\"\n    client.close\n  end\n\nA simple client may look like this:\n\n  require 'socket'\n\n  s = TCPSocket.new 'localhost', 2000\n\n  while line = s.gets # Read lines from socket\n    puts line         # and print them\n  end\n\n  s.close             # close socket when done\n\n=== Exception Handling\n\nRuby's Socket implementation raises exceptions based on the error\ngenerated by the system dependent implementation.  This is why the\nmethods are documented in a way that isolate Unix-based system\nexceptions from Windows based exceptions. If more information on a\nparticular exception is needed, please refer to the Unix manual pages or\nthe Windows WinSock reference.\n\n=== Convenience methods\n\nAlthough the general way to create socket is Socket.new,\nthere are several methods of socket creation for most cases.\n\nTCP client socket::\n  Socket.tcp, TCPSocket.open\nTCP server socket::\n  Socket.tcp_server_loop, TCPServer.open\nUNIX client socket::\n  Socket.unix, UNIXSocket.open\nUNIX server socket::\n  Socket.unix_server_loop, UNIXServer.open\n\n=== Documentation by\n\n* Zach Dennis\n* Sam Roberts\n* <em>Programming Ruby</em> from The Pragmatic Bookshelf.\n\nMuch material in this documentation is taken with permission from\n<em>Programming Ruby</em> from The Pragmatic Bookshelf.","name":"Socket","namespace":"","path":"Socket","type":"class","visibility":"public"},"Socket#accept":{"description":"Accepts a next connection.\nReturns a new Socket object and Addrinfo object.\n\n  serv = Socket.new(:INET, :STREAM, 0)\n  serv.listen(5)\n  c = Socket.new(:INET, :STREAM, 0)\n  c.connect(serv.connect_address)\n  p serv.accept #=> [#<Socket:fd 6>, #<Addrinfo: 127.0.0.1:48555 TCP>]","name":"accept","namespace":"Socket","path":"Socket#accept","type":"instance_method","visibility":"public"},"Socket#accept_nonblock":{"description":"Accepts an incoming connection using accept(2) after\nO_NONBLOCK is set for the underlying file descriptor.\nIt returns an array containing the accepted socket\nfor the incoming connection, _client_socket_,\nand an Addrinfo, _client_addrinfo_.\n\n=== Example\n\t# In one script, start this first\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new(AF_INET, SOCK_STREAM, 0)\n\tsockaddr = Socket.sockaddr_in(2200, 'localhost')\n\tsocket.bind(sockaddr)\n\tsocket.listen(5)\n\tbegin # emulate blocking accept\n\t  client_socket, client_addrinfo = socket.accept_nonblock\n\trescue IO::WaitReadable, Errno::EINTR\n\t  IO.select([socket])\n\t  retry\n\tend\n\tputs \"The client said, '#{client_socket.readline.chomp}'\"\n\tclient_socket.puts \"Hello from script one!\"\n\tsocket.close\n\n\t# In another script, start this second\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new(AF_INET, SOCK_STREAM, 0)\n\tsockaddr = Socket.sockaddr_in(2200, 'localhost')\n\tsocket.connect(sockaddr)\n\tsocket.puts \"Hello from script 2.\"\n\tputs \"The server said, '#{socket.readline.chomp}'\"\n\tsocket.close\n\nRefer to Socket#accept for the exceptions that may be thrown if the call\nto _accept_nonblock_ fails.\n\nSocket#accept_nonblock may raise any error corresponding to accept(2) failure,\nincluding Errno::EWOULDBLOCK.\n\nIf the exception is Errno::EWOULDBLOCK, Errno::AGAIN, Errno::ECONNABORTED or Errno::EPROTO,\nit is extended by IO::WaitReadable.\nSo IO::WaitReadable can be used to rescue the exceptions for retrying accept_nonblock.\n\n=== See\n* Socket#accept","name":"accept_nonblock","namespace":"Socket","path":"Socket#accept_nonblock","type":"instance_method","visibility":"public"},"Socket#bind":{"description":"Binds to the given local address.\n\n=== Parameter\n* +local_sockaddr+ - the +struct+ sockaddr contained in a string or an Addrinfo object\n\n=== Example\n\trequire 'socket'\n\n\t# use Addrinfo\n\tsocket = Socket.new(:INET, :STREAM, 0)\n\tsocket.bind(Addrinfo.tcp(\"127.0.0.1\", 2222))\n\tp socket.local_address #=> #<Addrinfo: 127.0.0.1:2222 TCP>\n\n\t# use struct sockaddr\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.bind( sockaddr )\n\n=== Unix-based Exceptions\nOn unix-based based systems the following system exceptions may be raised if\nthe call to _bind_ fails:\n* Errno::EACCES - the specified _sockaddr_ is protected and the current\n  user does not have permission to bind to it\n* Errno::EADDRINUSE - the specified _sockaddr_ is already in use\n* Errno::EADDRNOTAVAIL - the specified _sockaddr_ is not available from the\n  local machine\n* Errno::EAFNOSUPPORT - the specified _sockaddr_ is not a valid address for\n  the family of the calling +socket+\n* Errno::EBADF - the _sockaddr_ specified is not a valid file descriptor\n* Errno::EFAULT - the _sockaddr_ argument cannot be accessed\n* Errno::EINVAL - the +socket+ is already bound to an address, and the\n  protocol does not support binding to the new _sockaddr_ or the +socket+\n  has been shut down.\n* Errno::EINVAL - the address length is not a valid length for the address\n  family\n* Errno::ENAMETOOLONG - the pathname resolved had a length which exceeded\n  PATH_MAX\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOSR - there were insufficient STREAMS resources available to\n  complete the operation\n* Errno::ENOTSOCK - the +socket+ does not refer to a socket\n* Errno::EOPNOTSUPP - the socket type of the +socket+ does not support\n  binding to an address\n\nOn unix-based based systems if the address family of the calling +socket+ is\nSocket::AF_UNIX the follow exceptions may be raised if the call to _bind_\nfails:\n* Errno::EACCES - search permission is denied for a component of the prefix\n  path or write access to the +socket+ is denied\n* Errno::EDESTADDRREQ - the _sockaddr_ argument is a null pointer\n* Errno::EISDIR - same as Errno::EDESTADDRREQ\n* Errno::EIO - an i/o error occurred\n* Errno::ELOOP - too many symbolic links were encountered in translating\n  the pathname in _sockaddr_\n* Errno::ENAMETOOLLONG - a component of a pathname exceeded NAME_MAX\n  characters, or an entire pathname exceeded PATH_MAX characters\n* Errno::ENOENT - a component of the pathname does not name an existing file\n  or the pathname is an empty string\n* Errno::ENOTDIR - a component of the path prefix of the pathname in _sockaddr_\n  is not a directory\n* Errno::EROFS - the name would reside on a read only filesystem\n\n=== Windows Exceptions\nOn Windows systems the following system exceptions may be raised if\nthe call to _bind_ fails:\n* Errno::ENETDOWN-- the network is down\n* Errno::EACCES - the attempt to connect the datagram socket to the\n  broadcast address failed\n* Errno::EADDRINUSE - the socket's local address is already in use\n* Errno::EADDRNOTAVAIL - the specified address is not a valid address for this\n  computer\n* Errno::EFAULT - the socket's internal address or address length parameter\n  is too small or is not a valid part of the user space addressed\n* Errno::EINVAL - the +socket+ is already bound to an address\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOTSOCK - the +socket+ argument does not refer to a socket\n\n=== See\n* bind manual pages on unix-based systems\n* bind function in Microsoft's Winsock functions reference","name":"bind","namespace":"Socket","path":"Socket#bind","type":"instance_method","visibility":"public"},"Socket#connect":{"description":"Requests a connection to be made on the given +remote_sockaddr+. Returns 0 if\nsuccessful, otherwise an exception is raised.\n\n=== Parameter\n* +remote_sockaddr+ - the +struct+ sockaddr contained in a string or Addrinfo object\n\n=== Example:\n\t# Pull down Google's web page\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 80, 'www.google.com' )\n\tsocket.connect( sockaddr )\n\tsocket.write( \"GET / HTTP/1.0\\r\\n\\r\\n\" )\n\tresults = socket.read\n\n=== Unix-based Exceptions\nOn unix-based systems the following system exceptions may be raised if\nthe call to _connect_ fails:\n* Errno::EACCES - search permission is denied for a component of the prefix\n  path or write access to the +socket+ is denied\n* Errno::EADDRINUSE - the _sockaddr_ is already in use\n* Errno::EADDRNOTAVAIL - the specified _sockaddr_ is not available from the\n  local machine\n* Errno::EAFNOSUPPORT - the specified _sockaddr_ is not a valid address for\n  the address family of the specified +socket+\n* Errno::EALREADY - a connection is already in progress for the specified\n  socket\n* Errno::EBADF - the +socket+ is not a valid file descriptor\n* Errno::ECONNREFUSED - the target _sockaddr_ was not listening for connections\n  refused the connection request\n* Errno::ECONNRESET - the remote host reset the connection request\n* Errno::EFAULT - the _sockaddr_ cannot be accessed\n* Errno::EHOSTUNREACH - the destination host cannot be reached (probably\n  because the host is down or a remote router cannot reach it)\n* Errno::EINPROGRESS - the O_NONBLOCK is set for the +socket+ and the\n  connection cannot be immediately established; the connection will be\n  established asynchronously\n* Errno::EINTR - the attempt to establish the connection was interrupted by\n  delivery of a signal that was caught; the connection will be established\n  asynchronously\n* Errno::EISCONN - the specified +socket+ is already connected\n* Errno::EINVAL - the address length used for the _sockaddr_ is not a valid\n  length for the address family or there is an invalid family in _sockaddr_\n* Errno::ENAMETOOLONG - the pathname resolved had a length which exceeded\n  PATH_MAX\n* Errno::ENETDOWN - the local interface used to reach the destination is down\n* Errno::ENETUNREACH - no route to the network is present\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOSR - there were insufficient STREAMS resources available to\n  complete the operation\n* Errno::ENOTSOCK - the +socket+ argument does not refer to a socket\n* Errno::EOPNOTSUPP - the calling +socket+ is listening and cannot be connected\n* Errno::EPROTOTYPE - the _sockaddr_ has a different type than the socket\n  bound to the specified peer address\n* Errno::ETIMEDOUT - the attempt to connect time out before a connection\n  was made.\n\nOn unix-based systems if the address family of the calling +socket+ is\nAF_UNIX the follow exceptions may be raised if the call to _connect_\nfails:\n* Errno::EIO - an i/o error occurred while reading from or writing to the\n  file system\n* Errno::ELOOP - too many symbolic links were encountered in translating\n  the pathname in _sockaddr_\n* Errno::ENAMETOOLLONG - a component of a pathname exceeded NAME_MAX\n  characters, or an entire pathname exceeded PATH_MAX characters\n* Errno::ENOENT - a component of the pathname does not name an existing file\n  or the pathname is an empty string\n* Errno::ENOTDIR - a component of the path prefix of the pathname in _sockaddr_\n  is not a directory\n\n=== Windows Exceptions\nOn Windows systems the following system exceptions may be raised if\nthe call to _connect_ fails:\n* Errno::ENETDOWN - the network is down\n* Errno::EADDRINUSE - the socket's local address is already in use\n* Errno::EINTR - the socket was cancelled\n* Errno::EINPROGRESS - a blocking socket is in progress or the service provider\n  is still processing a callback function. Or a nonblocking connect call is\n  in progress on the +socket+.\n* Errno::EALREADY - see Errno::EINVAL\n* Errno::EADDRNOTAVAIL - the remote address is not a valid address, such as\n  ADDR_ANY TODO check ADDRANY TO INADDR_ANY\n* Errno::EAFNOSUPPORT - addresses in the specified family cannot be used with\n  with this +socket+\n* Errno::ECONNREFUSED - the target _sockaddr_ was not listening for connections\n  refused the connection request\n* Errno::EFAULT - the socket's internal address or address length parameter\n  is too small or is not a valid part of the user space address\n* Errno::EINVAL - the +socket+ is a listening socket\n* Errno::EISCONN - the +socket+ is already connected\n* Errno::ENETUNREACH - the network cannot be reached from this host at this time\n* Errno::EHOSTUNREACH - no route to the network is present\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOTSOCK - the +socket+ argument does not refer to a socket\n* Errno::ETIMEDOUT - the attempt to connect time out before a connection\n  was made.\n* Errno::EWOULDBLOCK - the socket is marked as nonblocking and the\n  connection cannot be completed immediately\n* Errno::EACCES - the attempt to connect the datagram socket to the\n  broadcast address failed\n\n=== See\n* connect manual pages on unix-based systems\n* connect function in Microsoft's Winsock functions reference","name":"connect","namespace":"Socket","path":"Socket#connect","type":"instance_method","visibility":"public"},"Socket#connect_nonblock":{"description":"Requests a connection to be made on the given +remote_sockaddr+ after\nO_NONBLOCK is set for the underlying file descriptor.\nReturns 0 if successful, otherwise an exception is raised.\n\n=== Parameter\n* +remote_sockaddr+ - the +struct+ sockaddr contained in a string or Addrinfo object\n\n=== Example:\n\t# Pull down Google's web page\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new(AF_INET, SOCK_STREAM, 0)\n\tsockaddr = Socket.sockaddr_in(80, 'www.google.com')\n\tbegin # emulate blocking connect\n\t  socket.connect_nonblock(sockaddr)\n\trescue IO::WaitWritable\n\t  IO.select(nil, [socket]) # wait 3-way handshake completion\n\t  begin\n\t    socket.connect_nonblock(sockaddr) # check connection failure\n\t  rescue Errno::EISCONN\n\t  end\n\tend\n\tsocket.write(\"GET / HTTP/1.0\\r\\n\\r\\n\")\n\tresults = socket.read\n\nRefer to Socket#connect for the exceptions that may be thrown if the call\nto _connect_nonblock_ fails.\n\nSocket#connect_nonblock may raise any error corresponding to connect(2) failure,\nincluding Errno::EINPROGRESS.\n\nIf the exception is Errno::EINPROGRESS,\nit is extended by IO::WaitWritable.\nSo IO::WaitWritable can be used to rescue the exceptions for retrying connect_nonblock.\n\n=== See\n* Socket#connect","name":"connect_nonblock","namespace":"Socket","path":"Socket#connect_nonblock","type":"instance_method","visibility":"public"},"Socket#initialize":{"description":"Creates a new socket object.\n\n_domain_ should be a communications domain such as: :INET, :INET6, :UNIX, etc.\n\n_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.\n\n_protocol_ is optional and should be a protocol defined in the domain.\nIf protocol is not given, 0 is used internally.\n\n  Socket.new(:INET, :STREAM) # TCP socket\n  Socket.new(:INET, :DGRAM)  # UDP socket\n  Socket.new(:UNIX, :STREAM) # UNIX stream socket\n  Socket.new(:UNIX, :DGRAM)  # UNIX datagram socket","name":"initialize","namespace":"Socket","path":"Socket#initialize","type":"instance_method","visibility":"public"},"Socket#ipv6only!":{"description":"enable the socket option IPV6_V6ONLY if IPV6_V6ONLY is available.","name":"ipv6only!","namespace":"Socket","path":"Socket#ipv6only!","type":"instance_method","visibility":"public"},"Socket#listen":{"description":"Listens for connections, using the specified +int+ as the backlog. A call\nto _listen_ only applies if the +socket+ is of type SOCK_STREAM or\nSOCK_SEQPACKET.\n\n=== Parameter\n* +backlog+ - the maximum length of the queue for pending connections.\n\n=== Example 1\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.bind( sockaddr )\n\tsocket.listen( 5 )\n\n=== Example 2 (listening on an arbitrary port, unix-based systems only):\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsocket.listen( 1 )\n\n=== Unix-based Exceptions\nOn unix based systems the above will work because a new +sockaddr+ struct\nis created on the address ADDR_ANY, for an arbitrary port number as handed\noff by the kernel. It will not work on Windows, because Windows requires that\nthe +socket+ is bound by calling _bind_ before it can _listen_.\n\nIf the _backlog_ amount exceeds the implementation-dependent maximum\nqueue length, the implementation's maximum queue length will be used.\n\nOn unix-based based systems the following system exceptions may be raised if the\ncall to _listen_ fails:\n* Errno::EBADF - the _socket_ argument is not a valid file descriptor\n* Errno::EDESTADDRREQ - the _socket_ is not bound to a local address, and\n  the protocol does not support listening on an unbound socket\n* Errno::EINVAL - the _socket_ is already connected\n* Errno::ENOTSOCK - the _socket_ argument does not refer to a socket\n* Errno::EOPNOTSUPP - the _socket_ protocol does not support listen\n* Errno::EACCES - the calling process does not have appropriate privileges\n* Errno::EINVAL - the _socket_ has been shut down\n* Errno::ENOBUFS - insufficient resources are available in the system to\n  complete the call\n\n=== Windows Exceptions\nOn Windows systems the following system exceptions may be raised if\nthe call to _listen_ fails:\n* Errno::ENETDOWN - the network is down\n* Errno::EADDRINUSE - the socket's local address is already in use. This\n  usually occurs during the execution of _bind_ but could be delayed\n  if the call to _bind_ was to a partially wildcard address (involving\n  ADDR_ANY) and if a specific address needs to be committed at the\n  time of the call to _listen_\n* Errno::EINPROGRESS - a Windows Sockets 1.1 call is in progress or the\n  service provider is still processing a callback function\n* Errno::EINVAL - the +socket+ has not been bound with a call to _bind_.\n* Errno::EISCONN - the +socket+ is already connected\n* Errno::EMFILE - no more socket descriptors are available\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOTSOC - +socket+ is not a socket\n* Errno::EOPNOTSUPP - the referenced +socket+ is not a type that supports\n  the _listen_ method\n\n=== See\n* listen manual pages on unix-based systems\n* listen function in Microsoft's Winsock functions reference","name":"listen","namespace":"Socket","path":"Socket#listen","type":"instance_method","visibility":"public"},"Socket#recvfrom":{"description":"Receives up to _maxlen_ bytes from +socket+. _flags_ is zero or more\nof the +MSG_+ options. The first element of the results, _mesg_, is the data\nreceived. The second element, _sender_addrinfo_, contains protocol-specific\naddress information of the sender.\n\n=== Parameters\n* +maxlen+ - the maximum number of bytes to receive from the socket\n* +flags+ - zero or more of the +MSG_+ options\n\n=== Example\n\t# In one file, start this first\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.bind( sockaddr )\n\tsocket.listen( 5 )\n\tclient, client_addrinfo = socket.accept\n\tdata = client.recvfrom( 20 )[0].chomp\n\tputs \"I only received 20 bytes '#{data}'\"\n\tsleep 1\n\tsocket.close\n\n\t# In another file, start this second\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.connect( sockaddr )\n\tsocket.puts \"Watch this get cut short!\"\n\tsocket.close\n\n=== Unix-based Exceptions\nOn unix-based based systems the following system exceptions may be raised if the\ncall to _recvfrom_ fails:\n* Errno::EAGAIN - the +socket+ file descriptor is marked as O_NONBLOCK and no\n  data is waiting to be received; or MSG_OOB is set and no out-of-band data\n  is available and either the +socket+ file descriptor is marked as\n  O_NONBLOCK or the +socket+ does not support blocking to wait for\n  out-of-band-data\n* Errno::EWOULDBLOCK - see Errno::EAGAIN\n* Errno::EBADF - the +socket+ is not a valid file descriptor\n* Errno::ECONNRESET - a connection was forcibly closed by a peer\n* Errno::EFAULT - the socket's internal buffer, address or address length\n  cannot be accessed or written\n* Errno::EINTR - a signal interrupted _recvfrom_ before any data was available\n* Errno::EINVAL - the MSG_OOB flag is set and no out-of-band data is available\n* Errno::EIO - an i/o error occurred while reading from or writing to the\n  filesystem\n* Errno::ENOBUFS - insufficient resources were available in the system to\n  perform the operation\n* Errno::ENOMEM - insufficient memory was available to fulfill the request\n* Errno::ENOSR - there were insufficient STREAMS resources available to\n  complete the operation\n* Errno::ENOTCONN - a receive is attempted on a connection-mode socket that\n  is not connected\n* Errno::ENOTSOCK - the +socket+ does not refer to a socket\n* Errno::EOPNOTSUPP - the specified flags are not supported for this socket type\n* Errno::ETIMEDOUT - the connection timed out during connection establishment\n  or due to a transmission timeout on an active connection\n\n=== Windows Exceptions\nOn Windows systems the following system exceptions may be raised if\nthe call to _recvfrom_ fails:\n* Errno::ENETDOWN - the network is down\n* Errno::EFAULT - the internal buffer and from parameters on +socket+ are not\n  part of the user address space, or the internal fromlen parameter is\n  too small to accommodate the peer address\n* Errno::EINTR - the (blocking) call was cancelled by an internal call to\n  the WinSock function WSACancelBlockingCall\n* Errno::EINPROGRESS - a blocking Windows Sockets 1.1 call is in progress or\n  the service provider is still processing a callback function\n* Errno::EINVAL - +socket+ has not been bound with a call to _bind_, or an\n  unknown flag was specified, or MSG_OOB was specified for a socket with\n  SO_OOBINLINE enabled, or (for byte stream-style sockets only) the internal\n  len parameter on +socket+ was zero or negative\n* Errno::EISCONN - +socket+ is already connected. The call to _recvfrom_ is\n  not permitted with a connected socket on a socket that is connection\n  oriented or connectionless.\n* Errno::ENETRESET - the connection has been broken due to the keep-alive\n  activity detecting a failure while the operation was in progress.\n* Errno::EOPNOTSUPP - MSG_OOB was specified, but +socket+ is not stream-style\n  such as type SOCK_STREAM. OOB data is not supported in the communication\n  domain associated with +socket+, or +socket+ is unidirectional and\n  supports only send operations\n* Errno::ESHUTDOWN - +socket+ has been shutdown. It is not possible to\n  call _recvfrom_ on a socket after _shutdown_ has been invoked.\n* Errno::EWOULDBLOCK - +socket+ is marked as nonblocking and a  call to\n  _recvfrom_ would block.\n* Errno::EMSGSIZE - the message was too large to fit into the specified buffer\n  and was truncated.\n* Errno::ETIMEDOUT - the connection has been dropped, because of a network\n  failure or because the system on the other end went down without\n  notice\n* Errno::ECONNRESET - the virtual circuit was reset by the remote side\n  executing a hard or abortive close. The application should close the\n  socket; it is no longer usable. On a UDP-datagram socket this error\n  indicates a previous send operation resulted in an ICMP Port Unreachable\n  message.","name":"recvfrom","namespace":"Socket","path":"Socket#recvfrom","type":"instance_method","visibility":"public"},"Socket#recvfrom_nonblock":{"description":"Receives up to _maxlen_ bytes from +socket+ using recvfrom(2) after\nO_NONBLOCK is set for the underlying file descriptor.\n_flags_ is zero or more of the +MSG_+ options.\nThe first element of the results, _mesg_, is the data received.\nThe second element, _sender_addrinfo_, contains protocol-specific address\ninformation of the sender.\n\nWhen recvfrom(2) returns 0, Socket#recvfrom_nonblock returns\nan empty string as data.\nThe meaning depends on the socket: EOF on TCP, empty packet on UDP, etc.\n\n=== Parameters\n* +maxlen+ - the maximum number of bytes to receive from the socket\n* +flags+ - zero or more of the +MSG_+ options\n\n=== Example\n\t# In one file, start this first\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new(AF_INET, SOCK_STREAM, 0)\n\tsockaddr = Socket.sockaddr_in(2200, 'localhost')\n\tsocket.bind(sockaddr)\n\tsocket.listen(5)\n\tclient, client_addrinfo = socket.accept\n\tbegin # emulate blocking recvfrom\n\t  pair = client.recvfrom_nonblock(20)\n\trescue IO::WaitReadable\n\t  IO.select([client])\n\t  retry\n\tend\n\tdata = pair[0].chomp\n\tputs \"I only received 20 bytes '#{data}'\"\n\tsleep 1\n\tsocket.close\n\n\t# In another file, start this second\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new(AF_INET, SOCK_STREAM, 0)\n\tsockaddr = Socket.sockaddr_in(2200, 'localhost')\n\tsocket.connect(sockaddr)\n\tsocket.puts \"Watch this get cut short!\"\n\tsocket.close\n\nRefer to Socket#recvfrom for the exceptions that may be thrown if the call\nto _recvfrom_nonblock_ fails.\n\nSocket#recvfrom_nonblock may raise any error corresponding to recvfrom(2) failure,\nincluding Errno::EWOULDBLOCK.\n\nIf the exception is Errno::EWOULDBLOCK or Errno::AGAIN,\nit is extended by IO::WaitReadable.\nSo IO::WaitReadable can be used to rescue the exceptions for retrying recvfrom_nonblock.\n\n=== See\n* Socket#recvfrom","name":"recvfrom_nonblock","namespace":"Socket","path":"Socket#recvfrom_nonblock","type":"instance_method","visibility":"public"},"Socket#sysaccept":{"description":"Accepts an incoming connection returning an array containing the (integer)\nfile descriptor for the incoming connection, _client_socket_fd_,\nand an Addrinfo, _client_addrinfo_.\n\n=== Example\n\t# In one script, start this first\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.bind( sockaddr )\n\tsocket.listen( 5 )\n\tclient_fd, client_addrinfo = socket.sysaccept\n\tclient_socket = Socket.for_fd( client_fd )\n\tputs \"The client said, '#{client_socket.readline.chomp}'\"\n\tclient_socket.puts \"Hello from script one!\"\n\tsocket.close\n\n\t# In another script, start this second\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.connect( sockaddr )\n\tsocket.puts \"Hello from script 2.\"\n\tputs \"The server said, '#{socket.readline.chomp}'\"\n\tsocket.close\n\nRefer to Socket#accept for the exceptions that may be thrown if the call\nto _sysaccept_ fails.\n\n=== See\n* Socket#accept","name":"sysaccept","namespace":"Socket","path":"Socket#sysaccept","type":"instance_method","visibility":"public"},"Socket.accept_loop":{"description":"yield socket and client address for each a connection accepted via given sockets.\n\nThe arguments are a list of sockets.\nThe individual argument should be a socket or an array of sockets.\n\nThis method yields the block sequentially.\nIt means that the next connection is not accepted until the block returns.\nSo concurrent mechanism, thread for example, should be used to service multiple clients at a time.","name":"accept_loop","namespace":"Socket","path":"Socket.accept_loop","type":"class_method","visibility":"public"},"Socket.getaddrinfo":{"description":"Obtains address information for _nodename_:_servname_.\n\n_family_ should be an address family such as: :INET, :INET6, :UNIX, etc.\n\n_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.\n\n_protocol_ should be a protocol defined in the family,\nand defaults to 0 for the family.\n\n_flags_ should be bitwise OR of Socket::AI_* constants.\n\n  Socket.getaddrinfo(\"www.ruby-lang.org\", \"http\", nil, :STREAM)\n  #=> [[\"AF_INET\", 80, \"carbon.ruby-lang.org\", \"221.186.184.68\", 2, 1, 6]] # PF_INET/SOCK_STREAM/IPPROTO_TCP\n\n  Socket.getaddrinfo(\"localhost\", nil)\n  #=> [[\"AF_INET\", 0, \"localhost\", \"127.0.0.1\", 2, 1, 6],  # PF_INET/SOCK_STREAM/IPPROTO_TCP\n  #    [\"AF_INET\", 0, \"localhost\", \"127.0.0.1\", 2, 2, 17], # PF_INET/SOCK_DGRAM/IPPROTO_UDP\n  #    [\"AF_INET\", 0, \"localhost\", \"127.0.0.1\", 2, 3, 0]]  # PF_INET/SOCK_RAW/IPPROTO_IP\n\n_reverse_lookup_ directs the form of the third element, and has to\nbe one of below.  If _reverse_lookup_ is omitted, the default value is +nil+.\n\n  +true+, +:hostname+:  hostname is obtained from numeric address using reverse lookup, which may take a time.\n  +false+, +:numeric+:  hostname is same as numeric address.\n  +nil+:              obey to the current +do_not_reverse_lookup+ flag.\n\nIf Addrinfo object is preferred, use Addrinfo.getaddrinfo.","name":"getaddrinfo","namespace":"Socket","path":"Socket.getaddrinfo","type":"class_method","visibility":"public"},"Socket.gethostbyaddr":{"description":"Obtains the host information for _address_.\n\n  p Socket.gethostbyaddr([221,186,184,68].pack(\"CCCC\"))\n  #=> [\"carbon.ruby-lang.org\", [], 2, \"\\xDD\\xBA\\xB8D\"]","name":"gethostbyaddr","namespace":"Socket","path":"Socket.gethostbyaddr","type":"class_method","visibility":"public"},"Socket.gethostbyname":{"description":"Obtains the host information for _hostname_.\n\n  p Socket.gethostbyname(\"hal\") #=> [\"localhost\", [\"hal\"], 2, \"\\x7F\\x00\\x00\\x01\"]","name":"gethostbyname","namespace":"Socket","path":"Socket.gethostbyname","type":"class_method","visibility":"public"},"Socket.gethostname":{"description":"","name":"gethostname","namespace":"Socket","path":"Socket.gethostname","type":"class_method","visibility":"public"},"Socket.getifaddrs":{"description":"Returns an array of interface addresses.\nAn element of the array is an instance of Socket::Ifaddr.\n\nThis method can be used to find multicast-enabled interfaces:\n\n  pp Socket.getifaddrs.reject {|ifaddr|\n    !ifaddr.addr.ip? || (ifaddr.flags & Socket::IFF_MULTICAST == 0)\n  }.map {|ifaddr| [ifaddr.name, ifaddr.ifindex, ifaddr.addr] }\n  #=> [[\"eth0\", 2, #<Addrinfo: 221.186.184.67>],\n  #    [\"eth0\", 2, #<Addrinfo: fe80::216:3eff:fe95:88bb%eth0>]]\n\nExample result on GNU/Linux:\n  pp Socket.getifaddrs\n  #=> [#<Socket::Ifaddr lo UP,LOOPBACK,RUNNING,0x10000 PACKET[protocol=0 lo hatype=772 HOST hwaddr=00:00:00:00:00:00]>,\n  #    #<Socket::Ifaddr eth0 UP,BROADCAST,RUNNING,MULTICAST,0x10000 PACKET[protocol=0 eth0 hatype=1 HOST hwaddr=00:16:3e:95:88:bb] broadcast=PACKET[protocol=0 eth0 hatype=1 HOST hwaddr=ff:ff:ff:ff:ff:ff]>,\n  #    #<Socket::Ifaddr sit0 NOARP PACKET[protocol=0 sit0 hatype=776 HOST hwaddr=00:00:00:00]>,\n  #    #<Socket::Ifaddr lo UP,LOOPBACK,RUNNING,0x10000 127.0.0.1 netmask=255.0.0.0>,\n  #    #<Socket::Ifaddr eth0 UP,BROADCAST,RUNNING,MULTICAST,0x10000 221.186.184.67 netmask=255.255.255.240 broadcast=221.186.184.79>,\n  #    #<Socket::Ifaddr lo UP,LOOPBACK,RUNNING,0x10000 ::1 netmask=ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff>,\n  #    #<Socket::Ifaddr eth0 UP,BROADCAST,RUNNING,MULTICAST,0x10000 fe80::216:3eff:fe95:88bb%eth0 netmask=ffff:ffff:ffff:ffff::>]\n\nExample result on FreeBSD:\n  pp Socket.getifaddrs\n  #=> [#<Socket::Ifaddr usbus0 UP,0x10000 LINK[usbus0]>,\n  #    #<Socket::Ifaddr re0 UP,BROADCAST,RUNNING,MULTICAST,0x800 LINK[re0 3a:d0:40:9a:fe:e8]>,\n  #    #<Socket::Ifaddr re0 UP,BROADCAST,RUNNING,MULTICAST,0x800 10.250.10.18 netmask=255.255.255.? (7 bytes for 16 bytes sockaddr_in) broadcast=10.250.10.255>,\n  #    #<Socket::Ifaddr re0 UP,BROADCAST,RUNNING,MULTICAST,0x800 fe80:2::38d0:40ff:fe9a:fee8 netmask=ffff:ffff:ffff:ffff::>,\n  #    #<Socket::Ifaddr re0 UP,BROADCAST,RUNNING,MULTICAST,0x800 2001:2e8:408:10::12 netmask=UNSPEC>,\n  #    #<Socket::Ifaddr plip0 POINTOPOINT,MULTICAST,0x800 LINK[plip0]>,\n  #    #<Socket::Ifaddr lo0 UP,LOOPBACK,RUNNING,MULTICAST LINK[lo0]>,\n  #    #<Socket::Ifaddr lo0 UP,LOOPBACK,RUNNING,MULTICAST ::1 netmask=ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff>,\n  #    #<Socket::Ifaddr lo0 UP,LOOPBACK,RUNNING,MULTICAST fe80:4::1 netmask=ffff:ffff:ffff:ffff::>,\n  #    #<Socket::Ifaddr lo0 UP,LOOPBACK,RUNNING,MULTICAST 127.0.0.1 netmask=255.?.?.? (5 bytes for 16 bytes sockaddr_in)>]","name":"getifaddrs","namespace":"Socket","path":"Socket.getifaddrs","type":"class_method","visibility":"public"},"Socket.getnameinfo":{"description":"Obtains name information for _sockaddr_.\n\n_sockaddr_ should be one of follows.\n- packed sockaddr string such as Socket.sockaddr_in(80, \"127.0.0.1\")\n- 3-elements array such as [\"AF_INET\", 80, \"127.0.0.1\"]\n- 4-elements array such as [\"AF_INET\", 80, ignored, \"127.0.0.1\"]\n\n_flags_ should be bitwise OR of Socket::NI_* constants.\n\nNote:\nThe last form is compatible with IPSocket#addr and IPSocket#peeraddr.\n\n  Socket.getnameinfo(Socket.sockaddr_in(80, \"127.0.0.1\"))       #=> [\"localhost\", \"www\"]\n  Socket.getnameinfo([\"AF_INET\", 80, \"127.0.0.1\"])              #=> [\"localhost\", \"www\"]\n  Socket.getnameinfo([\"AF_INET\", 80, \"localhost\", \"127.0.0.1\"]) #=> [\"localhost\", \"www\"]\n\nIf Addrinfo object is preferred, use Addrinfo#getnameinfo.","name":"getnameinfo","namespace":"Socket","path":"Socket.getnameinfo","type":"class_method","visibility":"public"},"Socket.getservbyname":{"description":"Obtains the port number for _service_name_.\n\nIf _protocol_name_ is not given, \"tcp\" is assumed.\n\n  Socket.getservbyname(\"smtp\")          #=> 25\n  Socket.getservbyname(\"shell\")         #=> 514\n  Socket.getservbyname(\"syslog\", \"udp\") #=> 514","name":"getservbyname","namespace":"Socket","path":"Socket.getservbyname","type":"class_method","visibility":"public"},"Socket.getservbyport":{"description":"Obtains the port number for _port_.\n\nIf _protocol_name_ is not given, \"tcp\" is assumed.\n\n  Socket.getservbyport(80)         #=> \"www\"\n  Socket.getservbyport(514, \"tcp\") #=> \"shell\"\n  Socket.getservbyport(514, \"udp\") #=> \"syslog\"","name":"getservbyport","namespace":"Socket","path":"Socket.getservbyport","type":"class_method","visibility":"public"},"Socket.ip_address_list":{"description":"Returns local IP addresses as an array.\n\nThe array contains Addrinfo objects.\n\n pp Socket.ip_address_list\n #=> [#<Addrinfo: 127.0.0.1>,\n      #<Addrinfo: 192.168.0.128>,\n      #<Addrinfo: ::1>,\n      ...]","name":"ip_address_list","namespace":"Socket","path":"Socket.ip_address_list","type":"class_method","visibility":"public"},"Socket.ip_sockets_port0":{"description":":stopdoc:","name":"ip_sockets_port0","namespace":"Socket","path":"Socket.ip_sockets_port0","type":"class_method","visibility":"public"},"Socket.pack_sockaddr_in":{"description":"Packs _port_ and _host_ as an AF_INET/AF_INET6 sockaddr string.\n\n  Socket.sockaddr_in(80, \"127.0.0.1\")\n  #=> \"\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\n  Socket.sockaddr_in(80, \"::1\")\n  #=> \"\\n\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\"","name":"pack_sockaddr_in","namespace":"Socket","path":"Socket.pack_sockaddr_in","type":"class_method","visibility":"public"},"Socket.pack_sockaddr_un":{"description":"Packs _path_ as an AF_UNIX sockaddr string.\n\n  Socket.sockaddr_un(\"/tmp/sock\") #=> \"\\x01\\x00/tmp/sock\\x00\\x00...\"","name":"pack_sockaddr_un","namespace":"Socket","path":"Socket.pack_sockaddr_un","type":"class_method","visibility":"public"},"Socket.pair":{"description":"Creates a pair of sockets connected each other.\n\n_domain_ should be a communications domain such as: :INET, :INET6, :UNIX, etc.\n\n_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.\n\n_protocol_ should be a protocol defined in the domain,\ndefaults to 0 for the domain.\n\n  s1, s2 = Socket.pair(:UNIX, :STREAM, 0)\n  s1.send \"a\", 0\n  s1.send \"b\", 0\n  s1.close\n  p s2.recv(10) #=> \"ab\"\n  p s2.recv(10) #=> \"\"\n  p s2.recv(10) #=> \"\"\n\n  s1, s2 = Socket.pair(:UNIX, :DGRAM, 0)\n  s1.send \"a\", 0\n  s1.send \"b\", 0\n  p s2.recv(10) #=> \"a\"\n  p s2.recv(10) #=> \"b\"","name":"pair","namespace":"Socket","path":"Socket.pair","type":"class_method","visibility":"public"},"Socket.sockaddr_in":{"description":"Packs _port_ and _host_ as an AF_INET/AF_INET6 sockaddr string.\n\n  Socket.sockaddr_in(80, \"127.0.0.1\")\n  #=> \"\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n\n  Socket.sockaddr_in(80, \"::1\")\n  #=> \"\\n\\x00\\x00P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\"","name":"sockaddr_in","namespace":"Socket","path":"Socket.sockaddr_in","type":"class_method","visibility":"public"},"Socket.sockaddr_un":{"description":"Packs _path_ as an AF_UNIX sockaddr string.\n\n  Socket.sockaddr_un(\"/tmp/sock\") #=> \"\\x01\\x00/tmp/sock\\x00\\x00...\"","name":"sockaddr_un","namespace":"Socket","path":"Socket.sockaddr_un","type":"class_method","visibility":"public"},"Socket.socketpair":{"description":"Creates a pair of sockets connected each other.\n\n_domain_ should be a communications domain such as: :INET, :INET6, :UNIX, etc.\n\n_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.\n\n_protocol_ should be a protocol defined in the domain,\ndefaults to 0 for the domain.\n\n  s1, s2 = Socket.pair(:UNIX, :STREAM, 0)\n  s1.send \"a\", 0\n  s1.send \"b\", 0\n  s1.close\n  p s2.recv(10) #=> \"ab\"\n  p s2.recv(10) #=> \"\"\n  p s2.recv(10) #=> \"\"\n\n  s1, s2 = Socket.pair(:UNIX, :DGRAM, 0)\n  s1.send \"a\", 0\n  s1.send \"b\", 0\n  p s2.recv(10) #=> \"a\"\n  p s2.recv(10) #=> \"b\"","name":"socketpair","namespace":"Socket","path":"Socket.socketpair","type":"class_method","visibility":"public"},"Socket.tcp":{"description":":call-seq:\n  Socket.tcp(host, port, local_host=nil, local_port=nil, [opts]) {|socket| ... }\n  Socket.tcp(host, port, local_host=nil, local_port=nil, [opts])\n\ncreates a new socket object connected to host:port using TCP/IP.\n\nIf local_host:local_port is given,\nthe socket is bound to it.\n\nThe optional last argument _opts_ is options represented by a hash.\n_opts_ may have following options:\n\n[:connect_timeout] specify the timeout in seconds.\n\nIf a block is given, the block is called with the socket.\nThe value of the block is returned.\nThe socket is closed when this method returns.\n\nIf no block is given, the socket is returned.\n\n  Socket.tcp(\"www.ruby-lang.org\", 80) {|sock|\n    sock.print \"GET / HTTP/1.0\\r\\nHost: www.ruby-lang.org\\r\\n\\r\\n\"\n    sock.close_write\n    puts sock.read\n  }","name":"tcp","namespace":"Socket","path":"Socket.tcp","type":"class_method","visibility":"public"},"Socket.tcp_server_loop":{"description":"creates a TCP/IP server on _port_ and calls the block for each connection accepted.\nThe block is called with a socket and a client_address as an Addrinfo object.\n\nIf _host_ is specified, it is used with _port_ to determine the server addresses.\n\nThe socket is *not* closed when the block returns.\nSo application should close it explicitly.\n\nThis method calls the block sequentially.\nIt means that the next connection is not accepted until the block returns.\nSo concurrent mechanism, thread for example, should be used to service multiple clients at a time.\n\nNote that Addrinfo.getaddrinfo is used to determine the server socket addresses.\nWhen Addrinfo.getaddrinfo returns two or more addresses,\nIPv4 and IPv6 address for example,\nall of them are used.\nSocket.tcp_server_loop succeeds if one socket can be used at least.\n\n  # Sequential echo server.\n  # It services only one client at a time.\n  Socket.tcp_server_loop(16807) {|sock, client_addrinfo|\n    begin\n      IO.copy_stream(sock, sock)\n    ensure\n      sock.close\n    end\n  }\n\n  # Threaded echo server\n  # It services multiple clients at a time.\n  # Note that it may accept connections too much.\n  Socket.tcp_server_loop(16807) {|sock, client_addrinfo|\n    Thread.new {\n      begin\n        IO.copy_stream(sock, sock)\n      ensure\n        sock.close\n      end\n    }\n  }","name":"tcp_server_loop","namespace":"Socket","path":"Socket.tcp_server_loop","type":"class_method","visibility":"public"},"Socket.tcp_server_sockets":{"description":"creates TCP/IP server sockets for _host_ and _port_.\n_host_ is optional.\n\nIf no block given,\nit returns an array of listening sockets.\n\nIf a block is given, the block is called with the sockets.\nThe value of the block is returned.\nThe socket is closed when this method returns.\n\nIf _port_ is 0, actual port number is chosen dynamically.\nHowever all sockets in the result has same port number.\n\n  # tcp_server_sockets returns two sockets.\n  sockets = Socket.tcp_server_sockets(1296)\n  p sockets #=> [#<Socket:fd 3>, #<Socket:fd 4>]\n\n  # The sockets contains IPv6 and IPv4 sockets.\n  sockets.each {|s| p s.local_address }\n  #=> #<Addrinfo: [::]:1296 TCP>\n  #   #<Addrinfo: 0.0.0.0:1296 TCP>\n\n  # IPv6 and IPv4 socket has same port number, 53114, even if it is chosen dynamically.\n  sockets = Socket.tcp_server_sockets(0)\n  sockets.each {|s| p s.local_address }\n  #=> #<Addrinfo: [::]:53114 TCP>\n  #   #<Addrinfo: 0.0.0.0:53114 TCP>\n\n  # The block is called with the sockets.\n  Socket.tcp_server_sockets(0) {|sockets|\n    p sockets #=> [#<Socket:fd 3>, #<Socket:fd 4>]\n  }","name":"tcp_server_sockets","namespace":"Socket","path":"Socket.tcp_server_sockets","type":"class_method","visibility":"public"},"Socket.tcp_server_sockets_port0":{"description":"","name":"tcp_server_sockets_port0","namespace":"Socket","path":"Socket.tcp_server_sockets_port0","type":"class_method","visibility":"public"},"Socket.udp_server_loop":{"description":":call-seq:\n  Socket.udp_server_loop(port) {|msg, msg_src| ... }\n  Socket.udp_server_loop(host, port) {|msg, msg_src| ... }\n\ncreates a UDP/IP server on _port_ and calls the block for each message arrived.\nThe block is called with the message and its source information.\n\nThis method allocates sockets internally using _port_.\nIf _host_ is specified, it is used conjunction with _port_ to determine the server addresses.\n\nThe _msg_ is a string.\n\nThe _msg_src_ is a Socket::UDPSource object.\nIt is used for reply.\n\n  # UDP/IP echo server.\n  Socket.udp_server_loop(9261) {|msg, msg_src|\n    msg_src.reply msg\n  }","name":"udp_server_loop","namespace":"Socket","path":"Socket.udp_server_loop","type":"class_method","visibility":"public"},"Socket.udp_server_loop_on":{"description":":call-seq:\n  Socket.udp_server_loop_on(sockets) {|msg, msg_src| ... }\n\nRun UDP/IP server loop on the given sockets.\n\nThe return value of Socket.udp_server_sockets is appropriate for the argument.\n\nIt calls the block for each message received.","name":"udp_server_loop_on","namespace":"Socket","path":"Socket.udp_server_loop_on","type":"class_method","visibility":"public"},"Socket.udp_server_recv":{"description":":call-seq:\n  Socket.udp_server_recv(sockets) {|msg, msg_src| ... }\n\nReceive UDP/IP packets from the given _sockets_.\nFor each packet received, the block is called.\n\nThe block receives _msg_ and _msg_src_.\n_msg_ is a string which is the payload of the received packet.\n_msg_src_ is a Socket::UDPSource object which is used for reply.\n\nSocket.udp_server_loop can be implemented using this method as follows.\n\n  udp_server_sockets(host, port) {|sockets|\n    loop {\n      readable, _, _ = IO.select(sockets)\n      udp_server_recv(readable) {|msg, msg_src| ... }\n    }\n  }","name":"udp_server_recv","namespace":"Socket","path":"Socket.udp_server_recv","type":"class_method","visibility":"public"},"Socket.udp_server_sockets":{"description":":call-seq:\n  Socket.udp_server_sockets([host, ] port)\n\nCreates UDP/IP sockets for a UDP server.\n\nIf no block given, it returns an array of sockets.\n\nIf a block is given, the block is called with the sockets.\nThe value of the block is returned.\nThe sockets are closed when this method returns.\n\nIf _port_ is zero, some port is chosen.\nBut the chosen port is used for the all sockets.\n\n  # UDP/IP echo server\n  Socket.udp_server_sockets(0) {|sockets|\n    p sockets.first.local_address.ip_port     #=> 32963\n    Socket.udp_server_loop_on(sockets) {|msg, msg_src|\n      msg_src.reply msg\n    }\n  }","name":"udp_server_sockets","namespace":"Socket","path":"Socket.udp_server_sockets","type":"class_method","visibility":"public"},"Socket.unix":{"description":"creates a new socket connected to path using UNIX socket socket.\n\nIf a block is given, the block is called with the socket.\nThe value of the block is returned.\nThe socket is closed when this method returns.\n\nIf no block is given, the socket is returned.\n\n  # talk to /tmp/sock socket.\n  Socket.unix(\"/tmp/sock\") {|sock|\n    t = Thread.new { IO.copy_stream(sock, STDOUT) }\n    IO.copy_stream(STDIN, sock)\n    t.join\n  }","name":"unix","namespace":"Socket","path":"Socket.unix","type":"class_method","visibility":"public"},"Socket.unix_server_loop":{"description":"creates a UNIX socket server on _path_.\nIt calls the block for each socket accepted.\n\nIf _host_ is specified, it is used with _port_ to determine the server ports.\n\nThe socket is *not* closed when the block returns.\nSo application should close it.\n\nThis method deletes the socket file pointed by _path_ at first if\nthe file is a socket file and it is owned by the user of the application.\nThis is safe only if the directory of _path_ is not changed by a malicious user.\nSo don't use /tmp/malicious-users-directory/socket.\nNote that /tmp/socket and /tmp/your-private-directory/socket is safe assuming that /tmp has sticky bit.\n\n  # Sequential echo server.\n  # It services only one client at a time.\n  Socket.unix_server_loop(\"/tmp/sock\") {|sock, client_addrinfo|\n    begin\n      IO.copy_stream(sock, sock)\n    ensure\n      sock.close\n    end\n  }","name":"unix_server_loop","namespace":"Socket","path":"Socket.unix_server_loop","type":"class_method","visibility":"public"},"Socket.unix_server_socket":{"description":"creates a UNIX server socket on _path_\n\nIf no block given, it returns a listening socket.\n\nIf a block is given, it is called with the socket and the block value is returned.\nWhen the block exits, the socket is closed and the socket file is removed.\n\n  socket = Socket.unix_server_socket(\"/tmp/s\")\n  p socket                  #=> #<Socket:fd 3>\n  p socket.local_address    #=> #<Addrinfo: /tmp/s SOCK_STREAM>\n\n  Socket.unix_server_socket(\"/tmp/sock\") {|s|\n    p s                     #=> #<Socket:fd 3>\n    p s.local_address       #=> # #<Addrinfo: /tmp/sock SOCK_STREAM>\n  }","name":"unix_server_socket","namespace":"Socket","path":"Socket.unix_server_socket","type":"class_method","visibility":"public"},"Socket.unix_socket_abstract_name?":{"description":"","name":"unix_socket_abstract_name?","namespace":"Socket","path":"Socket.unix_socket_abstract_name?","type":"class_method","visibility":"private","return":[["Boolean"],""]},"Socket.unpack_sockaddr_in":{"description":"Unpacks _sockaddr_ into port and ip_address.\n\n_sockaddr_ should be a string or an addrinfo for AF_INET/AF_INET6.\n\n  sockaddr = Socket.sockaddr_in(80, \"127.0.0.1\")\n  p sockaddr #=> \"\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n  p Socket.unpack_sockaddr_in(sockaddr) #=> [80, \"127.0.0.1\"]","name":"unpack_sockaddr_in","namespace":"Socket","path":"Socket.unpack_sockaddr_in","type":"class_method","visibility":"public"},"Socket.unpack_sockaddr_un":{"description":"Unpacks _sockaddr_ into path.\n\n_sockaddr_ should be a string or an addrinfo for AF_UNIX.\n\n  sockaddr = Socket.sockaddr_un(\"/tmp/sock\")\n  p Socket.unpack_sockaddr_un(sockaddr) #=> \"/tmp/sock\"","name":"unpack_sockaddr_un","namespace":"Socket","path":"Socket.unpack_sockaddr_un","type":"class_method","visibility":"public"},"Socket::AF_APPLETALK":{"description":"AppleTalk protocol","name":"AF_APPLETALK","namespace":"Socket","path":"Socket::AF_APPLETALK","type":"constant","return":null,"visibility":"public"},"Socket::AF_ATM":{"description":"Asynchronous Transfer Mode","name":"AF_ATM","namespace":"Socket","path":"Socket::AF_ATM","type":"constant","return":null,"visibility":"public"},"Socket::AF_AX25":{"description":"AX.25 protocol","name":"AF_AX25","namespace":"Socket","path":"Socket::AF_AX25","type":"constant","return":null,"visibility":"public"},"Socket::AF_CCITT":{"description":"CCITT (now ITU-T) protocols","name":"AF_CCITT","namespace":"Socket","path":"Socket::AF_CCITT","type":"constant","return":null,"visibility":"public"},"Socket::AF_CHAOS":{"description":"MIT CHAOS protocols","name":"AF_CHAOS","namespace":"Socket","path":"Socket::AF_CHAOS","type":"constant","return":null,"visibility":"public"},"Socket::AF_CNT":{"description":"Computer Network Technology","name":"AF_CNT","namespace":"Socket","path":"Socket::AF_CNT","type":"constant","return":null,"visibility":"public"},"Socket::AF_COIP":{"description":"Connection-oriented IP","name":"AF_COIP","namespace":"Socket","path":"Socket::AF_COIP","type":"constant","return":null,"visibility":"public"},"Socket::AF_DATAKIT":{"description":"Datakit protocol","name":"AF_DATAKIT","namespace":"Socket","path":"Socket::AF_DATAKIT","type":"constant","return":null,"visibility":"public"},"Socket::AF_DEC":{"description":"DECnet protocol","name":"AF_DEC","namespace":"Socket","path":"Socket::AF_DEC","type":"constant","return":null,"visibility":"public"},"Socket::AF_DLI":{"description":"DEC Direct Data Link Interface protocol","name":"AF_DLI","namespace":"Socket","path":"Socket::AF_DLI","type":"constant","return":null,"visibility":"public"},"Socket::AF_E164":{"description":"CCITT (ITU-T) E.164 recommendation","name":"AF_E164","namespace":"Socket","path":"Socket::AF_E164","type":"constant","return":null,"visibility":"public"},"Socket::AF_ECMA":{"description":"European Computer Manufacturers protocols","name":"AF_ECMA","namespace":"Socket","path":"Socket::AF_ECMA","type":"constant","return":null,"visibility":"public"},"Socket::AF_HYLINK":{"description":"NSC Hyperchannel protocol","name":"AF_HYLINK","namespace":"Socket","path":"Socket::AF_HYLINK","type":"constant","return":null,"visibility":"public"},"Socket::AF_IMPLINK":{"description":"ARPANET IMP protocol","name":"AF_IMPLINK","namespace":"Socket","path":"Socket::AF_IMPLINK","type":"constant","return":null,"visibility":"public"},"Socket::AF_INET":{"description":"IPv4 protocol","name":"AF_INET","namespace":"Socket","path":"Socket::AF_INET","type":"constant","return":null,"visibility":"public"},"Socket::AF_INET6":{"description":"IPv6 protocol","name":"AF_INET6","namespace":"Socket","path":"Socket::AF_INET6","type":"constant","return":null,"visibility":"public"},"Socket::AF_IPX":{"description":"IPX protocol","name":"AF_IPX","namespace":"Socket","path":"Socket::AF_IPX","type":"constant","return":null,"visibility":"public"},"Socket::AF_ISDN":{"description":"Integrated Services Digital Network","name":"AF_ISDN","namespace":"Socket","path":"Socket::AF_ISDN","type":"constant","return":null,"visibility":"public"},"Socket::AF_ISO":{"description":"ISO Open Systems Interconnection protocols","name":"AF_ISO","namespace":"Socket","path":"Socket::AF_ISO","type":"constant","return":null,"visibility":"public"},"Socket::AF_LAT":{"description":"Local Area Transport protocol","name":"AF_LAT","namespace":"Socket","path":"Socket::AF_LAT","type":"constant","return":null,"visibility":"public"},"Socket::AF_LINK":{"description":"Link layer interface","name":"AF_LINK","namespace":"Socket","path":"Socket::AF_LINK","type":"constant","return":null,"visibility":"public"},"Socket::AF_LOCAL":{"description":"Host-internal protocols","name":"AF_LOCAL","namespace":"Socket","path":"Socket::AF_LOCAL","type":"constant","return":null,"visibility":"public"},"Socket::AF_MAX":{"description":"Maximum address family for this platform","name":"AF_MAX","namespace":"Socket","path":"Socket::AF_MAX","type":"constant","return":null,"visibility":"public"},"Socket::AF_NATM":{"description":"Native ATM access","name":"AF_NATM","namespace":"Socket","path":"Socket::AF_NATM","type":"constant","return":null,"visibility":"public"},"Socket::AF_NDRV":{"description":"Network driver raw access","name":"AF_NDRV","namespace":"Socket","path":"Socket::AF_NDRV","type":"constant","return":null,"visibility":"public"},"Socket::AF_NETBIOS":{"description":"NetBIOS","name":"AF_NETBIOS","namespace":"Socket","path":"Socket::AF_NETBIOS","type":"constant","return":null,"visibility":"public"},"Socket::AF_NETGRAPH":{"description":"Netgraph sockets","name":"AF_NETGRAPH","namespace":"Socket","path":"Socket::AF_NETGRAPH","type":"constant","return":null,"visibility":"public"},"Socket::AF_NS":{"description":"XEROX NS protocols","name":"AF_NS","namespace":"Socket","path":"Socket::AF_NS","type":"constant","return":null,"visibility":"public"},"Socket::AF_OSI":{"description":"ISO Open Systems Interconnection protocols","name":"AF_OSI","namespace":"Socket","path":"Socket::AF_OSI","type":"constant","return":null,"visibility":"public"},"Socket::AF_PACKET":{"description":"Direct link-layer access","name":"AF_PACKET","namespace":"Socket","path":"Socket::AF_PACKET","type":"constant","return":null,"visibility":"public"},"Socket::AF_PPP":{"description":"Point-to-Point Protocol","name":"AF_PPP","namespace":"Socket","path":"Socket::AF_PPP","type":"constant","return":null,"visibility":"public"},"Socket::AF_PUP":{"description":"PARC Universal Packet protocol","name":"AF_PUP","namespace":"Socket","path":"Socket::AF_PUP","type":"constant","return":null,"visibility":"public"},"Socket::AF_ROUTE":{"description":"Internal routing protocol","name":"AF_ROUTE","namespace":"Socket","path":"Socket::AF_ROUTE","type":"constant","return":null,"visibility":"public"},"Socket::AF_SIP":{"description":"Simple Internet Protocol","name":"AF_SIP","namespace":"Socket","path":"Socket::AF_SIP","type":"constant","return":null,"visibility":"public"},"Socket::AF_SNA":{"description":"IBM SNA protocol","name":"AF_SNA","namespace":"Socket","path":"Socket::AF_SNA","type":"constant","return":null,"visibility":"public"},"Socket::AF_SYSTEM":{"description":"","name":"AF_SYSTEM","namespace":"Socket","path":"Socket::AF_SYSTEM","type":"constant","return":null,"visibility":"public"},"Socket::AF_UNIX":{"description":"UNIX sockets","name":"AF_UNIX","namespace":"Socket","path":"Socket::AF_UNIX","type":"constant","return":null,"visibility":"public"},"Socket::AF_UNSPEC":{"description":"Unspecified protocol, any supported address family","name":"AF_UNSPEC","namespace":"Socket","path":"Socket::AF_UNSPEC","type":"constant","return":null,"visibility":"public"},"Socket::AI_ADDRCONFIG":{"description":"Accept only if any address is assigned","name":"AI_ADDRCONFIG","namespace":"Socket","path":"Socket::AI_ADDRCONFIG","type":"constant","return":null,"visibility":"public"},"Socket::AI_ALL":{"description":"Allow all addresses","name":"AI_ALL","namespace":"Socket","path":"Socket::AI_ALL","type":"constant","return":null,"visibility":"public"},"Socket::AI_CANONNAME":{"description":"Fill in the canonical name","name":"AI_CANONNAME","namespace":"Socket","path":"Socket::AI_CANONNAME","type":"constant","return":null,"visibility":"public"},"Socket::AI_DEFAULT":{"description":"Default flags for getaddrinfo","name":"AI_DEFAULT","namespace":"Socket","path":"Socket::AI_DEFAULT","type":"constant","return":null,"visibility":"public"},"Socket::AI_MASK":{"description":"Valid flag mask for getaddrinfo (not for application use)","name":"AI_MASK","namespace":"Socket","path":"Socket::AI_MASK","type":"constant","return":null,"visibility":"public"},"Socket::AI_NUMERICHOST":{"description":"Prevent host name resolution","name":"AI_NUMERICHOST","namespace":"Socket","path":"Socket::AI_NUMERICHOST","type":"constant","return":null,"visibility":"public"},"Socket::AI_NUMERICSERV":{"description":"Prevent service name resolution","name":"AI_NUMERICSERV","namespace":"Socket","path":"Socket::AI_NUMERICSERV","type":"constant","return":null,"visibility":"public"},"Socket::AI_PASSIVE":{"description":"Get address to use with bind()","name":"AI_PASSIVE","namespace":"Socket","path":"Socket::AI_PASSIVE","type":"constant","return":null,"visibility":"public"},"Socket::AI_V4MAPPED":{"description":"Accept IPv4-mapped IPv6 addresses","name":"AI_V4MAPPED","namespace":"Socket","path":"Socket::AI_V4MAPPED","type":"constant","return":null,"visibility":"public"},"Socket::AI_V4MAPPED_CFG":{"description":"Accept IPv4 mapped addresses if the kernel supports it","name":"AI_V4MAPPED_CFG","namespace":"Socket","path":"Socket::AI_V4MAPPED_CFG","type":"constant","return":null,"visibility":"public"},"Socket::AncillaryData":{"description":"Socket::AncillaryData represents the ancillary data (control information)\nused by sendmsg and recvmsg system call.  It contains socket #family,\ncontrol message (cmsg) #level, cmsg #type and cmsg #data.","name":"AncillaryData","namespace":"Socket","path":"Socket::AncillaryData","type":"class","visibility":"public"},"Socket::AncillaryData#cmsg_is?":{"description":"tests the level and type of _ancillarydata_.\n\n  ancdata = Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\")\n  ancdata.cmsg_is?(Socket::IPPROTO_IPV6, Socket::IPV6_PKTINFO) #=> true\n  ancdata.cmsg_is?(:IPV6, :PKTINFO)       #=> true\n  ancdata.cmsg_is?(:IP, :PKTINFO)         #=> false\n  ancdata.cmsg_is?(:SOCKET, :RIGHTS)      #=> false","name":"cmsg_is?","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#cmsg_is?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Socket::AncillaryData#data":{"description":"returns the cmsg data as a string.\n\n  p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\").data\n  #=> \"\"","name":"data","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#data","type":"instance_method","visibility":"public"},"Socket::AncillaryData#family":{"description":"returns the socket family as an integer.\n\n  p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\").family\n  #=> 10","name":"family","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#family","type":"instance_method","visibility":"public"},"Socket::AncillaryData#initialize":{"description":"_family_ should be an integer, a string or a symbol.\n- Socket::AF_INET, \"AF_INET\", \"INET\", :AF_INET, :INET\n- Socket::AF_UNIX, \"AF_UNIX\", \"UNIX\", :AF_UNIX, :UNIX\n- etc.\n\n_cmsg_level_ should be an integer, a string or a symbol.\n- Socket::SOL_SOCKET, \"SOL_SOCKET\", \"SOCKET\", :SOL_SOCKET and :SOCKET\n- Socket::IPPROTO_IP, \"IP\" and :IP\n- Socket::IPPROTO_IPV6, \"IPV6\" and :IPV6\n- Socket::IPPROTO_TCP, \"TCP\" and :TCP\n- etc.\n\n_cmsg_type_ should be an integer, a string or a symbol.\nIf a string/symbol is specified, it is interpreted depend on _cmsg_level_.\n- Socket::SCM_RIGHTS, \"SCM_RIGHTS\", \"RIGHTS\", :SCM_RIGHTS, :RIGHTS for SOL_SOCKET\n- Socket::IP_RECVTTL, \"RECVTTL\" and :RECVTTL for IPPROTO_IP\n- Socket::IPV6_PKTINFO, \"PKTINFO\" and :PKTINFO for IPPROTO_IPV6\n- etc.\n\n_cmsg_data_ should be a string.\n\n  p Socket::AncillaryData.new(:INET, :TCP, :NODELAY, \"\")\n  #=> #<Socket::AncillaryData: INET TCP NODELAY \"\">\n\n  p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\")\n  #=> #<Socket::AncillaryData: INET6 IPV6 PKTINFO \"\">","name":"initialize","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#initialize","type":"instance_method","visibility":"public"},"Socket::AncillaryData#inspect":{"description":"returns a string which shows ancillarydata in human-readable form.\n\n  p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\").inspect\n  #=> \"#<Socket::AncillaryData: INET6 IPV6 PKTINFO \\\"\\\">\"","name":"inspect","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#inspect","type":"instance_method","visibility":"public"},"Socket::AncillaryData#int":{"description":"Returns the data in _ancillarydata_ as an int.\n\nThe size and endian is dependent on the host.\n\n  ancdata = Socket::AncillaryData.int(:UNIX, :SOCKET, :RIGHTS, STDERR.fileno)\n  p ancdata.int #=> 2","name":"int","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#int","type":"instance_method","visibility":"public"},"Socket::AncillaryData#ip_pktinfo":{"description":"Extracts addr, ifindex and spec_dst from IP_PKTINFO ancillary data.\n\nIP_PKTINFO is not standard.\n\nSupported platform: GNU/Linux\n\n  addr = Addrinfo.ip(\"127.0.0.1\")\n  ifindex = 0\n  spec_dest = Addrinfo.ip(\"127.0.0.1\")\n  ancdata = Socket::AncillaryData.ip_pktinfo(addr, ifindex, spec_dest)\n  p ancdata.ip_pktinfo\n  #=> [#<Addrinfo: 127.0.0.1>, 0, #<Addrinfo: 127.0.0.1>]","name":"ip_pktinfo","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#ip_pktinfo","type":"instance_method","visibility":"public"},"Socket::AncillaryData#ipv6_pktinfo":{"description":"Extracts addr and ifindex from IPV6_PKTINFO ancillary data.\n\nIPV6_PKTINFO is defined by RFC 3542.\n\n  addr = Addrinfo.ip(\"::1\")\n  ifindex = 0\n  ancdata = Socket::AncillaryData.ipv6_pktinfo(addr, ifindex)\n  p ancdata.ipv6_pktinfo #=> [#<Addrinfo: ::1>, 0]","name":"ipv6_pktinfo","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#ipv6_pktinfo","type":"instance_method","visibility":"public"},"Socket::AncillaryData#ipv6_pktinfo_addr":{"description":"Extracts addr from IPV6_PKTINFO ancillary data.\n\nIPV6_PKTINFO is defined by RFC 3542.\n\n  addr = Addrinfo.ip(\"::1\")\n  ifindex = 0\n  ancdata = Socket::AncillaryData.ipv6_pktinfo(addr, ifindex)\n  p ancdata.ipv6_pktinfo_addr #=> #<Addrinfo: ::1>","name":"ipv6_pktinfo_addr","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#ipv6_pktinfo_addr","type":"instance_method","visibility":"public"},"Socket::AncillaryData#ipv6_pktinfo_ifindex":{"description":"Extracts ifindex from IPV6_PKTINFO ancillary data.\n\nIPV6_PKTINFO is defined by RFC 3542.\n\n  addr = Addrinfo.ip(\"::1\")\n  ifindex = 0\n  ancdata = Socket::AncillaryData.ipv6_pktinfo(addr, ifindex)\n  p ancdata.ipv6_pktinfo_ifindex #=> 0","name":"ipv6_pktinfo_ifindex","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#ipv6_pktinfo_ifindex","type":"instance_method","visibility":"public"},"Socket::AncillaryData#level":{"description":"returns the cmsg level as an integer.\n\n  p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\").level\n  #=> 41","name":"level","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#level","type":"instance_method","visibility":"public"},"Socket::AncillaryData#timestamp":{"description":"returns the timestamp as a time object.\n\n_ancillarydata_ should be one of following type:\n- SOL_SOCKET/SCM_TIMESTAMP (microsecond) GNU/Linux, FreeBSD, NetBSD, OpenBSD, Solaris, MacOS X\n- SOL_SOCKET/SCM_TIMESTAMPNS (nanosecond) GNU/Linux\n- SOL_SOCKET/SCM_BINTIME (2**(-64) second) FreeBSD\n\n  Addrinfo.udp(\"127.0.0.1\", 0).bind {|s1|\n    Addrinfo.udp(\"127.0.0.1\", 0).bind {|s2|\n      s1.setsockopt(:SOCKET, :TIMESTAMP, true)\n      s2.send \"a\", 0, s1.local_address\n      ctl = s1.recvmsg.last\n      p ctl    #=> #<Socket::AncillaryData: INET SOCKET TIMESTAMP 2009-02-24 17:35:46.775581>\n      t = ctl.timestamp\n      p t      #=> 2009-02-24 17:35:46 +0900\n      p t.usec #=> 775581\n      p t.nsec #=> 775581000\n    }\n  }","name":"timestamp","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#timestamp","type":"instance_method","visibility":"public"},"Socket::AncillaryData#type":{"description":"returns the cmsg type as an integer.\n\n  p Socket::AncillaryData.new(:INET6, :IPV6, :PKTINFO, \"\").type\n  #=> 2","name":"type","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#type","type":"instance_method","visibility":"public"},"Socket::AncillaryData#unix_rights":{"description":"returns the array of IO objects for SCM_RIGHTS control message in UNIX domain socket.\n\nThe class of the IO objects in the array is IO or Socket.\n\nThe array is attached to _ancillarydata_ when it is instantiated.\nFor example, BasicSocket#recvmsg attach the array when\nreceives a SCM_RIGHTS control message and :scm_rights=>true option is given.\n\n  # recvmsg needs :scm_rights=>true for unix_rights\n  s1, s2 = UNIXSocket.pair\n  p s1                                         #=> #<UNIXSocket:fd 3>\n  s1.sendmsg \"stdin and a socket\", 0, nil, Socket::AncillaryData.unix_rights(STDIN, s1)\n  _, _, _, ctl = s2.recvmsg(:scm_rights=>true)\n  p ctl                                        #=> #<Socket::AncillaryData: UNIX SOCKET RIGHTS 6 7>\n  p ctl.unix_rights                            #=> [#<IO:fd 6>, #<Socket:fd 7>]\n  p File.identical?(STDIN, ctl.unix_rights[0]) #=> true\n  p File.identical?(s1, ctl.unix_rights[1])    #=> true\n\n  # If :scm_rights=>true is not given, unix_rights returns nil\n  s1, s2 = UNIXSocket.pair\n  s1.sendmsg \"stdin and a socket\", 0, nil, Socket::AncillaryData.unix_rights(STDIN, s1)\n  _, _, _, ctl = s2.recvmsg\n  p ctl #=> #<Socket::AncillaryData: UNIX SOCKET RIGHTS 6 7>\n  p ctl.unix_rights #=> nil","name":"unix_rights","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData#unix_rights","type":"instance_method","visibility":"public"},"Socket::AncillaryData.int":{"description":"Creates a new Socket::AncillaryData object which contains a int as data.\n\nThe size and endian is dependent on the host.\n\n  p Socket::AncillaryData.int(:UNIX, :SOCKET, :RIGHTS, STDERR.fileno)\n  #=> #<Socket::AncillaryData: UNIX SOCKET RIGHTS 2>","name":"int","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData.int","type":"class_method","visibility":"public"},"Socket::AncillaryData.ip_pktinfo":{"description":"Returns new ancillary data for IP_PKTINFO.\n\nIf spec_dst is not given, addr is used.\n\nIP_PKTINFO is not standard.\n\nSupported platform: GNU/Linux\n\n  addr = Addrinfo.ip(\"127.0.0.1\")\n  ifindex = 0\n  spec_dst = Addrinfo.ip(\"127.0.0.1\")\n  p Socket::AncillaryData.ip_pktinfo(addr, ifindex, spec_dst)\n  #=> #<Socket::AncillaryData: INET IP PKTINFO 127.0.0.1 ifindex:0 spec_dst:127.0.0.1>","name":"ip_pktinfo","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData.ip_pktinfo","type":"class_method","visibility":"public"},"Socket::AncillaryData.ipv6_pktinfo":{"description":"Returns new ancillary data for IPV6_PKTINFO.\n\nIPV6_PKTINFO is defined by RFC 3542.\n\n  addr = Addrinfo.ip(\"::1\")\n  ifindex = 0\n  p Socket::AncillaryData.ipv6_pktinfo(addr, ifindex)\n  #=> #<Socket::AncillaryData: INET6 IPV6 PKTINFO ::1 ifindex:0>","name":"ipv6_pktinfo","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData.ipv6_pktinfo","type":"class_method","visibility":"public"},"Socket::AncillaryData.unix_rights":{"description":"Creates a new Socket::AncillaryData object which contains file descriptors as data.\n\n  p Socket::AncillaryData.unix_rights(STDERR)\n  #=> #<Socket::AncillaryData: UNIX SOCKET RIGHTS 2>","name":"unix_rights","namespace":"Socket::AncillaryData","path":"Socket::AncillaryData.unix_rights","type":"class_method","visibility":"public"},"Socket::Constants":{"description":"Socket::Constants provides socket-related constants.  All possible\nsocket constants are listed in the documentation but they may not all\nbe present on your platform.\n\nIf the underlying platform doesn't define a constant the corresponding\nRuby constant is not defined.","name":"Constants","namespace":"Socket","path":"Socket::Constants","type":"module","visibility":"public"},"Socket::Constants::AF_APPLETALK":{"description":"AppleTalk protocol","name":"AF_APPLETALK","namespace":"Socket::Constants","path":"Socket::Constants::AF_APPLETALK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_ATM":{"description":"Asynchronous Transfer Mode","name":"AF_ATM","namespace":"Socket::Constants","path":"Socket::Constants::AF_ATM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_AX25":{"description":"AX.25 protocol","name":"AF_AX25","namespace":"Socket::Constants","path":"Socket::Constants::AF_AX25","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_CCITT":{"description":"CCITT (now ITU-T) protocols","name":"AF_CCITT","namespace":"Socket::Constants","path":"Socket::Constants::AF_CCITT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_CHAOS":{"description":"MIT CHAOS protocols","name":"AF_CHAOS","namespace":"Socket::Constants","path":"Socket::Constants::AF_CHAOS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_CNT":{"description":"Computer Network Technology","name":"AF_CNT","namespace":"Socket::Constants","path":"Socket::Constants::AF_CNT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_COIP":{"description":"Connection-oriented IP","name":"AF_COIP","namespace":"Socket::Constants","path":"Socket::Constants::AF_COIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_DATAKIT":{"description":"Datakit protocol","name":"AF_DATAKIT","namespace":"Socket::Constants","path":"Socket::Constants::AF_DATAKIT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_DEC":{"description":"DECnet protocol","name":"AF_DEC","namespace":"Socket::Constants","path":"Socket::Constants::AF_DEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_DLI":{"description":"DEC Direct Data Link Interface protocol","name":"AF_DLI","namespace":"Socket::Constants","path":"Socket::Constants::AF_DLI","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_E164":{"description":"CCITT (ITU-T) E.164 recommendation","name":"AF_E164","namespace":"Socket::Constants","path":"Socket::Constants::AF_E164","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_ECMA":{"description":"European Computer Manufacturers protocols","name":"AF_ECMA","namespace":"Socket::Constants","path":"Socket::Constants::AF_ECMA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_HYLINK":{"description":"NSC Hyperchannel protocol","name":"AF_HYLINK","namespace":"Socket::Constants","path":"Socket::Constants::AF_HYLINK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_IMPLINK":{"description":"ARPANET IMP protocol","name":"AF_IMPLINK","namespace":"Socket::Constants","path":"Socket::Constants::AF_IMPLINK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_INET":{"description":"IPv4 protocol","name":"AF_INET","namespace":"Socket::Constants","path":"Socket::Constants::AF_INET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_INET6":{"description":"IPv6 protocol","name":"AF_INET6","namespace":"Socket::Constants","path":"Socket::Constants::AF_INET6","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_IPX":{"description":"IPX protocol","name":"AF_IPX","namespace":"Socket::Constants","path":"Socket::Constants::AF_IPX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_ISDN":{"description":"Integrated Services Digital Network","name":"AF_ISDN","namespace":"Socket::Constants","path":"Socket::Constants::AF_ISDN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_ISO":{"description":"ISO Open Systems Interconnection protocols","name":"AF_ISO","namespace":"Socket::Constants","path":"Socket::Constants::AF_ISO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_LAT":{"description":"Local Area Transport protocol","name":"AF_LAT","namespace":"Socket::Constants","path":"Socket::Constants::AF_LAT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_LINK":{"description":"Link layer interface","name":"AF_LINK","namespace":"Socket::Constants","path":"Socket::Constants::AF_LINK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_LOCAL":{"description":"Host-internal protocols","name":"AF_LOCAL","namespace":"Socket::Constants","path":"Socket::Constants::AF_LOCAL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_MAX":{"description":"Maximum address family for this platform","name":"AF_MAX","namespace":"Socket::Constants","path":"Socket::Constants::AF_MAX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_NATM":{"description":"Native ATM access","name":"AF_NATM","namespace":"Socket::Constants","path":"Socket::Constants::AF_NATM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_NDRV":{"description":"Network driver raw access","name":"AF_NDRV","namespace":"Socket::Constants","path":"Socket::Constants::AF_NDRV","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_NETBIOS":{"description":"NetBIOS","name":"AF_NETBIOS","namespace":"Socket::Constants","path":"Socket::Constants::AF_NETBIOS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_NETGRAPH":{"description":"Netgraph sockets","name":"AF_NETGRAPH","namespace":"Socket::Constants","path":"Socket::Constants::AF_NETGRAPH","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_NS":{"description":"XEROX NS protocols","name":"AF_NS","namespace":"Socket::Constants","path":"Socket::Constants::AF_NS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_OSI":{"description":"ISO Open Systems Interconnection protocols","name":"AF_OSI","namespace":"Socket::Constants","path":"Socket::Constants::AF_OSI","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_PACKET":{"description":"Direct link-layer access","name":"AF_PACKET","namespace":"Socket::Constants","path":"Socket::Constants::AF_PACKET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_PPP":{"description":"Point-to-Point Protocol","name":"AF_PPP","namespace":"Socket::Constants","path":"Socket::Constants::AF_PPP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_PUP":{"description":"PARC Universal Packet protocol","name":"AF_PUP","namespace":"Socket::Constants","path":"Socket::Constants::AF_PUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_ROUTE":{"description":"Internal routing protocol","name":"AF_ROUTE","namespace":"Socket::Constants","path":"Socket::Constants::AF_ROUTE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_SIP":{"description":"Simple Internet Protocol","name":"AF_SIP","namespace":"Socket::Constants","path":"Socket::Constants::AF_SIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_SNA":{"description":"IBM SNA protocol","name":"AF_SNA","namespace":"Socket::Constants","path":"Socket::Constants::AF_SNA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_SYSTEM":{"description":"","name":"AF_SYSTEM","namespace":"Socket::Constants","path":"Socket::Constants::AF_SYSTEM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_UNIX":{"description":"UNIX sockets","name":"AF_UNIX","namespace":"Socket::Constants","path":"Socket::Constants::AF_UNIX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AF_UNSPEC":{"description":"Unspecified protocol, any supported address family","name":"AF_UNSPEC","namespace":"Socket::Constants","path":"Socket::Constants::AF_UNSPEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_ADDRCONFIG":{"description":"Accept only if any address is assigned","name":"AI_ADDRCONFIG","namespace":"Socket::Constants","path":"Socket::Constants::AI_ADDRCONFIG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_ALL":{"description":"Allow all addresses","name":"AI_ALL","namespace":"Socket::Constants","path":"Socket::Constants::AI_ALL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_CANONNAME":{"description":"Fill in the canonical name","name":"AI_CANONNAME","namespace":"Socket::Constants","path":"Socket::Constants::AI_CANONNAME","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_DEFAULT":{"description":"Default flags for getaddrinfo","name":"AI_DEFAULT","namespace":"Socket::Constants","path":"Socket::Constants::AI_DEFAULT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_MASK":{"description":"Valid flag mask for getaddrinfo (not for application use)","name":"AI_MASK","namespace":"Socket::Constants","path":"Socket::Constants::AI_MASK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_NUMERICHOST":{"description":"Prevent host name resolution","name":"AI_NUMERICHOST","namespace":"Socket::Constants","path":"Socket::Constants::AI_NUMERICHOST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_NUMERICSERV":{"description":"Prevent service name resolution","name":"AI_NUMERICSERV","namespace":"Socket::Constants","path":"Socket::Constants::AI_NUMERICSERV","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_PASSIVE":{"description":"Get address to use with bind()","name":"AI_PASSIVE","namespace":"Socket::Constants","path":"Socket::Constants::AI_PASSIVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_V4MAPPED":{"description":"Accept IPv4-mapped IPv6 addresses","name":"AI_V4MAPPED","namespace":"Socket::Constants","path":"Socket::Constants::AI_V4MAPPED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::AI_V4MAPPED_CFG":{"description":"Accept IPv4 mapped addresses if the kernel supports it","name":"AI_V4MAPPED_CFG","namespace":"Socket::Constants","path":"Socket::Constants::AI_V4MAPPED_CFG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_ADDRFAMILY":{"description":"Address family for hostname not supported","name":"EAI_ADDRFAMILY","namespace":"Socket::Constants","path":"Socket::Constants::EAI_ADDRFAMILY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_AGAIN":{"description":"Temporary failure in name resolution","name":"EAI_AGAIN","namespace":"Socket::Constants","path":"Socket::Constants::EAI_AGAIN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_BADFLAGS":{"description":"Invalid flags","name":"EAI_BADFLAGS","namespace":"Socket::Constants","path":"Socket::Constants::EAI_BADFLAGS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_BADHINTS":{"description":"Invalid value for hints","name":"EAI_BADHINTS","namespace":"Socket::Constants","path":"Socket::Constants::EAI_BADHINTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_FAIL":{"description":"Non-recoverable failure in name resolution","name":"EAI_FAIL","namespace":"Socket::Constants","path":"Socket::Constants::EAI_FAIL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_FAMILY":{"description":"Address family not supported","name":"EAI_FAMILY","namespace":"Socket::Constants","path":"Socket::Constants::EAI_FAMILY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_MAX":{"description":"Maximum error code from getaddrinfo","name":"EAI_MAX","namespace":"Socket::Constants","path":"Socket::Constants::EAI_MAX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_MEMORY":{"description":"Memory allocation failure","name":"EAI_MEMORY","namespace":"Socket::Constants","path":"Socket::Constants::EAI_MEMORY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_NODATA":{"description":"No address associated with hostname","name":"EAI_NODATA","namespace":"Socket::Constants","path":"Socket::Constants::EAI_NODATA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_NONAME":{"description":"Hostname nor servname, or not known","name":"EAI_NONAME","namespace":"Socket::Constants","path":"Socket::Constants::EAI_NONAME","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_OVERFLOW":{"description":"Argument buffer overflow","name":"EAI_OVERFLOW","namespace":"Socket::Constants","path":"Socket::Constants::EAI_OVERFLOW","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_PROTOCOL":{"description":"Resolved protocol is unknown","name":"EAI_PROTOCOL","namespace":"Socket::Constants","path":"Socket::Constants::EAI_PROTOCOL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_SERVICE":{"description":"Servname not supported for socket type","name":"EAI_SERVICE","namespace":"Socket::Constants","path":"Socket::Constants::EAI_SERVICE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_SOCKTYPE":{"description":"Socket type not supported","name":"EAI_SOCKTYPE","namespace":"Socket::Constants","path":"Socket::Constants::EAI_SOCKTYPE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::EAI_SYSTEM":{"description":"System error returned in errno","name":"EAI_SYSTEM","namespace":"Socket::Constants","path":"Socket::Constants::EAI_SYSTEM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_802_1Q_VLAN":{"description":"802.1Q VLAN device","name":"IFF_802_1Q_VLAN","namespace":"Socket::Constants","path":"Socket::Constants::IFF_802_1Q_VLAN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_ALLMULTI":{"description":"receive all multicast packets","name":"IFF_ALLMULTI","namespace":"Socket::Constants","path":"Socket::Constants::IFF_ALLMULTI","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_ALTPHYS":{"description":"use alternate physical connection","name":"IFF_ALTPHYS","namespace":"Socket::Constants","path":"Socket::Constants::IFF_ALTPHYS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_AUTOMEDIA":{"description":"auto media select active","name":"IFF_AUTOMEDIA","namespace":"Socket::Constants","path":"Socket::Constants::IFF_AUTOMEDIA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_BONDING":{"description":"bonding master or slave","name":"IFF_BONDING","namespace":"Socket::Constants","path":"Socket::Constants::IFF_BONDING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_BRIDGE_PORT":{"description":"device used as bridge port","name":"IFF_BRIDGE_PORT","namespace":"Socket::Constants","path":"Socket::Constants::IFF_BRIDGE_PORT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_BROADCAST":{"description":"broadcast address valid","name":"IFF_BROADCAST","namespace":"Socket::Constants","path":"Socket::Constants::IFF_BROADCAST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_CANTCHANGE":{"description":"flags not changeable","name":"IFF_CANTCHANGE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_CANTCHANGE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_CANTCONFIG":{"description":"unconfigurable using ioctl(2)","name":"IFF_CANTCONFIG","namespace":"Socket::Constants","path":"Socket::Constants::IFF_CANTCONFIG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DEBUG":{"description":"turn on debugging","name":"IFF_DEBUG","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DEBUG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DISABLE_NETPOLL":{"description":"disable netpoll at run-time","name":"IFF_DISABLE_NETPOLL","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DISABLE_NETPOLL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DONT_BRIDGE":{"description":"disallow bridging this ether dev","name":"IFF_DONT_BRIDGE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DONT_BRIDGE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DORMANT":{"description":"driver signals dormant","name":"IFF_DORMANT","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DORMANT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DRV_OACTIVE":{"description":"tx hardware queue is full","name":"IFF_DRV_OACTIVE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DRV_OACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DRV_RUNNING":{"description":"resources allocated","name":"IFF_DRV_RUNNING","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DRV_RUNNING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DYING":{"description":"interface is winding down","name":"IFF_DYING","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DYING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_DYNAMIC":{"description":"dialup device with changing addresses","name":"IFF_DYNAMIC","namespace":"Socket::Constants","path":"Socket::Constants::IFF_DYNAMIC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_EBRIDGE":{"description":"ethernet bridging device","name":"IFF_EBRIDGE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_EBRIDGE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_ECHO":{"description":"echo sent packets","name":"IFF_ECHO","namespace":"Socket::Constants","path":"Socket::Constants::IFF_ECHO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_ISATAP":{"description":"ISATAP interface (RFC4214)","name":"IFF_ISATAP","namespace":"Socket::Constants","path":"Socket::Constants::IFF_ISATAP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_LINK0":{"description":"per link layer defined bit 0","name":"IFF_LINK0","namespace":"Socket::Constants","path":"Socket::Constants::IFF_LINK0","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_LINK1":{"description":"per link layer defined bit 1","name":"IFF_LINK1","namespace":"Socket::Constants","path":"Socket::Constants::IFF_LINK1","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_LINK2":{"description":"per link layer defined bit 2","name":"IFF_LINK2","namespace":"Socket::Constants","path":"Socket::Constants::IFF_LINK2","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_LIVE_ADDR_CHANGE":{"description":"hardware address change when it's running","name":"IFF_LIVE_ADDR_CHANGE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_LIVE_ADDR_CHANGE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_LOOPBACK":{"description":"loopback net","name":"IFF_LOOPBACK","namespace":"Socket::Constants","path":"Socket::Constants::IFF_LOOPBACK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_LOWER_UP":{"description":"driver signals L1 up","name":"IFF_LOWER_UP","namespace":"Socket::Constants","path":"Socket::Constants::IFF_LOWER_UP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MACVLAN_PORT":{"description":"device used as macvlan port","name":"IFF_MACVLAN_PORT","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MACVLAN_PORT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MASTER":{"description":"master of a load balancer","name":"IFF_MASTER","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MASTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MASTER_8023AD":{"description":"bonding master, 802.3ad.","name":"IFF_MASTER_8023AD","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MASTER_8023AD","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MASTER_ALB":{"description":"bonding master, balance-alb.","name":"IFF_MASTER_ALB","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MASTER_ALB","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MASTER_ARPMON":{"description":"bonding master, ARP mon in use","name":"IFF_MASTER_ARPMON","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MASTER_ARPMON","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MONITOR":{"description":"user-requested monitor mode","name":"IFF_MONITOR","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MONITOR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_MULTICAST":{"description":"supports multicast","name":"IFF_MULTICAST","namespace":"Socket::Constants","path":"Socket::Constants::IFF_MULTICAST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_NOARP":{"description":"no address resolution protocol","name":"IFF_NOARP","namespace":"Socket::Constants","path":"Socket::Constants::IFF_NOARP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_NOTRAILERS":{"description":"avoid use of trailers","name":"IFF_NOTRAILERS","namespace":"Socket::Constants","path":"Socket::Constants::IFF_NOTRAILERS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_OACTIVE":{"description":"transmission in progress","name":"IFF_OACTIVE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_OACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_OVS_DATAPATH":{"description":"device used as Open vSwitch datapath port","name":"IFF_OVS_DATAPATH","namespace":"Socket::Constants","path":"Socket::Constants::IFF_OVS_DATAPATH","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_POINTOPOINT":{"description":"point-to-point link","name":"IFF_POINTOPOINT","namespace":"Socket::Constants","path":"Socket::Constants::IFF_POINTOPOINT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_PORTSEL":{"description":"can set media type","name":"IFF_PORTSEL","namespace":"Socket::Constants","path":"Socket::Constants::IFF_PORTSEL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_PPROMISC":{"description":"user-requested promisc mode","name":"IFF_PPROMISC","namespace":"Socket::Constants","path":"Socket::Constants::IFF_PPROMISC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_PROMISC":{"description":"receive all packets","name":"IFF_PROMISC","namespace":"Socket::Constants","path":"Socket::Constants::IFF_PROMISC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_RENAMING":{"description":"interface is being renamed","name":"IFF_RENAMING","namespace":"Socket::Constants","path":"Socket::Constants::IFF_RENAMING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_ROUTE":{"description":"routing entry installed","name":"IFF_ROUTE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_ROUTE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_RUNNING":{"description":"resources allocated","name":"IFF_RUNNING","namespace":"Socket::Constants","path":"Socket::Constants::IFF_RUNNING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_SIMPLEX":{"description":"can't hear own transmissions","name":"IFF_SIMPLEX","namespace":"Socket::Constants","path":"Socket::Constants::IFF_SIMPLEX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_SLAVE":{"description":"slave of a load balancer","name":"IFF_SLAVE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_SLAVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_SLAVE_INACTIVE":{"description":"bonding slave not the curr. active","name":"IFF_SLAVE_INACTIVE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_SLAVE_INACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_SLAVE_NEEDARP":{"description":"need ARPs for validation","name":"IFF_SLAVE_NEEDARP","namespace":"Socket::Constants","path":"Socket::Constants::IFF_SLAVE_NEEDARP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_SMART":{"description":"interface manages own routes","name":"IFF_SMART","namespace":"Socket::Constants","path":"Socket::Constants::IFF_SMART","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_STATICARP":{"description":"static ARP","name":"IFF_STATICARP","namespace":"Socket::Constants","path":"Socket::Constants::IFF_STATICARP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_SUPP_NOFCS":{"description":"sending custom FCS","name":"IFF_SUPP_NOFCS","namespace":"Socket::Constants","path":"Socket::Constants::IFF_SUPP_NOFCS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_TEAM_PORT":{"description":"used as team port","name":"IFF_TEAM_PORT","namespace":"Socket::Constants","path":"Socket::Constants::IFF_TEAM_PORT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_TX_SKB_SHARING":{"description":"sharing skbs on transmit","name":"IFF_TX_SKB_SHARING","namespace":"Socket::Constants","path":"Socket::Constants::IFF_TX_SKB_SHARING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_UNICAST_FLT":{"description":"unicast filtering","name":"IFF_UNICAST_FLT","namespace":"Socket::Constants","path":"Socket::Constants::IFF_UNICAST_FLT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_UP":{"description":"interface is up","name":"IFF_UP","namespace":"Socket::Constants","path":"Socket::Constants::IFF_UP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_VOLATILE":{"description":"volatile flags","name":"IFF_VOLATILE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_VOLATILE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_WAN_HDLC":{"description":"WAN HDLC device","name":"IFF_WAN_HDLC","namespace":"Socket::Constants","path":"Socket::Constants::IFF_WAN_HDLC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFF_XMIT_DST_RELEASE":{"description":"dev_hard_start_xmit() is allowed to release skb->dst","name":"IFF_XMIT_DST_RELEASE","namespace":"Socket::Constants","path":"Socket::Constants::IFF_XMIT_DST_RELEASE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IFNAMSIZ":{"description":"Maximum interface name size","name":"IFNAMSIZ","namespace":"Socket::Constants","path":"Socket::Constants::IFNAMSIZ","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IF_NAMESIZE":{"description":"Maximum interface name size","name":"IF_NAMESIZE","namespace":"Socket::Constants","path":"Socket::Constants::IF_NAMESIZE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_ALLHOSTS_GROUP":{"description":"Multicast group for all systems on this subset","name":"INADDR_ALLHOSTS_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_ALLHOSTS_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_ANY":{"description":"A socket bound to INADDR_ANY receives packets from all interfaces and sends from the default IP address","name":"INADDR_ANY","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_ANY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_BROADCAST":{"description":"The network broadcast address","name":"INADDR_BROADCAST","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_BROADCAST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_LOOPBACK":{"description":"The loopback address","name":"INADDR_LOOPBACK","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_LOOPBACK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_MAX_LOCAL_GROUP":{"description":"The last local network multicast group","name":"INADDR_MAX_LOCAL_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_MAX_LOCAL_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_NONE":{"description":"A bitmask for matching no valid IP address","name":"INADDR_NONE","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_NONE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INADDR_UNSPEC_GROUP":{"description":"The reserved multicast group","name":"INADDR_UNSPEC_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::INADDR_UNSPEC_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INET6_ADDRSTRLEN":{"description":"Maximum length of an IPv6 address string","name":"INET6_ADDRSTRLEN","namespace":"Socket::Constants","path":"Socket::Constants::INET6_ADDRSTRLEN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::INET_ADDRSTRLEN":{"description":"Maximum length of an IPv4 address string","name":"INET_ADDRSTRLEN","namespace":"Socket::Constants","path":"Socket::Constants::INET_ADDRSTRLEN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPORT_RESERVED":{"description":"Default minimum address for bind or connect","name":"IPPORT_RESERVED","namespace":"Socket::Constants","path":"Socket::Constants::IPPORT_RESERVED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPORT_USERRESERVED":{"description":"Default maximum address for bind or connect","name":"IPPORT_USERRESERVED","namespace":"Socket::Constants","path":"Socket::Constants::IPPORT_USERRESERVED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_AH":{"description":"IP6 auth header","name":"IPPROTO_AH","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_AH","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_BIP":{"description":"","name":"IPPROTO_BIP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_BIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_DSTOPTS":{"description":"IP6 destination option","name":"IPPROTO_DSTOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_DSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_EGP":{"description":"Exterior Gateway Protocol","name":"IPPROTO_EGP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_EGP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_EON":{"description":"ISO cnlp","name":"IPPROTO_EON","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_EON","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_ESP":{"description":"IP6 Encapsulated Security Payload","name":"IPPROTO_ESP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_ESP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_FRAGMENT":{"description":"IP6 fragmentation header","name":"IPPROTO_FRAGMENT","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_FRAGMENT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_GGP":{"description":"Gateway to Gateway Protocol","name":"IPPROTO_GGP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_GGP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_HELLO":{"description":"\"hello\" routing protocol","name":"IPPROTO_HELLO","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_HELLO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_HOPOPTS":{"description":"IP6 hop-by-hop options","name":"IPPROTO_HOPOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_HOPOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_ICMP":{"description":"Control message protocol","name":"IPPROTO_ICMP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_ICMP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_ICMPV6":{"description":"ICMP6","name":"IPPROTO_ICMPV6","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_ICMPV6","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_IDP":{"description":"XNS IDP","name":"IPPROTO_IDP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_IDP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_IGMP":{"description":"Group Management Protocol","name":"IPPROTO_IGMP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_IGMP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_IP":{"description":"Dummy protocol for IP","name":"IPPROTO_IP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_IP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_IPV6":{"description":"IP6 header","name":"IPPROTO_IPV6","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_IPV6","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_MAX":{"description":"Maximum IPPROTO constant","name":"IPPROTO_MAX","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_MAX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_ND":{"description":"Sun net disk protocol","name":"IPPROTO_ND","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_ND","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_NONE":{"description":"IP6 no next header","name":"IPPROTO_NONE","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_NONE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_PUP":{"description":"PARC Universal Packet protocol","name":"IPPROTO_PUP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_PUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_RAW":{"description":"Raw IP packet","name":"IPPROTO_RAW","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_RAW","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_ROUTING":{"description":"IP6 routing header","name":"IPPROTO_ROUTING","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_ROUTING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_TCP":{"description":"TCP","name":"IPPROTO_TCP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_TCP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_TP":{"description":"ISO transport protocol class 4","name":"IPPROTO_TP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_TP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_UDP":{"description":"UDP","name":"IPPROTO_UDP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_UDP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPPROTO_XTP":{"description":"Xpress Transport Protocol","name":"IPPROTO_XTP","namespace":"Socket::Constants","path":"Socket::Constants::IPPROTO_XTP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_CHECKSUM":{"description":"Checksum offset for raw sockets","name":"IPV6_CHECKSUM","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_CHECKSUM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_DONTFRAG":{"description":"Don't fragment packets","name":"IPV6_DONTFRAG","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_DONTFRAG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_DSTOPTS":{"description":"Destination option","name":"IPV6_DSTOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_DSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_HOPLIMIT":{"description":"Hop limit","name":"IPV6_HOPLIMIT","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_HOPLIMIT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_HOPOPTS":{"description":"Hop-by-hop option","name":"IPV6_HOPOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_HOPOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_JOIN_GROUP":{"description":"Join a group membership","name":"IPV6_JOIN_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_JOIN_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_LEAVE_GROUP":{"description":"Leave a group membership","name":"IPV6_LEAVE_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_LEAVE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_MULTICAST_HOPS":{"description":"IP6 multicast hops","name":"IPV6_MULTICAST_HOPS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_MULTICAST_HOPS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_MULTICAST_IF":{"description":"IP6 multicast interface","name":"IPV6_MULTICAST_IF","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_MULTICAST_IF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_MULTICAST_LOOP":{"description":"IP6 multicast loopback","name":"IPV6_MULTICAST_LOOP","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_MULTICAST_LOOP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_NEXTHOP":{"description":"Next hop address","name":"IPV6_NEXTHOP","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_NEXTHOP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_PATHMTU":{"description":"Retrieve current path MTU","name":"IPV6_PATHMTU","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_PATHMTU","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_PKTINFO":{"description":"Receive packet information with datagram","name":"IPV6_PKTINFO","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_PKTINFO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVDSTOPTS":{"description":"Receive all IP6 options for response","name":"IPV6_RECVDSTOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVDSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVHOPLIMIT":{"description":"Receive hop limit with datagram","name":"IPV6_RECVHOPLIMIT","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVHOPLIMIT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVHOPOPTS":{"description":"Receive hop-by-hop options","name":"IPV6_RECVHOPOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVHOPOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVPATHMTU":{"description":"Receive current path MTU with datagram","name":"IPV6_RECVPATHMTU","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVPATHMTU","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVPKTINFO":{"description":"Receive destination IP address and incoming interface","name":"IPV6_RECVPKTINFO","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVPKTINFO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVRTHDR":{"description":"Receive routing header","name":"IPV6_RECVRTHDR","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVRTHDR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RECVTCLASS":{"description":"Receive traffic class","name":"IPV6_RECVTCLASS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RECVTCLASS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RTHDR":{"description":"Allows removal of sticky routing headers","name":"IPV6_RTHDR","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RTHDR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RTHDRDSTOPTS":{"description":"Allows removal of sticky destination options header","name":"IPV6_RTHDRDSTOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RTHDRDSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_RTHDR_TYPE_0":{"description":"Routing header type 0","name":"IPV6_RTHDR_TYPE_0","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_RTHDR_TYPE_0","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_TCLASS":{"description":"Specify the traffic class","name":"IPV6_TCLASS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_TCLASS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_UNICAST_HOPS":{"description":"IP6 unicast hops","name":"IPV6_UNICAST_HOPS","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_UNICAST_HOPS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_USE_MIN_MTU":{"description":"Use the minimum MTU size","name":"IPV6_USE_MIN_MTU","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_USE_MIN_MTU","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPV6_V6ONLY":{"description":"Only bind IPv6 with a wildcard bind","name":"IPV6_V6ONLY","namespace":"Socket::Constants","path":"Socket::Constants::IPV6_V6ONLY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IPX_TYPE":{"description":"","name":"IPX_TYPE","namespace":"Socket::Constants","path":"Socket::Constants::IPX_TYPE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_ADD_MEMBERSHIP":{"description":"Add a multicast group membership","name":"IP_ADD_MEMBERSHIP","namespace":"Socket::Constants","path":"Socket::Constants::IP_ADD_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_ADD_SOURCE_MEMBERSHIP":{"description":"Add a multicast group membership","name":"IP_ADD_SOURCE_MEMBERSHIP","namespace":"Socket::Constants","path":"Socket::Constants::IP_ADD_SOURCE_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_BLOCK_SOURCE":{"description":"Block IPv4 multicast packets with a give source address","name":"IP_BLOCK_SOURCE","namespace":"Socket::Constants","path":"Socket::Constants::IP_BLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_DEFAULT_MULTICAST_LOOP":{"description":"Default multicast loopback","name":"IP_DEFAULT_MULTICAST_LOOP","namespace":"Socket::Constants","path":"Socket::Constants::IP_DEFAULT_MULTICAST_LOOP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_DEFAULT_MULTICAST_TTL":{"description":"Default multicast TTL","name":"IP_DEFAULT_MULTICAST_TTL","namespace":"Socket::Constants","path":"Socket::Constants::IP_DEFAULT_MULTICAST_TTL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_DONTFRAG":{"description":"Don't fragment packets","name":"IP_DONTFRAG","namespace":"Socket::Constants","path":"Socket::Constants::IP_DONTFRAG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_DROP_MEMBERSHIP":{"description":"Drop a multicast group membership","name":"IP_DROP_MEMBERSHIP","namespace":"Socket::Constants","path":"Socket::Constants::IP_DROP_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_DROP_SOURCE_MEMBERSHIP":{"description":"Drop a multicast group membership","name":"IP_DROP_SOURCE_MEMBERSHIP","namespace":"Socket::Constants","path":"Socket::Constants::IP_DROP_SOURCE_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_FREEBIND":{"description":"Allow binding to nonexistent IP addresses","name":"IP_FREEBIND","namespace":"Socket::Constants","path":"Socket::Constants::IP_FREEBIND","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_HDRINCL":{"description":"Header is included with data","name":"IP_HDRINCL","namespace":"Socket::Constants","path":"Socket::Constants::IP_HDRINCL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_IPSEC_POLICY":{"description":"IPsec security policy","name":"IP_IPSEC_POLICY","namespace":"Socket::Constants","path":"Socket::Constants::IP_IPSEC_POLICY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MAX_MEMBERSHIPS":{"description":"Maximum number multicast groups a socket can join","name":"IP_MAX_MEMBERSHIPS","namespace":"Socket::Constants","path":"Socket::Constants::IP_MAX_MEMBERSHIPS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MINTTL":{"description":"Minimum TTL allowed for received packets","name":"IP_MINTTL","namespace":"Socket::Constants","path":"Socket::Constants::IP_MINTTL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MSFILTER":{"description":"Multicast source filtering","name":"IP_MSFILTER","namespace":"Socket::Constants","path":"Socket::Constants::IP_MSFILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MTU":{"description":"The Maximum Transmission Unit of the socket","name":"IP_MTU","namespace":"Socket::Constants","path":"Socket::Constants::IP_MTU","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MTU_DISCOVER":{"description":"Path MTU discovery","name":"IP_MTU_DISCOVER","namespace":"Socket::Constants","path":"Socket::Constants::IP_MTU_DISCOVER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MULTICAST_IF":{"description":"IP multicast interface","name":"IP_MULTICAST_IF","namespace":"Socket::Constants","path":"Socket::Constants::IP_MULTICAST_IF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MULTICAST_LOOP":{"description":"IP multicast loopback","name":"IP_MULTICAST_LOOP","namespace":"Socket::Constants","path":"Socket::Constants::IP_MULTICAST_LOOP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_MULTICAST_TTL":{"description":"IP multicast TTL","name":"IP_MULTICAST_TTL","namespace":"Socket::Constants","path":"Socket::Constants::IP_MULTICAST_TTL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_ONESBCAST":{"description":"Force outgoing broadcast datagrams to have the undirected broadcast address","name":"IP_ONESBCAST","namespace":"Socket::Constants","path":"Socket::Constants::IP_ONESBCAST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_OPTIONS":{"description":"IP options to be included in packets","name":"IP_OPTIONS","namespace":"Socket::Constants","path":"Socket::Constants::IP_OPTIONS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PASSSEC":{"description":"Retrieve security context with datagram","name":"IP_PASSSEC","namespace":"Socket::Constants","path":"Socket::Constants::IP_PASSSEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PKTINFO":{"description":"Receive packet information with datagrams","name":"IP_PKTINFO","namespace":"Socket::Constants","path":"Socket::Constants::IP_PKTINFO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PKTOPTIONS":{"description":"Receive packet options with datagrams","name":"IP_PKTOPTIONS","namespace":"Socket::Constants","path":"Socket::Constants::IP_PKTOPTIONS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PMTUDISC_DO":{"description":"Always send DF frames","name":"IP_PMTUDISC_DO","namespace":"Socket::Constants","path":"Socket::Constants::IP_PMTUDISC_DO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PMTUDISC_DONT":{"description":"Never send DF frames","name":"IP_PMTUDISC_DONT","namespace":"Socket::Constants","path":"Socket::Constants::IP_PMTUDISC_DONT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PMTUDISC_WANT":{"description":"Use per-route hints","name":"IP_PMTUDISC_WANT","namespace":"Socket::Constants","path":"Socket::Constants::IP_PMTUDISC_WANT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_PORTRANGE":{"description":"Set the port range for sockets with unspecified port numbers","name":"IP_PORTRANGE","namespace":"Socket::Constants","path":"Socket::Constants::IP_PORTRANGE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVDSTADDR":{"description":"Receive IP destination address with datagram","name":"IP_RECVDSTADDR","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVDSTADDR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVERR":{"description":"Enable extended reliable error message passing","name":"IP_RECVERR","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVERR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVIF":{"description":"Receive interface information with datagrams","name":"IP_RECVIF","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVIF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVOPTS":{"description":"Receive all IP options with datagram","name":"IP_RECVOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVRETOPTS":{"description":"Receive all IP options for response","name":"IP_RECVRETOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVRETOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVSLLA":{"description":"Receive link-layer address with datagrams","name":"IP_RECVSLLA","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVSLLA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVTOS":{"description":"Receive TOS with incoming packets","name":"IP_RECVTOS","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVTOS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RECVTTL":{"description":"Receive IP TTL with datagrams","name":"IP_RECVTTL","namespace":"Socket::Constants","path":"Socket::Constants::IP_RECVTTL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_RETOPTS":{"description":"IP options to be included in datagrams","name":"IP_RETOPTS","namespace":"Socket::Constants","path":"Socket::Constants::IP_RETOPTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_ROUTER_ALERT":{"description":"Notify transit routers to more closely examine the contents of an IP packet","name":"IP_ROUTER_ALERT","namespace":"Socket::Constants","path":"Socket::Constants::IP_ROUTER_ALERT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_SENDSRCADDR":{"description":"Source address for outgoing UDP datagrams","name":"IP_SENDSRCADDR","namespace":"Socket::Constants","path":"Socket::Constants::IP_SENDSRCADDR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_TOS":{"description":"IP type-of-service","name":"IP_TOS","namespace":"Socket::Constants","path":"Socket::Constants::IP_TOS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_TRANSPARENT":{"description":"Transparent proxy","name":"IP_TRANSPARENT","namespace":"Socket::Constants","path":"Socket::Constants::IP_TRANSPARENT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_TTL":{"description":"IP time-to-live","name":"IP_TTL","namespace":"Socket::Constants","path":"Socket::Constants::IP_TTL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_UNBLOCK_SOURCE":{"description":"Unblock IPv4 multicast packets with a give source address","name":"IP_UNBLOCK_SOURCE","namespace":"Socket::Constants","path":"Socket::Constants::IP_UNBLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::IP_XFRM_POLICY":{"description":"","name":"IP_XFRM_POLICY","namespace":"Socket::Constants","path":"Socket::Constants::IP_XFRM_POLICY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::LOCAL_CONNWAIT":{"description":"Connect blocks until accepted","name":"LOCAL_CONNWAIT","namespace":"Socket::Constants","path":"Socket::Constants::LOCAL_CONNWAIT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::LOCAL_CREDS":{"description":"Pass credentials to receiver","name":"LOCAL_CREDS","namespace":"Socket::Constants","path":"Socket::Constants::LOCAL_CREDS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::LOCAL_PEERCRED":{"description":"Retrieve peer credentials","name":"LOCAL_PEERCRED","namespace":"Socket::Constants","path":"Socket::Constants::LOCAL_PEERCRED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_BLOCK_SOURCE":{"description":"Block multicast packets from this source","name":"MCAST_BLOCK_SOURCE","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_BLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_EXCLUDE":{"description":"Exclusive multicast source filter","name":"MCAST_EXCLUDE","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_EXCLUDE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_INCLUDE":{"description":"Inclusive multicast source filter","name":"MCAST_INCLUDE","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_INCLUDE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_JOIN_GROUP":{"description":"Join a multicast group","name":"MCAST_JOIN_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_JOIN_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_JOIN_SOURCE_GROUP":{"description":"Join a multicast source group","name":"MCAST_JOIN_SOURCE_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_JOIN_SOURCE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_LEAVE_GROUP":{"description":"Leave a multicast group","name":"MCAST_LEAVE_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_LEAVE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_LEAVE_SOURCE_GROUP":{"description":"Leave a multicast source group","name":"MCAST_LEAVE_SOURCE_GROUP","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_LEAVE_SOURCE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_MSFILTER":{"description":"Multicast source filtering","name":"MCAST_MSFILTER","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_MSFILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MCAST_UNBLOCK_SOURCE":{"description":"Unblock multicast packets from this source","name":"MCAST_UNBLOCK_SOURCE","namespace":"Socket::Constants","path":"Socket::Constants::MCAST_UNBLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_COMPAT":{"description":"End of record","name":"MSG_COMPAT","namespace":"Socket::Constants","path":"Socket::Constants::MSG_COMPAT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_CONFIRM":{"description":"Confirm path validity","name":"MSG_CONFIRM","namespace":"Socket::Constants","path":"Socket::Constants::MSG_CONFIRM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_CTRUNC":{"description":"Control data lost before delivery","name":"MSG_CTRUNC","namespace":"Socket::Constants","path":"Socket::Constants::MSG_CTRUNC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_DONTROUTE":{"description":"Send without using the routing tables","name":"MSG_DONTROUTE","namespace":"Socket::Constants","path":"Socket::Constants::MSG_DONTROUTE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_DONTWAIT":{"description":"This message should be non-blocking","name":"MSG_DONTWAIT","namespace":"Socket::Constants","path":"Socket::Constants::MSG_DONTWAIT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_EOF":{"description":"Data completes connection","name":"MSG_EOF","namespace":"Socket::Constants","path":"Socket::Constants::MSG_EOF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_EOR":{"description":"Data completes record","name":"MSG_EOR","namespace":"Socket::Constants","path":"Socket::Constants::MSG_EOR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_ERRQUEUE":{"description":"Fetch message from error queue","name":"MSG_ERRQUEUE","namespace":"Socket::Constants","path":"Socket::Constants::MSG_ERRQUEUE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_FASTOPEN":{"description":"Reduce step of the handshake process","name":"MSG_FASTOPEN","namespace":"Socket::Constants","path":"Socket::Constants::MSG_FASTOPEN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_FIN":{"description":"","name":"MSG_FIN","namespace":"Socket::Constants","path":"Socket::Constants::MSG_FIN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_FLUSH":{"description":"Start of a hold sequence.  Dumps to so_temp","name":"MSG_FLUSH","namespace":"Socket::Constants","path":"Socket::Constants::MSG_FLUSH","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_HAVEMORE":{"description":"Data ready to be read","name":"MSG_HAVEMORE","namespace":"Socket::Constants","path":"Socket::Constants::MSG_HAVEMORE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_HOLD":{"description":"Hold fragment in so_temp","name":"MSG_HOLD","namespace":"Socket::Constants","path":"Socket::Constants::MSG_HOLD","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_MORE":{"description":"Sender will send more","name":"MSG_MORE","namespace":"Socket::Constants","path":"Socket::Constants::MSG_MORE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_NOSIGNAL":{"description":"Do not generate SIGPIPE","name":"MSG_NOSIGNAL","namespace":"Socket::Constants","path":"Socket::Constants::MSG_NOSIGNAL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_OOB":{"description":"Process out-of-band data","name":"MSG_OOB","namespace":"Socket::Constants","path":"Socket::Constants::MSG_OOB","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_PEEK":{"description":"Peek at incoming message","name":"MSG_PEEK","namespace":"Socket::Constants","path":"Socket::Constants::MSG_PEEK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_PROXY":{"description":"Wait for full request","name":"MSG_PROXY","namespace":"Socket::Constants","path":"Socket::Constants::MSG_PROXY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_RCVMORE":{"description":"Data remains in the current packet","name":"MSG_RCVMORE","namespace":"Socket::Constants","path":"Socket::Constants::MSG_RCVMORE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_RST":{"description":"","name":"MSG_RST","namespace":"Socket::Constants","path":"Socket::Constants::MSG_RST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_SEND":{"description":"Send the packet in so_temp","name":"MSG_SEND","namespace":"Socket::Constants","path":"Socket::Constants::MSG_SEND","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_SYN":{"description":"","name":"MSG_SYN","namespace":"Socket::Constants","path":"Socket::Constants::MSG_SYN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_TRUNC":{"description":"Data discarded before delivery","name":"MSG_TRUNC","namespace":"Socket::Constants","path":"Socket::Constants::MSG_TRUNC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::MSG_WAITALL":{"description":"Wait for full request or error","name":"MSG_WAITALL","namespace":"Socket::Constants","path":"Socket::Constants::MSG_WAITALL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_DGRAM":{"description":"The service specified is a datagram service (looks up UDP ports)","name":"NI_DGRAM","namespace":"Socket::Constants","path":"Socket::Constants::NI_DGRAM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_MAXHOST":{"description":"Maximum length of a hostname","name":"NI_MAXHOST","namespace":"Socket::Constants","path":"Socket::Constants::NI_MAXHOST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_MAXSERV":{"description":"Maximum length of a service name","name":"NI_MAXSERV","namespace":"Socket::Constants","path":"Socket::Constants::NI_MAXSERV","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_NAMEREQD":{"description":"A name is required","name":"NI_NAMEREQD","namespace":"Socket::Constants","path":"Socket::Constants::NI_NAMEREQD","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_NOFQDN":{"description":"An FQDN is not required for local hosts, return only the local part","name":"NI_NOFQDN","namespace":"Socket::Constants","path":"Socket::Constants::NI_NOFQDN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_NUMERICHOST":{"description":"Return a numeric address","name":"NI_NUMERICHOST","namespace":"Socket::Constants","path":"Socket::Constants::NI_NUMERICHOST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::NI_NUMERICSERV":{"description":"Return the service name as a digit string","name":"NI_NUMERICSERV","namespace":"Socket::Constants","path":"Socket::Constants::NI_NUMERICSERV","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_APPLETALK":{"description":"AppleTalk protocol","name":"PF_APPLETALK","namespace":"Socket::Constants","path":"Socket::Constants::PF_APPLETALK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_ATM":{"description":"Asynchronous Transfer Mode","name":"PF_ATM","namespace":"Socket::Constants","path":"Socket::Constants::PF_ATM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_AX25":{"description":"AX.25 protocol","name":"PF_AX25","namespace":"Socket::Constants","path":"Socket::Constants::PF_AX25","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_CCITT":{"description":"CCITT (now ITU-T) protocols","name":"PF_CCITT","namespace":"Socket::Constants","path":"Socket::Constants::PF_CCITT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_CHAOS":{"description":"MIT CHAOS protocols","name":"PF_CHAOS","namespace":"Socket::Constants","path":"Socket::Constants::PF_CHAOS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_CNT":{"description":"Computer Network Technology","name":"PF_CNT","namespace":"Socket::Constants","path":"Socket::Constants::PF_CNT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_COIP":{"description":"Connection-oriented IP","name":"PF_COIP","namespace":"Socket::Constants","path":"Socket::Constants::PF_COIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_DATAKIT":{"description":"Datakit protocol","name":"PF_DATAKIT","namespace":"Socket::Constants","path":"Socket::Constants::PF_DATAKIT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_DEC":{"description":"DECnet protocol","name":"PF_DEC","namespace":"Socket::Constants","path":"Socket::Constants::PF_DEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_DLI":{"description":"DEC Direct Data Link Interface protocol","name":"PF_DLI","namespace":"Socket::Constants","path":"Socket::Constants::PF_DLI","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_ECMA":{"description":"European Computer Manufacturers protocols","name":"PF_ECMA","namespace":"Socket::Constants","path":"Socket::Constants::PF_ECMA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_HYLINK":{"description":"NSC Hyperchannel protocol","name":"PF_HYLINK","namespace":"Socket::Constants","path":"Socket::Constants::PF_HYLINK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_IMPLINK":{"description":"ARPANET IMP protocol","name":"PF_IMPLINK","namespace":"Socket::Constants","path":"Socket::Constants::PF_IMPLINK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_INET":{"description":"IPv4 protocol","name":"PF_INET","namespace":"Socket::Constants","path":"Socket::Constants::PF_INET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_INET6":{"description":"IPv6 protocol","name":"PF_INET6","namespace":"Socket::Constants","path":"Socket::Constants::PF_INET6","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_IPX":{"description":"IPX protocol","name":"PF_IPX","namespace":"Socket::Constants","path":"Socket::Constants::PF_IPX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_ISDN":{"description":"Integrated Services Digital Network","name":"PF_ISDN","namespace":"Socket::Constants","path":"Socket::Constants::PF_ISDN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_ISO":{"description":"ISO Open Systems Interconnection protocols","name":"PF_ISO","namespace":"Socket::Constants","path":"Socket::Constants::PF_ISO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_KEY":{"description":"","name":"PF_KEY","namespace":"Socket::Constants","path":"Socket::Constants::PF_KEY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_LAT":{"description":"Local Area Transport protocol","name":"PF_LAT","namespace":"Socket::Constants","path":"Socket::Constants::PF_LAT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_LINK":{"description":"Link layer interface","name":"PF_LINK","namespace":"Socket::Constants","path":"Socket::Constants::PF_LINK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_LOCAL":{"description":"Host-internal protocols","name":"PF_LOCAL","namespace":"Socket::Constants","path":"Socket::Constants::PF_LOCAL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_MAX":{"description":"Maximum address family for this platform","name":"PF_MAX","namespace":"Socket::Constants","path":"Socket::Constants::PF_MAX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_NATM":{"description":"Native ATM access","name":"PF_NATM","namespace":"Socket::Constants","path":"Socket::Constants::PF_NATM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_NDRV":{"description":"Network driver raw access","name":"PF_NDRV","namespace":"Socket::Constants","path":"Socket::Constants::PF_NDRV","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_NETBIOS":{"description":"NetBIOS","name":"PF_NETBIOS","namespace":"Socket::Constants","path":"Socket::Constants::PF_NETBIOS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_NETGRAPH":{"description":"Netgraph sockets","name":"PF_NETGRAPH","namespace":"Socket::Constants","path":"Socket::Constants::PF_NETGRAPH","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_NS":{"description":"XEROX NS protocols","name":"PF_NS","namespace":"Socket::Constants","path":"Socket::Constants::PF_NS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_OSI":{"description":"ISO Open Systems Interconnection protocols","name":"PF_OSI","namespace":"Socket::Constants","path":"Socket::Constants::PF_OSI","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_PACKET":{"description":"Direct link-layer access","name":"PF_PACKET","namespace":"Socket::Constants","path":"Socket::Constants::PF_PACKET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_PIP":{"description":"","name":"PF_PIP","namespace":"Socket::Constants","path":"Socket::Constants::PF_PIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_PPP":{"description":"Point-to-Point Protocol","name":"PF_PPP","namespace":"Socket::Constants","path":"Socket::Constants::PF_PPP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_PUP":{"description":"PARC Universal Packet protocol","name":"PF_PUP","namespace":"Socket::Constants","path":"Socket::Constants::PF_PUP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_ROUTE":{"description":"Internal routing protocol","name":"PF_ROUTE","namespace":"Socket::Constants","path":"Socket::Constants::PF_ROUTE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_RTIP":{"description":"","name":"PF_RTIP","namespace":"Socket::Constants","path":"Socket::Constants::PF_RTIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_SIP":{"description":"Simple Internet Protocol","name":"PF_SIP","namespace":"Socket::Constants","path":"Socket::Constants::PF_SIP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_SNA":{"description":"IBM SNA protocol","name":"PF_SNA","namespace":"Socket::Constants","path":"Socket::Constants::PF_SNA","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_SYSTEM":{"description":"","name":"PF_SYSTEM","namespace":"Socket::Constants","path":"Socket::Constants::PF_SYSTEM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_UNIX":{"description":"UNIX sockets","name":"PF_UNIX","namespace":"Socket::Constants","path":"Socket::Constants::PF_UNIX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_UNSPEC":{"description":"Unspecified protocol, any supported address family","name":"PF_UNSPEC","namespace":"Socket::Constants","path":"Socket::Constants::PF_UNSPEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::PF_XTP":{"description":"eXpress Transfer Protocol","name":"PF_XTP","namespace":"Socket::Constants","path":"Socket::Constants::PF_XTP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_BINTIME":{"description":"Timestamp (bintime)","name":"SCM_BINTIME","namespace":"Socket::Constants","path":"Socket::Constants::SCM_BINTIME","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_CREDENTIALS":{"description":"The sender's credentials","name":"SCM_CREDENTIALS","namespace":"Socket::Constants","path":"Socket::Constants::SCM_CREDENTIALS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_CREDS":{"description":"Process credentials","name":"SCM_CREDS","namespace":"Socket::Constants","path":"Socket::Constants::SCM_CREDS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_RIGHTS":{"description":"Access rights","name":"SCM_RIGHTS","namespace":"Socket::Constants","path":"Socket::Constants::SCM_RIGHTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_TIMESTAMP":{"description":"Timestamp (timeval)","name":"SCM_TIMESTAMP","namespace":"Socket::Constants","path":"Socket::Constants::SCM_TIMESTAMP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_TIMESTAMPING":{"description":"Timestamp (timespec list) (Linux 2.6.30)","name":"SCM_TIMESTAMPING","namespace":"Socket::Constants","path":"Socket::Constants::SCM_TIMESTAMPING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_TIMESTAMPNS":{"description":"Timespec (timespec)","name":"SCM_TIMESTAMPNS","namespace":"Socket::Constants","path":"Socket::Constants::SCM_TIMESTAMPNS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_UCRED":{"description":"User credentials","name":"SCM_UCRED","namespace":"Socket::Constants","path":"Socket::Constants::SCM_UCRED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SCM_WIFI_STATUS":{"description":"Wifi status (Linux 3.3)","name":"SCM_WIFI_STATUS","namespace":"Socket::Constants","path":"Socket::Constants::SCM_WIFI_STATUS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SHUT_RD":{"description":"Shut down the reading side of the socket","name":"SHUT_RD","namespace":"Socket::Constants","path":"Socket::Constants::SHUT_RD","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SHUT_RDWR":{"description":"Shut down the both sides of the socket","name":"SHUT_RDWR","namespace":"Socket::Constants","path":"Socket::Constants::SHUT_RDWR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SHUT_WR":{"description":"Shut down the writing side of the socket","name":"SHUT_WR","namespace":"Socket::Constants","path":"Socket::Constants::SHUT_WR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOCK_DGRAM":{"description":"A datagram socket provides connectionless, unreliable messaging","name":"SOCK_DGRAM","namespace":"Socket::Constants","path":"Socket::Constants::SOCK_DGRAM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOCK_PACKET":{"description":"Device-level packet access","name":"SOCK_PACKET","namespace":"Socket::Constants","path":"Socket::Constants::SOCK_PACKET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOCK_RAW":{"description":"A raw socket provides low-level access for direct access or implementing network protocols","name":"SOCK_RAW","namespace":"Socket::Constants","path":"Socket::Constants::SOCK_RAW","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOCK_RDM":{"description":"A reliable datagram socket provides reliable delivery of messages","name":"SOCK_RDM","namespace":"Socket::Constants","path":"Socket::Constants::SOCK_RDM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOCK_SEQPACKET":{"description":"A sequential packet socket provides sequenced, reliable two-way connection for datagrams","name":"SOCK_SEQPACKET","namespace":"Socket::Constants","path":"Socket::Constants::SOCK_SEQPACKET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOCK_STREAM":{"description":"A stream socket provides a sequenced, reliable two-way connection for a byte stream","name":"SOCK_STREAM","namespace":"Socket::Constants","path":"Socket::Constants::SOCK_STREAM","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_ATALK":{"description":"AppleTalk socket options","name":"SOL_ATALK","namespace":"Socket::Constants","path":"Socket::Constants::SOL_ATALK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_AX25":{"description":"AX.25 socket options","name":"SOL_AX25","namespace":"Socket::Constants","path":"Socket::Constants::SOL_AX25","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_IP":{"description":"IP socket options","name":"SOL_IP","namespace":"Socket::Constants","path":"Socket::Constants::SOL_IP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_IPX":{"description":"IPX socket options","name":"SOL_IPX","namespace":"Socket::Constants","path":"Socket::Constants::SOL_IPX","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_SOCKET":{"description":"Socket-level options","name":"SOL_SOCKET","namespace":"Socket::Constants","path":"Socket::Constants::SOL_SOCKET","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_TCP":{"description":"TCP socket options","name":"SOL_TCP","namespace":"Socket::Constants","path":"Socket::Constants::SOL_TCP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOL_UDP":{"description":"UDP socket options","name":"SOL_UDP","namespace":"Socket::Constants","path":"Socket::Constants::SOL_UDP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOMAXCONN":{"description":"Maximum connection requests that may be queued for a socket","name":"SOMAXCONN","namespace":"Socket::Constants","path":"Socket::Constants::SOMAXCONN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOPRI_BACKGROUND":{"description":"Background socket priority","name":"SOPRI_BACKGROUND","namespace":"Socket::Constants","path":"Socket::Constants::SOPRI_BACKGROUND","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOPRI_INTERACTIVE":{"description":"Interactive socket priority","name":"SOPRI_INTERACTIVE","namespace":"Socket::Constants","path":"Socket::Constants::SOPRI_INTERACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SOPRI_NORMAL":{"description":"Normal socket priority","name":"SOPRI_NORMAL","namespace":"Socket::Constants","path":"Socket::Constants::SOPRI_NORMAL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_ACCEPTCONN":{"description":"Socket has had listen() called on it","name":"SO_ACCEPTCONN","namespace":"Socket::Constants","path":"Socket::Constants::SO_ACCEPTCONN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_ACCEPTFILTER":{"description":"There is an accept filter","name":"SO_ACCEPTFILTER","namespace":"Socket::Constants","path":"Socket::Constants::SO_ACCEPTFILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_ALLZONES":{"description":"Bypass zone boundaries","name":"SO_ALLZONES","namespace":"Socket::Constants","path":"Socket::Constants::SO_ALLZONES","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_ATTACH_FILTER":{"description":"Attach an accept filter","name":"SO_ATTACH_FILTER","namespace":"Socket::Constants","path":"Socket::Constants::SO_ATTACH_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_BINDTODEVICE":{"description":"Only send packets from the given interface","name":"SO_BINDTODEVICE","namespace":"Socket::Constants","path":"Socket::Constants::SO_BINDTODEVICE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_BINTIME":{"description":"Receive timestamp with datagrams (bintime)","name":"SO_BINTIME","namespace":"Socket::Constants","path":"Socket::Constants::SO_BINTIME","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_BPF_EXTENSIONS":{"description":"Query supported BPF extensions (Linux 3.14)","name":"SO_BPF_EXTENSIONS","namespace":"Socket::Constants","path":"Socket::Constants::SO_BPF_EXTENSIONS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_BROADCAST":{"description":"Permit sending of broadcast messages","name":"SO_BROADCAST","namespace":"Socket::Constants","path":"Socket::Constants::SO_BROADCAST","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_BUSY_POLL":{"description":"Set the threshold in microseconds for low latency polling (Linux 3.11)","name":"SO_BUSY_POLL","namespace":"Socket::Constants","path":"Socket::Constants::SO_BUSY_POLL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_DEBUG":{"description":"Debug info recording","name":"SO_DEBUG","namespace":"Socket::Constants","path":"Socket::Constants::SO_DEBUG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_DETACH_FILTER":{"description":"Detach an accept filter","name":"SO_DETACH_FILTER","namespace":"Socket::Constants","path":"Socket::Constants::SO_DETACH_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_DOMAIN":{"description":"Domain given for socket() (Linux 2.6.32)","name":"SO_DOMAIN","namespace":"Socket::Constants","path":"Socket::Constants::SO_DOMAIN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_DONTROUTE":{"description":"Use interface addresses","name":"SO_DONTROUTE","namespace":"Socket::Constants","path":"Socket::Constants::SO_DONTROUTE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_DONTTRUNC":{"description":"Retain unread data","name":"SO_DONTTRUNC","namespace":"Socket::Constants","path":"Socket::Constants::SO_DONTTRUNC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_ERROR":{"description":"Get and clear the error status","name":"SO_ERROR","namespace":"Socket::Constants","path":"Socket::Constants::SO_ERROR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_GET_FILTER":{"description":"Obtain filter set by SO_ATTACH_FILTER (Linux 3.8)","name":"SO_GET_FILTER","namespace":"Socket::Constants","path":"Socket::Constants::SO_GET_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_KEEPALIVE":{"description":"Keep connections alive","name":"SO_KEEPALIVE","namespace":"Socket::Constants","path":"Socket::Constants::SO_KEEPALIVE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_LINGER":{"description":"Linger on close if data is present","name":"SO_LINGER","namespace":"Socket::Constants","path":"Socket::Constants::SO_LINGER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_LOCK_FILTER":{"description":"Lock the filter attached to a socket (Linux 3.9)","name":"SO_LOCK_FILTER","namespace":"Socket::Constants","path":"Socket::Constants::SO_LOCK_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_MAC_EXEMPT":{"description":"Mandatory Access Control exemption for unlabeled peers","name":"SO_MAC_EXEMPT","namespace":"Socket::Constants","path":"Socket::Constants::SO_MAC_EXEMPT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_MARK":{"description":"Set the mark for mark-based routing (Linux 2.6.25)","name":"SO_MARK","namespace":"Socket::Constants","path":"Socket::Constants::SO_MARK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_MAX_PACING_RATE":{"description":"Cap the rate computed by transport layer. [bytes per second] (Linux 3.13)","name":"SO_MAX_PACING_RATE","namespace":"Socket::Constants","path":"Socket::Constants::SO_MAX_PACING_RATE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_NKE":{"description":"Install socket-level Network Kernel Extension","name":"SO_NKE","namespace":"Socket::Constants","path":"Socket::Constants::SO_NKE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_NOFCS":{"description":"Set netns of a socket (Linux 3.4)","name":"SO_NOFCS","namespace":"Socket::Constants","path":"Socket::Constants::SO_NOFCS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_NOSIGPIPE":{"description":"Don't SIGPIPE on EPIPE","name":"SO_NOSIGPIPE","namespace":"Socket::Constants","path":"Socket::Constants::SO_NOSIGPIPE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_NO_CHECK":{"description":"Disable checksums","name":"SO_NO_CHECK","namespace":"Socket::Constants","path":"Socket::Constants::SO_NO_CHECK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_NREAD":{"description":"Get first packet byte count","name":"SO_NREAD","namespace":"Socket::Constants","path":"Socket::Constants::SO_NREAD","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_OOBINLINE":{"description":"Leave received out-of-band data in-line","name":"SO_OOBINLINE","namespace":"Socket::Constants","path":"Socket::Constants::SO_OOBINLINE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PASSCRED":{"description":"Receive SCM_CREDENTIALS messages","name":"SO_PASSCRED","namespace":"Socket::Constants","path":"Socket::Constants::SO_PASSCRED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PASSSEC":{"description":"Toggle security context passing (Linux 2.6.18)","name":"SO_PASSSEC","namespace":"Socket::Constants","path":"Socket::Constants::SO_PASSSEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PEEK_OFF":{"description":"Set the peek offset (Linux 3.4)","name":"SO_PEEK_OFF","namespace":"Socket::Constants","path":"Socket::Constants::SO_PEEK_OFF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PEERCRED":{"description":"The credentials of the foreign process connected to this socket","name":"SO_PEERCRED","namespace":"Socket::Constants","path":"Socket::Constants::SO_PEERCRED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PEERNAME":{"description":"Name of the connecting user","name":"SO_PEERNAME","namespace":"Socket::Constants","path":"Socket::Constants::SO_PEERNAME","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PEERSEC":{"description":"Obtain the security credentials (Linux 2.6.2)","name":"SO_PEERSEC","namespace":"Socket::Constants","path":"Socket::Constants::SO_PEERSEC","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PRIORITY":{"description":"The protocol-defined priority for all packets on this socket","name":"SO_PRIORITY","namespace":"Socket::Constants","path":"Socket::Constants::SO_PRIORITY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_PROTOCOL":{"description":"Protocol given for socket() (Linux 2.6.32)","name":"SO_PROTOCOL","namespace":"Socket::Constants","path":"Socket::Constants::SO_PROTOCOL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_RCVBUF":{"description":"Receive buffer size","name":"SO_RCVBUF","namespace":"Socket::Constants","path":"Socket::Constants::SO_RCVBUF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_RCVBUFFORCE":{"description":"Receive buffer size without rmem_max limit (Linux 2.6.14)","name":"SO_RCVBUFFORCE","namespace":"Socket::Constants","path":"Socket::Constants::SO_RCVBUFFORCE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_RCVLOWAT":{"description":"Receive low-water mark","name":"SO_RCVLOWAT","namespace":"Socket::Constants","path":"Socket::Constants::SO_RCVLOWAT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_RCVTIMEO":{"description":"Receive timeout","name":"SO_RCVTIMEO","namespace":"Socket::Constants","path":"Socket::Constants::SO_RCVTIMEO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_RECVUCRED":{"description":"Receive user credentials with datagram","name":"SO_RECVUCRED","namespace":"Socket::Constants","path":"Socket::Constants::SO_RECVUCRED","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_REUSEADDR":{"description":"Allow local address reuse","name":"SO_REUSEADDR","namespace":"Socket::Constants","path":"Socket::Constants::SO_REUSEADDR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_REUSEPORT":{"description":"Allow local address and port reuse","name":"SO_REUSEPORT","namespace":"Socket::Constants","path":"Socket::Constants::SO_REUSEPORT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_RXQ_OVFL":{"description":"Toggle cmsg for number of packets dropped (Linux 2.6.33)","name":"SO_RXQ_OVFL","namespace":"Socket::Constants","path":"Socket::Constants::SO_RXQ_OVFL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SECURITY_AUTHENTICATION":{"description":"","name":"SO_SECURITY_AUTHENTICATION","namespace":"Socket::Constants","path":"Socket::Constants::SO_SECURITY_AUTHENTICATION","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SECURITY_ENCRYPTION_NETWORK":{"description":"","name":"SO_SECURITY_ENCRYPTION_NETWORK","namespace":"Socket::Constants","path":"Socket::Constants::SO_SECURITY_ENCRYPTION_NETWORK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SECURITY_ENCRYPTION_TRANSPORT":{"description":"","name":"SO_SECURITY_ENCRYPTION_TRANSPORT","namespace":"Socket::Constants","path":"Socket::Constants::SO_SECURITY_ENCRYPTION_TRANSPORT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SELECT_ERR_QUEUE":{"description":"Make select() detect socket error queue with errorfds (Linux 3.10)","name":"SO_SELECT_ERR_QUEUE","namespace":"Socket::Constants","path":"Socket::Constants::SO_SELECT_ERR_QUEUE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SNDBUF":{"description":"Send buffer size","name":"SO_SNDBUF","namespace":"Socket::Constants","path":"Socket::Constants::SO_SNDBUF","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SNDBUFFORCE":{"description":"Send buffer size without wmem_max limit (Linux 2.6.14)","name":"SO_SNDBUFFORCE","namespace":"Socket::Constants","path":"Socket::Constants::SO_SNDBUFFORCE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SNDLOWAT":{"description":"Send low-water mark","name":"SO_SNDLOWAT","namespace":"Socket::Constants","path":"Socket::Constants::SO_SNDLOWAT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_SNDTIMEO":{"description":"Send timeout","name":"SO_SNDTIMEO","namespace":"Socket::Constants","path":"Socket::Constants::SO_SNDTIMEO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_TIMESTAMP":{"description":"Receive timestamp with datagrams (timeval)","name":"SO_TIMESTAMP","namespace":"Socket::Constants","path":"Socket::Constants::SO_TIMESTAMP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_TIMESTAMPING":{"description":"Time stamping of incoming and outgoing packets (Linux 2.6.30)","name":"SO_TIMESTAMPING","namespace":"Socket::Constants","path":"Socket::Constants::SO_TIMESTAMPING","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_TIMESTAMPNS":{"description":"Receive nanosecond timestamp with datagrams (timespec)","name":"SO_TIMESTAMPNS","namespace":"Socket::Constants","path":"Socket::Constants::SO_TIMESTAMPNS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_TYPE":{"description":"Get the socket type","name":"SO_TYPE","namespace":"Socket::Constants","path":"Socket::Constants::SO_TYPE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_USELOOPBACK":{"description":"Bypass hardware when possible","name":"SO_USELOOPBACK","namespace":"Socket::Constants","path":"Socket::Constants::SO_USELOOPBACK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_WANTMORE":{"description":"Give a hint when more data is ready","name":"SO_WANTMORE","namespace":"Socket::Constants","path":"Socket::Constants::SO_WANTMORE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_WANTOOBFLAG":{"description":"OOB data is wanted in MSG_FLAG on receive","name":"SO_WANTOOBFLAG","namespace":"Socket::Constants","path":"Socket::Constants::SO_WANTOOBFLAG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::SO_WIFI_STATUS":{"description":"Toggle cmsg for wifi status (Linux 3.3)","name":"SO_WIFI_STATUS","namespace":"Socket::Constants","path":"Socket::Constants::SO_WIFI_STATUS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_CONGESTION":{"description":"TCP congestion control algorithm (Linux 2.6.13, glibc 2.6)","name":"TCP_CONGESTION","namespace":"Socket::Constants","path":"Socket::Constants::TCP_CONGESTION","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_COOKIE_TRANSACTIONS":{"description":"TCP Cookie Transactions (Linux 2.6.33, glibc 2.18)","name":"TCP_COOKIE_TRANSACTIONS","namespace":"Socket::Constants","path":"Socket::Constants::TCP_COOKIE_TRANSACTIONS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_CORK":{"description":"Don't send partial frames (Linux 2.2, glibc 2.2)","name":"TCP_CORK","namespace":"Socket::Constants","path":"Socket::Constants::TCP_CORK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_DEFER_ACCEPT":{"description":"Don't notify a listening socket until data is ready (Linux 2.4, glibc 2.2)","name":"TCP_DEFER_ACCEPT","namespace":"Socket::Constants","path":"Socket::Constants::TCP_DEFER_ACCEPT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_FASTOPEN":{"description":"Reduce step of the handshake process (Linux 3.7, glibc 2.18)","name":"TCP_FASTOPEN","namespace":"Socket::Constants","path":"Socket::Constants::TCP_FASTOPEN","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_INFO":{"description":"Retrieve information about this socket (Linux 2.4, glibc 2.2)","name":"TCP_INFO","namespace":"Socket::Constants","path":"Socket::Constants::TCP_INFO","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_KEEPCNT":{"description":"Maximum number of keepalive probes allowed before dropping a connection (Linux 2.4, glibc 2.2)","name":"TCP_KEEPCNT","namespace":"Socket::Constants","path":"Socket::Constants::TCP_KEEPCNT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_KEEPIDLE":{"description":"Idle time before keepalive probes are sent (Linux 2.4, glibc 2.2)","name":"TCP_KEEPIDLE","namespace":"Socket::Constants","path":"Socket::Constants::TCP_KEEPIDLE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_KEEPINTVL":{"description":"Time between keepalive probes (Linux 2.4, glibc 2.2)","name":"TCP_KEEPINTVL","namespace":"Socket::Constants","path":"Socket::Constants::TCP_KEEPINTVL","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_LINGER2":{"description":"Lifetime of orphaned FIN_WAIT2 sockets (Linux 2.4, glibc 2.2)","name":"TCP_LINGER2","namespace":"Socket::Constants","path":"Socket::Constants::TCP_LINGER2","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_MAXSEG":{"description":"Set maximum segment size","name":"TCP_MAXSEG","namespace":"Socket::Constants","path":"Socket::Constants::TCP_MAXSEG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_MD5SIG":{"description":"Use MD5 digests (RFC2385, Linux 2.6.20, glibc 2.7)","name":"TCP_MD5SIG","namespace":"Socket::Constants","path":"Socket::Constants::TCP_MD5SIG","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_NODELAY":{"description":"Don't delay sending to coalesce packets","name":"TCP_NODELAY","namespace":"Socket::Constants","path":"Socket::Constants::TCP_NODELAY","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_NOOPT":{"description":"Don't use TCP options","name":"TCP_NOOPT","namespace":"Socket::Constants","path":"Socket::Constants::TCP_NOOPT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_NOPUSH":{"description":"Don't push the last block of write","name":"TCP_NOPUSH","namespace":"Socket::Constants","path":"Socket::Constants::TCP_NOPUSH","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_QUEUE_SEQ":{"description":"Sequence of a queue for repair mode (Linux 3.5, glibc 2.18)","name":"TCP_QUEUE_SEQ","namespace":"Socket::Constants","path":"Socket::Constants::TCP_QUEUE_SEQ","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_QUICKACK":{"description":"Enable quickack mode (Linux 2.4.4, glibc 2.3)","name":"TCP_QUICKACK","namespace":"Socket::Constants","path":"Socket::Constants::TCP_QUICKACK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_REPAIR":{"description":"Repair mode (Linux 3.5, glibc 2.18)","name":"TCP_REPAIR","namespace":"Socket::Constants","path":"Socket::Constants::TCP_REPAIR","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_REPAIR_OPTIONS":{"description":"Options for repair mode (Linux 3.5, glibc 2.18)","name":"TCP_REPAIR_OPTIONS","namespace":"Socket::Constants","path":"Socket::Constants::TCP_REPAIR_OPTIONS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_REPAIR_QUEUE":{"description":"Queue for repair mode (Linux 3.5, glibc 2.18)","name":"TCP_REPAIR_QUEUE","namespace":"Socket::Constants","path":"Socket::Constants::TCP_REPAIR_QUEUE","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_SYNCNT":{"description":"Number of SYN retransmits before a connection is dropped (Linux 2.4, glibc 2.2)","name":"TCP_SYNCNT","namespace":"Socket::Constants","path":"Socket::Constants::TCP_SYNCNT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_THIN_DUPACK":{"description":"Duplicated acknowledgments handling for thin-streams (Linux 2.6.34, glibc 2.18)","name":"TCP_THIN_DUPACK","namespace":"Socket::Constants","path":"Socket::Constants::TCP_THIN_DUPACK","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_THIN_LINEAR_TIMEOUTS":{"description":"Linear timeouts for thin-streams (Linux 2.6.34, glibc 2.18)","name":"TCP_THIN_LINEAR_TIMEOUTS","namespace":"Socket::Constants","path":"Socket::Constants::TCP_THIN_LINEAR_TIMEOUTS","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_TIMESTAMP":{"description":"TCP timestamp (Linux 3.9, glibc 2.18)","name":"TCP_TIMESTAMP","namespace":"Socket::Constants","path":"Socket::Constants::TCP_TIMESTAMP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_USER_TIMEOUT":{"description":"Max timeout before a TCP connection is aborted (Linux 2.6.37, glibc 2.18)","name":"TCP_USER_TIMEOUT","namespace":"Socket::Constants","path":"Socket::Constants::TCP_USER_TIMEOUT","type":"constant","return":null,"visibility":"public"},"Socket::Constants::TCP_WINDOW_CLAMP":{"description":"Clamp the size of the advertised window (Linux 2.4, glibc 2.2)","name":"TCP_WINDOW_CLAMP","namespace":"Socket::Constants","path":"Socket::Constants::TCP_WINDOW_CLAMP","type":"constant","return":null,"visibility":"public"},"Socket::Constants::UDP_CORK":{"description":"Don't send partial frames (Linux 2.5.44, glibc 2.11)","name":"UDP_CORK","namespace":"Socket::Constants","path":"Socket::Constants::UDP_CORK","type":"constant","return":null,"visibility":"public"},"Socket::EAI_ADDRFAMILY":{"description":"Address family for hostname not supported","name":"EAI_ADDRFAMILY","namespace":"Socket","path":"Socket::EAI_ADDRFAMILY","type":"constant","return":null,"visibility":"public"},"Socket::EAI_AGAIN":{"description":"Temporary failure in name resolution","name":"EAI_AGAIN","namespace":"Socket","path":"Socket::EAI_AGAIN","type":"constant","return":null,"visibility":"public"},"Socket::EAI_BADFLAGS":{"description":"Invalid flags","name":"EAI_BADFLAGS","namespace":"Socket","path":"Socket::EAI_BADFLAGS","type":"constant","return":null,"visibility":"public"},"Socket::EAI_BADHINTS":{"description":"Invalid value for hints","name":"EAI_BADHINTS","namespace":"Socket","path":"Socket::EAI_BADHINTS","type":"constant","return":null,"visibility":"public"},"Socket::EAI_FAIL":{"description":"Non-recoverable failure in name resolution","name":"EAI_FAIL","namespace":"Socket","path":"Socket::EAI_FAIL","type":"constant","return":null,"visibility":"public"},"Socket::EAI_FAMILY":{"description":"Address family not supported","name":"EAI_FAMILY","namespace":"Socket","path":"Socket::EAI_FAMILY","type":"constant","return":null,"visibility":"public"},"Socket::EAI_MAX":{"description":"Maximum error code from getaddrinfo","name":"EAI_MAX","namespace":"Socket","path":"Socket::EAI_MAX","type":"constant","return":null,"visibility":"public"},"Socket::EAI_MEMORY":{"description":"Memory allocation failure","name":"EAI_MEMORY","namespace":"Socket","path":"Socket::EAI_MEMORY","type":"constant","return":null,"visibility":"public"},"Socket::EAI_NODATA":{"description":"No address associated with hostname","name":"EAI_NODATA","namespace":"Socket","path":"Socket::EAI_NODATA","type":"constant","return":null,"visibility":"public"},"Socket::EAI_NONAME":{"description":"Hostname nor servname, or not known","name":"EAI_NONAME","namespace":"Socket","path":"Socket::EAI_NONAME","type":"constant","return":null,"visibility":"public"},"Socket::EAI_OVERFLOW":{"description":"Argument buffer overflow","name":"EAI_OVERFLOW","namespace":"Socket","path":"Socket::EAI_OVERFLOW","type":"constant","return":null,"visibility":"public"},"Socket::EAI_PROTOCOL":{"description":"Resolved protocol is unknown","name":"EAI_PROTOCOL","namespace":"Socket","path":"Socket::EAI_PROTOCOL","type":"constant","return":null,"visibility":"public"},"Socket::EAI_SERVICE":{"description":"Servname not supported for socket type","name":"EAI_SERVICE","namespace":"Socket","path":"Socket::EAI_SERVICE","type":"constant","return":null,"visibility":"public"},"Socket::EAI_SOCKTYPE":{"description":"Socket type not supported","name":"EAI_SOCKTYPE","namespace":"Socket","path":"Socket::EAI_SOCKTYPE","type":"constant","return":null,"visibility":"public"},"Socket::EAI_SYSTEM":{"description":"System error returned in errno","name":"EAI_SYSTEM","namespace":"Socket","path":"Socket::EAI_SYSTEM","type":"constant","return":null,"visibility":"public"},"Socket::IFF_802_1Q_VLAN":{"description":"802.1Q VLAN device","name":"IFF_802_1Q_VLAN","namespace":"Socket","path":"Socket::IFF_802_1Q_VLAN","type":"constant","return":null,"visibility":"public"},"Socket::IFF_ALLMULTI":{"description":"receive all multicast packets","name":"IFF_ALLMULTI","namespace":"Socket","path":"Socket::IFF_ALLMULTI","type":"constant","return":null,"visibility":"public"},"Socket::IFF_ALTPHYS":{"description":"use alternate physical connection","name":"IFF_ALTPHYS","namespace":"Socket","path":"Socket::IFF_ALTPHYS","type":"constant","return":null,"visibility":"public"},"Socket::IFF_AUTOMEDIA":{"description":"auto media select active","name":"IFF_AUTOMEDIA","namespace":"Socket","path":"Socket::IFF_AUTOMEDIA","type":"constant","return":null,"visibility":"public"},"Socket::IFF_BONDING":{"description":"bonding master or slave","name":"IFF_BONDING","namespace":"Socket","path":"Socket::IFF_BONDING","type":"constant","return":null,"visibility":"public"},"Socket::IFF_BRIDGE_PORT":{"description":"device used as bridge port","name":"IFF_BRIDGE_PORT","namespace":"Socket","path":"Socket::IFF_BRIDGE_PORT","type":"constant","return":null,"visibility":"public"},"Socket::IFF_BROADCAST":{"description":"broadcast address valid","name":"IFF_BROADCAST","namespace":"Socket","path":"Socket::IFF_BROADCAST","type":"constant","return":null,"visibility":"public"},"Socket::IFF_CANTCHANGE":{"description":"flags not changeable","name":"IFF_CANTCHANGE","namespace":"Socket","path":"Socket::IFF_CANTCHANGE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_CANTCONFIG":{"description":"unconfigurable using ioctl(2)","name":"IFF_CANTCONFIG","namespace":"Socket","path":"Socket::IFF_CANTCONFIG","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DEBUG":{"description":"turn on debugging","name":"IFF_DEBUG","namespace":"Socket","path":"Socket::IFF_DEBUG","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DISABLE_NETPOLL":{"description":"disable netpoll at run-time","name":"IFF_DISABLE_NETPOLL","namespace":"Socket","path":"Socket::IFF_DISABLE_NETPOLL","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DONT_BRIDGE":{"description":"disallow bridging this ether dev","name":"IFF_DONT_BRIDGE","namespace":"Socket","path":"Socket::IFF_DONT_BRIDGE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DORMANT":{"description":"driver signals dormant","name":"IFF_DORMANT","namespace":"Socket","path":"Socket::IFF_DORMANT","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DRV_OACTIVE":{"description":"tx hardware queue is full","name":"IFF_DRV_OACTIVE","namespace":"Socket","path":"Socket::IFF_DRV_OACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DRV_RUNNING":{"description":"resources allocated","name":"IFF_DRV_RUNNING","namespace":"Socket","path":"Socket::IFF_DRV_RUNNING","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DYING":{"description":"interface is winding down","name":"IFF_DYING","namespace":"Socket","path":"Socket::IFF_DYING","type":"constant","return":null,"visibility":"public"},"Socket::IFF_DYNAMIC":{"description":"dialup device with changing addresses","name":"IFF_DYNAMIC","namespace":"Socket","path":"Socket::IFF_DYNAMIC","type":"constant","return":null,"visibility":"public"},"Socket::IFF_EBRIDGE":{"description":"ethernet bridging device","name":"IFF_EBRIDGE","namespace":"Socket","path":"Socket::IFF_EBRIDGE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_ECHO":{"description":"echo sent packets","name":"IFF_ECHO","namespace":"Socket","path":"Socket::IFF_ECHO","type":"constant","return":null,"visibility":"public"},"Socket::IFF_ISATAP":{"description":"ISATAP interface (RFC4214)","name":"IFF_ISATAP","namespace":"Socket","path":"Socket::IFF_ISATAP","type":"constant","return":null,"visibility":"public"},"Socket::IFF_LINK0":{"description":"per link layer defined bit 0","name":"IFF_LINK0","namespace":"Socket","path":"Socket::IFF_LINK0","type":"constant","return":null,"visibility":"public"},"Socket::IFF_LINK1":{"description":"per link layer defined bit 1","name":"IFF_LINK1","namespace":"Socket","path":"Socket::IFF_LINK1","type":"constant","return":null,"visibility":"public"},"Socket::IFF_LINK2":{"description":"per link layer defined bit 2","name":"IFF_LINK2","namespace":"Socket","path":"Socket::IFF_LINK2","type":"constant","return":null,"visibility":"public"},"Socket::IFF_LIVE_ADDR_CHANGE":{"description":"hardware address change when it's running","name":"IFF_LIVE_ADDR_CHANGE","namespace":"Socket","path":"Socket::IFF_LIVE_ADDR_CHANGE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_LOOPBACK":{"description":"loopback net","name":"IFF_LOOPBACK","namespace":"Socket","path":"Socket::IFF_LOOPBACK","type":"constant","return":null,"visibility":"public"},"Socket::IFF_LOWER_UP":{"description":"driver signals L1 up","name":"IFF_LOWER_UP","namespace":"Socket","path":"Socket::IFF_LOWER_UP","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MACVLAN_PORT":{"description":"device used as macvlan port","name":"IFF_MACVLAN_PORT","namespace":"Socket","path":"Socket::IFF_MACVLAN_PORT","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MASTER":{"description":"master of a load balancer","name":"IFF_MASTER","namespace":"Socket","path":"Socket::IFF_MASTER","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MASTER_8023AD":{"description":"bonding master, 802.3ad.","name":"IFF_MASTER_8023AD","namespace":"Socket","path":"Socket::IFF_MASTER_8023AD","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MASTER_ALB":{"description":"bonding master, balance-alb.","name":"IFF_MASTER_ALB","namespace":"Socket","path":"Socket::IFF_MASTER_ALB","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MASTER_ARPMON":{"description":"bonding master, ARP mon in use","name":"IFF_MASTER_ARPMON","namespace":"Socket","path":"Socket::IFF_MASTER_ARPMON","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MONITOR":{"description":"user-requested monitor mode","name":"IFF_MONITOR","namespace":"Socket","path":"Socket::IFF_MONITOR","type":"constant","return":null,"visibility":"public"},"Socket::IFF_MULTICAST":{"description":"supports multicast","name":"IFF_MULTICAST","namespace":"Socket","path":"Socket::IFF_MULTICAST","type":"constant","return":null,"visibility":"public"},"Socket::IFF_NOARP":{"description":"no address resolution protocol","name":"IFF_NOARP","namespace":"Socket","path":"Socket::IFF_NOARP","type":"constant","return":null,"visibility":"public"},"Socket::IFF_NOTRAILERS":{"description":"avoid use of trailers","name":"IFF_NOTRAILERS","namespace":"Socket","path":"Socket::IFF_NOTRAILERS","type":"constant","return":null,"visibility":"public"},"Socket::IFF_OACTIVE":{"description":"transmission in progress","name":"IFF_OACTIVE","namespace":"Socket","path":"Socket::IFF_OACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_OVS_DATAPATH":{"description":"device used as Open vSwitch datapath port","name":"IFF_OVS_DATAPATH","namespace":"Socket","path":"Socket::IFF_OVS_DATAPATH","type":"constant","return":null,"visibility":"public"},"Socket::IFF_POINTOPOINT":{"description":"point-to-point link","name":"IFF_POINTOPOINT","namespace":"Socket","path":"Socket::IFF_POINTOPOINT","type":"constant","return":null,"visibility":"public"},"Socket::IFF_PORTSEL":{"description":"can set media type","name":"IFF_PORTSEL","namespace":"Socket","path":"Socket::IFF_PORTSEL","type":"constant","return":null,"visibility":"public"},"Socket::IFF_PPROMISC":{"description":"user-requested promisc mode","name":"IFF_PPROMISC","namespace":"Socket","path":"Socket::IFF_PPROMISC","type":"constant","return":null,"visibility":"public"},"Socket::IFF_PROMISC":{"description":"receive all packets","name":"IFF_PROMISC","namespace":"Socket","path":"Socket::IFF_PROMISC","type":"constant","return":null,"visibility":"public"},"Socket::IFF_RENAMING":{"description":"interface is being renamed","name":"IFF_RENAMING","namespace":"Socket","path":"Socket::IFF_RENAMING","type":"constant","return":null,"visibility":"public"},"Socket::IFF_ROUTE":{"description":"routing entry installed","name":"IFF_ROUTE","namespace":"Socket","path":"Socket::IFF_ROUTE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_RUNNING":{"description":"resources allocated","name":"IFF_RUNNING","namespace":"Socket","path":"Socket::IFF_RUNNING","type":"constant","return":null,"visibility":"public"},"Socket::IFF_SIMPLEX":{"description":"can't hear own transmissions","name":"IFF_SIMPLEX","namespace":"Socket","path":"Socket::IFF_SIMPLEX","type":"constant","return":null,"visibility":"public"},"Socket::IFF_SLAVE":{"description":"slave of a load balancer","name":"IFF_SLAVE","namespace":"Socket","path":"Socket::IFF_SLAVE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_SLAVE_INACTIVE":{"description":"bonding slave not the curr. active","name":"IFF_SLAVE_INACTIVE","namespace":"Socket","path":"Socket::IFF_SLAVE_INACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_SLAVE_NEEDARP":{"description":"need ARPs for validation","name":"IFF_SLAVE_NEEDARP","namespace":"Socket","path":"Socket::IFF_SLAVE_NEEDARP","type":"constant","return":null,"visibility":"public"},"Socket::IFF_SMART":{"description":"interface manages own routes","name":"IFF_SMART","namespace":"Socket","path":"Socket::IFF_SMART","type":"constant","return":null,"visibility":"public"},"Socket::IFF_STATICARP":{"description":"static ARP","name":"IFF_STATICARP","namespace":"Socket","path":"Socket::IFF_STATICARP","type":"constant","return":null,"visibility":"public"},"Socket::IFF_SUPP_NOFCS":{"description":"sending custom FCS","name":"IFF_SUPP_NOFCS","namespace":"Socket","path":"Socket::IFF_SUPP_NOFCS","type":"constant","return":null,"visibility":"public"},"Socket::IFF_TEAM_PORT":{"description":"used as team port","name":"IFF_TEAM_PORT","namespace":"Socket","path":"Socket::IFF_TEAM_PORT","type":"constant","return":null,"visibility":"public"},"Socket::IFF_TX_SKB_SHARING":{"description":"sharing skbs on transmit","name":"IFF_TX_SKB_SHARING","namespace":"Socket","path":"Socket::IFF_TX_SKB_SHARING","type":"constant","return":null,"visibility":"public"},"Socket::IFF_UNICAST_FLT":{"description":"unicast filtering","name":"IFF_UNICAST_FLT","namespace":"Socket","path":"Socket::IFF_UNICAST_FLT","type":"constant","return":null,"visibility":"public"},"Socket::IFF_UP":{"description":"interface is up","name":"IFF_UP","namespace":"Socket","path":"Socket::IFF_UP","type":"constant","return":null,"visibility":"public"},"Socket::IFF_VOLATILE":{"description":"volatile flags","name":"IFF_VOLATILE","namespace":"Socket","path":"Socket::IFF_VOLATILE","type":"constant","return":null,"visibility":"public"},"Socket::IFF_WAN_HDLC":{"description":"WAN HDLC device","name":"IFF_WAN_HDLC","namespace":"Socket","path":"Socket::IFF_WAN_HDLC","type":"constant","return":null,"visibility":"public"},"Socket::IFF_XMIT_DST_RELEASE":{"description":"dev_hard_start_xmit() is allowed to release skb->dst","name":"IFF_XMIT_DST_RELEASE","namespace":"Socket","path":"Socket::IFF_XMIT_DST_RELEASE","type":"constant","return":null,"visibility":"public"},"Socket::IFNAMSIZ":{"description":"Maximum interface name size","name":"IFNAMSIZ","namespace":"Socket","path":"Socket::IFNAMSIZ","type":"constant","return":null,"visibility":"public"},"Socket::IF_NAMESIZE":{"description":"Maximum interface name size","name":"IF_NAMESIZE","namespace":"Socket","path":"Socket::IF_NAMESIZE","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_ALLHOSTS_GROUP":{"description":"Multicast group for all systems on this subset","name":"INADDR_ALLHOSTS_GROUP","namespace":"Socket","path":"Socket::INADDR_ALLHOSTS_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_ANY":{"description":"A socket bound to INADDR_ANY receives packets from all interfaces and sends from the default IP address","name":"INADDR_ANY","namespace":"Socket","path":"Socket::INADDR_ANY","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_BROADCAST":{"description":"The network broadcast address","name":"INADDR_BROADCAST","namespace":"Socket","path":"Socket::INADDR_BROADCAST","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_LOOPBACK":{"description":"The loopback address","name":"INADDR_LOOPBACK","namespace":"Socket","path":"Socket::INADDR_LOOPBACK","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_MAX_LOCAL_GROUP":{"description":"The last local network multicast group","name":"INADDR_MAX_LOCAL_GROUP","namespace":"Socket","path":"Socket::INADDR_MAX_LOCAL_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_NONE":{"description":"A bitmask for matching no valid IP address","name":"INADDR_NONE","namespace":"Socket","path":"Socket::INADDR_NONE","type":"constant","return":null,"visibility":"public"},"Socket::INADDR_UNSPEC_GROUP":{"description":"The reserved multicast group","name":"INADDR_UNSPEC_GROUP","namespace":"Socket","path":"Socket::INADDR_UNSPEC_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::INET6_ADDRSTRLEN":{"description":"Maximum length of an IPv6 address string","name":"INET6_ADDRSTRLEN","namespace":"Socket","path":"Socket::INET6_ADDRSTRLEN","type":"constant","return":null,"visibility":"public"},"Socket::INET_ADDRSTRLEN":{"description":"Maximum length of an IPv4 address string","name":"INET_ADDRSTRLEN","namespace":"Socket","path":"Socket::INET_ADDRSTRLEN","type":"constant","return":null,"visibility":"public"},"Socket::IPPORT_RESERVED":{"description":"Default minimum address for bind or connect","name":"IPPORT_RESERVED","namespace":"Socket","path":"Socket::IPPORT_RESERVED","type":"constant","return":null,"visibility":"public"},"Socket::IPPORT_USERRESERVED":{"description":"Default maximum address for bind or connect","name":"IPPORT_USERRESERVED","namespace":"Socket","path":"Socket::IPPORT_USERRESERVED","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_AH":{"description":"IP6 auth header","name":"IPPROTO_AH","namespace":"Socket","path":"Socket::IPPROTO_AH","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_BIP":{"description":"","name":"IPPROTO_BIP","namespace":"Socket","path":"Socket::IPPROTO_BIP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_DSTOPTS":{"description":"IP6 destination option","name":"IPPROTO_DSTOPTS","namespace":"Socket","path":"Socket::IPPROTO_DSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_EGP":{"description":"Exterior Gateway Protocol","name":"IPPROTO_EGP","namespace":"Socket","path":"Socket::IPPROTO_EGP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_EON":{"description":"ISO cnlp","name":"IPPROTO_EON","namespace":"Socket","path":"Socket::IPPROTO_EON","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_ESP":{"description":"IP6 Encapsulated Security Payload","name":"IPPROTO_ESP","namespace":"Socket","path":"Socket::IPPROTO_ESP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_FRAGMENT":{"description":"IP6 fragmentation header","name":"IPPROTO_FRAGMENT","namespace":"Socket","path":"Socket::IPPROTO_FRAGMENT","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_GGP":{"description":"Gateway to Gateway Protocol","name":"IPPROTO_GGP","namespace":"Socket","path":"Socket::IPPROTO_GGP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_HELLO":{"description":"\"hello\" routing protocol","name":"IPPROTO_HELLO","namespace":"Socket","path":"Socket::IPPROTO_HELLO","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_HOPOPTS":{"description":"IP6 hop-by-hop options","name":"IPPROTO_HOPOPTS","namespace":"Socket","path":"Socket::IPPROTO_HOPOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_ICMP":{"description":"Control message protocol","name":"IPPROTO_ICMP","namespace":"Socket","path":"Socket::IPPROTO_ICMP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_ICMPV6":{"description":"ICMP6","name":"IPPROTO_ICMPV6","namespace":"Socket","path":"Socket::IPPROTO_ICMPV6","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_IDP":{"description":"XNS IDP","name":"IPPROTO_IDP","namespace":"Socket","path":"Socket::IPPROTO_IDP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_IGMP":{"description":"Group Management Protocol","name":"IPPROTO_IGMP","namespace":"Socket","path":"Socket::IPPROTO_IGMP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_IP":{"description":"Dummy protocol for IP","name":"IPPROTO_IP","namespace":"Socket","path":"Socket::IPPROTO_IP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_IPV6":{"description":"IP6 header","name":"IPPROTO_IPV6","namespace":"Socket","path":"Socket::IPPROTO_IPV6","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_MAX":{"description":"Maximum IPPROTO constant","name":"IPPROTO_MAX","namespace":"Socket","path":"Socket::IPPROTO_MAX","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_ND":{"description":"Sun net disk protocol","name":"IPPROTO_ND","namespace":"Socket","path":"Socket::IPPROTO_ND","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_NONE":{"description":"IP6 no next header","name":"IPPROTO_NONE","namespace":"Socket","path":"Socket::IPPROTO_NONE","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_PUP":{"description":"PARC Universal Packet protocol","name":"IPPROTO_PUP","namespace":"Socket","path":"Socket::IPPROTO_PUP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_RAW":{"description":"Raw IP packet","name":"IPPROTO_RAW","namespace":"Socket","path":"Socket::IPPROTO_RAW","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_ROUTING":{"description":"IP6 routing header","name":"IPPROTO_ROUTING","namespace":"Socket","path":"Socket::IPPROTO_ROUTING","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_TCP":{"description":"TCP","name":"IPPROTO_TCP","namespace":"Socket","path":"Socket::IPPROTO_TCP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_TP":{"description":"ISO transport protocol class 4","name":"IPPROTO_TP","namespace":"Socket","path":"Socket::IPPROTO_TP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_UDP":{"description":"UDP","name":"IPPROTO_UDP","namespace":"Socket","path":"Socket::IPPROTO_UDP","type":"constant","return":null,"visibility":"public"},"Socket::IPPROTO_XTP":{"description":"Xpress Transport Protocol","name":"IPPROTO_XTP","namespace":"Socket","path":"Socket::IPPROTO_XTP","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_CHECKSUM":{"description":"Checksum offset for raw sockets","name":"IPV6_CHECKSUM","namespace":"Socket","path":"Socket::IPV6_CHECKSUM","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_DONTFRAG":{"description":"Don't fragment packets","name":"IPV6_DONTFRAG","namespace":"Socket","path":"Socket::IPV6_DONTFRAG","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_DSTOPTS":{"description":"Destination option","name":"IPV6_DSTOPTS","namespace":"Socket","path":"Socket::IPV6_DSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_HOPLIMIT":{"description":"Hop limit","name":"IPV6_HOPLIMIT","namespace":"Socket","path":"Socket::IPV6_HOPLIMIT","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_HOPOPTS":{"description":"Hop-by-hop option","name":"IPV6_HOPOPTS","namespace":"Socket","path":"Socket::IPV6_HOPOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_JOIN_GROUP":{"description":"Join a group membership","name":"IPV6_JOIN_GROUP","namespace":"Socket","path":"Socket::IPV6_JOIN_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_LEAVE_GROUP":{"description":"Leave a group membership","name":"IPV6_LEAVE_GROUP","namespace":"Socket","path":"Socket::IPV6_LEAVE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_MULTICAST_HOPS":{"description":"IP6 multicast hops","name":"IPV6_MULTICAST_HOPS","namespace":"Socket","path":"Socket::IPV6_MULTICAST_HOPS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_MULTICAST_IF":{"description":"IP6 multicast interface","name":"IPV6_MULTICAST_IF","namespace":"Socket","path":"Socket::IPV6_MULTICAST_IF","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_MULTICAST_LOOP":{"description":"IP6 multicast loopback","name":"IPV6_MULTICAST_LOOP","namespace":"Socket","path":"Socket::IPV6_MULTICAST_LOOP","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_NEXTHOP":{"description":"Next hop address","name":"IPV6_NEXTHOP","namespace":"Socket","path":"Socket::IPV6_NEXTHOP","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_PATHMTU":{"description":"Retrieve current path MTU","name":"IPV6_PATHMTU","namespace":"Socket","path":"Socket::IPV6_PATHMTU","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_PKTINFO":{"description":"Receive packet information with datagram","name":"IPV6_PKTINFO","namespace":"Socket","path":"Socket::IPV6_PKTINFO","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVDSTOPTS":{"description":"Receive all IP6 options for response","name":"IPV6_RECVDSTOPTS","namespace":"Socket","path":"Socket::IPV6_RECVDSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVHOPLIMIT":{"description":"Receive hop limit with datagram","name":"IPV6_RECVHOPLIMIT","namespace":"Socket","path":"Socket::IPV6_RECVHOPLIMIT","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVHOPOPTS":{"description":"Receive hop-by-hop options","name":"IPV6_RECVHOPOPTS","namespace":"Socket","path":"Socket::IPV6_RECVHOPOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVPATHMTU":{"description":"Receive current path MTU with datagram","name":"IPV6_RECVPATHMTU","namespace":"Socket","path":"Socket::IPV6_RECVPATHMTU","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVPKTINFO":{"description":"Receive destination IP address and incoming interface","name":"IPV6_RECVPKTINFO","namespace":"Socket","path":"Socket::IPV6_RECVPKTINFO","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVRTHDR":{"description":"Receive routing header","name":"IPV6_RECVRTHDR","namespace":"Socket","path":"Socket::IPV6_RECVRTHDR","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RECVTCLASS":{"description":"Receive traffic class","name":"IPV6_RECVTCLASS","namespace":"Socket","path":"Socket::IPV6_RECVTCLASS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RTHDR":{"description":"Allows removal of sticky routing headers","name":"IPV6_RTHDR","namespace":"Socket","path":"Socket::IPV6_RTHDR","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RTHDRDSTOPTS":{"description":"Allows removal of sticky destination options header","name":"IPV6_RTHDRDSTOPTS","namespace":"Socket","path":"Socket::IPV6_RTHDRDSTOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_RTHDR_TYPE_0":{"description":"Routing header type 0","name":"IPV6_RTHDR_TYPE_0","namespace":"Socket","path":"Socket::IPV6_RTHDR_TYPE_0","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_TCLASS":{"description":"Specify the traffic class","name":"IPV6_TCLASS","namespace":"Socket","path":"Socket::IPV6_TCLASS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_UNICAST_HOPS":{"description":"IP6 unicast hops","name":"IPV6_UNICAST_HOPS","namespace":"Socket","path":"Socket::IPV6_UNICAST_HOPS","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_USE_MIN_MTU":{"description":"Use the minimum MTU size","name":"IPV6_USE_MIN_MTU","namespace":"Socket","path":"Socket::IPV6_USE_MIN_MTU","type":"constant","return":null,"visibility":"public"},"Socket::IPV6_V6ONLY":{"description":"Only bind IPv6 with a wildcard bind","name":"IPV6_V6ONLY","namespace":"Socket","path":"Socket::IPV6_V6ONLY","type":"constant","return":null,"visibility":"public"},"Socket::IPX_TYPE":{"description":"","name":"IPX_TYPE","namespace":"Socket","path":"Socket::IPX_TYPE","type":"constant","return":null,"visibility":"public"},"Socket::IP_ADD_MEMBERSHIP":{"description":"Add a multicast group membership","name":"IP_ADD_MEMBERSHIP","namespace":"Socket","path":"Socket::IP_ADD_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::IP_ADD_SOURCE_MEMBERSHIP":{"description":"Add a multicast group membership","name":"IP_ADD_SOURCE_MEMBERSHIP","namespace":"Socket","path":"Socket::IP_ADD_SOURCE_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::IP_BLOCK_SOURCE":{"description":"Block IPv4 multicast packets with a give source address","name":"IP_BLOCK_SOURCE","namespace":"Socket","path":"Socket::IP_BLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::IP_DEFAULT_MULTICAST_LOOP":{"description":"Default multicast loopback","name":"IP_DEFAULT_MULTICAST_LOOP","namespace":"Socket","path":"Socket::IP_DEFAULT_MULTICAST_LOOP","type":"constant","return":null,"visibility":"public"},"Socket::IP_DEFAULT_MULTICAST_TTL":{"description":"Default multicast TTL","name":"IP_DEFAULT_MULTICAST_TTL","namespace":"Socket","path":"Socket::IP_DEFAULT_MULTICAST_TTL","type":"constant","return":null,"visibility":"public"},"Socket::IP_DONTFRAG":{"description":"Don't fragment packets","name":"IP_DONTFRAG","namespace":"Socket","path":"Socket::IP_DONTFRAG","type":"constant","return":null,"visibility":"public"},"Socket::IP_DROP_MEMBERSHIP":{"description":"Drop a multicast group membership","name":"IP_DROP_MEMBERSHIP","namespace":"Socket","path":"Socket::IP_DROP_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::IP_DROP_SOURCE_MEMBERSHIP":{"description":"Drop a multicast group membership","name":"IP_DROP_SOURCE_MEMBERSHIP","namespace":"Socket","path":"Socket::IP_DROP_SOURCE_MEMBERSHIP","type":"constant","return":null,"visibility":"public"},"Socket::IP_FREEBIND":{"description":"Allow binding to nonexistent IP addresses","name":"IP_FREEBIND","namespace":"Socket","path":"Socket::IP_FREEBIND","type":"constant","return":null,"visibility":"public"},"Socket::IP_HDRINCL":{"description":"Header is included with data","name":"IP_HDRINCL","namespace":"Socket","path":"Socket::IP_HDRINCL","type":"constant","return":null,"visibility":"public"},"Socket::IP_IPSEC_POLICY":{"description":"IPsec security policy","name":"IP_IPSEC_POLICY","namespace":"Socket","path":"Socket::IP_IPSEC_POLICY","type":"constant","return":null,"visibility":"public"},"Socket::IP_MAX_MEMBERSHIPS":{"description":"Maximum number multicast groups a socket can join","name":"IP_MAX_MEMBERSHIPS","namespace":"Socket","path":"Socket::IP_MAX_MEMBERSHIPS","type":"constant","return":null,"visibility":"public"},"Socket::IP_MINTTL":{"description":"Minimum TTL allowed for received packets","name":"IP_MINTTL","namespace":"Socket","path":"Socket::IP_MINTTL","type":"constant","return":null,"visibility":"public"},"Socket::IP_MSFILTER":{"description":"Multicast source filtering","name":"IP_MSFILTER","namespace":"Socket","path":"Socket::IP_MSFILTER","type":"constant","return":null,"visibility":"public"},"Socket::IP_MTU":{"description":"The Maximum Transmission Unit of the socket","name":"IP_MTU","namespace":"Socket","path":"Socket::IP_MTU","type":"constant","return":null,"visibility":"public"},"Socket::IP_MTU_DISCOVER":{"description":"Path MTU discovery","name":"IP_MTU_DISCOVER","namespace":"Socket","path":"Socket::IP_MTU_DISCOVER","type":"constant","return":null,"visibility":"public"},"Socket::IP_MULTICAST_IF":{"description":"IP multicast interface","name":"IP_MULTICAST_IF","namespace":"Socket","path":"Socket::IP_MULTICAST_IF","type":"constant","return":null,"visibility":"public"},"Socket::IP_MULTICAST_LOOP":{"description":"IP multicast loopback","name":"IP_MULTICAST_LOOP","namespace":"Socket","path":"Socket::IP_MULTICAST_LOOP","type":"constant","return":null,"visibility":"public"},"Socket::IP_MULTICAST_TTL":{"description":"IP multicast TTL","name":"IP_MULTICAST_TTL","namespace":"Socket","path":"Socket::IP_MULTICAST_TTL","type":"constant","return":null,"visibility":"public"},"Socket::IP_ONESBCAST":{"description":"Force outgoing broadcast datagrams to have the undirected broadcast address","name":"IP_ONESBCAST","namespace":"Socket","path":"Socket::IP_ONESBCAST","type":"constant","return":null,"visibility":"public"},"Socket::IP_OPTIONS":{"description":"IP options to be included in packets","name":"IP_OPTIONS","namespace":"Socket","path":"Socket::IP_OPTIONS","type":"constant","return":null,"visibility":"public"},"Socket::IP_PASSSEC":{"description":"Retrieve security context with datagram","name":"IP_PASSSEC","namespace":"Socket","path":"Socket::IP_PASSSEC","type":"constant","return":null,"visibility":"public"},"Socket::IP_PKTINFO":{"description":"Receive packet information with datagrams","name":"IP_PKTINFO","namespace":"Socket","path":"Socket::IP_PKTINFO","type":"constant","return":null,"visibility":"public"},"Socket::IP_PKTOPTIONS":{"description":"Receive packet options with datagrams","name":"IP_PKTOPTIONS","namespace":"Socket","path":"Socket::IP_PKTOPTIONS","type":"constant","return":null,"visibility":"public"},"Socket::IP_PMTUDISC_DO":{"description":"Always send DF frames","name":"IP_PMTUDISC_DO","namespace":"Socket","path":"Socket::IP_PMTUDISC_DO","type":"constant","return":null,"visibility":"public"},"Socket::IP_PMTUDISC_DONT":{"description":"Never send DF frames","name":"IP_PMTUDISC_DONT","namespace":"Socket","path":"Socket::IP_PMTUDISC_DONT","type":"constant","return":null,"visibility":"public"},"Socket::IP_PMTUDISC_WANT":{"description":"Use per-route hints","name":"IP_PMTUDISC_WANT","namespace":"Socket","path":"Socket::IP_PMTUDISC_WANT","type":"constant","return":null,"visibility":"public"},"Socket::IP_PORTRANGE":{"description":"Set the port range for sockets with unspecified port numbers","name":"IP_PORTRANGE","namespace":"Socket","path":"Socket::IP_PORTRANGE","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVDSTADDR":{"description":"Receive IP destination address with datagram","name":"IP_RECVDSTADDR","namespace":"Socket","path":"Socket::IP_RECVDSTADDR","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVERR":{"description":"Enable extended reliable error message passing","name":"IP_RECVERR","namespace":"Socket","path":"Socket::IP_RECVERR","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVIF":{"description":"Receive interface information with datagrams","name":"IP_RECVIF","namespace":"Socket","path":"Socket::IP_RECVIF","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVOPTS":{"description":"Receive all IP options with datagram","name":"IP_RECVOPTS","namespace":"Socket","path":"Socket::IP_RECVOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVRETOPTS":{"description":"Receive all IP options for response","name":"IP_RECVRETOPTS","namespace":"Socket","path":"Socket::IP_RECVRETOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVSLLA":{"description":"Receive link-layer address with datagrams","name":"IP_RECVSLLA","namespace":"Socket","path":"Socket::IP_RECVSLLA","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVTOS":{"description":"Receive TOS with incoming packets","name":"IP_RECVTOS","namespace":"Socket","path":"Socket::IP_RECVTOS","type":"constant","return":null,"visibility":"public"},"Socket::IP_RECVTTL":{"description":"Receive IP TTL with datagrams","name":"IP_RECVTTL","namespace":"Socket","path":"Socket::IP_RECVTTL","type":"constant","return":null,"visibility":"public"},"Socket::IP_RETOPTS":{"description":"IP options to be included in datagrams","name":"IP_RETOPTS","namespace":"Socket","path":"Socket::IP_RETOPTS","type":"constant","return":null,"visibility":"public"},"Socket::IP_ROUTER_ALERT":{"description":"Notify transit routers to more closely examine the contents of an IP packet","name":"IP_ROUTER_ALERT","namespace":"Socket","path":"Socket::IP_ROUTER_ALERT","type":"constant","return":null,"visibility":"public"},"Socket::IP_SENDSRCADDR":{"description":"Source address for outgoing UDP datagrams","name":"IP_SENDSRCADDR","namespace":"Socket","path":"Socket::IP_SENDSRCADDR","type":"constant","return":null,"visibility":"public"},"Socket::IP_TOS":{"description":"IP type-of-service","name":"IP_TOS","namespace":"Socket","path":"Socket::IP_TOS","type":"constant","return":null,"visibility":"public"},"Socket::IP_TRANSPARENT":{"description":"Transparent proxy","name":"IP_TRANSPARENT","namespace":"Socket","path":"Socket::IP_TRANSPARENT","type":"constant","return":null,"visibility":"public"},"Socket::IP_TTL":{"description":"IP time-to-live","name":"IP_TTL","namespace":"Socket","path":"Socket::IP_TTL","type":"constant","return":null,"visibility":"public"},"Socket::IP_UNBLOCK_SOURCE":{"description":"Unblock IPv4 multicast packets with a give source address","name":"IP_UNBLOCK_SOURCE","namespace":"Socket","path":"Socket::IP_UNBLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::IP_XFRM_POLICY":{"description":"","name":"IP_XFRM_POLICY","namespace":"Socket","path":"Socket::IP_XFRM_POLICY","type":"constant","return":null,"visibility":"public"},"Socket::Ifaddr":{"description":"Socket::Ifaddr represents a result of getifaddrs() function.","name":"Ifaddr","namespace":"Socket","path":"Socket::Ifaddr","type":"class","visibility":"public"},"Socket::Ifaddr#addr":{"description":"Returns the address of _ifaddr_.\nnil is returned if address is not available in _ifaddr_.","name":"addr","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#addr","type":"instance_method","visibility":"public"},"Socket::Ifaddr#broadaddr":{"description":"Returns the broadcast address of _ifaddr_.\nnil is returned if the flags doesn't have IFF_BROADCAST.","name":"broadaddr","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#broadaddr","type":"instance_method","visibility":"public"},"Socket::Ifaddr#dstaddr":{"description":"Returns the destination address of _ifaddr_.\nnil is returned if the flags doesn't have IFF_POINTOPOINT.","name":"dstaddr","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#dstaddr","type":"instance_method","visibility":"public"},"Socket::Ifaddr#flags":{"description":"Returns the flags of _ifaddr_.","name":"flags","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#flags","type":"instance_method","visibility":"public"},"Socket::Ifaddr#ifindex":{"description":"Returns the interface index of _ifaddr_.","name":"ifindex","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#ifindex","type":"instance_method","visibility":"public"},"Socket::Ifaddr#inspect":{"description":"Returns a string to show contents of _ifaddr_.","name":"inspect","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#inspect","type":"instance_method","visibility":"public"},"Socket::Ifaddr#name":{"description":"Returns the interface name of _ifaddr_.","name":"name","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#name","type":"instance_method","visibility":"public"},"Socket::Ifaddr#netmask":{"description":"Returns the netmask address of _ifaddr_.\nnil is returned if netmask is not available in _ifaddr_.","name":"netmask","namespace":"Socket::Ifaddr","path":"Socket::Ifaddr#netmask","type":"instance_method","visibility":"public"},"Socket::LOCAL_CONNWAIT":{"description":"Connect blocks until accepted","name":"LOCAL_CONNWAIT","namespace":"Socket","path":"Socket::LOCAL_CONNWAIT","type":"constant","return":null,"visibility":"public"},"Socket::LOCAL_CREDS":{"description":"Pass credentials to receiver","name":"LOCAL_CREDS","namespace":"Socket","path":"Socket::LOCAL_CREDS","type":"constant","return":null,"visibility":"public"},"Socket::LOCAL_PEERCRED":{"description":"Retrieve peer credentials","name":"LOCAL_PEERCRED","namespace":"Socket","path":"Socket::LOCAL_PEERCRED","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_BLOCK_SOURCE":{"description":"Block multicast packets from this source","name":"MCAST_BLOCK_SOURCE","namespace":"Socket","path":"Socket::MCAST_BLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_EXCLUDE":{"description":"Exclusive multicast source filter","name":"MCAST_EXCLUDE","namespace":"Socket","path":"Socket::MCAST_EXCLUDE","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_INCLUDE":{"description":"Inclusive multicast source filter","name":"MCAST_INCLUDE","namespace":"Socket","path":"Socket::MCAST_INCLUDE","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_JOIN_GROUP":{"description":"Join a multicast group","name":"MCAST_JOIN_GROUP","namespace":"Socket","path":"Socket::MCAST_JOIN_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_JOIN_SOURCE_GROUP":{"description":"Join a multicast source group","name":"MCAST_JOIN_SOURCE_GROUP","namespace":"Socket","path":"Socket::MCAST_JOIN_SOURCE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_LEAVE_GROUP":{"description":"Leave a multicast group","name":"MCAST_LEAVE_GROUP","namespace":"Socket","path":"Socket::MCAST_LEAVE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_LEAVE_SOURCE_GROUP":{"description":"Leave a multicast source group","name":"MCAST_LEAVE_SOURCE_GROUP","namespace":"Socket","path":"Socket::MCAST_LEAVE_SOURCE_GROUP","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_MSFILTER":{"description":"Multicast source filtering","name":"MCAST_MSFILTER","namespace":"Socket","path":"Socket::MCAST_MSFILTER","type":"constant","return":null,"visibility":"public"},"Socket::MCAST_UNBLOCK_SOURCE":{"description":"Unblock multicast packets from this source","name":"MCAST_UNBLOCK_SOURCE","namespace":"Socket","path":"Socket::MCAST_UNBLOCK_SOURCE","type":"constant","return":null,"visibility":"public"},"Socket::MSG_COMPAT":{"description":"End of record","name":"MSG_COMPAT","namespace":"Socket","path":"Socket::MSG_COMPAT","type":"constant","return":null,"visibility":"public"},"Socket::MSG_CONFIRM":{"description":"Confirm path validity","name":"MSG_CONFIRM","namespace":"Socket","path":"Socket::MSG_CONFIRM","type":"constant","return":null,"visibility":"public"},"Socket::MSG_CTRUNC":{"description":"Control data lost before delivery","name":"MSG_CTRUNC","namespace":"Socket","path":"Socket::MSG_CTRUNC","type":"constant","return":null,"visibility":"public"},"Socket::MSG_DONTROUTE":{"description":"Send without using the routing tables","name":"MSG_DONTROUTE","namespace":"Socket","path":"Socket::MSG_DONTROUTE","type":"constant","return":null,"visibility":"public"},"Socket::MSG_DONTWAIT":{"description":"This message should be non-blocking","name":"MSG_DONTWAIT","namespace":"Socket","path":"Socket::MSG_DONTWAIT","type":"constant","return":null,"visibility":"public"},"Socket::MSG_EOF":{"description":"Data completes connection","name":"MSG_EOF","namespace":"Socket","path":"Socket::MSG_EOF","type":"constant","return":null,"visibility":"public"},"Socket::MSG_EOR":{"description":"Data completes record","name":"MSG_EOR","namespace":"Socket","path":"Socket::MSG_EOR","type":"constant","return":null,"visibility":"public"},"Socket::MSG_ERRQUEUE":{"description":"Fetch message from error queue","name":"MSG_ERRQUEUE","namespace":"Socket","path":"Socket::MSG_ERRQUEUE","type":"constant","return":null,"visibility":"public"},"Socket::MSG_FASTOPEN":{"description":"Reduce step of the handshake process","name":"MSG_FASTOPEN","namespace":"Socket","path":"Socket::MSG_FASTOPEN","type":"constant","return":null,"visibility":"public"},"Socket::MSG_FIN":{"description":"","name":"MSG_FIN","namespace":"Socket","path":"Socket::MSG_FIN","type":"constant","return":null,"visibility":"public"},"Socket::MSG_FLUSH":{"description":"Start of a hold sequence.  Dumps to so_temp","name":"MSG_FLUSH","namespace":"Socket","path":"Socket::MSG_FLUSH","type":"constant","return":null,"visibility":"public"},"Socket::MSG_HAVEMORE":{"description":"Data ready to be read","name":"MSG_HAVEMORE","namespace":"Socket","path":"Socket::MSG_HAVEMORE","type":"constant","return":null,"visibility":"public"},"Socket::MSG_HOLD":{"description":"Hold fragment in so_temp","name":"MSG_HOLD","namespace":"Socket","path":"Socket::MSG_HOLD","type":"constant","return":null,"visibility":"public"},"Socket::MSG_MORE":{"description":"Sender will send more","name":"MSG_MORE","namespace":"Socket","path":"Socket::MSG_MORE","type":"constant","return":null,"visibility":"public"},"Socket::MSG_NOSIGNAL":{"description":"Do not generate SIGPIPE","name":"MSG_NOSIGNAL","namespace":"Socket","path":"Socket::MSG_NOSIGNAL","type":"constant","return":null,"visibility":"public"},"Socket::MSG_OOB":{"description":"Process out-of-band data","name":"MSG_OOB","namespace":"Socket","path":"Socket::MSG_OOB","type":"constant","return":null,"visibility":"public"},"Socket::MSG_PEEK":{"description":"Peek at incoming message","name":"MSG_PEEK","namespace":"Socket","path":"Socket::MSG_PEEK","type":"constant","return":null,"visibility":"public"},"Socket::MSG_PROXY":{"description":"Wait for full request","name":"MSG_PROXY","namespace":"Socket","path":"Socket::MSG_PROXY","type":"constant","return":null,"visibility":"public"},"Socket::MSG_RCVMORE":{"description":"Data remains in the current packet","name":"MSG_RCVMORE","namespace":"Socket","path":"Socket::MSG_RCVMORE","type":"constant","return":null,"visibility":"public"},"Socket::MSG_RST":{"description":"","name":"MSG_RST","namespace":"Socket","path":"Socket::MSG_RST","type":"constant","return":null,"visibility":"public"},"Socket::MSG_SEND":{"description":"Send the packet in so_temp","name":"MSG_SEND","namespace":"Socket","path":"Socket::MSG_SEND","type":"constant","return":null,"visibility":"public"},"Socket::MSG_SYN":{"description":"","name":"MSG_SYN","namespace":"Socket","path":"Socket::MSG_SYN","type":"constant","return":null,"visibility":"public"},"Socket::MSG_TRUNC":{"description":"Data discarded before delivery","name":"MSG_TRUNC","namespace":"Socket","path":"Socket::MSG_TRUNC","type":"constant","return":null,"visibility":"public"},"Socket::MSG_WAITALL":{"description":"Wait for full request or error","name":"MSG_WAITALL","namespace":"Socket","path":"Socket::MSG_WAITALL","type":"constant","return":null,"visibility":"public"},"Socket::NI_DGRAM":{"description":"The service specified is a datagram service (looks up UDP ports)","name":"NI_DGRAM","namespace":"Socket","path":"Socket::NI_DGRAM","type":"constant","return":null,"visibility":"public"},"Socket::NI_MAXHOST":{"description":"Maximum length of a hostname","name":"NI_MAXHOST","namespace":"Socket","path":"Socket::NI_MAXHOST","type":"constant","return":null,"visibility":"public"},"Socket::NI_MAXSERV":{"description":"Maximum length of a service name","name":"NI_MAXSERV","namespace":"Socket","path":"Socket::NI_MAXSERV","type":"constant","return":null,"visibility":"public"},"Socket::NI_NAMEREQD":{"description":"A name is required","name":"NI_NAMEREQD","namespace":"Socket","path":"Socket::NI_NAMEREQD","type":"constant","return":null,"visibility":"public"},"Socket::NI_NOFQDN":{"description":"An FQDN is not required for local hosts, return only the local part","name":"NI_NOFQDN","namespace":"Socket","path":"Socket::NI_NOFQDN","type":"constant","return":null,"visibility":"public"},"Socket::NI_NUMERICHOST":{"description":"Return a numeric address","name":"NI_NUMERICHOST","namespace":"Socket","path":"Socket::NI_NUMERICHOST","type":"constant","return":null,"visibility":"public"},"Socket::NI_NUMERICSERV":{"description":"Return the service name as a digit string","name":"NI_NUMERICSERV","namespace":"Socket","path":"Socket::NI_NUMERICSERV","type":"constant","return":null,"visibility":"public"},"Socket::Option":{"description":"Socket::Option represents a socket option used by\nBasicSocket#getsockopt and BasicSocket#setsockopt.  A socket option\ncontains the socket #family, protocol #level, option name #optname and\noption value #data.","name":"Option","namespace":"Socket","path":"Socket::Option","type":"class","visibility":"public"},"Socket::Option#bool":{"description":"Returns the data in _sockopt_ as an boolean value.\n\n  sockopt = Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, 1)\n  p sockopt.bool => true","name":"bool","namespace":"Socket::Option","path":"Socket::Option#bool","type":"instance_method","visibility":"public"},"Socket::Option#byte":{"description":"Returns the data in _sockopt_ as an byte.\n\n  sockopt = Socket::Option.byte(:INET, :SOCKET, :KEEPALIVE, 1)\n  p sockopt.byte => 1","name":"byte","namespace":"Socket::Option","path":"Socket::Option#byte","type":"instance_method","visibility":"public"},"Socket::Option#data":{"description":"returns the socket option data as a string.\n\n  p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(\"i!\")).data\n  #=> \"\\x01\\x00\\x00\\x00\"","name":"data","namespace":"Socket::Option","path":"Socket::Option#data","type":"instance_method","visibility":"public"},"Socket::Option#family":{"description":"returns the socket family as an integer.\n\n  p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(\"i!\")).family\n  #=> 10","name":"family","namespace":"Socket::Option","path":"Socket::Option#family","type":"instance_method","visibility":"public"},"Socket::Option#initialize":{"description":"Returns a new Socket::Option object.\n\n  sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(\"i\"))\n  p sockopt #=> #<Socket::Option: INET SOCKET KEEPALIVE 1>","name":"initialize","namespace":"Socket::Option","path":"Socket::Option#initialize","type":"instance_method","visibility":"public"},"Socket::Option#inspect":{"description":"Returns a string which shows sockopt in human-readable form.\n\n  p Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(\"i\")).inspect\n  #=> \"#<Socket::Option: INET SOCKET KEEPALIVE 1>\"","name":"inspect","namespace":"Socket::Option","path":"Socket::Option#inspect","type":"instance_method","visibility":"public"},"Socket::Option#int":{"description":"Returns the data in _sockopt_ as an int.\n\nThe size and endian is dependent on the platform.\n\n  sockopt = Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, 1)\n  p sockopt.int => 1","name":"int","namespace":"Socket::Option","path":"Socket::Option#int","type":"instance_method","visibility":"public"},"Socket::Option#ipv4_multicast_loop":{"description":"Returns the ipv4_multicast_loop data in _sockopt_ as a integer.\n\n  sockopt = Socket::Option.ipv4_multicast_loop(10)\n  p sockopt.ipv4_multicast_loop => 10","name":"ipv4_multicast_loop","namespace":"Socket::Option","path":"Socket::Option#ipv4_multicast_loop","type":"instance_method","visibility":"public"},"Socket::Option#ipv4_multicast_ttl":{"description":"Returns the ipv4_multicast_ttl data in _sockopt_ as a integer.\n\n  sockopt = Socket::Option.ipv4_multicast_ttl(10)\n  p sockopt.ipv4_multicast_ttl => 10","name":"ipv4_multicast_ttl","namespace":"Socket::Option","path":"Socket::Option#ipv4_multicast_ttl","type":"instance_method","visibility":"public"},"Socket::Option#level":{"description":"returns the socket level as an integer.\n\n  p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(\"i!\")).level\n  #=> 41","name":"level","namespace":"Socket::Option","path":"Socket::Option#level","type":"instance_method","visibility":"public"},"Socket::Option#linger":{"description":"Returns the linger data in _sockopt_ as a pair of boolean and integer.\n\n  sockopt = Socket::Option.linger(true, 10)\n  p sockopt.linger => [true, 10]","name":"linger","namespace":"Socket::Option","path":"Socket::Option#linger","type":"instance_method","visibility":"public"},"Socket::Option#optname":{"description":"returns the socket option name as an integer.\n\n  p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(\"i!\")).optname\n  #=> 2","name":"optname","namespace":"Socket::Option","path":"Socket::Option#optname","type":"instance_method","visibility":"public"},"Socket::Option#to_s":{"description":"returns the socket option data as a string.\n\n  p Socket::Option.new(:INET6, :IPV6, :RECVPKTINFO, [1].pack(\"i!\")).data\n  #=> \"\\x01\\x00\\x00\\x00\"","name":"to_s","namespace":"Socket::Option","path":"Socket::Option#to_s","type":"instance_method","visibility":"public"},"Socket::Option#unpack":{"description":"Calls String#unpack on sockopt.data.\n\n  sockopt = Socket::Option.new(:INET, :SOCKET, :KEEPALIVE, [1].pack(\"i\"))\n  p sockopt.unpack(\"i\")      #=> [1]\n  p sockopt.data.unpack(\"i\") #=> [1]","name":"unpack","namespace":"Socket::Option","path":"Socket::Option#unpack","type":"instance_method","visibility":"public"},"Socket::Option.bool":{"description":"Creates a new Socket::Option object which contains boolean as data.\nActually 0 or 1 as int is used.\n\n  p Socket::Option.bool(:INET, :SOCKET, :KEEPALIVE, true)\n  #=> #<Socket::Option: INET SOCKET KEEPALIVE 1>\n\n  p Socket::Option.bool(:INET, :SOCKET, :KEEPALIVE, false)\n  #=> #<Socket::Option: AF_INET SOCKET KEEPALIVE 0>","name":"bool","namespace":"Socket::Option","path":"Socket::Option.bool","type":"class_method","visibility":"public"},"Socket::Option.byte":{"description":"Creates a new Socket::Option object which contains a byte as data.\n\n  p Socket::Option.byte(:INET, :SOCKET, :KEEPALIVE, 1)\n  #=> #<Socket::Option: INET SOCKET KEEPALIVE 1>","name":"byte","namespace":"Socket::Option","path":"Socket::Option.byte","type":"class_method","visibility":"public"},"Socket::Option.int":{"description":"Creates a new Socket::Option object which contains an int as data.\n\nThe size and endian is dependent on the platform.\n\n  p Socket::Option.int(:INET, :SOCKET, :KEEPALIVE, 1)\n  #=> #<Socket::Option: INET SOCKET KEEPALIVE 1>","name":"int","namespace":"Socket::Option","path":"Socket::Option.int","type":"class_method","visibility":"public"},"Socket::Option.ipv4_multicast_loop":{"description":"Creates a new Socket::Option object for IP_MULTICAST_LOOP.\n\nThe size is dependent on the platform.\n\n  sockopt = Socket::Option.int(:INET, :IPPROTO_IP, :IP_MULTICAST_LOOP, 1)\n  p sockopt.int => 1\n\n  p Socket::Option.ipv4_multicast_loop(10)\n  #=> #<Socket::Option: INET IP MULTICAST_LOOP 10>","name":"ipv4_multicast_loop","namespace":"Socket::Option","path":"Socket::Option.ipv4_multicast_loop","type":"class_method","visibility":"public"},"Socket::Option.ipv4_multicast_ttl":{"description":"Creates a new Socket::Option object for IP_MULTICAST_TTL.\n\nThe size is dependent on the platform.\n\n  p Socket::Option.ipv4_multicast_ttl(10)\n  #=> #<Socket::Option: INET IP MULTICAST_TTL 10>","name":"ipv4_multicast_ttl","namespace":"Socket::Option","path":"Socket::Option.ipv4_multicast_ttl","type":"class_method","visibility":"public"},"Socket::Option.linger":{"description":"Creates a new Socket::Option object for SOL_SOCKET/SO_LINGER.\n\n_onoff_ should be an integer or a boolean.\n\n_secs_ should be the number of seconds.\n\n  p Socket::Option.linger(true, 10)\n  #=> #<Socket::Option: UNSPEC SOCKET LINGER on 10sec>","name":"linger","namespace":"Socket::Option","path":"Socket::Option.linger","type":"class_method","visibility":"public"},"Socket::PF_APPLETALK":{"description":"AppleTalk protocol","name":"PF_APPLETALK","namespace":"Socket","path":"Socket::PF_APPLETALK","type":"constant","return":null,"visibility":"public"},"Socket::PF_ATM":{"description":"Asynchronous Transfer Mode","name":"PF_ATM","namespace":"Socket","path":"Socket::PF_ATM","type":"constant","return":null,"visibility":"public"},"Socket::PF_AX25":{"description":"AX.25 protocol","name":"PF_AX25","namespace":"Socket","path":"Socket::PF_AX25","type":"constant","return":null,"visibility":"public"},"Socket::PF_CCITT":{"description":"CCITT (now ITU-T) protocols","name":"PF_CCITT","namespace":"Socket","path":"Socket::PF_CCITT","type":"constant","return":null,"visibility":"public"},"Socket::PF_CHAOS":{"description":"MIT CHAOS protocols","name":"PF_CHAOS","namespace":"Socket","path":"Socket::PF_CHAOS","type":"constant","return":null,"visibility":"public"},"Socket::PF_CNT":{"description":"Computer Network Technology","name":"PF_CNT","namespace":"Socket","path":"Socket::PF_CNT","type":"constant","return":null,"visibility":"public"},"Socket::PF_COIP":{"description":"Connection-oriented IP","name":"PF_COIP","namespace":"Socket","path":"Socket::PF_COIP","type":"constant","return":null,"visibility":"public"},"Socket::PF_DATAKIT":{"description":"Datakit protocol","name":"PF_DATAKIT","namespace":"Socket","path":"Socket::PF_DATAKIT","type":"constant","return":null,"visibility":"public"},"Socket::PF_DEC":{"description":"DECnet protocol","name":"PF_DEC","namespace":"Socket","path":"Socket::PF_DEC","type":"constant","return":null,"visibility":"public"},"Socket::PF_DLI":{"description":"DEC Direct Data Link Interface protocol","name":"PF_DLI","namespace":"Socket","path":"Socket::PF_DLI","type":"constant","return":null,"visibility":"public"},"Socket::PF_ECMA":{"description":"European Computer Manufacturers protocols","name":"PF_ECMA","namespace":"Socket","path":"Socket::PF_ECMA","type":"constant","return":null,"visibility":"public"},"Socket::PF_HYLINK":{"description":"NSC Hyperchannel protocol","name":"PF_HYLINK","namespace":"Socket","path":"Socket::PF_HYLINK","type":"constant","return":null,"visibility":"public"},"Socket::PF_IMPLINK":{"description":"ARPANET IMP protocol","name":"PF_IMPLINK","namespace":"Socket","path":"Socket::PF_IMPLINK","type":"constant","return":null,"visibility":"public"},"Socket::PF_INET":{"description":"IPv4 protocol","name":"PF_INET","namespace":"Socket","path":"Socket::PF_INET","type":"constant","return":null,"visibility":"public"},"Socket::PF_INET6":{"description":"IPv6 protocol","name":"PF_INET6","namespace":"Socket","path":"Socket::PF_INET6","type":"constant","return":null,"visibility":"public"},"Socket::PF_IPX":{"description":"IPX protocol","name":"PF_IPX","namespace":"Socket","path":"Socket::PF_IPX","type":"constant","return":null,"visibility":"public"},"Socket::PF_ISDN":{"description":"Integrated Services Digital Network","name":"PF_ISDN","namespace":"Socket","path":"Socket::PF_ISDN","type":"constant","return":null,"visibility":"public"},"Socket::PF_ISO":{"description":"ISO Open Systems Interconnection protocols","name":"PF_ISO","namespace":"Socket","path":"Socket::PF_ISO","type":"constant","return":null,"visibility":"public"},"Socket::PF_KEY":{"description":"","name":"PF_KEY","namespace":"Socket","path":"Socket::PF_KEY","type":"constant","return":null,"visibility":"public"},"Socket::PF_LAT":{"description":"Local Area Transport protocol","name":"PF_LAT","namespace":"Socket","path":"Socket::PF_LAT","type":"constant","return":null,"visibility":"public"},"Socket::PF_LINK":{"description":"Link layer interface","name":"PF_LINK","namespace":"Socket","path":"Socket::PF_LINK","type":"constant","return":null,"visibility":"public"},"Socket::PF_LOCAL":{"description":"Host-internal protocols","name":"PF_LOCAL","namespace":"Socket","path":"Socket::PF_LOCAL","type":"constant","return":null,"visibility":"public"},"Socket::PF_MAX":{"description":"Maximum address family for this platform","name":"PF_MAX","namespace":"Socket","path":"Socket::PF_MAX","type":"constant","return":null,"visibility":"public"},"Socket::PF_NATM":{"description":"Native ATM access","name":"PF_NATM","namespace":"Socket","path":"Socket::PF_NATM","type":"constant","return":null,"visibility":"public"},"Socket::PF_NDRV":{"description":"Network driver raw access","name":"PF_NDRV","namespace":"Socket","path":"Socket::PF_NDRV","type":"constant","return":null,"visibility":"public"},"Socket::PF_NETBIOS":{"description":"NetBIOS","name":"PF_NETBIOS","namespace":"Socket","path":"Socket::PF_NETBIOS","type":"constant","return":null,"visibility":"public"},"Socket::PF_NETGRAPH":{"description":"Netgraph sockets","name":"PF_NETGRAPH","namespace":"Socket","path":"Socket::PF_NETGRAPH","type":"constant","return":null,"visibility":"public"},"Socket::PF_NS":{"description":"XEROX NS protocols","name":"PF_NS","namespace":"Socket","path":"Socket::PF_NS","type":"constant","return":null,"visibility":"public"},"Socket::PF_OSI":{"description":"ISO Open Systems Interconnection protocols","name":"PF_OSI","namespace":"Socket","path":"Socket::PF_OSI","type":"constant","return":null,"visibility":"public"},"Socket::PF_PACKET":{"description":"Direct link-layer access","name":"PF_PACKET","namespace":"Socket","path":"Socket::PF_PACKET","type":"constant","return":null,"visibility":"public"},"Socket::PF_PIP":{"description":"","name":"PF_PIP","namespace":"Socket","path":"Socket::PF_PIP","type":"constant","return":null,"visibility":"public"},"Socket::PF_PPP":{"description":"Point-to-Point Protocol","name":"PF_PPP","namespace":"Socket","path":"Socket::PF_PPP","type":"constant","return":null,"visibility":"public"},"Socket::PF_PUP":{"description":"PARC Universal Packet protocol","name":"PF_PUP","namespace":"Socket","path":"Socket::PF_PUP","type":"constant","return":null,"visibility":"public"},"Socket::PF_ROUTE":{"description":"Internal routing protocol","name":"PF_ROUTE","namespace":"Socket","path":"Socket::PF_ROUTE","type":"constant","return":null,"visibility":"public"},"Socket::PF_RTIP":{"description":"","name":"PF_RTIP","namespace":"Socket","path":"Socket::PF_RTIP","type":"constant","return":null,"visibility":"public"},"Socket::PF_SIP":{"description":"Simple Internet Protocol","name":"PF_SIP","namespace":"Socket","path":"Socket::PF_SIP","type":"constant","return":null,"visibility":"public"},"Socket::PF_SNA":{"description":"IBM SNA protocol","name":"PF_SNA","namespace":"Socket","path":"Socket::PF_SNA","type":"constant","return":null,"visibility":"public"},"Socket::PF_SYSTEM":{"description":"","name":"PF_SYSTEM","namespace":"Socket","path":"Socket::PF_SYSTEM","type":"constant","return":null,"visibility":"public"},"Socket::PF_UNIX":{"description":"UNIX sockets","name":"PF_UNIX","namespace":"Socket","path":"Socket::PF_UNIX","type":"constant","return":null,"visibility":"public"},"Socket::PF_UNSPEC":{"description":"Unspecified protocol, any supported address family","name":"PF_UNSPEC","namespace":"Socket","path":"Socket::PF_UNSPEC","type":"constant","return":null,"visibility":"public"},"Socket::PF_XTP":{"description":"eXpress Transfer Protocol","name":"PF_XTP","namespace":"Socket","path":"Socket::PF_XTP","type":"constant","return":null,"visibility":"public"},"Socket::SCM_BINTIME":{"description":"Timestamp (bintime)","name":"SCM_BINTIME","namespace":"Socket","path":"Socket::SCM_BINTIME","type":"constant","return":null,"visibility":"public"},"Socket::SCM_CREDENTIALS":{"description":"The sender's credentials","name":"SCM_CREDENTIALS","namespace":"Socket","path":"Socket::SCM_CREDENTIALS","type":"constant","return":null,"visibility":"public"},"Socket::SCM_CREDS":{"description":"Process credentials","name":"SCM_CREDS","namespace":"Socket","path":"Socket::SCM_CREDS","type":"constant","return":null,"visibility":"public"},"Socket::SCM_RIGHTS":{"description":"Access rights","name":"SCM_RIGHTS","namespace":"Socket","path":"Socket::SCM_RIGHTS","type":"constant","return":null,"visibility":"public"},"Socket::SCM_TIMESTAMP":{"description":"Timestamp (timeval)","name":"SCM_TIMESTAMP","namespace":"Socket","path":"Socket::SCM_TIMESTAMP","type":"constant","return":null,"visibility":"public"},"Socket::SCM_TIMESTAMPING":{"description":"Timestamp (timespec list) (Linux 2.6.30)","name":"SCM_TIMESTAMPING","namespace":"Socket","path":"Socket::SCM_TIMESTAMPING","type":"constant","return":null,"visibility":"public"},"Socket::SCM_TIMESTAMPNS":{"description":"Timespec (timespec)","name":"SCM_TIMESTAMPNS","namespace":"Socket","path":"Socket::SCM_TIMESTAMPNS","type":"constant","return":null,"visibility":"public"},"Socket::SCM_UCRED":{"description":"User credentials","name":"SCM_UCRED","namespace":"Socket","path":"Socket::SCM_UCRED","type":"constant","return":null,"visibility":"public"},"Socket::SCM_WIFI_STATUS":{"description":"Wifi status (Linux 3.3)","name":"SCM_WIFI_STATUS","namespace":"Socket","path":"Socket::SCM_WIFI_STATUS","type":"constant","return":null,"visibility":"public"},"Socket::SHUT_RD":{"description":"Shut down the reading side of the socket","name":"SHUT_RD","namespace":"Socket","path":"Socket::SHUT_RD","type":"constant","return":null,"visibility":"public"},"Socket::SHUT_RDWR":{"description":"Shut down the both sides of the socket","name":"SHUT_RDWR","namespace":"Socket","path":"Socket::SHUT_RDWR","type":"constant","return":null,"visibility":"public"},"Socket::SHUT_WR":{"description":"Shut down the writing side of the socket","name":"SHUT_WR","namespace":"Socket","path":"Socket::SHUT_WR","type":"constant","return":null,"visibility":"public"},"Socket::SOCK_DGRAM":{"description":"A datagram socket provides connectionless, unreliable messaging","name":"SOCK_DGRAM","namespace":"Socket","path":"Socket::SOCK_DGRAM","type":"constant","return":null,"visibility":"public"},"Socket::SOCK_PACKET":{"description":"Device-level packet access","name":"SOCK_PACKET","namespace":"Socket","path":"Socket::SOCK_PACKET","type":"constant","return":null,"visibility":"public"},"Socket::SOCK_RAW":{"description":"A raw socket provides low-level access for direct access or implementing network protocols","name":"SOCK_RAW","namespace":"Socket","path":"Socket::SOCK_RAW","type":"constant","return":null,"visibility":"public"},"Socket::SOCK_RDM":{"description":"A reliable datagram socket provides reliable delivery of messages","name":"SOCK_RDM","namespace":"Socket","path":"Socket::SOCK_RDM","type":"constant","return":null,"visibility":"public"},"Socket::SOCK_SEQPACKET":{"description":"A sequential packet socket provides sequenced, reliable two-way connection for datagrams","name":"SOCK_SEQPACKET","namespace":"Socket","path":"Socket::SOCK_SEQPACKET","type":"constant","return":null,"visibility":"public"},"Socket::SOCK_STREAM":{"description":"A stream socket provides a sequenced, reliable two-way connection for a byte stream","name":"SOCK_STREAM","namespace":"Socket","path":"Socket::SOCK_STREAM","type":"constant","return":null,"visibility":"public"},"Socket::SOL_ATALK":{"description":"AppleTalk socket options","name":"SOL_ATALK","namespace":"Socket","path":"Socket::SOL_ATALK","type":"constant","return":null,"visibility":"public"},"Socket::SOL_AX25":{"description":"AX.25 socket options","name":"SOL_AX25","namespace":"Socket","path":"Socket::SOL_AX25","type":"constant","return":null,"visibility":"public"},"Socket::SOL_IP":{"description":"IP socket options","name":"SOL_IP","namespace":"Socket","path":"Socket::SOL_IP","type":"constant","return":null,"visibility":"public"},"Socket::SOL_IPX":{"description":"IPX socket options","name":"SOL_IPX","namespace":"Socket","path":"Socket::SOL_IPX","type":"constant","return":null,"visibility":"public"},"Socket::SOL_SOCKET":{"description":"Socket-level options","name":"SOL_SOCKET","namespace":"Socket","path":"Socket::SOL_SOCKET","type":"constant","return":null,"visibility":"public"},"Socket::SOL_TCP":{"description":"TCP socket options","name":"SOL_TCP","namespace":"Socket","path":"Socket::SOL_TCP","type":"constant","return":null,"visibility":"public"},"Socket::SOL_UDP":{"description":"UDP socket options","name":"SOL_UDP","namespace":"Socket","path":"Socket::SOL_UDP","type":"constant","return":null,"visibility":"public"},"Socket::SOMAXCONN":{"description":"Maximum connection requests that may be queued for a socket","name":"SOMAXCONN","namespace":"Socket","path":"Socket::SOMAXCONN","type":"constant","return":null,"visibility":"public"},"Socket::SOPRI_BACKGROUND":{"description":"Background socket priority","name":"SOPRI_BACKGROUND","namespace":"Socket","path":"Socket::SOPRI_BACKGROUND","type":"constant","return":null,"visibility":"public"},"Socket::SOPRI_INTERACTIVE":{"description":"Interactive socket priority","name":"SOPRI_INTERACTIVE","namespace":"Socket","path":"Socket::SOPRI_INTERACTIVE","type":"constant","return":null,"visibility":"public"},"Socket::SOPRI_NORMAL":{"description":"Normal socket priority","name":"SOPRI_NORMAL","namespace":"Socket","path":"Socket::SOPRI_NORMAL","type":"constant","return":null,"visibility":"public"},"Socket::SO_ACCEPTCONN":{"description":"Socket has had listen() called on it","name":"SO_ACCEPTCONN","namespace":"Socket","path":"Socket::SO_ACCEPTCONN","type":"constant","return":null,"visibility":"public"},"Socket::SO_ACCEPTFILTER":{"description":"There is an accept filter","name":"SO_ACCEPTFILTER","namespace":"Socket","path":"Socket::SO_ACCEPTFILTER","type":"constant","return":null,"visibility":"public"},"Socket::SO_ALLZONES":{"description":"Bypass zone boundaries","name":"SO_ALLZONES","namespace":"Socket","path":"Socket::SO_ALLZONES","type":"constant","return":null,"visibility":"public"},"Socket::SO_ATTACH_FILTER":{"description":"Attach an accept filter","name":"SO_ATTACH_FILTER","namespace":"Socket","path":"Socket::SO_ATTACH_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::SO_BINDTODEVICE":{"description":"Only send packets from the given interface","name":"SO_BINDTODEVICE","namespace":"Socket","path":"Socket::SO_BINDTODEVICE","type":"constant","return":null,"visibility":"public"},"Socket::SO_BINTIME":{"description":"Receive timestamp with datagrams (bintime)","name":"SO_BINTIME","namespace":"Socket","path":"Socket::SO_BINTIME","type":"constant","return":null,"visibility":"public"},"Socket::SO_BPF_EXTENSIONS":{"description":"Query supported BPF extensions (Linux 3.14)","name":"SO_BPF_EXTENSIONS","namespace":"Socket","path":"Socket::SO_BPF_EXTENSIONS","type":"constant","return":null,"visibility":"public"},"Socket::SO_BROADCAST":{"description":"Permit sending of broadcast messages","name":"SO_BROADCAST","namespace":"Socket","path":"Socket::SO_BROADCAST","type":"constant","return":null,"visibility":"public"},"Socket::SO_BUSY_POLL":{"description":"Set the threshold in microseconds for low latency polling (Linux 3.11)","name":"SO_BUSY_POLL","namespace":"Socket","path":"Socket::SO_BUSY_POLL","type":"constant","return":null,"visibility":"public"},"Socket::SO_DEBUG":{"description":"Debug info recording","name":"SO_DEBUG","namespace":"Socket","path":"Socket::SO_DEBUG","type":"constant","return":null,"visibility":"public"},"Socket::SO_DETACH_FILTER":{"description":"Detach an accept filter","name":"SO_DETACH_FILTER","namespace":"Socket","path":"Socket::SO_DETACH_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::SO_DOMAIN":{"description":"Domain given for socket() (Linux 2.6.32)","name":"SO_DOMAIN","namespace":"Socket","path":"Socket::SO_DOMAIN","type":"constant","return":null,"visibility":"public"},"Socket::SO_DONTROUTE":{"description":"Use interface addresses","name":"SO_DONTROUTE","namespace":"Socket","path":"Socket::SO_DONTROUTE","type":"constant","return":null,"visibility":"public"},"Socket::SO_DONTTRUNC":{"description":"Retain unread data","name":"SO_DONTTRUNC","namespace":"Socket","path":"Socket::SO_DONTTRUNC","type":"constant","return":null,"visibility":"public"},"Socket::SO_ERROR":{"description":"Get and clear the error status","name":"SO_ERROR","namespace":"Socket","path":"Socket::SO_ERROR","type":"constant","return":null,"visibility":"public"},"Socket::SO_GET_FILTER":{"description":"Obtain filter set by SO_ATTACH_FILTER (Linux 3.8)","name":"SO_GET_FILTER","namespace":"Socket","path":"Socket::SO_GET_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::SO_KEEPALIVE":{"description":"Keep connections alive","name":"SO_KEEPALIVE","namespace":"Socket","path":"Socket::SO_KEEPALIVE","type":"constant","return":null,"visibility":"public"},"Socket::SO_LINGER":{"description":"Linger on close if data is present","name":"SO_LINGER","namespace":"Socket","path":"Socket::SO_LINGER","type":"constant","return":null,"visibility":"public"},"Socket::SO_LOCK_FILTER":{"description":"Lock the filter attached to a socket (Linux 3.9)","name":"SO_LOCK_FILTER","namespace":"Socket","path":"Socket::SO_LOCK_FILTER","type":"constant","return":null,"visibility":"public"},"Socket::SO_MAC_EXEMPT":{"description":"Mandatory Access Control exemption for unlabeled peers","name":"SO_MAC_EXEMPT","namespace":"Socket","path":"Socket::SO_MAC_EXEMPT","type":"constant","return":null,"visibility":"public"},"Socket::SO_MARK":{"description":"Set the mark for mark-based routing (Linux 2.6.25)","name":"SO_MARK","namespace":"Socket","path":"Socket::SO_MARK","type":"constant","return":null,"visibility":"public"},"Socket::SO_MAX_PACING_RATE":{"description":"Cap the rate computed by transport layer. [bytes per second] (Linux 3.13)","name":"SO_MAX_PACING_RATE","namespace":"Socket","path":"Socket::SO_MAX_PACING_RATE","type":"constant","return":null,"visibility":"public"},"Socket::SO_NKE":{"description":"Install socket-level Network Kernel Extension","name":"SO_NKE","namespace":"Socket","path":"Socket::SO_NKE","type":"constant","return":null,"visibility":"public"},"Socket::SO_NOFCS":{"description":"Set netns of a socket (Linux 3.4)","name":"SO_NOFCS","namespace":"Socket","path":"Socket::SO_NOFCS","type":"constant","return":null,"visibility":"public"},"Socket::SO_NOSIGPIPE":{"description":"Don't SIGPIPE on EPIPE","name":"SO_NOSIGPIPE","namespace":"Socket","path":"Socket::SO_NOSIGPIPE","type":"constant","return":null,"visibility":"public"},"Socket::SO_NO_CHECK":{"description":"Disable checksums","name":"SO_NO_CHECK","namespace":"Socket","path":"Socket::SO_NO_CHECK","type":"constant","return":null,"visibility":"public"},"Socket::SO_NREAD":{"description":"Get first packet byte count","name":"SO_NREAD","namespace":"Socket","path":"Socket::SO_NREAD","type":"constant","return":null,"visibility":"public"},"Socket::SO_OOBINLINE":{"description":"Leave received out-of-band data in-line","name":"SO_OOBINLINE","namespace":"Socket","path":"Socket::SO_OOBINLINE","type":"constant","return":null,"visibility":"public"},"Socket::SO_PASSCRED":{"description":"Receive SCM_CREDENTIALS messages","name":"SO_PASSCRED","namespace":"Socket","path":"Socket::SO_PASSCRED","type":"constant","return":null,"visibility":"public"},"Socket::SO_PASSSEC":{"description":"Toggle security context passing (Linux 2.6.18)","name":"SO_PASSSEC","namespace":"Socket","path":"Socket::SO_PASSSEC","type":"constant","return":null,"visibility":"public"},"Socket::SO_PEEK_OFF":{"description":"Set the peek offset (Linux 3.4)","name":"SO_PEEK_OFF","namespace":"Socket","path":"Socket::SO_PEEK_OFF","type":"constant","return":null,"visibility":"public"},"Socket::SO_PEERCRED":{"description":"The credentials of the foreign process connected to this socket","name":"SO_PEERCRED","namespace":"Socket","path":"Socket::SO_PEERCRED","type":"constant","return":null,"visibility":"public"},"Socket::SO_PEERNAME":{"description":"Name of the connecting user","name":"SO_PEERNAME","namespace":"Socket","path":"Socket::SO_PEERNAME","type":"constant","return":null,"visibility":"public"},"Socket::SO_PEERSEC":{"description":"Obtain the security credentials (Linux 2.6.2)","name":"SO_PEERSEC","namespace":"Socket","path":"Socket::SO_PEERSEC","type":"constant","return":null,"visibility":"public"},"Socket::SO_PRIORITY":{"description":"The protocol-defined priority for all packets on this socket","name":"SO_PRIORITY","namespace":"Socket","path":"Socket::SO_PRIORITY","type":"constant","return":null,"visibility":"public"},"Socket::SO_PROTOCOL":{"description":"Protocol given for socket() (Linux 2.6.32)","name":"SO_PROTOCOL","namespace":"Socket","path":"Socket::SO_PROTOCOL","type":"constant","return":null,"visibility":"public"},"Socket::SO_RCVBUF":{"description":"Receive buffer size","name":"SO_RCVBUF","namespace":"Socket","path":"Socket::SO_RCVBUF","type":"constant","return":null,"visibility":"public"},"Socket::SO_RCVBUFFORCE":{"description":"Receive buffer size without rmem_max limit (Linux 2.6.14)","name":"SO_RCVBUFFORCE","namespace":"Socket","path":"Socket::SO_RCVBUFFORCE","type":"constant","return":null,"visibility":"public"},"Socket::SO_RCVLOWAT":{"description":"Receive low-water mark","name":"SO_RCVLOWAT","namespace":"Socket","path":"Socket::SO_RCVLOWAT","type":"constant","return":null,"visibility":"public"},"Socket::SO_RCVTIMEO":{"description":"Receive timeout","name":"SO_RCVTIMEO","namespace":"Socket","path":"Socket::SO_RCVTIMEO","type":"constant","return":null,"visibility":"public"},"Socket::SO_RECVUCRED":{"description":"Receive user credentials with datagram","name":"SO_RECVUCRED","namespace":"Socket","path":"Socket::SO_RECVUCRED","type":"constant","return":null,"visibility":"public"},"Socket::SO_REUSEADDR":{"description":"Allow local address reuse","name":"SO_REUSEADDR","namespace":"Socket","path":"Socket::SO_REUSEADDR","type":"constant","return":null,"visibility":"public"},"Socket::SO_REUSEPORT":{"description":"Allow local address and port reuse","name":"SO_REUSEPORT","namespace":"Socket","path":"Socket::SO_REUSEPORT","type":"constant","return":null,"visibility":"public"},"Socket::SO_RXQ_OVFL":{"description":"Toggle cmsg for number of packets dropped (Linux 2.6.33)","name":"SO_RXQ_OVFL","namespace":"Socket","path":"Socket::SO_RXQ_OVFL","type":"constant","return":null,"visibility":"public"},"Socket::SO_SECURITY_AUTHENTICATION":{"description":"","name":"SO_SECURITY_AUTHENTICATION","namespace":"Socket","path":"Socket::SO_SECURITY_AUTHENTICATION","type":"constant","return":null,"visibility":"public"},"Socket::SO_SECURITY_ENCRYPTION_NETWORK":{"description":"","name":"SO_SECURITY_ENCRYPTION_NETWORK","namespace":"Socket","path":"Socket::SO_SECURITY_ENCRYPTION_NETWORK","type":"constant","return":null,"visibility":"public"},"Socket::SO_SECURITY_ENCRYPTION_TRANSPORT":{"description":"","name":"SO_SECURITY_ENCRYPTION_TRANSPORT","namespace":"Socket","path":"Socket::SO_SECURITY_ENCRYPTION_TRANSPORT","type":"constant","return":null,"visibility":"public"},"Socket::SO_SELECT_ERR_QUEUE":{"description":"Make select() detect socket error queue with errorfds (Linux 3.10)","name":"SO_SELECT_ERR_QUEUE","namespace":"Socket","path":"Socket::SO_SELECT_ERR_QUEUE","type":"constant","return":null,"visibility":"public"},"Socket::SO_SNDBUF":{"description":"Send buffer size","name":"SO_SNDBUF","namespace":"Socket","path":"Socket::SO_SNDBUF","type":"constant","return":null,"visibility":"public"},"Socket::SO_SNDBUFFORCE":{"description":"Send buffer size without wmem_max limit (Linux 2.6.14)","name":"SO_SNDBUFFORCE","namespace":"Socket","path":"Socket::SO_SNDBUFFORCE","type":"constant","return":null,"visibility":"public"},"Socket::SO_SNDLOWAT":{"description":"Send low-water mark","name":"SO_SNDLOWAT","namespace":"Socket","path":"Socket::SO_SNDLOWAT","type":"constant","return":null,"visibility":"public"},"Socket::SO_SNDTIMEO":{"description":"Send timeout","name":"SO_SNDTIMEO","namespace":"Socket","path":"Socket::SO_SNDTIMEO","type":"constant","return":null,"visibility":"public"},"Socket::SO_TIMESTAMP":{"description":"Receive timestamp with datagrams (timeval)","name":"SO_TIMESTAMP","namespace":"Socket","path":"Socket::SO_TIMESTAMP","type":"constant","return":null,"visibility":"public"},"Socket::SO_TIMESTAMPING":{"description":"Time stamping of incoming and outgoing packets (Linux 2.6.30)","name":"SO_TIMESTAMPING","namespace":"Socket","path":"Socket::SO_TIMESTAMPING","type":"constant","return":null,"visibility":"public"},"Socket::SO_TIMESTAMPNS":{"description":"Receive nanosecond timestamp with datagrams (timespec)","name":"SO_TIMESTAMPNS","namespace":"Socket","path":"Socket::SO_TIMESTAMPNS","type":"constant","return":null,"visibility":"public"},"Socket::SO_TYPE":{"description":"Get the socket type","name":"SO_TYPE","namespace":"Socket","path":"Socket::SO_TYPE","type":"constant","return":null,"visibility":"public"},"Socket::SO_USELOOPBACK":{"description":"Bypass hardware when possible","name":"SO_USELOOPBACK","namespace":"Socket","path":"Socket::SO_USELOOPBACK","type":"constant","return":null,"visibility":"public"},"Socket::SO_WANTMORE":{"description":"Give a hint when more data is ready","name":"SO_WANTMORE","namespace":"Socket","path":"Socket::SO_WANTMORE","type":"constant","return":null,"visibility":"public"},"Socket::SO_WANTOOBFLAG":{"description":"OOB data is wanted in MSG_FLAG on receive","name":"SO_WANTOOBFLAG","namespace":"Socket","path":"Socket::SO_WANTOOBFLAG","type":"constant","return":null,"visibility":"public"},"Socket::SO_WIFI_STATUS":{"description":"Toggle cmsg for wifi status (Linux 3.3)","name":"SO_WIFI_STATUS","namespace":"Socket","path":"Socket::SO_WIFI_STATUS","type":"constant","return":null,"visibility":"public"},"Socket::TCP_CONGESTION":{"description":"TCP congestion control algorithm (Linux 2.6.13, glibc 2.6)","name":"TCP_CONGESTION","namespace":"Socket","path":"Socket::TCP_CONGESTION","type":"constant","return":null,"visibility":"public"},"Socket::TCP_COOKIE_TRANSACTIONS":{"description":"TCP Cookie Transactions (Linux 2.6.33, glibc 2.18)","name":"TCP_COOKIE_TRANSACTIONS","namespace":"Socket","path":"Socket::TCP_COOKIE_TRANSACTIONS","type":"constant","return":null,"visibility":"public"},"Socket::TCP_CORK":{"description":"Don't send partial frames (Linux 2.2, glibc 2.2)","name":"TCP_CORK","namespace":"Socket","path":"Socket::TCP_CORK","type":"constant","return":null,"visibility":"public"},"Socket::TCP_DEFER_ACCEPT":{"description":"Don't notify a listening socket until data is ready (Linux 2.4, glibc 2.2)","name":"TCP_DEFER_ACCEPT","namespace":"Socket","path":"Socket::TCP_DEFER_ACCEPT","type":"constant","return":null,"visibility":"public"},"Socket::TCP_FASTOPEN":{"description":"Reduce step of the handshake process (Linux 3.7, glibc 2.18)","name":"TCP_FASTOPEN","namespace":"Socket","path":"Socket::TCP_FASTOPEN","type":"constant","return":null,"visibility":"public"},"Socket::TCP_INFO":{"description":"Retrieve information about this socket (Linux 2.4, glibc 2.2)","name":"TCP_INFO","namespace":"Socket","path":"Socket::TCP_INFO","type":"constant","return":null,"visibility":"public"},"Socket::TCP_KEEPCNT":{"description":"Maximum number of keepalive probes allowed before dropping a connection (Linux 2.4, glibc 2.2)","name":"TCP_KEEPCNT","namespace":"Socket","path":"Socket::TCP_KEEPCNT","type":"constant","return":null,"visibility":"public"},"Socket::TCP_KEEPIDLE":{"description":"Idle time before keepalive probes are sent (Linux 2.4, glibc 2.2)","name":"TCP_KEEPIDLE","namespace":"Socket","path":"Socket::TCP_KEEPIDLE","type":"constant","return":null,"visibility":"public"},"Socket::TCP_KEEPINTVL":{"description":"Time between keepalive probes (Linux 2.4, glibc 2.2)","name":"TCP_KEEPINTVL","namespace":"Socket","path":"Socket::TCP_KEEPINTVL","type":"constant","return":null,"visibility":"public"},"Socket::TCP_LINGER2":{"description":"Lifetime of orphaned FIN_WAIT2 sockets (Linux 2.4, glibc 2.2)","name":"TCP_LINGER2","namespace":"Socket","path":"Socket::TCP_LINGER2","type":"constant","return":null,"visibility":"public"},"Socket::TCP_MAXSEG":{"description":"Set maximum segment size","name":"TCP_MAXSEG","namespace":"Socket","path":"Socket::TCP_MAXSEG","type":"constant","return":null,"visibility":"public"},"Socket::TCP_MD5SIG":{"description":"Use MD5 digests (RFC2385, Linux 2.6.20, glibc 2.7)","name":"TCP_MD5SIG","namespace":"Socket","path":"Socket::TCP_MD5SIG","type":"constant","return":null,"visibility":"public"},"Socket::TCP_NODELAY":{"description":"Don't delay sending to coalesce packets","name":"TCP_NODELAY","namespace":"Socket","path":"Socket::TCP_NODELAY","type":"constant","return":null,"visibility":"public"},"Socket::TCP_NOOPT":{"description":"Don't use TCP options","name":"TCP_NOOPT","namespace":"Socket","path":"Socket::TCP_NOOPT","type":"constant","return":null,"visibility":"public"},"Socket::TCP_NOPUSH":{"description":"Don't push the last block of write","name":"TCP_NOPUSH","namespace":"Socket","path":"Socket::TCP_NOPUSH","type":"constant","return":null,"visibility":"public"},"Socket::TCP_QUEUE_SEQ":{"description":"Sequence of a queue for repair mode (Linux 3.5, glibc 2.18)","name":"TCP_QUEUE_SEQ","namespace":"Socket","path":"Socket::TCP_QUEUE_SEQ","type":"constant","return":null,"visibility":"public"},"Socket::TCP_QUICKACK":{"description":"Enable quickack mode (Linux 2.4.4, glibc 2.3)","name":"TCP_QUICKACK","namespace":"Socket","path":"Socket::TCP_QUICKACK","type":"constant","return":null,"visibility":"public"},"Socket::TCP_REPAIR":{"description":"Repair mode (Linux 3.5, glibc 2.18)","name":"TCP_REPAIR","namespace":"Socket","path":"Socket::TCP_REPAIR","type":"constant","return":null,"visibility":"public"},"Socket::TCP_REPAIR_OPTIONS":{"description":"Options for repair mode (Linux 3.5, glibc 2.18)","name":"TCP_REPAIR_OPTIONS","namespace":"Socket","path":"Socket::TCP_REPAIR_OPTIONS","type":"constant","return":null,"visibility":"public"},"Socket::TCP_REPAIR_QUEUE":{"description":"Queue for repair mode (Linux 3.5, glibc 2.18)","name":"TCP_REPAIR_QUEUE","namespace":"Socket","path":"Socket::TCP_REPAIR_QUEUE","type":"constant","return":null,"visibility":"public"},"Socket::TCP_SYNCNT":{"description":"Number of SYN retransmits before a connection is dropped (Linux 2.4, glibc 2.2)","name":"TCP_SYNCNT","namespace":"Socket","path":"Socket::TCP_SYNCNT","type":"constant","return":null,"visibility":"public"},"Socket::TCP_THIN_DUPACK":{"description":"Duplicated acknowledgments handling for thin-streams (Linux 2.6.34, glibc 2.18)","name":"TCP_THIN_DUPACK","namespace":"Socket","path":"Socket::TCP_THIN_DUPACK","type":"constant","return":null,"visibility":"public"},"Socket::TCP_THIN_LINEAR_TIMEOUTS":{"description":"Linear timeouts for thin-streams (Linux 2.6.34, glibc 2.18)","name":"TCP_THIN_LINEAR_TIMEOUTS","namespace":"Socket","path":"Socket::TCP_THIN_LINEAR_TIMEOUTS","type":"constant","return":null,"visibility":"public"},"Socket::TCP_TIMESTAMP":{"description":"TCP timestamp (Linux 3.9, glibc 2.18)","name":"TCP_TIMESTAMP","namespace":"Socket","path":"Socket::TCP_TIMESTAMP","type":"constant","return":null,"visibility":"public"},"Socket::TCP_USER_TIMEOUT":{"description":"Max timeout before a TCP connection is aborted (Linux 2.6.37, glibc 2.18)","name":"TCP_USER_TIMEOUT","namespace":"Socket","path":"Socket::TCP_USER_TIMEOUT","type":"constant","return":null,"visibility":"public"},"Socket::TCP_WINDOW_CLAMP":{"description":"Clamp the size of the advertised window (Linux 2.4, glibc 2.2)","name":"TCP_WINDOW_CLAMP","namespace":"Socket","path":"Socket::TCP_WINDOW_CLAMP","type":"constant","return":null,"visibility":"public"},"Socket::UDPSource":{"description":"UDP/IP address information used by Socket.udp_server_loop.","name":"UDPSource","namespace":"Socket","path":"Socket::UDPSource","type":"class","visibility":"public"},"Socket::UDPSource#initialize":{"description":"+remote_address+ is an Addrinfo object.\n\n+local_address+ is an Addrinfo object.\n\n+reply_proc+ is a Proc used to send reply back to the source.","name":"initialize","namespace":"Socket::UDPSource","path":"Socket::UDPSource#initialize","type":"instance_method","visibility":"public","return":[["UDPSource"],"a new instance of UDPSource"]},"Socket::UDPSource#inspect":{"description":":nodoc:","name":"inspect","namespace":"Socket::UDPSource","path":"Socket::UDPSource#inspect","type":"instance_method","visibility":"public"},"Socket::UDPSource#local_address":{"description":"Local address","name":"local_address","namespace":"Socket::UDPSource","path":"Socket::UDPSource#local_address","type":"instance_method","visibility":"public"},"Socket::UDPSource#remote_address":{"description":"Address of the source","name":"remote_address","namespace":"Socket::UDPSource","path":"Socket::UDPSource#remote_address","type":"instance_method","visibility":"public"},"Socket::UDPSource#reply":{"description":"Sends the String +msg+ to the source","name":"reply","namespace":"Socket::UDPSource","path":"Socket::UDPSource#reply","type":"instance_method","visibility":"public"},"Socket::UDP_CORK":{"description":"Don't send partial frames (Linux 2.5.44, glibc 2.11)","name":"UDP_CORK","namespace":"Socket","path":"Socket::UDP_CORK","type":"constant","return":null,"visibility":"public"},"IPSocket":{"description":"IPSocket is the super class of TCPSocket and UDPSocket.","name":"IPSocket","namespace":"","path":"IPSocket","type":"class","visibility":"public"},"IPSocket#addr":{"description":"Returns the local address as an array which contains\naddress_family, port, hostname and numeric_address.\n\nIf +reverse_lookup+ is +true+ or +:hostname+,\nhostname is obtained from numeric_address using reverse lookup.\nOr if it is +false+, or +:numeric+,\nhostname is same as numeric_address.\nOr if it is +nil+ or ommitted, obeys to +ipsocket.do_not_reverse_lookup+.\nSee +Socket.getaddrinfo+ also.\n\n  TCPSocket.open(\"www.ruby-lang.org\", 80) {|sock|\n    p sock.addr #=> [\"AF_INET\", 49429, \"hal\", \"192.168.0.128\"]\n    p sock.addr(true)  #=> [\"AF_INET\", 49429, \"hal\", \"192.168.0.128\"]\n    p sock.addr(false) #=> [\"AF_INET\", 49429, \"192.168.0.128\", \"192.168.0.128\"]\n    p sock.addr(:hostname)  #=> [\"AF_INET\", 49429, \"hal\", \"192.168.0.128\"]\n    p sock.addr(:numeric)   #=> [\"AF_INET\", 49429, \"192.168.0.128\", \"192.168.0.128\"]\n  }","name":"addr","namespace":"IPSocket","path":"IPSocket#addr","type":"instance_method","visibility":"public"},"IPSocket#peeraddr":{"description":"Returns the remote address as an array which contains\naddress_family, port, hostname and numeric_address.\nIt is defined for connection oriented socket such as TCPSocket.\n\nIf +reverse_lookup+ is +true+ or +:hostname+,\nhostname is obtained from numeric_address using reverse lookup.\nOr if it is +false+, or +:numeric+,\nhostname is same as numeric_address.\nOr if it is +nil+ or ommitted, obeys to +ipsocket.do_not_reverse_lookup+.\nSee +Socket.getaddrinfo+ also.\n\n  TCPSocket.open(\"www.ruby-lang.org\", 80) {|sock|\n    p sock.peeraddr #=> [\"AF_INET\", 80, \"carbon.ruby-lang.org\", \"221.186.184.68\"]\n    p sock.peeraddr(true)  #=> [\"AF_INET\", 80, \"carbon.ruby-lang.org\", \"221.186.184.68\"]\n    p sock.peeraddr(false) #=> [\"AF_INET\", 80, \"221.186.184.68\", \"221.186.184.68\"]\n    p sock.peeraddr(:hostname) #=> [\"AF_INET\", 80, \"carbon.ruby-lang.org\", \"221.186.184.68\"]\n    p sock.peeraddr(:numeric)  #=> [\"AF_INET\", 80, \"221.186.184.68\", \"221.186.184.68\"]\n  }","name":"peeraddr","namespace":"IPSocket","path":"IPSocket#peeraddr","type":"instance_method","visibility":"public"},"IPSocket#recvfrom":{"description":"Receives a message and return the message as a string and\nan address which the message come from.\n\n_maxlen_ is the maximum number of bytes to receive.\n\n_flags_ should be a bitwise OR of Socket::MSG_* constants.\n\nipaddr is same as IPSocket#{peeraddr,addr}.\n\n  u1 = UDPSocket.new\n  u1.bind(\"127.0.0.1\", 4913)\n  u2 = UDPSocket.new\n  u2.send \"uuuu\", 0, \"127.0.0.1\", 4913\n  p u1.recvfrom(10) #=> [\"uuuu\", [\"AF_INET\", 33230, \"localhost\", \"127.0.0.1\"]]","name":"recvfrom","namespace":"IPSocket","path":"IPSocket#recvfrom","type":"instance_method","visibility":"public"},"IPSocket.getaddress":{"description":"Lookups the IP address of _host_.\n\n  IPSocket.getaddress(\"localhost\")     #=> \"127.0.0.1\"\n  IPSocket.getaddress(\"ip6-localhost\") #=> \"::1\"","name":"getaddress","namespace":"IPSocket","path":"IPSocket.getaddress","type":"class_method","visibility":"public"},"IPSocket.getaddress_orig":{"description":"","name":"getaddress_orig","namespace":"IPSocket","path":"IPSocket.getaddress_orig","type":"class_method","visibility":"private"},"IPSocket.valid_v6?":{"description":"","name":"valid_v6?","namespace":"IPSocket","path":"IPSocket.valid_v6?","type":"class_method","visibility":"private","return":[["Boolean"],""]},"Logger":{"description":"== Description\n\nThe Logger class provides a simple but sophisticated logging utility that\nyou can use to output messages.\n\nThe messages have associated levels, such as +INFO+ or +ERROR+ that indicate\ntheir importance.  You can then give the Logger a level, and only messages\nat that level or higher will be printed.\n\nThe levels are:\n\n+UNKNOWN+:: An unknown message that should always be logged.\n+FATAL+:: An unhandleable error that results in a program crash.\n+ERROR+:: A handleable error condition.\n+WARN+::  A warning.\n+INFO+::  Generic (useful) information about system operation.\n+DEBUG+:: Low-level information for developers.\n\nFor instance, in a production system, you may have your Logger set to\n+INFO+ or even +WARN+.\nWhen you are developing the system, however, you probably\nwant to know about the program's internal state, and would set the Logger to\n+DEBUG+.\n\n*Note*: Logger does not escape or sanitize any messages passed to it.\nDevelopers should be aware of when potentially malicious data (user-input)\nis passed to Logger, and manually escape the untrusted data:\n\n  logger.info(\"User-input: #{input.dump}\")\n  logger.info(\"User-input: %p\" % input)\n\nYou can use #formatter= for escaping all data.\n\n  original_formatter = Logger::Formatter.new\n  logger.formatter = proc { |severity, datetime, progname, msg|\n    original_formatter.call(severity, datetime, progname, msg.dump)\n  }\n  logger.info(input)\n\n=== Example\n\nThis creates a Logger that outputs to the standard output stream, with a\nlevel of +WARN+:\n\n  require 'logger'\n\n  logger = Logger.new(STDOUT)\n  logger.level = Logger::WARN\n\n  logger.debug(\"Created logger\")\n  logger.info(\"Program started\")\n  logger.warn(\"Nothing to do!\")\n\n  path = \"a_non_existent_file\"\n\n  begin\n    File.foreach(path) do |line|\n      unless line =~ /^(\\w+) = (.*)$/\n        logger.error(\"Line in wrong format: #{line.chomp}\")\n      end\n    end\n  rescue => err\n    logger.fatal(\"Caught exception; exiting\")\n    logger.fatal(err)\n  end\n\nBecause the Logger's level is set to +WARN+, only the warning, error, and\nfatal messages are recorded.  The debug and info messages are silently\ndiscarded.\n\n=== Features\n\nThere are several interesting features that Logger provides, like\nauto-rolling of log files, setting the format of log messages, and\nspecifying a program name in conjunction with the message.  The next section\nshows you how to achieve these things.\n\n\n== HOWTOs\n\n=== How to create a logger\n\nThe options below give you various choices, in more or less increasing\ncomplexity.\n\n1. Create a logger which logs messages to STDERR/STDOUT.\n\n     logger = Logger.new(STDERR)\n     logger = Logger.new(STDOUT)\n\n2. Create a logger for the file which has the specified name.\n\n     logger = Logger.new('logfile.log')\n\n3. Create a logger for the specified file.\n\n     file = File.open('foo.log', File::WRONLY | File::APPEND)\n     # To create new (and to remove old) logfile, add File::CREAT like:\n     # file = File.open('foo.log', File::WRONLY | File::APPEND | File::CREAT)\n     logger = Logger.new(file)\n\n4. Create a logger which ages the logfile once it reaches a certain size.\n   Leave 10 \"old\" log files where each file is about 1,024,000 bytes.\n\n     logger = Logger.new('foo.log', 10, 1024000)\n\n5. Create a logger which ages the logfile daily/weekly/monthly.\n\n     logger = Logger.new('foo.log', 'daily')\n     logger = Logger.new('foo.log', 'weekly')\n     logger = Logger.new('foo.log', 'monthly')\n\n=== How to log a message\n\nNotice the different methods (+fatal+, +error+, +info+) being used to log\nmessages of various levels?  Other methods in this family are +warn+ and\n+debug+.  +add+ is used below to log a message of an arbitrary (perhaps\ndynamic) level.\n\n1. Message in a block.\n\n     logger.fatal { \"Argument 'foo' not given.\" }\n\n2. Message as a string.\n\n     logger.error \"Argument #{@foo} mismatch.\"\n\n3. With progname.\n\n     logger.info('initialize') { \"Initializing...\" }\n\n4. With severity.\n\n     logger.add(Logger::FATAL) { 'Fatal error!' }\n\nThe block form allows you to create potentially complex log messages,\nbut to delay their evaluation until and unless the message is\nlogged.  For example, if we have the following:\n\n    logger.debug { \"This is a \" + potentially + \" expensive operation\" }\n\nIf the logger's level is +INFO+ or higher, no debug messages will be logged,\nand the entire block will not even be evaluated.  Compare to this:\n\n    logger.debug(\"This is a \" + potentially + \" expensive operation\")\n\nHere, the string concatenation is done every time, even if the log\nlevel is not set to show the debug message.\n\n=== How to close a logger\n\n     logger.close\n\n=== Setting severity threshold\n\n1. Original interface.\n\n     logger.sev_threshold = Logger::WARN\n\n2. Log4r (somewhat) compatible interface.\n\n     logger.level = Logger::INFO\n\n     # DEBUG < INFO < WARN < ERROR < FATAL < UNKNOWN\n\n== Format\n\nLog messages are rendered in the output stream in a certain format by\ndefault.  The default format and a sample are shown below:\n\nLog format:\n  SeverityID, [DateTime #pid] SeverityLabel -- ProgName: message\n\nLog sample:\n  I, [1999-03-03T02:34:24.895701 #19074]  INFO -- Main: info.\n\nYou may change the date and time format via #datetime_format=.\n\n  logger.datetime_format = '%Y-%m-%d %H:%M:%S'\n        # e.g. \"2004-01-03 00:54:26\"\n\nOr, you may change the overall format via the #formatter= method.\n\n  logger.formatter = proc do |severity, datetime, progname, msg|\n    \"#{datetime}: #{msg}\\n\"\n  end\n  # e.g. \"2005-09-22 08:51:08 +0900: hello world\"","name":"Logger","namespace":"","path":"Logger","type":"class","visibility":"public"},"Logger#<<":{"description":"Dump given message to the log device without any formatting.  If no log\ndevice exists, return +nil+.","name":"<<","namespace":"Logger","path":"Logger#<<","type":"instance_method","visibility":"public"},"Logger#add":{"description":":call-seq:\n  Logger#add(severity, message = nil, progname = nil) { ... }\n\n=== Args\n\n+severity+::\n  Severity.  Constants are defined in Logger namespace: +DEBUG+, +INFO+,\n  +WARN+, +ERROR+, +FATAL+, or +UNKNOWN+.\n+message+::\n  The log message.  A String or Exception.\n+progname+::\n  Program name string.  Can be omitted.  Treated as a message if no\n  +message+ and +block+ are given.\n+block+::\n  Can be omitted.  Called to get a message string if +message+ is nil.\n\n=== Return\n\nWhen the given severity is not high enough (for this particular logger),\nlog no message, and return +true+.\n\n=== Description\n\nLog a message if the given severity is high enough.  This is the generic\nlogging method.  Users will be more inclined to use #debug, #info, #warn,\n#error, and #fatal.\n\n<b>Message format</b>: +message+ can be any object, but it has to be\nconverted to a String in order to log it.  Generally, +inspect+ is used\nif the given object is not a String.\nA special case is an +Exception+ object, which will be printed in detail,\nincluding message, class, and backtrace.  See #msg2str for the\nimplementation if required.\n\n=== Bugs\n\n* Logfile is not locked.\n* Append open does not need to lock file.\n* If the OS supports multi I/O, records possibly may be mixed.","name":"log","namespace":"Logger","path":"Logger#log","type":"instance_method","visibility":"public"},"Logger#log":{"description":":call-seq:\n  Logger#add(severity, message = nil, progname = nil) { ... }\n\n=== Args\n\n+severity+::\n  Severity.  Constants are defined in Logger namespace: +DEBUG+, +INFO+,\n  +WARN+, +ERROR+, +FATAL+, or +UNKNOWN+.\n+message+::\n  The log message.  A String or Exception.\n+progname+::\n  Program name string.  Can be omitted.  Treated as a message if no\n  +message+ and +block+ are given.\n+block+::\n  Can be omitted.  Called to get a message string if +message+ is nil.\n\n=== Return\n\nWhen the given severity is not high enough (for this particular logger),\nlog no message, and return +true+.\n\n=== Description\n\nLog a message if the given severity is high enough.  This is the generic\nlogging method.  Users will be more inclined to use #debug, #info, #warn,\n#error, and #fatal.\n\n<b>Message format</b>: +message+ can be any object, but it has to be\nconverted to a String in order to log it.  Generally, +inspect+ is used\nif the given object is not a String.\nA special case is an +Exception+ object, which will be printed in detail,\nincluding message, class, and backtrace.  See #msg2str for the\nimplementation if required.\n\n=== Bugs\n\n* Logfile is not locked.\n* Append open does not need to lock file.\n* If the OS supports multi I/O, records possibly may be mixed.","name":"log","namespace":"Logger","path":"Logger#log","type":"instance_method","visibility":"public"},"Logger#close":{"description":"Close the logging device.","name":"close","namespace":"Logger","path":"Logger#close","type":"instance_method","visibility":"public"},"Logger#datetime_format":{"description":"Returns the date format being used.  See #datetime_format=","name":"datetime_format","namespace":"Logger","path":"Logger#datetime_format","type":"instance_method","visibility":"public"},"Logger#datetime_format=":{"description":"Set date-time format.\n\n+datetime_format+:: A string suitable for passing to +strftime+.","name":"datetime_format=","namespace":"Logger","path":"Logger#datetime_format=","type":"instance_method","visibility":"public"},"Logger#debug":{"description":"Log a +DEBUG+ message.\n\nSee #info for more information.","name":"debug","namespace":"Logger","path":"Logger#debug","type":"instance_method","visibility":"public"},"Logger#debug?":{"description":"Returns +true+ iff the current severity level allows for the printing of\n+DEBUG+ messages.","name":"debug?","namespace":"Logger","path":"Logger#debug?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Logger#error":{"description":"Log an +ERROR+ message.\n\nSee #info for more information.","name":"error","namespace":"Logger","path":"Logger#error","type":"instance_method","visibility":"public"},"Logger#error?":{"description":"Returns +true+ iff the current severity level allows for the printing of\n+ERROR+ messages.","name":"error?","namespace":"Logger","path":"Logger#error?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Logger#fatal":{"description":"Log a +FATAL+ message.\n\nSee #info for more information.","name":"fatal","namespace":"Logger","path":"Logger#fatal","type":"instance_method","visibility":"public"},"Logger#fatal?":{"description":"Returns +true+ iff the current severity level allows for the printing of\n+FATAL+ messages.","name":"fatal?","namespace":"Logger","path":"Logger#fatal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Logger#format_message":{"description":"","name":"format_message","namespace":"Logger","path":"Logger#format_message","type":"instance_method","visibility":"private"},"Logger#format_severity":{"description":"","name":"format_severity","namespace":"Logger","path":"Logger#format_severity","type":"instance_method","visibility":"private"},"Logger#formatter":{"description":"Logging formatter, as a +Proc+ that will take four arguments and\nreturn the formatted message. The arguments are:\n\n+severity+:: The Severity of the log message.\n+time+:: A Time instance representing when the message was logged.\n+progname+:: The #progname configured, or passed to the logger method.\n+msg+:: The _Object_ the user passed to the log message; not necessarily a\n        String.\n\nThe block should return an Object that can be written to the logging\ndevice via +write+.  The default formatter is used when no formatter is\nset.","name":"formatter","namespace":"Logger","path":"Logger#formatter","type":"instance_method","visibility":"public"},"Logger#formatter=":{"description":"Logging formatter, as a +Proc+ that will take four arguments and\nreturn the formatted message. The arguments are:\n\n+severity+:: The Severity of the log message.\n+time+:: A Time instance representing when the message was logged.\n+progname+:: The #progname configured, or passed to the logger method.\n+msg+:: The _Object_ the user passed to the log message; not necessarily a\n        String.\n\nThe block should return an Object that can be written to the logging\ndevice via +write+.  The default formatter is used when no formatter is\nset.","name":"formatter=","namespace":"Logger","path":"Logger#formatter=","type":"instance_method","visibility":"public"},"Logger#info":{"description":":call-seq:\n  info(message)\n  info(progname, &block)\n\nLog an +INFO+ message.\n\n+message+:: The message to log; does not need to be a String.\n+progname+:: In the block form, this is the #progname to use in the\n             log message.  The default can be set with #progname=.\n+block+:: Evaluates to the message to log.  This is not evaluated unless\n          the logger's level is sufficient to log the message.  This\n          allows you to create potentially expensive logging messages that\n          are only called when the logger is configured to show them.\n\n=== Examples\n\n  logger.info(\"MainApp\") { \"Received connection from #{ip}\" }\n  # ...\n  logger.info \"Waiting for input from user\"\n  # ...\n  logger.info { \"User typed #{input}\" }\n\nYou'll probably stick to the second form above, unless you want to provide a\nprogram name (which you can do with #progname= as well).\n\n=== Return\n\nSee #add.","name":"info","namespace":"Logger","path":"Logger#info","type":"instance_method","visibility":"public"},"Logger#info?":{"description":"Returns +true+ iff the current severity level allows for the printing of\n+INFO+ messages.","name":"info?","namespace":"Logger","path":"Logger#info?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Logger#initialize":{"description":":call-seq:\n  Logger.new(logdev, shift_age = 7, shift_size = 1048576)\n  Logger.new(logdev, shift_age = 'weekly')\n\n=== Args\n\n+logdev+::\n  The log device.  This is a filename (String) or IO object (typically\n  +STDOUT+, +STDERR+, or an open file).\n+shift_age+::\n  Number of old log files to keep, *or* frequency of rotation (+daily+,\n  +weekly+ or +monthly+).\n+shift_size+::\n  Maximum logfile size (only applies when +shift_age+ is a number).\n\n=== Description\n\nCreate an instance.","name":"initialize","namespace":"Logger","path":"Logger#initialize","type":"instance_method","visibility":"public","return":[["Logger"],"a new instance of Logger"]},"Logger#level":{"description":"Logging severity threshold (e.g. <tt>Logger::INFO</tt>).","name":"sev_threshold","namespace":"Logger","path":"Logger#sev_threshold","type":"instance_method","visibility":"public"},"Logger#sev_threshold":{"description":"Logging severity threshold (e.g. <tt>Logger::INFO</tt>).","name":"sev_threshold","namespace":"Logger","path":"Logger#sev_threshold","type":"instance_method","visibility":"public"},"Logger#level=":{"description":"Logging severity threshold (e.g. <tt>Logger::INFO</tt>).","name":"sev_threshold=","namespace":"Logger","path":"Logger#sev_threshold=","type":"instance_method","visibility":"public"},"Logger#sev_threshold=":{"description":"Logging severity threshold (e.g. <tt>Logger::INFO</tt>).","name":"sev_threshold=","namespace":"Logger","path":"Logger#sev_threshold=","type":"instance_method","visibility":"public"},"Logger#progname":{"description":"Program name to include in log messages.","name":"progname","namespace":"Logger","path":"Logger#progname","type":"instance_method","visibility":"public"},"Logger#progname=":{"description":"Program name to include in log messages.","name":"progname=","namespace":"Logger","path":"Logger#progname=","type":"instance_method","visibility":"public"},"Logger#unknown":{"description":"Log an +UNKNOWN+ message.  This will be printed no matter what the logger's\nlevel is.\n\nSee #info for more information.","name":"unknown","namespace":"Logger","path":"Logger#unknown","type":"instance_method","visibility":"public"},"Logger#warn":{"description":"Log a +WARN+ message.\n\nSee #info for more information.","name":"warn","namespace":"Logger","path":"Logger#warn","type":"instance_method","visibility":"public"},"Logger#warn?":{"description":"Returns +true+ iff the current severity level allows for the printing of\n+WARN+ messages.","name":"warn?","namespace":"Logger","path":"Logger#warn?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Logger::Error":{"description":":nodoc:","name":"Error","namespace":"Logger","path":"Logger::Error","type":"class","visibility":"public"},"Logger::Formatter":{"description":"Default formatter for log messages.","name":"Formatter","namespace":"Logger","path":"Logger::Formatter","type":"class","visibility":"public"},"Logger::Formatter#call":{"description":"","name":"call","namespace":"Logger::Formatter","path":"Logger::Formatter#call","type":"instance_method","visibility":"public"},"Logger::Formatter#datetime_format":{"description":"Returns the value of attribute datetime_format","name":"datetime_format","namespace":"Logger::Formatter","path":"Logger::Formatter#datetime_format","type":"instance_method","visibility":"public"},"Logger::Formatter#datetime_format=":{"description":"Sets the attribute datetime_format","name":"datetime_format=","namespace":"Logger::Formatter","path":"Logger::Formatter#datetime_format=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute datetime_format to."]]},"Logger::Formatter#format_datetime":{"description":"","name":"format_datetime","namespace":"Logger::Formatter","path":"Logger::Formatter#format_datetime","type":"instance_method","visibility":"private"},"Logger::Formatter#initialize":{"description":"","name":"initialize","namespace":"Logger::Formatter","path":"Logger::Formatter#initialize","type":"instance_method","visibility":"public","return":[["Formatter"],"a new instance of Formatter"]},"Logger::Formatter#msg2str":{"description":"","name":"msg2str","namespace":"Logger::Formatter","path":"Logger::Formatter#msg2str","type":"instance_method","visibility":"private"},"Logger::Formatter::Format":{"description":"","name":"Format","namespace":"Logger::Formatter","path":"Logger::Formatter::Format","type":"constant","return":["String",""],"visibility":"public"},"Logger::LogDevice":{"description":"Device used for logging messages.","name":"LogDevice","namespace":"Logger","path":"Logger::LogDevice","type":"class","visibility":"public"},"Logger::LogDevice#add_log_header":{"description":"","name":"add_log_header","namespace":"Logger::LogDevice","path":"Logger::LogDevice#add_log_header","type":"instance_method","visibility":"private"},"Logger::LogDevice#check_shift_log":{"description":"","name":"check_shift_log","namespace":"Logger::LogDevice","path":"Logger::LogDevice#check_shift_log","type":"instance_method","visibility":"private"},"Logger::LogDevice#close":{"description":"","name":"close","namespace":"Logger::LogDevice","path":"Logger::LogDevice#close","type":"instance_method","visibility":"public"},"Logger::LogDevice#create_logfile":{"description":"","name":"create_logfile","namespace":"Logger::LogDevice","path":"Logger::LogDevice#create_logfile","type":"instance_method","visibility":"private"},"Logger::LogDevice#dev":{"description":"Returns the value of attribute dev","name":"dev","namespace":"Logger::LogDevice","path":"Logger::LogDevice#dev","type":"instance_method","visibility":"public"},"Logger::LogDevice#filename":{"description":"Returns the value of attribute filename","name":"filename","namespace":"Logger::LogDevice","path":"Logger::LogDevice#filename","type":"instance_method","visibility":"public"},"Logger::LogDevice#initialize":{"description":"","name":"initialize","namespace":"Logger::LogDevice","path":"Logger::LogDevice#initialize","type":"instance_method","visibility":"public","return":[["LogDevice"],"a new instance of LogDevice"]},"Logger::LogDevice#lock_shift_log":{"description":"","name":"lock_shift_log","namespace":"Logger::LogDevice","path":"Logger::LogDevice#lock_shift_log","type":"instance_method","visibility":"private"},"Logger::LogDevice#open_logfile":{"description":"","name":"open_logfile","namespace":"Logger::LogDevice","path":"Logger::LogDevice#open_logfile","type":"instance_method","visibility":"private"},"Logger::LogDevice#shift_log_age":{"description":"","name":"shift_log_age","namespace":"Logger::LogDevice","path":"Logger::LogDevice#shift_log_age","type":"instance_method","visibility":"private"},"Logger::LogDevice#shift_log_period":{"description":"","name":"shift_log_period","namespace":"Logger::LogDevice","path":"Logger::LogDevice#shift_log_period","type":"instance_method","visibility":"private"},"Logger::LogDevice#write":{"description":"","name":"write","namespace":"Logger::LogDevice","path":"Logger::LogDevice#write","type":"instance_method","visibility":"public"},"Logger::LogDevice::LogDeviceMutex":{"description":"","name":"LogDeviceMutex","namespace":"Logger::LogDevice","path":"Logger::LogDevice::LogDeviceMutex","type":"class","visibility":"public"},"Logger::Period":{"description":"","name":"Period","namespace":"Logger","path":"Logger::Period","type":"module","visibility":"public"},"Logger::Period#next_rotate_time":{"description":"","name":"next_rotate_time","namespace":"Logger::Period","path":"Logger::Period#next_rotate_time","type":"module_function","visibility":"private"},"Logger::Period#previous_period_end":{"description":"","name":"previous_period_end","namespace":"Logger::Period","path":"Logger::Period#previous_period_end","type":"module_function","visibility":"private"},"Logger::Period.next_rotate_time":{"description":"","name":"next_rotate_time","namespace":"Logger::Period","path":"Logger::Period.next_rotate_time","type":"module_function","visibility":"public"},"Logger::Period.previous_period_end":{"description":"","name":"previous_period_end","namespace":"Logger::Period","path":"Logger::Period.previous_period_end","type":"module_function","visibility":"public"},"Logger::Period::SiD":{"description":"","name":"SiD","namespace":"Logger::Period","path":"Logger::Period::SiD","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::ProgName":{"description":"","name":"ProgName","namespace":"Logger","path":"Logger::ProgName","type":"constant","return":["String",""],"visibility":"public"},"Logger::SEV_LABEL":{"description":"Severity label for logging (max 5 chars).","name":"SEV_LABEL","namespace":"Logger","path":"Logger::SEV_LABEL","type":"constant","return":["Array",""],"visibility":"private"},"Logger::Severity":{"description":"Logging severity.","name":"Severity","namespace":"Logger","path":"Logger::Severity","type":"module","visibility":"public"},"Logger::Severity::DEBUG":{"description":"Low-level information, mostly for developers.","name":"DEBUG","namespace":"Logger::Severity","path":"Logger::Severity::DEBUG","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::Severity::ERROR":{"description":"A handleable error condition.","name":"ERROR","namespace":"Logger::Severity","path":"Logger::Severity::ERROR","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::Severity::FATAL":{"description":"An unhandleable error that results in a program crash.","name":"FATAL","namespace":"Logger::Severity","path":"Logger::Severity::FATAL","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::Severity::INFO":{"description":"Generic (useful) information about system operation.","name":"INFO","namespace":"Logger::Severity","path":"Logger::Severity::INFO","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::Severity::UNKNOWN":{"description":"An unknown message that should always be logged.","name":"UNKNOWN","namespace":"Logger::Severity","path":"Logger::Severity::UNKNOWN","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::Severity::WARN":{"description":"A warning.","name":"WARN","namespace":"Logger::Severity","path":"Logger::Severity::WARN","type":"constant","return":["Fixnum",""],"visibility":"public"},"Logger::ShiftingError":{"description":"not used after 1.2.7. just for compat.","name":"ShiftingError","namespace":"Logger","path":"Logger::ShiftingError","type":"class","visibility":"public"},"Logger::VERSION":{"description":"","name":"VERSION","namespace":"Logger","path":"Logger::VERSION","type":"constant","return":["String",""],"visibility":"public"},"Numeric":{"description":"","name":"Numeric","namespace":"","path":"Numeric","type":"class","visibility":"public"},"Fixnum":{"description":"When mathn is required, Fixnum's division is enhanced to\nreturn more precise values from mathematical expressions.\n\n  2/3*3  # => 0\n  require 'mathn'\n  2/3*3  # => 2","name":"Fixnum","namespace":"","path":"Fixnum","type":"class","visibility":"public"},"Fixnum#/":{"description":"+/+ defines the Rational division for Fixnum.\n\n  1/3  # => (1/3)","name":"/","namespace":"Fixnum","path":"Fixnum#/","type":"instance_method","visibility":"public"},"Bignum":{"description":"When mathn is required Bignum's division is enhanced to\nreturn more precise values from mathematical expressions.\n\n  (2**72) / ((2**70) * 3)  # => 4/3","name":"Bignum","namespace":"","path":"Bignum","type":"class","visibility":"public"},"Bignum#/":{"description":"+/+ defines the Rational division for Bignum.\n\n  (2**72) / ((2**70) * 3)  # => 4/3","name":"/","namespace":"Bignum","path":"Bignum#/","type":"instance_method","visibility":"public"},"ExceptionForMatrix":{"description":":nodoc:","name":"ExceptionForMatrix","namespace":"","path":"ExceptionForMatrix","type":"module","visibility":"public"},"Matrix":{"description":"The +Matrix+ class represents a mathematical matrix. It provides methods for creating\nmatrices, operating on them arithmetically and algebraically,\nand determining their mathematical properties (trace, rank, inverse, determinant).\n\n== Method Catalogue\n\nTo create a matrix:\n* Matrix[*rows]\n* Matrix.[](*rows)\n* Matrix.rows(rows, copy = true)\n* Matrix.columns(columns)\n* Matrix.build(row_count, column_count, &block)\n* Matrix.diagonal(*values)\n* Matrix.scalar(n, value)\n* Matrix.identity(n)\n* Matrix.unit(n)\n* Matrix.I(n)\n* Matrix.zero(n)\n* Matrix.row_vector(row)\n* Matrix.column_vector(column)\n* Matrix.hstack(*matrices)\n* Matrix.vstack(*matrices)\n\nTo access Matrix elements/columns/rows/submatrices/properties:\n* #[](i, j)\n* #row_count (row_size)\n* #column_count (column_size)\n* #row(i)\n* #column(j)\n* #collect\n* #map\n* #each\n* #each_with_index\n* #find_index\n* #minor(*param)\n* #first_minor(row, column)\n* #cofactor(row, column)\n* #adjugate\n* #laplace_expansion(row_or_column: num)\n* #cofactor_expansion(row_or_column: num)\n\nProperties of a matrix:\n* #diagonal?\n* #empty?\n* #hermitian?\n* #lower_triangular?\n* #normal?\n* #orthogonal?\n* #permutation?\n* #real?\n* #regular?\n* #singular?\n* #square?\n* #symmetric?\n* #unitary?\n* #upper_triangular?\n* #zero?\n\nMatrix arithmetic:\n* #*(m)\n* #+(m)\n* #-(m)\n* #/(m)\n* #inverse\n* #inv\n* #**\n* #+@\n* #-@\n\nMatrix functions:\n* #determinant\n* #det\n* #hstack(*matrices)\n* #rank\n* #round\n* #trace\n* #tr\n* #transpose\n* #t\n* #vstack(*matrices)\n\nMatrix decompositions:\n* #eigen\n* #eigensystem\n* #lup\n* #lup_decomposition\n\nComplex arithmetic:\n* conj\n* conjugate\n* imag\n* imaginary\n* real\n* rect\n* rectangular\n\nConversion to other data types:\n* #coerce(other)\n* #row_vectors\n* #column_vectors\n* #to_a\n\nString representations:\n* #to_s\n* #inspect","name":"Matrix","namespace":"","path":"Matrix","type":"class","visibility":"public"},"Matrix#*":{"description":"Matrix multiplication.\n  Matrix[[2,4], [6,8]] * Matrix.identity(2)\n    => 2 4\n       6 8","name":"*","namespace":"Matrix","path":"Matrix#*","type":"instance_method","visibility":"public"},"Matrix#**":{"description":"Matrix exponentiation.\nEquivalent to multiplying the matrix by itself N times.\nNon integer exponents will be handled by diagonalizing the matrix.\n\n  Matrix[[7,6], [3,9]] ** 2\n    => 67 96\n       48 99","name":"**","namespace":"Matrix","path":"Matrix#**","type":"instance_method","visibility":"public"},"Matrix#+":{"description":"Matrix addition.\n  Matrix.scalar(2,5) + Matrix[[1,0], [-4,7]]\n    =>  6  0\n       -4 12","name":"+","namespace":"Matrix","path":"Matrix#+","type":"instance_method","visibility":"public"},"Matrix#+@":{"description":"","name":"+@","namespace":"Matrix","path":"Matrix#+@","type":"instance_method","visibility":"public"},"Matrix#-":{"description":"Matrix subtraction.\n  Matrix[[1,5], [4,2]] - Matrix[[9,3], [-4,1]]\n    => -8  2\n        8  1","name":"-","namespace":"Matrix","path":"Matrix#-","type":"instance_method","visibility":"public"},"Matrix#-@":{"description":"","name":"-@","namespace":"Matrix","path":"Matrix#-@","type":"instance_method","visibility":"public"},"Matrix#/":{"description":"Matrix division (multiplication by the inverse).\n  Matrix[[7,6], [3,9]] / Matrix[[2,9], [3,1]]\n    => -7  1\n       -3 -6","name":"/","namespace":"Matrix","path":"Matrix#/","type":"instance_method","visibility":"public"},"Matrix#==":{"description":"Returns +true+ if and only if the two matrices contain equal elements.","name":"==","namespace":"Matrix","path":"Matrix#==","type":"instance_method","visibility":"public"},"Matrix#[]":{"description":"Returns element (+i+,+j+) of the matrix.  That is: row +i+, column +j+.","name":"component","namespace":"Matrix","path":"Matrix#component","type":"instance_method","visibility":"public"},"Matrix#element":{"description":"Returns element (+i+,+j+) of the matrix.  That is: row +i+, column +j+.","name":"element","namespace":"Matrix","path":"Matrix#element","type":"instance_method","visibility":"public"},"Matrix#component":{"description":"Returns element (+i+,+j+) of the matrix.  That is: row +i+, column +j+.","name":"component","namespace":"Matrix","path":"Matrix#component","type":"instance_method","visibility":"public"},"Matrix#[]=":{"description":"","name":"set_component","namespace":"Matrix","path":"Matrix#set_component","type":"instance_method","visibility":"public"},"Matrix#set_element":{"description":"","name":"set_element","namespace":"Matrix","path":"Matrix#set_element","type":"instance_method","visibility":"private"},"Matrix#set_component":{"description":"","name":"set_component","namespace":"Matrix","path":"Matrix#set_component","type":"instance_method","visibility":"private"},"Matrix#adjugate":{"description":"Returns the adjugate of the matrix.\n\n  Matrix[ [7,6],[3,9] ].adjugate\n    => 9 -6\n       -3 7","name":"adjugate","namespace":"Matrix","path":"Matrix#adjugate","type":"instance_method","visibility":"public"},"Matrix#clone":{"description":"Returns a clone of the matrix, so that the contents of each do not reference\nidentical objects.\nThere should be no good reason to do this since Matrices are immutable.","name":"clone","namespace":"Matrix","path":"Matrix#clone","type":"instance_method","visibility":"public"},"Matrix#coerce":{"description":"The coerce method provides support for Ruby type coercion.\nThis coercion mechanism is used by Ruby to handle mixed-type\nnumeric operations: it is intended to find a compatible common\ntype between the two operands of the operator.\nSee also Numeric#coerce.","name":"coerce","namespace":"Matrix","path":"Matrix#coerce","type":"instance_method","visibility":"public"},"Matrix#cofactor":{"description":"Returns the (row, column) cofactor which is obtained by multiplying\nthe first minor by (-1)**(row + column).\n\n  Matrix.diagonal(9, 5, -3, 4).cofactor(1, 1)\n    => -108","name":"cofactor","namespace":"Matrix","path":"Matrix#cofactor","type":"instance_method","visibility":"public"},"Matrix#cofactor_expansion":{"description":"Returns the Laplace expansion along given row or column.\n\n   Matrix[[7,6], [3,9]].laplace_expansion(column: 1)\n    => 45\n\n   Matrix[[Vector[1, 0], Vector[0, 1]], [2, 3]].laplace_expansion(row: 0)\n    => Vector[3, -2]","name":"cofactor_expansion","namespace":"Matrix","path":"Matrix#cofactor_expansion","type":"instance_method","visibility":"public"},"Matrix#collect":{"description":"Returns a matrix that is the result of iteration of the given block over all\nelements of the matrix.\n  Matrix[ [1,2], [3,4] ].collect { |e| e**2 }\n    => 1  4\n       9 16","name":"map","namespace":"Matrix","path":"Matrix#map","type":"instance_method","visibility":"public"},"Matrix#map":{"description":"Returns a matrix that is the result of iteration of the given block over all\nelements of the matrix.\n  Matrix[ [1,2], [3,4] ].collect { |e| e**2 }\n    => 1  4\n       9 16","name":"map","namespace":"Matrix","path":"Matrix#map","type":"instance_method","visibility":"public"},"Matrix#column":{"description":"Returns column vector number +j+ of the matrix as a Vector (starting at 0\nlike an array).  When a block is given, the elements of that vector are\niterated.","name":"column","namespace":"Matrix","path":"Matrix#column","type":"instance_method","visibility":"public"},"Matrix#column_count":{"description":"Returns the number of columns.","name":"column_size","namespace":"Matrix","path":"Matrix#column_size","type":"instance_method","visibility":"public"},"Matrix#column_size":{"description":"Returns the number of columns.","name":"column_size","namespace":"Matrix","path":"Matrix#column_size","type":"instance_method","visibility":"public"},"Matrix#column_vectors":{"description":"Returns an array of the column vectors of the matrix.  See Vector.","name":"column_vectors","namespace":"Matrix","path":"Matrix#column_vectors","type":"instance_method","visibility":"public"},"Matrix#conj":{"description":"Returns the conjugate of the matrix.\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n    => 1+2i   i  0\n          1   2  3\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]].conjugate\n    => 1-2i  -i  0\n          1   2  3","name":"conj","namespace":"Matrix","path":"Matrix#conj","type":"instance_method","visibility":"public"},"Matrix#conjugate":{"description":"Returns the conjugate of the matrix.\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n    => 1+2i   i  0\n          1   2  3\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]].conjugate\n    => 1-2i  -i  0\n          1   2  3","name":"conj","namespace":"Matrix","path":"Matrix#conj","type":"instance_method","visibility":"public"},"Matrix#det":{"description":"Returns the determinant of the matrix.\n\nBeware that using Float values can yield erroneous results\nbecause of their lack of precision.\nConsider using exact types like Rational or BigDecimal instead.\n\n  Matrix[[7,6], [3,9]].determinant\n    => 45","name":"det","namespace":"Matrix","path":"Matrix#det","type":"instance_method","visibility":"public"},"Matrix#det_e":{"description":"deprecated; use Matrix#determinant","name":"det_e","namespace":"Matrix","path":"Matrix#det_e","type":"instance_method","visibility":"public"},"Matrix#determinant":{"description":"Returns the determinant of the matrix.\n\nBeware that using Float values can yield erroneous results\nbecause of their lack of precision.\nConsider using exact types like Rational or BigDecimal instead.\n\n  Matrix[[7,6], [3,9]].determinant\n    => 45","name":"det","namespace":"Matrix","path":"Matrix#det","type":"instance_method","visibility":"public"},"Matrix#determinant_bareiss":{"description":"Private. Use Matrix#determinant\n\nReturns the determinant of the matrix, using\nBareiss' multistep integer-preserving gaussian elimination.\nIt has the same computational cost order O(n^3) as standard Gaussian elimination.\nIntermediate results are fraction free and of lower complexity.\nA matrix of Integers will have thus intermediate results that are also Integers,\nwith smaller bignums (if any), while a matrix of Float will usually have\nintermediate results with better precision.","name":"determinant_bareiss","namespace":"Matrix","path":"Matrix#determinant_bareiss","type":"instance_method","visibility":"private"},"Matrix#determinant_e":{"description":"deprecated; use Matrix#determinant","name":"det_e","namespace":"Matrix","path":"Matrix#det_e","type":"instance_method","visibility":"public"},"Matrix#diagonal?":{"description":"Returns +true+ if this is a diagonal matrix.\nRaises an error if matrix is not square.","name":"diagonal?","namespace":"Matrix","path":"Matrix#diagonal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#each":{"description":"Yields all elements of the matrix, starting with those of the first row,\nor returns an Enumerator if no block given.\nElements can be restricted by passing an argument:\n* :all (default): yields all elements\n* :diagonal: yields only elements on the diagonal\n* :off_diagonal: yields all elements except on the diagonal\n* :lower: yields only elements on or below the diagonal\n* :strict_lower: yields only elements below the diagonal\n* :strict_upper: yields only elements above the diagonal\n* :upper: yields only elements on or above the diagonal\n\n  Matrix[ [1,2], [3,4] ].each { |e| puts e }\n    # => prints the numbers 1 to 4\n  Matrix[ [1,2], [3,4] ].each(:strict_lower).to_a # => [3]","name":"each","namespace":"Matrix","path":"Matrix#each","type":"instance_method","visibility":"public"},"Matrix#each_with_index":{"description":"Same as #each, but the row index and column index in addition to the element\n\n  Matrix[ [1,2], [3,4] ].each_with_index do |e, row, col|\n    puts \"#{e} at #{row}, #{col}\"\n  end\n    # => Prints:\n    #    1 at 0, 0\n    #    2 at 0, 1\n    #    3 at 1, 0\n    #    4 at 1, 1","name":"each_with_index","namespace":"Matrix","path":"Matrix#each_with_index","type":"instance_method","visibility":"public"},"Matrix#eigen":{"description":"Returns the Eigensystem of the matrix; see +EigenvalueDecomposition+.\n  m = Matrix[[1, 2], [3, 4]]\n  v, d, v_inv = m.eigensystem\n  d.diagonal? # => true\n  v.inv == v_inv # => true\n  (v * d * v_inv).round(5) == m # => true","name":"eigen","namespace":"Matrix","path":"Matrix#eigen","type":"instance_method","visibility":"public"},"Matrix#eigensystem":{"description":"Returns the Eigensystem of the matrix; see +EigenvalueDecomposition+.\n  m = Matrix[[1, 2], [3, 4]]\n  v, d, v_inv = m.eigensystem\n  d.diagonal? # => true\n  v.inv == v_inv # => true\n  (v * d * v_inv).round(5) == m # => true","name":"eigen","namespace":"Matrix","path":"Matrix#eigen","type":"instance_method","visibility":"public"},"Matrix#elements_to_f":{"description":"","name":"elements_to_f","namespace":"Matrix","path":"Matrix#elements_to_f","type":"instance_method","visibility":"public"},"Matrix#elements_to_i":{"description":"","name":"elements_to_i","namespace":"Matrix","path":"Matrix#elements_to_i","type":"instance_method","visibility":"public"},"Matrix#elements_to_r":{"description":"","name":"elements_to_r","namespace":"Matrix","path":"Matrix#elements_to_r","type":"instance_method","visibility":"public"},"Matrix#empty?":{"description":"Returns +true+ if this is an empty matrix, i.e. if the number of rows\nor the number of columns is 0.","name":"empty?","namespace":"Matrix","path":"Matrix#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#eql?":{"description":"","name":"eql?","namespace":"Matrix","path":"Matrix#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#find_index":{"description":":call-seq:\n  index(value, selector = :all) -> [row, column]\n  index(selector = :all){ block } -> [row, column]\n  index(selector = :all) -> an_enumerator\n\nThe index method is specialized to return the index as [row, column]\nIt also accepts an optional +selector+ argument, see #each for details.\n\n  Matrix[ [1,2], [3,4] ].index(&:even?) # => [0, 1]\n  Matrix[ [1,1], [1,1] ].index(1, :strict_lower) # => [1, 0]","name":"find_index","namespace":"Matrix","path":"Matrix#find_index","type":"instance_method","visibility":"public"},"Matrix#first_minor":{"description":"Returns the submatrix obtained by deleting the specified row and column.\n\n  Matrix.diagonal(9, 5, -3, 4).first_minor(1, 2)\n    => 9 0 0\n       0 0 0\n       0 0 4","name":"first_minor","namespace":"Matrix","path":"Matrix#first_minor","type":"instance_method","visibility":"public"},"Matrix#hash":{"description":"Returns a hash-code for the matrix.","name":"hash","namespace":"Matrix","path":"Matrix#hash","type":"instance_method","visibility":"public"},"Matrix#hermitian?":{"description":"Returns +true+ if this is an hermitian matrix.\nRaises an error if matrix is not square.","name":"hermitian?","namespace":"Matrix","path":"Matrix#hermitian?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#hstack":{"description":"Returns a new matrix resulting by stacking horizontally\nthe receiver with the given matrices\n\n  x = Matrix[[1, 2], [3, 4]]\n  y = Matrix[[5, 6], [7, 8]]\n  x.hstack(y) # => Matrix[[1, 2, 5, 6], [3, 4, 7, 8]]","name":"hstack","namespace":"Matrix","path":"Matrix#hstack","type":"instance_method","visibility":"public"},"Matrix#imag":{"description":"Returns the imaginary part of the matrix.\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n    => 1+2i  i  0\n          1  2  3\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]].imaginary\n    =>   2i  i  0\n          0  0  0","name":"imag","namespace":"Matrix","path":"Matrix#imag","type":"instance_method","visibility":"public"},"Matrix#imaginary":{"description":"Returns the imaginary part of the matrix.\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n    => 1+2i  i  0\n          1  2  3\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]].imaginary\n    =>   2i  i  0\n          0  0  0","name":"imag","namespace":"Matrix","path":"Matrix#imag","type":"instance_method","visibility":"public"},"Matrix#index":{"description":":call-seq:\n  index(value, selector = :all) -> [row, column]\n  index(selector = :all){ block } -> [row, column]\n  index(selector = :all) -> an_enumerator\n\nThe index method is specialized to return the index as [row, column]\nIt also accepts an optional +selector+ argument, see #each for details.\n\n  Matrix[ [1,2], [3,4] ].index(&:even?) # => [0, 1]\n  Matrix[ [1,1], [1,1] ].index(1, :strict_lower) # => [1, 0]","name":"find_index","namespace":"Matrix","path":"Matrix#find_index","type":"instance_method","visibility":"public"},"Matrix#initialize":{"description":"Matrix.new is private; use Matrix.rows, columns, [], etc... to create.","name":"initialize","namespace":"Matrix","path":"Matrix#initialize","type":"instance_method","visibility":"public","return":[["Matrix"],"a new instance of Matrix"]},"Matrix#inspect":{"description":"Overrides Object#inspect","name":"inspect","namespace":"Matrix","path":"Matrix#inspect","type":"instance_method","visibility":"public"},"Matrix#inv":{"description":"Returns the inverse of the matrix.\n  Matrix[[-1, -1], [0, -1]].inverse\n    => -1  1\n        0 -1","name":"inv","namespace":"Matrix","path":"Matrix#inv","type":"instance_method","visibility":"public"},"Matrix#inverse":{"description":"Returns the inverse of the matrix.\n  Matrix[[-1, -1], [0, -1]].inverse\n    => -1  1\n        0 -1","name":"inv","namespace":"Matrix","path":"Matrix#inv","type":"instance_method","visibility":"public"},"Matrix#inverse_from":{"description":":nodoc:","name":"inverse_from","namespace":"Matrix","path":"Matrix#inverse_from","type":"instance_method","visibility":"private"},"Matrix#laplace_expansion":{"description":"Returns the Laplace expansion along given row or column.\n\n   Matrix[[7,6], [3,9]].laplace_expansion(column: 1)\n    => 45\n\n   Matrix[[Vector[1, 0], Vector[0, 1]], [2, 3]].laplace_expansion(row: 0)\n    => Vector[3, -2]","name":"cofactor_expansion","namespace":"Matrix","path":"Matrix#cofactor_expansion","type":"instance_method","visibility":"public"},"Matrix#lower_triangular?":{"description":"Returns +true+ if this is a lower triangular matrix.","name":"lower_triangular?","namespace":"Matrix","path":"Matrix#lower_triangular?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#lup":{"description":"Returns the LUP decomposition of the matrix; see +LUPDecomposition+.\n  a = Matrix[[1, 2], [3, 4]]\n  l, u, p = a.lup\n  l.lower_triangular? # => true\n  u.upper_triangular? # => true\n  p.permutation?      # => true\n  l * u == p * a      # => true\n  a.lup.solve([2, 5]) # => Vector[(1/1), (1/2)]","name":"lup_decomposition","namespace":"Matrix","path":"Matrix#lup_decomposition","type":"instance_method","visibility":"public"},"Matrix#lup_decomposition":{"description":"Returns the LUP decomposition of the matrix; see +LUPDecomposition+.\n  a = Matrix[[1, 2], [3, 4]]\n  l, u, p = a.lup\n  l.lower_triangular? # => true\n  u.upper_triangular? # => true\n  p.permutation?      # => true\n  l * u == p * a      # => true\n  a.lup.solve([2, 5]) # => Vector[(1/1), (1/2)]","name":"lup_decomposition","namespace":"Matrix","path":"Matrix#lup_decomposition","type":"instance_method","visibility":"public"},"Matrix#minor":{"description":"Returns a section of the matrix.  The parameters are either:\n*  start_row, nrows, start_col, ncols; OR\n*  row_range, col_range\n\n  Matrix.diagonal(9, 5, -3).minor(0..1, 0..2)\n    => 9 0 0\n       0 5 0\n\nLike Array#[], negative indices count backward from the end of the\nrow or column (-1 is the last element). Returns nil if the starting\nrow or column is greater than row_count or column_count respectively.","name":"minor","namespace":"Matrix","path":"Matrix#minor","type":"instance_method","visibility":"public"},"Matrix#new_matrix":{"description":":nodoc:","name":"new_matrix","namespace":"Matrix","path":"Matrix#new_matrix","type":"instance_method","visibility":"private"},"Matrix#normal?":{"description":"Returns +true+ if this is a normal matrix.\nRaises an error if matrix is not square.","name":"normal?","namespace":"Matrix","path":"Matrix#normal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#orthogonal?":{"description":"Returns +true+ if this is an orthogonal matrix\nRaises an error if matrix is not square.","name":"orthogonal?","namespace":"Matrix","path":"Matrix#orthogonal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#permutation?":{"description":"Returns +true+ if this is a permutation matrix\nRaises an error if matrix is not square.","name":"permutation?","namespace":"Matrix","path":"Matrix#permutation?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#rank":{"description":"Returns the rank of the matrix.\nBeware that using Float values can yield erroneous results\nbecause of their lack of precision.\nConsider using exact types like Rational or BigDecimal instead.\n\n  Matrix[[7,6], [3,9]].rank\n    => 2","name":"rank","namespace":"Matrix","path":"Matrix#rank","type":"instance_method","visibility":"public"},"Matrix#rank_e":{"description":"deprecated; use Matrix#rank","name":"rank_e","namespace":"Matrix","path":"Matrix#rank_e","type":"instance_method","visibility":"public"},"Matrix#real":{"description":"Returns the real part of the matrix.\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]]\n    => 1+2i  i  0\n          1  2  3\n  Matrix[[Complex(1,2), Complex(0,1), 0], [1, 2, 3]].real\n    =>    1  0  0\n          1  2  3","name":"real","namespace":"Matrix","path":"Matrix#real","type":"instance_method","visibility":"public"},"Matrix#real?":{"description":"Returns +true+ if all entries of the matrix are real.","name":"real?","namespace":"Matrix","path":"Matrix#real?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#rect":{"description":"Returns an array containing matrices corresponding to the real and imaginary\nparts of the matrix\n\nm.rect == [m.real, m.imag]  # ==> true for all matrices m","name":"rectangular","namespace":"Matrix","path":"Matrix#rectangular","type":"instance_method","visibility":"public"},"Matrix#rectangular":{"description":"Returns an array containing matrices corresponding to the real and imaginary\nparts of the matrix\n\nm.rect == [m.real, m.imag]  # ==> true for all matrices m","name":"rectangular","namespace":"Matrix","path":"Matrix#rectangular","type":"instance_method","visibility":"public"},"Matrix#regular?":{"description":"Returns +true+ if this is a regular (i.e. non-singular) matrix.","name":"regular?","namespace":"Matrix","path":"Matrix#regular?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#round":{"description":"Returns a matrix with entries rounded to the given precision\n(see Float#round)","name":"round","namespace":"Matrix","path":"Matrix#round","type":"instance_method","visibility":"public"},"Matrix#row":{"description":"Returns row vector number +i+ of the matrix as a Vector (starting at 0 like\nan array).  When a block is given, the elements of that vector are iterated.","name":"row","namespace":"Matrix","path":"Matrix#row","type":"instance_method","visibility":"public"},"Matrix#row_count":{"description":"Returns the number of rows.","name":"row_size","namespace":"Matrix","path":"Matrix#row_size","type":"instance_method","visibility":"public"},"Matrix#row_size":{"description":"Returns the number of rows.","name":"row_size","namespace":"Matrix","path":"Matrix#row_size","type":"instance_method","visibility":"public"},"Matrix#row_vectors":{"description":"Returns an array of the row vectors of the matrix.  See Vector.","name":"row_vectors","namespace":"Matrix","path":"Matrix#row_vectors","type":"instance_method","visibility":"public"},"Matrix#rows":{"description":"Returns the value of attribute rows","name":"rows","namespace":"Matrix","path":"Matrix#rows","type":"instance_method","visibility":"protected"},"Matrix#singular?":{"description":"Returns +true+ if this is a singular matrix.","name":"singular?","namespace":"Matrix","path":"Matrix#singular?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#square?":{"description":"Returns +true+ if this is a square matrix.","name":"square?","namespace":"Matrix","path":"Matrix#square?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#symmetric?":{"description":"Returns +true+ if this is a symmetric matrix.\nRaises an error if matrix is not square.","name":"symmetric?","namespace":"Matrix","path":"Matrix#symmetric?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#t":{"description":"Returns the transpose of the matrix.\n  Matrix[[1,2], [3,4], [5,6]]\n    => 1 2\n       3 4\n       5 6\n  Matrix[[1,2], [3,4], [5,6]].transpose\n    => 1 3 5\n       2 4 6","name":"t","namespace":"Matrix","path":"Matrix#t","type":"instance_method","visibility":"public"},"Matrix#to_a":{"description":"Returns an array of arrays that describe the rows of the matrix.","name":"to_a","namespace":"Matrix","path":"Matrix#to_a","type":"instance_method","visibility":"public"},"Matrix#to_s":{"description":"Overrides Object#to_s","name":"to_s","namespace":"Matrix","path":"Matrix#to_s","type":"instance_method","visibility":"public"},"Matrix#tr":{"description":"Returns the trace (sum of diagonal elements) of the matrix.\n  Matrix[[7,6], [3,9]].trace\n    => 16","name":"tr","namespace":"Matrix","path":"Matrix#tr","type":"instance_method","visibility":"public"},"Matrix#trace":{"description":"Returns the trace (sum of diagonal elements) of the matrix.\n  Matrix[[7,6], [3,9]].trace\n    => 16","name":"tr","namespace":"Matrix","path":"Matrix#tr","type":"instance_method","visibility":"public"},"Matrix#transpose":{"description":"Returns the transpose of the matrix.\n  Matrix[[1,2], [3,4], [5,6]]\n    => 1 2\n       3 4\n       5 6\n  Matrix[[1,2], [3,4], [5,6]].transpose\n    => 1 3 5\n       2 4 6","name":"t","namespace":"Matrix","path":"Matrix#t","type":"instance_method","visibility":"public"},"Matrix#unitary?":{"description":"Returns +true+ if this is a unitary matrix\nRaises an error if matrix is not square.","name":"unitary?","namespace":"Matrix","path":"Matrix#unitary?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#upper_triangular?":{"description":"Returns +true+ if this is an upper triangular matrix.","name":"upper_triangular?","namespace":"Matrix","path":"Matrix#upper_triangular?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix#vstack":{"description":"Returns a new matrix resulting by stacking vertically\nthe receiver with the given matrices\n\n  x = Matrix[[1, 2], [3, 4]]\n  y = Matrix[[5, 6], [7, 8]]\n  x.vstack(y) # => Matrix[[1, 2], [3, 4], [5, 6], [7, 8]]","name":"vstack","namespace":"Matrix","path":"Matrix#vstack","type":"instance_method","visibility":"public"},"Matrix#zero?":{"description":"Returns +true+ if this is a matrix with only zero elements","name":"zero?","namespace":"Matrix","path":"Matrix#zero?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix.I":{"description":"Creates an +n+ by +n+ identity matrix.\n  Matrix.identity(2)\n    => 1 0\n       0 1","name":"I","namespace":"Matrix","path":"Matrix.I","type":"class_method","visibility":"public"},"Matrix.[]":{"description":"Creates a matrix where each argument is a row.\n  Matrix[ [25, 93], [-1, 66] ]\n     =>  25 93\n         -1 66","name":"[]","namespace":"Matrix","path":"Matrix.[]","type":"class_method","visibility":"public"},"Matrix.build":{"description":"Creates a matrix of size +row_count+ x +column_count+.\nIt fills the values by calling the given block,\npassing the current row and column.\nReturns an enumerator if no block is given.\n\n  m = Matrix.build(2, 4) {|row, col| col - row }\n    => Matrix[[0, 1, 2, 3], [-1, 0, 1, 2]]\n  m = Matrix.build(3) { rand }\n    => a 3x3 matrix with random elements","name":"build","namespace":"Matrix","path":"Matrix.build","type":"class_method","visibility":"public"},"Matrix.column_vector":{"description":"Creates a single-column matrix where the values of that column are as given\nin +column+.\n  Matrix.column_vector([4,5,6])\n    => 4\n       5\n       6","name":"column_vector","namespace":"Matrix","path":"Matrix.column_vector","type":"class_method","visibility":"public"},"Matrix.columns":{"description":"Creates a matrix using +columns+ as an array of column vectors.\n  Matrix.columns([[25, 93], [-1, 66]])\n     =>  25 -1\n         93 66","name":"columns","namespace":"Matrix","path":"Matrix.columns","type":"class_method","visibility":"public"},"Matrix.diagonal":{"description":"Creates a matrix where the diagonal elements are composed of +values+.\n  Matrix.diagonal(9, 5, -3)\n    =>  9  0  0\n        0  5  0\n        0  0 -3","name":"diagonal","namespace":"Matrix","path":"Matrix.diagonal","type":"class_method","visibility":"public"},"Matrix.empty":{"description":"Creates a empty matrix of +row_count+ x +column_count+.\nAt least one of +row_count+ or +column_count+ must be 0.\n\n  m = Matrix.empty(2, 0)\n  m == Matrix[ [], [] ]\n    => true\n  n = Matrix.empty(0, 3)\n  n == Matrix.columns([ [], [], [] ])\n    => true\n  m * n\n    => Matrix[[0, 0, 0], [0, 0, 0]]","name":"empty","namespace":"Matrix","path":"Matrix.empty","type":"class_method","visibility":"public"},"Matrix.hstack":{"description":"Create a matrix by stacking matrices horizontally\n\n  x = Matrix[[1, 2], [3, 4]]\n  y = Matrix[[5, 6], [7, 8]]\n  Matrix.hstack(x, y) # => Matrix[[1, 2, 5, 6], [3, 4, 7, 8]]","name":"hstack","namespace":"Matrix","path":"Matrix.hstack","type":"class_method","visibility":"public"},"Matrix.identity":{"description":"Creates an +n+ by +n+ identity matrix.\n  Matrix.identity(2)\n    => 1 0\n       0 1","name":"I","namespace":"Matrix","path":"Matrix.I","type":"class_method","visibility":"public"},"Matrix.unit":{"description":"Creates an +n+ by +n+ identity matrix.\n  Matrix.identity(2)\n    => 1 0\n       0 1","name":"unit","namespace":"Matrix","path":"Matrix.unit","type":"class_method","visibility":"public"},"Matrix.row_vector":{"description":"Creates a single-row matrix where the values of that row are as given in\n+row+.\n  Matrix.row_vector([4,5,6])\n    => 4 5 6","name":"row_vector","namespace":"Matrix","path":"Matrix.row_vector","type":"class_method","visibility":"public"},"Matrix.rows":{"description":"Creates a matrix where +rows+ is an array of arrays, each of which is a row\nof the matrix.  If the optional argument +copy+ is false, use the given\narrays as the internal structure of the matrix without copying.\n  Matrix.rows([[25, 93], [-1, 66]])\n     =>  25 93\n         -1 66","name":"rows","namespace":"Matrix","path":"Matrix.rows","type":"class_method","visibility":"public"},"Matrix.scalar":{"description":"Creates an +n+ by +n+ diagonal matrix where each diagonal element is\n+value+.\n  Matrix.scalar(2, 5)\n    => 5 0\n       0 5","name":"scalar","namespace":"Matrix","path":"Matrix.scalar","type":"class_method","visibility":"public"},"Matrix.vstack":{"description":"Create a matrix by stacking matrices vertically\n\n  x = Matrix[[1, 2], [3, 4]]\n  y = Matrix[[5, 6], [7, 8]]\n  Matrix.vstack(x, y) # => Matrix[[1, 2], [3, 4], [5, 6], [7, 8]]","name":"vstack","namespace":"Matrix","path":"Matrix.vstack","type":"class_method","visibility":"public"},"Matrix.zero":{"description":"Creates a zero matrix.\n  Matrix.zero(2)\n    => 0 0\n       0 0","name":"zero","namespace":"Matrix","path":"Matrix.zero","type":"class_method","visibility":"public"},"Matrix::CoercionHelper":{"description":":nodoc:","name":"CoercionHelper","namespace":"Matrix","path":"Matrix::CoercionHelper","type":"module","visibility":"public"},"Matrix::CoercionHelper#apply_through_coercion":{"description":"Applies the operator +oper+ with argument +obj+\nthrough coercion of +obj+","name":"apply_through_coercion","namespace":"Matrix::CoercionHelper","path":"Matrix::CoercionHelper#apply_through_coercion","type":"module_function","visibility":"private"},"Matrix::CoercionHelper.coerce_to":{"description":"Helper method to coerce a value into a specific class.\nRaises a TypeError if the coercion fails or the returned value\nis not of the right class.\n(from Rubinius)","name":"coerce_to","namespace":"Matrix::CoercionHelper","path":"Matrix::CoercionHelper.coerce_to","type":"module_function","visibility":"public"},"Matrix::CoercionHelper.coerce_to_int":{"description":"","name":"coerce_to_int","namespace":"Matrix::CoercionHelper","path":"Matrix::CoercionHelper.coerce_to_int","type":"module_function","visibility":"public"},"Matrix::ConversionHelper":{"description":"Private helper modules","name":"ConversionHelper","namespace":"Matrix","path":"Matrix::ConversionHelper","type":"module","visibility":"public"},"Matrix::ConversionHelper#convert_to_array":{"description":"Converts the obj to an Array. If copy is set to true\na copy of obj will be made if necessary.","name":"convert_to_array","namespace":"Matrix::ConversionHelper","path":"Matrix::ConversionHelper#convert_to_array","type":"module_function","visibility":"private"},"Matrix::EigenvalueDecomposition":{"description":"Eigenvalues and eigenvectors of a real matrix.\n\nComputes the eigenvalues and eigenvectors of a matrix A.\n\nIf A is diagonalizable, this provides matrices V and D\nsuch that A = V*D*V.inv, where D is the diagonal matrix with entries\nequal to the eigenvalues and V is formed by the eigenvectors.\n\nIf A is symmetric, then V is orthogonal and thus A = V*D*V.t","name":"EigenvalueDecomposition","namespace":"Matrix","path":"Matrix::EigenvalueDecomposition","type":"class","visibility":"public"},"Matrix::EigenvalueDecomposition#build_eigenvectors":{"description":"","name":"build_eigenvectors","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#build_eigenvectors","type":"instance_method","visibility":"private"},"Matrix::EigenvalueDecomposition#cdiv":{"description":"Complex scalar division.","name":"cdiv","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#cdiv","type":"instance_method","visibility":"private"},"Matrix::EigenvalueDecomposition#d":{"description":"Returns the block diagonal eigenvalue matrix +D+","name":"d","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#d","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#diagonalize":{"description":"Symmetric tridiagonal QL algorithm.","name":"diagonalize","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#diagonalize","type":"instance_method","visibility":"private"},"Matrix::EigenvalueDecomposition#eigenvalue_matrix":{"description":"Returns the block diagonal eigenvalue matrix +D+","name":"d","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#d","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#eigenvalues":{"description":"Returns the eigenvalues in an array","name":"eigenvalues","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#eigenvalues","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#eigenvector_matrix":{"description":"Returns the eigenvector matrix +V+","name":"v","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#v","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#v":{"description":"Returns the eigenvector matrix +V+","name":"v","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#v","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#eigenvector_matrix_inv":{"description":"Returns the inverse of the eigenvector matrix +V+","name":"v_inv","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#v_inv","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#v_inv":{"description":"Returns the inverse of the eigenvector matrix +V+","name":"v_inv","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#v_inv","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#eigenvectors":{"description":"Returns an array of the eigenvectors","name":"eigenvectors","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#eigenvectors","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#hessenberg_to_real_schur":{"description":"Nonsymmetric reduction from Hessenberg to real Schur form.","name":"hessenberg_to_real_schur","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#hessenberg_to_real_schur","type":"instance_method","visibility":"private"},"Matrix::EigenvalueDecomposition#initialize":{"description":"Constructs the eigenvalue decomposition for a square matrix +A+","name":"initialize","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#initialize","type":"instance_method","visibility":"public","return":[["EigenvalueDecomposition"],"a new instance of EigenvalueDecomposition"]},"Matrix::EigenvalueDecomposition#reduce_to_hessenberg":{"description":"Nonsymmetric reduction to Hessenberg form.","name":"reduce_to_hessenberg","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#reduce_to_hessenberg","type":"instance_method","visibility":"private"},"Matrix::EigenvalueDecomposition#to_a":{"description":"Returns [eigenvector_matrix, eigenvalue_matrix, eigenvector_matrix_inv]","name":"to_a","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#to_a","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#to_ary":{"description":"Returns [eigenvector_matrix, eigenvalue_matrix, eigenvector_matrix_inv]","name":"to_a","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#to_a","type":"instance_method","visibility":"public"},"Matrix::EigenvalueDecomposition#tridiagonalize":{"description":"Symmetric Householder reduction to tridiagonal form.","name":"tridiagonalize","namespace":"Matrix::EigenvalueDecomposition","path":"Matrix::EigenvalueDecomposition#tridiagonalize","type":"instance_method","visibility":"private"},"Matrix::LUPDecomposition":{"description":"For an m-by-n matrix A with m >= n, the LU decomposition is an m-by-n\nunit lower triangular matrix L, an n-by-n upper triangular matrix U,\nand a m-by-m permutation matrix P so that L*U = P*A.\nIf m < n, then L is m-by-m and U is m-by-n.\n\nThe LUP decomposition with pivoting always exists, even if the matrix is\nsingular, so the constructor will never fail.  The primary use of the\nLU decomposition is in the solution of square systems of simultaneous\nlinear equations.  This will fail if singular? returns true.","name":"LUPDecomposition","namespace":"Matrix","path":"Matrix::LUPDecomposition","type":"class","visibility":"public"},"Matrix::LUPDecomposition#det":{"description":"Returns the determinant of +A+, calculated efficiently\nfrom the factorization.","name":"determinant","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#determinant","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#determinant":{"description":"Returns the determinant of +A+, calculated efficiently\nfrom the factorization.","name":"determinant","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#determinant","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#initialize":{"description":"","name":"initialize","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#initialize","type":"instance_method","visibility":"public","return":[["LUPDecomposition"],"a new instance of LUPDecomposition"]},"Matrix::LUPDecomposition#l":{"description":"","name":"l","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#l","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#p":{"description":"Returns the permutation matrix +P+","name":"p","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#p","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#pivots":{"description":"Returns the pivoting indices","name":"pivots","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#pivots","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#singular?":{"description":"Returns +true+ if +U+, and hence +A+, is singular.","name":"singular?","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#singular?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Matrix::LUPDecomposition#solve":{"description":"Returns +m+ so that <tt>A*m = b</tt>,\nor equivalently so that <tt>L*U*m = P*b</tt>\n+b+ can be a Matrix or a Vector","name":"solve","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#solve","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#to_a":{"description":"Returns +L+, +U+, +P+ in an array","name":"to_a","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#to_a","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#to_ary":{"description":"Returns +L+, +U+, +P+ in an array","name":"to_a","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#to_a","type":"instance_method","visibility":"public"},"Matrix::LUPDecomposition#u":{"description":"Returns the upper triangular factor +U+","name":"u","namespace":"Matrix::LUPDecomposition","path":"Matrix::LUPDecomposition#u","type":"instance_method","visibility":"public"},"Matrix::SELECTORS":{"description":"","name":"SELECTORS","namespace":"Matrix","path":"Matrix::SELECTORS","type":"constant","return":null,"visibility":"public"},"Matrix::Scalar":{"description":"Private CLASS","name":"Scalar","namespace":"Matrix","path":"Matrix::Scalar","type":"class","visibility":"public"},"Matrix::Scalar#*":{"description":"","name":"*","namespace":"Matrix::Scalar","path":"Matrix::Scalar#*","type":"instance_method","visibility":"public"},"Matrix::Scalar#**":{"description":"","name":"**","namespace":"Matrix::Scalar","path":"Matrix::Scalar#**","type":"instance_method","visibility":"public"},"Matrix::Scalar#+":{"description":"ARITHMETIC","name":"+","namespace":"Matrix::Scalar","path":"Matrix::Scalar#+","type":"instance_method","visibility":"public"},"Matrix::Scalar#-":{"description":"","name":"-","namespace":"Matrix::Scalar","path":"Matrix::Scalar#-","type":"instance_method","visibility":"public"},"Matrix::Scalar#/":{"description":"","name":"/","namespace":"Matrix::Scalar","path":"Matrix::Scalar#/","type":"instance_method","visibility":"public"},"Matrix::Scalar#initialize":{"description":"","name":"initialize","namespace":"Matrix::Scalar","path":"Matrix::Scalar#initialize","type":"instance_method","visibility":"public","return":[["Scalar"],"a new instance of Scalar"]},"Vector":{"description":"The +Vector+ class represents a mathematical vector, which is useful in its own right, and\nalso constitutes a row or column of a Matrix.\n\n== Method Catalogue\n\nTo create a Vector:\n* Vector.[](*array)\n* Vector.elements(array, copy = true)\n* Vector.basis(size: n, index: k)\n\nTo access elements:\n* #[](i)\n\nTo enumerate the elements:\n* #each2(v)\n* #collect2(v)\n\nProperties of vectors:\n* #angle_with(v)\n* Vector.independent?(*vs)\n* #independent?(*vs)\n\nVector arithmetic:\n* #*(x) \"is matrix or number\"\n* #+(v)\n* #-(v)\n* #+@\n* #-@\n\nVector functions:\n* #inner_product(v), dot(v)\n* #cross_product(v), cross(v)\n* #collect\n* #magnitude\n* #map\n* #map2(v)\n* #norm\n* #normalize\n* #r\n* #size\n\nConversion to other data types:\n* #covector\n* #to_a\n* #coerce(other)\n\nString representations:\n* #to_s\n* #inspect","name":"Vector","namespace":"","path":"Vector","type":"class","visibility":"public"},"Vector#*":{"description":"Multiplies the vector by +x+, where +x+ is a number or another vector.","name":"*","namespace":"Vector","path":"Vector#*","type":"instance_method","visibility":"public"},"Vector#+":{"description":"Vector addition.","name":"+","namespace":"Vector","path":"Vector#+","type":"instance_method","visibility":"public"},"Vector#+@":{"description":"","name":"+@","namespace":"Vector","path":"Vector#+@","type":"instance_method","visibility":"public"},"Vector#-":{"description":"Vector subtraction.","name":"-","namespace":"Vector","path":"Vector#-","type":"instance_method","visibility":"public"},"Vector#-@":{"description":"","name":"-@","namespace":"Vector","path":"Vector#-@","type":"instance_method","visibility":"public"},"Vector#/":{"description":"Vector division.","name":"/","namespace":"Vector","path":"Vector#/","type":"instance_method","visibility":"public"},"Vector#==":{"description":"Returns +true+ iff the two vectors have the same elements in the same order.","name":"==","namespace":"Vector","path":"Vector#==","type":"instance_method","visibility":"public"},"Vector#[]":{"description":"Returns element number +i+ (starting at zero) of the vector.","name":"component","namespace":"Vector","path":"Vector#component","type":"instance_method","visibility":"public"},"Vector#element":{"description":"Returns element number +i+ (starting at zero) of the vector.","name":"element","namespace":"Vector","path":"Vector#element","type":"instance_method","visibility":"public"},"Vector#component":{"description":"Returns element number +i+ (starting at zero) of the vector.","name":"component","namespace":"Vector","path":"Vector#component","type":"instance_method","visibility":"public"},"Vector#[]=":{"description":"","name":"set_component","namespace":"Vector","path":"Vector#set_component","type":"instance_method","visibility":"public"},"Vector#set_element":{"description":"","name":"set_element","namespace":"Vector","path":"Vector#set_element","type":"instance_method","visibility":"private"},"Vector#set_component":{"description":"","name":"set_component","namespace":"Vector","path":"Vector#set_component","type":"instance_method","visibility":"private"},"Vector#angle_with":{"description":"Returns an angle with another vector. Result is within the [0...Math::PI].\n  Vector[1,0].angle_with(Vector[0,1])\n  # => Math::PI / 2","name":"angle_with","namespace":"Vector","path":"Vector#angle_with","type":"instance_method","visibility":"public"},"Vector#clone":{"description":"Returns a copy of the vector.","name":"clone","namespace":"Vector","path":"Vector#clone","type":"instance_method","visibility":"public"},"Vector#coerce":{"description":"The coerce method provides support for Ruby type coercion.\nThis coercion mechanism is used by Ruby to handle mixed-type\nnumeric operations: it is intended to find a compatible common\ntype between the two operands of the operator.\nSee also Numeric#coerce.","name":"coerce","namespace":"Vector","path":"Vector#coerce","type":"instance_method","visibility":"public"},"Vector#collect":{"description":"Like Array#collect.","name":"map","namespace":"Vector","path":"Vector#map","type":"instance_method","visibility":"public"},"Vector#map":{"description":"Like Array#collect.","name":"map","namespace":"Vector","path":"Vector#map","type":"instance_method","visibility":"public"},"Vector#collect2":{"description":"Collects (as in Enumerable#collect) over the elements of this vector and +v+\nin conjunction.","name":"collect2","namespace":"Vector","path":"Vector#collect2","type":"instance_method","visibility":"public"},"Vector#covector":{"description":"Creates a single-row matrix from this vector.","name":"covector","namespace":"Vector","path":"Vector#covector","type":"instance_method","visibility":"public"},"Vector#cross":{"description":"Returns the cross product of this vector with the others.\n  Vector[1, 0, 0].cross_product Vector[0, 1, 0]   => Vector[0, 0, 1]\n\nIt is generalized to other dimensions to return a vector perpendicular\nto the arguments.\n  Vector[1, 2].cross_product # => Vector[-2, 1]\n  Vector[1, 0, 0, 0].cross_product(\n     Vector[0, 1, 0, 0],\n     Vector[0, 0, 1, 0]\n  )  #=> Vector[0, 0, 0, 1]","name":"cross","namespace":"Vector","path":"Vector#cross","type":"instance_method","visibility":"public"},"Vector#cross_product":{"description":"Returns the cross product of this vector with the others.\n  Vector[1, 0, 0].cross_product Vector[0, 1, 0]   => Vector[0, 0, 1]\n\nIt is generalized to other dimensions to return a vector perpendicular\nto the arguments.\n  Vector[1, 2].cross_product # => Vector[-2, 1]\n  Vector[1, 0, 0, 0].cross_product(\n     Vector[0, 1, 0, 0],\n     Vector[0, 0, 1, 0]\n  )  #=> Vector[0, 0, 0, 1]","name":"cross","namespace":"Vector","path":"Vector#cross","type":"instance_method","visibility":"public"},"Vector#dot":{"description":"Returns the inner product of this vector with the other.\n  Vector[4,7].inner_product Vector[10,1]  => 47","name":"dot","namespace":"Vector","path":"Vector#dot","type":"instance_method","visibility":"public"},"Vector#each":{"description":"Iterate over the elements of this vector","name":"each","namespace":"Vector","path":"Vector#each","type":"instance_method","visibility":"public"},"Vector#each2":{"description":"Iterate over the elements of this vector and +v+ in conjunction.","name":"each2","namespace":"Vector","path":"Vector#each2","type":"instance_method","visibility":"public"},"Vector#elements":{"description":"Returns the value of attribute elements","name":"elements","namespace":"Vector","path":"Vector#elements","type":"instance_method","visibility":"protected"},"Vector#elements_to_f":{"description":"","name":"elements_to_f","namespace":"Vector","path":"Vector#elements_to_f","type":"instance_method","visibility":"public"},"Vector#elements_to_i":{"description":"","name":"elements_to_i","namespace":"Vector","path":"Vector#elements_to_i","type":"instance_method","visibility":"public"},"Vector#elements_to_r":{"description":"","name":"elements_to_r","namespace":"Vector","path":"Vector#elements_to_r","type":"instance_method","visibility":"public"},"Vector#eql?":{"description":"","name":"eql?","namespace":"Vector","path":"Vector#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Vector#hash":{"description":"Returns a hash-code for the vector.","name":"hash","namespace":"Vector","path":"Vector#hash","type":"instance_method","visibility":"public"},"Vector#independent?":{"description":"Returns +true+ iff all of vectors are linearly independent.\n\n  Vector[1,0].independent?(Vector[0,1])\n    => true\n\n  Vector[1,2].independent?(Vector[2,4])\n    => false","name":"independent?","namespace":"Vector","path":"Vector#independent?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Vector#initialize":{"description":"Vector.new is private; use Vector[] or Vector.elements to create.","name":"initialize","namespace":"Vector","path":"Vector#initialize","type":"instance_method","visibility":"public","return":[["Vector"],"a new instance of Vector"]},"Vector#inner_product":{"description":"Returns the inner product of this vector with the other.\n  Vector[4,7].inner_product Vector[10,1]  => 47","name":"dot","namespace":"Vector","path":"Vector#dot","type":"instance_method","visibility":"public"},"Vector#inspect":{"description":"Overrides Object#inspect","name":"inspect","namespace":"Vector","path":"Vector#inspect","type":"instance_method","visibility":"public"},"Vector#magnitude":{"description":"Returns the modulus (Pythagorean distance) of the vector.\n  Vector[5,8,2].r => 9.643650761","name":"norm","namespace":"Vector","path":"Vector#norm","type":"instance_method","visibility":"public"},"Vector#r":{"description":"Returns the modulus (Pythagorean distance) of the vector.\n  Vector[5,8,2].r => 9.643650761","name":"r","namespace":"Vector","path":"Vector#r","type":"instance_method","visibility":"public"},"Vector#norm":{"description":"Returns the modulus (Pythagorean distance) of the vector.\n  Vector[5,8,2].r => 9.643650761","name":"norm","namespace":"Vector","path":"Vector#norm","type":"instance_method","visibility":"public"},"Vector#map2":{"description":"Like Vector#collect2, but returns a Vector instead of an Array.","name":"map2","namespace":"Vector","path":"Vector#map2","type":"instance_method","visibility":"public"},"Vector#normalize":{"description":"Returns a new vector with the same direction but with norm 1.\n  v = Vector[5,8,2].normalize\n  # => Vector[0.5184758473652127, 0.8295613557843402, 0.20739033894608505]\n  v.norm => 1.0","name":"normalize","namespace":"Vector","path":"Vector#normalize","type":"instance_method","visibility":"public"},"Vector#size":{"description":"Returns the number of elements in the vector.","name":"size","namespace":"Vector","path":"Vector#size","type":"instance_method","visibility":"public"},"Vector#to_a":{"description":"Returns the elements of the vector in an array.","name":"to_a","namespace":"Vector","path":"Vector#to_a","type":"instance_method","visibility":"public"},"Vector#to_s":{"description":"Overrides Object#to_s","name":"to_s","namespace":"Vector","path":"Vector#to_s","type":"instance_method","visibility":"public"},"Vector.[]":{"description":"Creates a Vector from a list of elements.\n  Vector[7, 4, ...]","name":"[]","namespace":"Vector","path":"Vector.[]","type":"class_method","visibility":"public"},"Vector.basis":{"description":"Returns a standard basis +n+-vector, where k is the index.\n\n   Vector.basis(size:, index:) # => Vector[0, 1, 0]","name":"basis","namespace":"Vector","path":"Vector.basis","type":"class_method","visibility":"public"},"Vector.elements":{"description":"Creates a vector from an Array.  The optional second argument specifies\nwhether the array itself or a copy is used internally.","name":"elements","namespace":"Vector","path":"Vector.elements","type":"class_method","visibility":"public"},"Vector.independent?":{"description":"Returns +true+ iff all of vectors are linearly independent.\n\n  Vector.independent?(Vector[1,0], Vector[0,1])\n    => true\n\n  Vector.independent?(Vector[1,2], Vector[2,4])\n    => false","name":"independent?","namespace":"Vector","path":"Vector.independent?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Vector::ZeroVectorError":{"description":"","name":"ZeroVectorError","namespace":"Vector","path":"Vector::ZeroVectorError","type":"class","visibility":"public"},"Observable":{"description":"The Observer pattern (also known as publish/subscribe) provides a simple\nmechanism for one object to inform a set of interested third-party objects\nwhen its state changes.\n\n== Mechanism\n\nThe notifying class mixes in the +Observable+\nmodule, which provides the methods for managing the associated observer\nobjects.\n\nThe observable object must:\n* assert that it has +#changed+\n* call +#notify_observers+\n\nAn observer subscribes to updates using Observable#add_observer, which also\nspecifies the method called via #notify_observers. The default method for\n#notify_observers is #update.\n\n=== Example\n\nThe following example demonstrates this nicely.  A +Ticker+, when run,\ncontinually receives the stock +Price+ for its <tt>@symbol</tt>.  A +Warner+\nis a general observer of the price, and two warners are demonstrated, a\n+WarnLow+ and a +WarnHigh+, which print a warning if the price is below or\nabove their set limits, respectively.\n\nThe +update+ callback allows the warners to run without being explicitly\ncalled.  The system is set up with the +Ticker+ and several observers, and the\nobservers do their duty without the top-level code having to interfere.\n\nNote that the contract between publisher and subscriber (observable and\nobserver) is not declared or enforced.  The +Ticker+ publishes a time and a\nprice, and the warners receive that.  But if you don't ensure that your\ncontracts are correct, nothing else can warn you.\n\n  require \"observer\"\n\n  class Ticker          ### Periodically fetch a stock price.\n    include Observable\n\n    def initialize(symbol)\n      @symbol = symbol\n    end\n\n    def run\n      last_price = nil\n      loop do\n        price = Price.fetch(@symbol)\n        print \"Current price: #{price}\\n\"\n        if price != last_price\n          changed                 # notify observers\n          last_price = price\n          notify_observers(Time.now, price)\n        end\n        sleep 1\n      end\n    end\n  end\n\n  class Price           ### A mock class to fetch a stock price (60 - 140).\n    def self.fetch(symbol)\n      60 + rand(80)\n    end\n  end\n\n  class Warner          ### An abstract observer of Ticker objects.\n    def initialize(ticker, limit)\n      @limit = limit\n      ticker.add_observer(self)\n    end\n  end\n\n  class WarnLow < Warner\n    def update(time, price)       # callback for observer\n      if price < @limit\n        print \"--- #{time.to_s}: Price below #@limit: #{price}\\n\"\n      end\n    end\n  end\n\n  class WarnHigh < Warner\n    def update(time, price)       # callback for observer\n      if price > @limit\n        print \"+++ #{time.to_s}: Price above #@limit: #{price}\\n\"\n      end\n    end\n  end\n\n  ticker = Ticker.new(\"MSFT\")\n  WarnLow.new(ticker, 80)\n  WarnHigh.new(ticker, 120)\n  ticker.run\n\nProduces:\n\n  Current price: 83\n  Current price: 75\n  --- Sun Jun 09 00:10:25 CDT 2002: Price below 80: 75\n  Current price: 90\n  Current price: 134\n  +++ Sun Jun 09 00:10:25 CDT 2002: Price above 120: 134\n  Current price: 134\n  Current price: 112\n  Current price: 79\n  --- Sun Jun 09 00:10:25 CDT 2002: Price below 80: 79","name":"Observable","namespace":"","path":"Observable","type":"module","visibility":"public"},"Observable#add_observer":{"description":"Add +observer+ as an observer on this object. so that it will receive\nnotifications.\n\n+observer+:: the object that will be notified of changes.\n+func+:: Symbol naming the method that will be called when this Observable\n         has changes.\n\n         This method must return true for +observer.respond_to?+ and will\n         receive <tt>*arg</tt> when #notify_observers is called, where\n         <tt>*arg</tt> is the value passed to #notify_observers by this\n         Observable","name":"add_observer","namespace":"Observable","path":"Observable#add_observer","type":"module_function","visibility":"public"},"Observable#changed":{"description":"Set the changed state of this object.  Notifications will be sent only if\nthe changed +state+ is +true+.\n\n+state+:: Boolean indicating the changed state of this Observable.","name":"changed","namespace":"Observable","path":"Observable#changed","type":"module_function","visibility":"public"},"Observable#changed?":{"description":"Returns true if this object's state has been changed since the last\n#notify_observers call.","name":"changed?","namespace":"Observable","path":"Observable#changed?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Observable#count_observers":{"description":"Return the number of observers associated with this object.","name":"count_observers","namespace":"Observable","path":"Observable#count_observers","type":"module_function","visibility":"public"},"Observable#delete_observer":{"description":"Remove +observer+ as an observer on this object so that it will no longer\nreceive notifications.\n\n+observer+:: An observer of this Observable","name":"delete_observer","namespace":"Observable","path":"Observable#delete_observer","type":"module_function","visibility":"public"},"Observable#delete_observers":{"description":"Remove all observers associated with this object.","name":"delete_observers","namespace":"Observable","path":"Observable#delete_observers","type":"module_function","visibility":"public"},"Observable#notify_observers":{"description":"Notify observers of a change in state *if* this object's changed state is\n+true+.\n\nThis will invoke the method named in #add_observer, passing <tt>*arg</tt>.\nThe changed state is then set to +false+.\n\n<tt>*arg</tt>:: Any arguments to pass to the observers.","name":"notify_observers","namespace":"Observable","path":"Observable#notify_observers","type":"module_function","visibility":"public"},"Open3":{"description":"Open3 grants you access to stdin, stdout, stderr and a thread to wait for the\nchild process when running another program.\nYou can specify various attributes, redirections, current directory, etc., of\nthe program in the same way as for Process.spawn.\n\n- Open3.popen3 : pipes for stdin, stdout, stderr\n- Open3.popen2 : pipes for stdin, stdout\n- Open3.popen2e : pipes for stdin, merged stdout and stderr\n- Open3.capture3 : give a string for stdin; get strings for stdout, stderr\n- Open3.capture2 : give a string for stdin; get a string for stdout\n- Open3.capture2e : give a string for stdin; get a string for merged stdout and stderr\n- Open3.pipeline_rw : pipes for first stdin and last stdout of a pipeline\n- Open3.pipeline_r : pipe for last stdout of a pipeline\n- Open3.pipeline_w : pipe for first stdin of a pipeline\n- Open3.pipeline_start : run a pipeline without waiting\n- Open3.pipeline : run a pipeline and wait for its completion","name":"Open3","namespace":"","path":"Open3","type":"module","visibility":"public"},"Open3#capture2":{"description":"Open3.capture2 captures the standard output of a command.\n\n  stdout_str, status = Open3.capture2([env,] cmd... [, opts])\n\nThe arguments env, cmd and opts are passed to Open3.popen3 except\n<code>opts[:stdin_data]</code> and <code>opts[:binmode]</code>.  See Process.spawn.\n\nIf <code>opts[:stdin_data]</code> is specified, it is sent to the command's standard input.\n\nIf <code>opts[:binmode]</code> is true, internal pipes are set to binary mode.\n\nExample:\n\n  # factor is a command for integer factorization.\n  o, s = Open3.capture2(\"factor\", :stdin_data=>\"42\")\n  p o #=> \"42: 2 3 7\\n\"\n\n  # generate x**2 graph in png using gnuplot.\n  gnuplot_commands = <<\"End\"\n    set terminal png\n    plot x**2, \"-\" with lines\n    1 14\n    2 1\n    3 8\n    4 5\n    e\n  End\n  image, s = Open3.capture2(\"gnuplot\", :stdin_data=>gnuplot_commands, :binmode=>true)","name":"capture2","namespace":"Open3","path":"Open3#capture2","type":"module_function","visibility":"private"},"Open3#capture2e":{"description":"Open3.capture2e captures the standard output and the standard error of a command.\n\n  stdout_and_stderr_str, status = Open3.capture2e([env,] cmd... [, opts])\n\nThe arguments env, cmd and opts are passed to Open3.popen3 except\n<code>opts[:stdin_data]</code> and <code>opts[:binmode]</code>.  See Process.spawn.\n\nIf <code>opts[:stdin_data]</code> is specified, it is sent to the command's standard input.\n\nIf <code>opts[:binmode]</code> is true, internal pipes are set to binary mode.\n\nExample:\n\n  # capture make log\n  make_log, s = Open3.capture2e(\"make\")","name":"capture2e","namespace":"Open3","path":"Open3#capture2e","type":"module_function","visibility":"private"},"Open3#capture3":{"description":"Open3.capture3 captures the standard output and the standard error of a command.\n\n  stdout_str, stderr_str, status = Open3.capture3([env,] cmd... [, opts])\n\nThe arguments env, cmd and opts are passed to Open3.popen3 except\n<code>opts[:stdin_data]</code> and <code>opts[:binmode]</code>.  See Process.spawn.\n\nIf <code>opts[:stdin_data]</code> is specified, it is sent to the command's standard input.\n\nIf <code>opts[:binmode]</code> is true, internal pipes are set to binary mode.\n\nExamples:\n\n  # dot is a command of graphviz.\n  graph = <<'End'\n    digraph g {\n      a -> b\n    }\n  End\n  drawn_graph, dot_log = Open3.capture3(\"dot -v\", :stdin_data=>graph)\n\n  o, e, s = Open3.capture3(\"echo abc; sort >&2\", :stdin_data=>\"foo\\nbar\\nbaz\\n\")\n  p o #=> \"abc\\n\"\n  p e #=> \"bar\\nbaz\\nfoo\\n\"\n  p s #=> #<Process::Status: pid 32682 exit 0>\n\n  # generate a thumbnail image using the convert command of ImageMagick.\n  # However, if the image is really stored in a file,\n  # system(\"convert\", \"-thumbnail\", \"80\", \"png:#{filename}\", \"png:-\") is better\n  # because of reduced memory consumption.\n  # But if the image is stored in a DB or generated by the gnuplot Open3.capture2 example,\n  # Open3.capture3 should be considered.\n  #\n  image = File.read(\"/usr/share/openclipart/png/animals/mammals/sheep-md-v0.1.png\", :binmode=>true)\n  thumbnail, err, s = Open3.capture3(\"convert -thumbnail 80 png:- png:-\", :stdin_data=>image, :binmode=>true)\n  if s.success?\n    STDOUT.binmode; print thumbnail\n  end","name":"capture3","namespace":"Open3","path":"Open3#capture3","type":"module_function","visibility":"private"},"Open3#pipeline":{"description":"Open3.pipeline starts a list of commands as a pipeline.\nIt waits for the completion of the commands.\nNo pipes are created for stdin of the first command and\nstdout of the last command.\n\n  status_list = Open3.pipeline(cmd1, cmd2, ... [, opts])\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as Process.spawn.\n\nExample:\n\n  fname = \"/usr/share/man/man1/ruby.1.gz\"\n  p Open3.pipeline([\"zcat\", fname], \"nroff -man\", \"less\")\n  #=> [#<Process::Status: pid 11817 exit 0>,\n  #    #<Process::Status: pid 11820 exit 0>,\n  #    #<Process::Status: pid 11828 exit 0>]\n\n  fname = \"/usr/share/man/man1/ls.1.gz\"\n  Open3.pipeline([\"zcat\", fname], \"nroff -man\", \"colcrt\")\n\n  # convert PDF to PS and send to a printer by lpr\n  pdf_file = \"paper.pdf\"\n  printer = \"printer-name\"\n  Open3.pipeline([\"pdftops\", pdf_file, \"-\"],\n                 [\"lpr\", \"-P#{printer}\"])\n\n  # count lines\n  Open3.pipeline(\"sort\", \"uniq -c\", :in=>\"names.txt\", :out=>\"count\")\n\n  # cyclic pipeline\n  r,w = IO.pipe\n  w.print \"ibase=14\\n10\\n\"\n  Open3.pipeline(\"bc\", \"tee /dev/tty\", :in=>r, :out=>w)\n  #=> 14\n  #   18\n  #   22\n  #   30\n  #   42\n  #   58\n  #   78\n  #   106\n  #   202","name":"pipeline","namespace":"Open3","path":"Open3#pipeline","type":"module_function","visibility":"private"},"Open3#pipeline_r":{"description":"Open3.pipeline_r starts a list of commands as a pipeline with a pipe\nwhich connects to stdout of the last command.\n\n  Open3.pipeline_r(cmd1, cmd2, ... [, opts]) {|last_stdout, wait_threads|\n    ...\n  }\n\n  last_stdout, wait_threads = Open3.pipeline_r(cmd1, cmd2, ... [, opts])\n  ...\n  last_stdout.close\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nExample:\n\n  Open3.pipeline_r(\"zcat /var/log/apache2/access.log.*.gz\",\n                   [{\"LANG\"=>\"C\"}, \"grep\", \"GET /favicon.ico\"],\n                   \"logresolve\") {|o, ts|\n    o.each_line {|line|\n      ...\n    }\n  }\n\n  Open3.pipeline_r(\"yes\", \"head -10\") {|o, ts|\n    p o.read      #=> \"y\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\n\"\n    p ts[0].value #=> #<Process::Status: pid 24910 SIGPIPE (signal 13)>\n    p ts[1].value #=> #<Process::Status: pid 24913 exit 0>\n  }","name":"pipeline_r","namespace":"Open3","path":"Open3#pipeline_r","type":"module_function","visibility":"private"},"Open3#pipeline_run":{"description":":nodoc:","name":"pipeline_run","namespace":"Open3","path":"Open3#pipeline_run","type":"module_function","visibility":"private"},"Open3#pipeline_rw":{"description":"Open3.pipeline_rw starts a list of commands as a pipeline with pipes\nwhich connect to stdin of the first command and stdout of the last command.\n\n  Open3.pipeline_rw(cmd1, cmd2, ... [, opts]) {|first_stdin, last_stdout, wait_threads|\n    ...\n  }\n\n  first_stdin, last_stdout, wait_threads = Open3.pipeline_rw(cmd1, cmd2, ... [, opts])\n  ...\n  first_stdin.close\n  last_stdout.close\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nThe options to pass to Process.spawn are constructed by merging\n+opts+, the last hash element of the array, and\nspecifications for the pipes between each of the commands.\n\nExample:\n\n  Open3.pipeline_rw(\"tr -dc A-Za-z\", \"wc -c\") {|i, o, ts|\n    i.puts \"All persons more than a mile high to leave the court.\"\n    i.close\n    p o.gets #=> \"42\\n\"\n  }\n\n  Open3.pipeline_rw(\"sort\", \"cat -n\") {|stdin, stdout, wait_thrs|\n    stdin.puts \"foo\"\n    stdin.puts \"bar\"\n    stdin.puts \"baz\"\n    stdin.close     # send EOF to sort.\n    p stdout.read   #=> \"     1\\tbar\\n     2\\tbaz\\n     3\\tfoo\\n\"\n  }","name":"pipeline_rw","namespace":"Open3","path":"Open3#pipeline_rw","type":"module_function","visibility":"private"},"Open3#pipeline_start":{"description":"Open3.pipeline_start starts a list of commands as a pipeline.\nNo pipes are created for stdin of the first command and\nstdout of the last command.\n\n  Open3.pipeline_start(cmd1, cmd2, ... [, opts]) {|wait_threads|\n    ...\n  }\n\n  wait_threads = Open3.pipeline_start(cmd1, cmd2, ... [, opts])\n  ...\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nExample:\n\n  # Run xeyes in 10 seconds.\n  Open3.pipeline_start(\"xeyes\") {|ts|\n    sleep 10\n    t = ts[0]\n    Process.kill(\"TERM\", t.pid)\n    p t.value #=> #<Process::Status: pid 911 SIGTERM (signal 15)>\n  }\n\n  # Convert pdf to ps and send it to a printer.\n  # Collect error message of pdftops and lpr.\n  pdf_file = \"paper.pdf\"\n  printer = \"printer-name\"\n  err_r, err_w = IO.pipe\n  Open3.pipeline_start([\"pdftops\", pdf_file, \"-\"],\n                       [\"lpr\", \"-P#{printer}\"],\n                       :err=>err_w) {|ts|\n    err_w.close\n    p err_r.read # error messages of pdftops and lpr.\n  }","name":"pipeline_start","namespace":"Open3","path":"Open3#pipeline_start","type":"module_function","visibility":"private"},"Open3#pipeline_w":{"description":"Open3.pipeline_w starts a list of commands as a pipeline with a pipe\nwhich connects to stdin of the first command.\n\n  Open3.pipeline_w(cmd1, cmd2, ... [, opts]) {|first_stdin, wait_threads|\n    ...\n  }\n\n  first_stdin, wait_threads = Open3.pipeline_w(cmd1, cmd2, ... [, opts])\n  ...\n  first_stdin.close\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nExample:\n\n  Open3.pipeline_w(\"bzip2 -c\", :out=>\"/tmp/hello.bz2\") {|i, ts|\n    i.puts \"hello\"\n  }","name":"pipeline_w","namespace":"Open3","path":"Open3#pipeline_w","type":"module_function","visibility":"private"},"Open3#popen2":{"description":"Open3.popen2 is similar to Open3.popen3 except that it doesn't create a pipe for\nthe standard error stream.\n\nBlock form:\n\n  Open3.popen2([env,] cmd... [, opts]) {|stdin, stdout, wait_thr|\n    pid = wait_thr.pid # pid of the started process.\n    ...\n    exit_status = wait_thr.value # Process::Status object returned.\n  }\n\nNon-block form:\n\n  stdin, stdout, wait_thr = Open3.popen2([env,] cmd... [, opts])\n  ...\n  stdin.close  # stdin and stdout should be closed explicitly in this form.\n  stdout.close\n\nSee Process.spawn for the optional hash arguments _env_ and _opts_.\n\nExample:\n\n  Open3.popen2(\"wc -c\") {|i,o,t|\n    i.print \"answer to life the universe and everything\"\n    i.close\n    p o.gets #=> \"42\\n\"\n  }\n\n  Open3.popen2(\"bc -q\") {|i,o,t|\n    i.puts \"obase=13\"\n    i.puts \"6 * 9\"\n    p o.gets #=> \"42\\n\"\n  }\n\n  Open3.popen2(\"dc\") {|i,o,t|\n    i.print \"42P\"\n    i.close\n    p o.read #=> \"*\"\n  }","name":"popen2","namespace":"Open3","path":"Open3#popen2","type":"module_function","visibility":"private"},"Open3#popen2e":{"description":"Open3.popen2e is similar to Open3.popen3 except that it merges\nthe standard output stream and the standard error stream.\n\nBlock form:\n\n  Open3.popen2e([env,] cmd... [, opts]) {|stdin, stdout_and_stderr, wait_thr|\n    pid = wait_thr.pid # pid of the started process.\n    ...\n    exit_status = wait_thr.value # Process::Status object returned.\n  }\n\nNon-block form:\n\n  stdin, stdout_and_stderr, wait_thr = Open3.popen2e([env,] cmd... [, opts])\n  ...\n  stdin.close  # stdin and stdout_and_stderr should be closed explicitly in this form.\n  stdout_and_stderr.close\n\nSee Process.spawn for the optional hash arguments _env_ and _opts_.\n\nExample:\n  # check gcc warnings\n  source = \"foo.c\"\n  Open3.popen2e(\"gcc\", \"-Wall\", source) {|i,oe,t|\n    oe.each {|line|\n      if /warning/ =~ line\n        ...\n      end\n    }\n  }","name":"popen2e","namespace":"Open3","path":"Open3#popen2e","type":"module_function","visibility":"private"},"Open3#popen3":{"description":"Open stdin, stdout, and stderr streams and start external executable.\nIn addition, a thread to wait for the started process is created.\nThe thread has a pid method and a thread variable :pid which is the pid of\nthe started process.\n\nBlock form:\n\n  Open3.popen3([env,] cmd... [, opts]) {|stdin, stdout, stderr, wait_thr|\n    pid = wait_thr.pid # pid of the started process.\n    ...\n    exit_status = wait_thr.value # Process::Status object returned.\n  }\n\nNon-block form:\n\n  stdin, stdout, stderr, wait_thr = Open3.popen3([env,] cmd... [, opts])\n  pid = wait_thr[:pid]  # pid of the started process\n  ...\n  stdin.close  # stdin, stdout and stderr should be closed explicitly in this form.\n  stdout.close\n  stderr.close\n  exit_status = wait_thr.value  # Process::Status object returned.\n\nThe parameters env, cmd, and opts are passed to Process.spawn.\nA commandline string and a list of argument strings can be accepted as follows:\n\n  Open3.popen3(\"echo abc\") {|i, o, e, t| ... }\n  Open3.popen3(\"echo\", \"abc\") {|i, o, e, t| ... }\n  Open3.popen3([\"echo\", \"argv0\"], \"abc\") {|i, o, e, t| ... }\n\nIf the last parameter, opts, is a Hash, it is recognized as an option for Process.spawn.\n\n  Open3.popen3(\"pwd\", :chdir=>\"/\") {|i,o,e,t|\n    p o.read.chomp #=> \"/\"\n  }\n\nwait_thr.value waits for the termination of the process.\nThe block form also waits for the process when it returns.\n\nClosing stdin, stdout and stderr does not wait for the process to complete.\n\nYou should be careful to avoid deadlocks.\nSince pipes are fixed length buffers,\nOpen3.popen3(\"prog\") {|i, o, e, t| o.read } deadlocks if\nthe program generates too much output on stderr.\nYou should read stdout and stderr simultaneously (using threads or IO.select).\nHowever, if you don't need stderr output, you can use Open3.popen2.\nIf merged stdout and stderr output is not a problem, you can use Open3.popen2e.\nIf you really need stdout and stderr output as separate strings, you can consider Open3.capture3.","name":"popen3","namespace":"Open3","path":"Open3#popen3","type":"module_function","visibility":"private"},"Open3#popen_run":{"description":":nodoc:","name":"popen_run","namespace":"Open3","path":"Open3#popen_run","type":"module_function","visibility":"private"},"Open3.capture2":{"description":"Open3.capture2 captures the standard output of a command.\n\n  stdout_str, status = Open3.capture2([env,] cmd... [, opts])\n\nThe arguments env, cmd and opts are passed to Open3.popen3 except\n<code>opts[:stdin_data]</code> and <code>opts[:binmode]</code>.  See Process.spawn.\n\nIf <code>opts[:stdin_data]</code> is specified, it is sent to the command's standard input.\n\nIf <code>opts[:binmode]</code> is true, internal pipes are set to binary mode.\n\nExample:\n\n  # factor is a command for integer factorization.\n  o, s = Open3.capture2(\"factor\", :stdin_data=>\"42\")\n  p o #=> \"42: 2 3 7\\n\"\n\n  # generate x**2 graph in png using gnuplot.\n  gnuplot_commands = <<\"End\"\n    set terminal png\n    plot x**2, \"-\" with lines\n    1 14\n    2 1\n    3 8\n    4 5\n    e\n  End\n  image, s = Open3.capture2(\"gnuplot\", :stdin_data=>gnuplot_commands, :binmode=>true)","name":"capture2","namespace":"Open3","path":"Open3.capture2","type":"module_function","visibility":"public"},"Open3.capture2e":{"description":"Open3.capture2e captures the standard output and the standard error of a command.\n\n  stdout_and_stderr_str, status = Open3.capture2e([env,] cmd... [, opts])\n\nThe arguments env, cmd and opts are passed to Open3.popen3 except\n<code>opts[:stdin_data]</code> and <code>opts[:binmode]</code>.  See Process.spawn.\n\nIf <code>opts[:stdin_data]</code> is specified, it is sent to the command's standard input.\n\nIf <code>opts[:binmode]</code> is true, internal pipes are set to binary mode.\n\nExample:\n\n  # capture make log\n  make_log, s = Open3.capture2e(\"make\")","name":"capture2e","namespace":"Open3","path":"Open3.capture2e","type":"module_function","visibility":"public"},"Open3.capture3":{"description":"Open3.capture3 captures the standard output and the standard error of a command.\n\n  stdout_str, stderr_str, status = Open3.capture3([env,] cmd... [, opts])\n\nThe arguments env, cmd and opts are passed to Open3.popen3 except\n<code>opts[:stdin_data]</code> and <code>opts[:binmode]</code>.  See Process.spawn.\n\nIf <code>opts[:stdin_data]</code> is specified, it is sent to the command's standard input.\n\nIf <code>opts[:binmode]</code> is true, internal pipes are set to binary mode.\n\nExamples:\n\n  # dot is a command of graphviz.\n  graph = <<'End'\n    digraph g {\n      a -> b\n    }\n  End\n  drawn_graph, dot_log = Open3.capture3(\"dot -v\", :stdin_data=>graph)\n\n  o, e, s = Open3.capture3(\"echo abc; sort >&2\", :stdin_data=>\"foo\\nbar\\nbaz\\n\")\n  p o #=> \"abc\\n\"\n  p e #=> \"bar\\nbaz\\nfoo\\n\"\n  p s #=> #<Process::Status: pid 32682 exit 0>\n\n  # generate a thumbnail image using the convert command of ImageMagick.\n  # However, if the image is really stored in a file,\n  # system(\"convert\", \"-thumbnail\", \"80\", \"png:#{filename}\", \"png:-\") is better\n  # because of reduced memory consumption.\n  # But if the image is stored in a DB or generated by the gnuplot Open3.capture2 example,\n  # Open3.capture3 should be considered.\n  #\n  image = File.read(\"/usr/share/openclipart/png/animals/mammals/sheep-md-v0.1.png\", :binmode=>true)\n  thumbnail, err, s = Open3.capture3(\"convert -thumbnail 80 png:- png:-\", :stdin_data=>image, :binmode=>true)\n  if s.success?\n    STDOUT.binmode; print thumbnail\n  end","name":"capture3","namespace":"Open3","path":"Open3.capture3","type":"module_function","visibility":"public"},"Open3.pipeline":{"description":"Open3.pipeline starts a list of commands as a pipeline.\nIt waits for the completion of the commands.\nNo pipes are created for stdin of the first command and\nstdout of the last command.\n\n  status_list = Open3.pipeline(cmd1, cmd2, ... [, opts])\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as Process.spawn.\n\nExample:\n\n  fname = \"/usr/share/man/man1/ruby.1.gz\"\n  p Open3.pipeline([\"zcat\", fname], \"nroff -man\", \"less\")\n  #=> [#<Process::Status: pid 11817 exit 0>,\n  #    #<Process::Status: pid 11820 exit 0>,\n  #    #<Process::Status: pid 11828 exit 0>]\n\n  fname = \"/usr/share/man/man1/ls.1.gz\"\n  Open3.pipeline([\"zcat\", fname], \"nroff -man\", \"colcrt\")\n\n  # convert PDF to PS and send to a printer by lpr\n  pdf_file = \"paper.pdf\"\n  printer = \"printer-name\"\n  Open3.pipeline([\"pdftops\", pdf_file, \"-\"],\n                 [\"lpr\", \"-P#{printer}\"])\n\n  # count lines\n  Open3.pipeline(\"sort\", \"uniq -c\", :in=>\"names.txt\", :out=>\"count\")\n\n  # cyclic pipeline\n  r,w = IO.pipe\n  w.print \"ibase=14\\n10\\n\"\n  Open3.pipeline(\"bc\", \"tee /dev/tty\", :in=>r, :out=>w)\n  #=> 14\n  #   18\n  #   22\n  #   30\n  #   42\n  #   58\n  #   78\n  #   106\n  #   202","name":"pipeline","namespace":"Open3","path":"Open3.pipeline","type":"module_function","visibility":"public"},"Open3.pipeline_r":{"description":"Open3.pipeline_r starts a list of commands as a pipeline with a pipe\nwhich connects to stdout of the last command.\n\n  Open3.pipeline_r(cmd1, cmd2, ... [, opts]) {|last_stdout, wait_threads|\n    ...\n  }\n\n  last_stdout, wait_threads = Open3.pipeline_r(cmd1, cmd2, ... [, opts])\n  ...\n  last_stdout.close\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nExample:\n\n  Open3.pipeline_r(\"zcat /var/log/apache2/access.log.*.gz\",\n                   [{\"LANG\"=>\"C\"}, \"grep\", \"GET /favicon.ico\"],\n                   \"logresolve\") {|o, ts|\n    o.each_line {|line|\n      ...\n    }\n  }\n\n  Open3.pipeline_r(\"yes\", \"head -10\") {|o, ts|\n    p o.read      #=> \"y\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\ny\\n\"\n    p ts[0].value #=> #<Process::Status: pid 24910 SIGPIPE (signal 13)>\n    p ts[1].value #=> #<Process::Status: pid 24913 exit 0>\n  }","name":"pipeline_r","namespace":"Open3","path":"Open3.pipeline_r","type":"module_function","visibility":"public"},"Open3.pipeline_run":{"description":":nodoc:","name":"pipeline_run","namespace":"Open3","path":"Open3.pipeline_run","type":"module_function","visibility":"public"},"Open3.pipeline_rw":{"description":"Open3.pipeline_rw starts a list of commands as a pipeline with pipes\nwhich connect to stdin of the first command and stdout of the last command.\n\n  Open3.pipeline_rw(cmd1, cmd2, ... [, opts]) {|first_stdin, last_stdout, wait_threads|\n    ...\n  }\n\n  first_stdin, last_stdout, wait_threads = Open3.pipeline_rw(cmd1, cmd2, ... [, opts])\n  ...\n  first_stdin.close\n  last_stdout.close\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nThe options to pass to Process.spawn are constructed by merging\n+opts+, the last hash element of the array, and\nspecifications for the pipes between each of the commands.\n\nExample:\n\n  Open3.pipeline_rw(\"tr -dc A-Za-z\", \"wc -c\") {|i, o, ts|\n    i.puts \"All persons more than a mile high to leave the court.\"\n    i.close\n    p o.gets #=> \"42\\n\"\n  }\n\n  Open3.pipeline_rw(\"sort\", \"cat -n\") {|stdin, stdout, wait_thrs|\n    stdin.puts \"foo\"\n    stdin.puts \"bar\"\n    stdin.puts \"baz\"\n    stdin.close     # send EOF to sort.\n    p stdout.read   #=> \"     1\\tbar\\n     2\\tbaz\\n     3\\tfoo\\n\"\n  }","name":"pipeline_rw","namespace":"Open3","path":"Open3.pipeline_rw","type":"module_function","visibility":"public"},"Open3.pipeline_start":{"description":"Open3.pipeline_start starts a list of commands as a pipeline.\nNo pipes are created for stdin of the first command and\nstdout of the last command.\n\n  Open3.pipeline_start(cmd1, cmd2, ... [, opts]) {|wait_threads|\n    ...\n  }\n\n  wait_threads = Open3.pipeline_start(cmd1, cmd2, ... [, opts])\n  ...\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nExample:\n\n  # Run xeyes in 10 seconds.\n  Open3.pipeline_start(\"xeyes\") {|ts|\n    sleep 10\n    t = ts[0]\n    Process.kill(\"TERM\", t.pid)\n    p t.value #=> #<Process::Status: pid 911 SIGTERM (signal 15)>\n  }\n\n  # Convert pdf to ps and send it to a printer.\n  # Collect error message of pdftops and lpr.\n  pdf_file = \"paper.pdf\"\n  printer = \"printer-name\"\n  err_r, err_w = IO.pipe\n  Open3.pipeline_start([\"pdftops\", pdf_file, \"-\"],\n                       [\"lpr\", \"-P#{printer}\"],\n                       :err=>err_w) {|ts|\n    err_w.close\n    p err_r.read # error messages of pdftops and lpr.\n  }","name":"pipeline_start","namespace":"Open3","path":"Open3.pipeline_start","type":"module_function","visibility":"public"},"Open3.pipeline_w":{"description":"Open3.pipeline_w starts a list of commands as a pipeline with a pipe\nwhich connects to stdin of the first command.\n\n  Open3.pipeline_w(cmd1, cmd2, ... [, opts]) {|first_stdin, wait_threads|\n    ...\n  }\n\n  first_stdin, wait_threads = Open3.pipeline_w(cmd1, cmd2, ... [, opts])\n  ...\n  first_stdin.close\n\nEach cmd is a string or an array.\nIf it is an array, the elements are passed to Process.spawn.\n\n  cmd:\n    commandline                              command line string which is passed to a shell\n    [env, commandline, opts]                 command line string which is passed to a shell\n    [env, cmdname, arg1, ..., opts]          command name and one or more arguments (no shell)\n    [env, [cmdname, argv0], arg1, ..., opts] command name and arguments including argv[0] (no shell)\n\n  Note that env and opts are optional, as for Process.spawn.\n\nExample:\n\n  Open3.pipeline_w(\"bzip2 -c\", :out=>\"/tmp/hello.bz2\") {|i, ts|\n    i.puts \"hello\"\n  }","name":"pipeline_w","namespace":"Open3","path":"Open3.pipeline_w","type":"module_function","visibility":"public"},"Open3.popen2":{"description":"Open3.popen2 is similar to Open3.popen3 except that it doesn't create a pipe for\nthe standard error stream.\n\nBlock form:\n\n  Open3.popen2([env,] cmd... [, opts]) {|stdin, stdout, wait_thr|\n    pid = wait_thr.pid # pid of the started process.\n    ...\n    exit_status = wait_thr.value # Process::Status object returned.\n  }\n\nNon-block form:\n\n  stdin, stdout, wait_thr = Open3.popen2([env,] cmd... [, opts])\n  ...\n  stdin.close  # stdin and stdout should be closed explicitly in this form.\n  stdout.close\n\nSee Process.spawn for the optional hash arguments _env_ and _opts_.\n\nExample:\n\n  Open3.popen2(\"wc -c\") {|i,o,t|\n    i.print \"answer to life the universe and everything\"\n    i.close\n    p o.gets #=> \"42\\n\"\n  }\n\n  Open3.popen2(\"bc -q\") {|i,o,t|\n    i.puts \"obase=13\"\n    i.puts \"6 * 9\"\n    p o.gets #=> \"42\\n\"\n  }\n\n  Open3.popen2(\"dc\") {|i,o,t|\n    i.print \"42P\"\n    i.close\n    p o.read #=> \"*\"\n  }","name":"popen2","namespace":"Open3","path":"Open3.popen2","type":"module_function","visibility":"public"},"Open3.popen2e":{"description":"Open3.popen2e is similar to Open3.popen3 except that it merges\nthe standard output stream and the standard error stream.\n\nBlock form:\n\n  Open3.popen2e([env,] cmd... [, opts]) {|stdin, stdout_and_stderr, wait_thr|\n    pid = wait_thr.pid # pid of the started process.\n    ...\n    exit_status = wait_thr.value # Process::Status object returned.\n  }\n\nNon-block form:\n\n  stdin, stdout_and_stderr, wait_thr = Open3.popen2e([env,] cmd... [, opts])\n  ...\n  stdin.close  # stdin and stdout_and_stderr should be closed explicitly in this form.\n  stdout_and_stderr.close\n\nSee Process.spawn for the optional hash arguments _env_ and _opts_.\n\nExample:\n  # check gcc warnings\n  source = \"foo.c\"\n  Open3.popen2e(\"gcc\", \"-Wall\", source) {|i,oe,t|\n    oe.each {|line|\n      if /warning/ =~ line\n        ...\n      end\n    }\n  }","name":"popen2e","namespace":"Open3","path":"Open3.popen2e","type":"module_function","visibility":"public"},"Open3.popen3":{"description":"Open stdin, stdout, and stderr streams and start external executable.\nIn addition, a thread to wait for the started process is created.\nThe thread has a pid method and a thread variable :pid which is the pid of\nthe started process.\n\nBlock form:\n\n  Open3.popen3([env,] cmd... [, opts]) {|stdin, stdout, stderr, wait_thr|\n    pid = wait_thr.pid # pid of the started process.\n    ...\n    exit_status = wait_thr.value # Process::Status object returned.\n  }\n\nNon-block form:\n\n  stdin, stdout, stderr, wait_thr = Open3.popen3([env,] cmd... [, opts])\n  pid = wait_thr[:pid]  # pid of the started process\n  ...\n  stdin.close  # stdin, stdout and stderr should be closed explicitly in this form.\n  stdout.close\n  stderr.close\n  exit_status = wait_thr.value  # Process::Status object returned.\n\nThe parameters env, cmd, and opts are passed to Process.spawn.\nA commandline string and a list of argument strings can be accepted as follows:\n\n  Open3.popen3(\"echo abc\") {|i, o, e, t| ... }\n  Open3.popen3(\"echo\", \"abc\") {|i, o, e, t| ... }\n  Open3.popen3([\"echo\", \"argv0\"], \"abc\") {|i, o, e, t| ... }\n\nIf the last parameter, opts, is a Hash, it is recognized as an option for Process.spawn.\n\n  Open3.popen3(\"pwd\", :chdir=>\"/\") {|i,o,e,t|\n    p o.read.chomp #=> \"/\"\n  }\n\nwait_thr.value waits for the termination of the process.\nThe block form also waits for the process when it returns.\n\nClosing stdin, stdout and stderr does not wait for the process to complete.\n\nYou should be careful to avoid deadlocks.\nSince pipes are fixed length buffers,\nOpen3.popen3(\"prog\") {|i, o, e, t| o.read } deadlocks if\nthe program generates too much output on stderr.\nYou should read stdout and stderr simultaneously (using threads or IO.select).\nHowever, if you don't need stderr output, you can use Open3.popen2.\nIf merged stdout and stderr output is not a problem, you can use Open3.popen2e.\nIf you really need stdout and stderr output as separate strings, you can consider Open3.capture3.","name":"popen3","namespace":"Open3","path":"Open3.popen3","type":"module_function","visibility":"public"},"Open3.popen_run":{"description":":nodoc:","name":"popen_run","namespace":"Open3","path":"Open3.popen_run","type":"module_function","visibility":"public"},"Kernel":{"description":"module URI","name":"Kernel","namespace":"","path":"Kernel","type":"module","visibility":"public"},"Kernel#JSON":{"description":"If _object_ is string-like, parse the string and return the parsed result as\na Ruby data structure. Otherwise, generate a JSON text from the Ruby data\nstructure object and return it.\n\nThe _opts_ argument is passed through to generate/parse respectively. See\ngenerate and parse for their documentation.","name":"JSON","namespace":"Kernel","path":"Kernel#JSON","type":"module_function","visibility":"private"},"Kernel#Pathname":{"description":":call-seq:\n Pathname(path)  -> pathname\n\nCreates a new Pathname object from the given string, +path+, and returns\npathname object.\n\nIn order to use this constructor, you must first require the Pathname\nstandard library extension.\n\nrequire 'pathname'\nPathname(\"/home/zzak\")\n#=> #<Pathname:/home/zzak>\n\nSee also Pathname::new for more information.","name":"Pathname","namespace":"Kernel","path":"Kernel#Pathname","type":"module_function","visibility":"public"},"Kernel#URI":{"description":"Returns +uri+ converted to a URI object.","name":"URI","namespace":"Kernel","path":"Kernel#URI","type":"module_function","visibility":"private"},"Kernel#gem":{"description":"Use Kernel#gem to activate a specific version of +gem_name+.\n\n+requirements+ is a list of version requirements that the\nspecified gem must match, most commonly \"= example.version.number\".  See\nGem::Requirement for how to specify a version requirement.\n\nIf you will be activating the latest version of a gem, there is no need to\ncall Kernel#gem, Kernel#require will do the right thing for you.\n\nKernel#gem returns true if the gem was activated, otherwise false.  If the\ngem could not be found, didn't match the version requirements, or a\ndifferent version was already activated, an exception will be raised.\n\nKernel#gem should be called *before* any require statements (otherwise\nRubyGems may load a conflicting library version).\n\nKernel#gem only loads prerelease versions when prerelease +requirements+\nare given:\n\n  gem 'rake', '>= 1.1.a', '< 2'\n\nIn older RubyGems versions, the environment variable GEM_SKIP could be\nused to skip activation of specified gems, for example to test out changes\nthat haven't been installed yet.  Now RubyGems defers to -I and the\nRUBYLIB environment variable to skip activation of a gem.\n\nExample:\n\n  GEM_SKIP=libA:libB ruby -I../libA -I../libB ./mycode.rb","name":"gem","namespace":"Kernel","path":"Kernel#gem","type":"module_function","visibility":"private"},"Kernel#j":{"description":"Outputs _objs_ to STDOUT as JSON strings in the shortest form, that is in\none line.","name":"j","namespace":"Kernel","path":"Kernel#j","type":"module_function","visibility":"private"},"Kernel#jj":{"description":"Outputs _objs_ to STDOUT as JSON strings in a pretty format, with\nindentation and over many lines.","name":"jj","namespace":"Kernel","path":"Kernel#jj","type":"module_function","visibility":"private"},"Kernel#open":{"description":"Allows the opening of various resources including URIs.\n\nIf the first argument responds to the 'open' method, 'open' is called on\nit with the rest of the arguments.\n\nIf the first argument is a string that begins with xxx://, it is parsed by\nURI.parse.  If the parsed object responds to the 'open' method,\n'open' is called on it with the rest of the arguments.\n\nOtherwise, the original Kernel#open is called.\n\nOpenURI::OpenRead#open provides URI::HTTP#open, URI::HTTPS#open and\nURI::FTP#open, Kernel#open.\n\nWe can accept URIs and strings that begin with http://, https:// and\nftp://. In these cases, the opened file object is extended by OpenURI::Meta.","name":"open","namespace":"Kernel","path":"Kernel#open","type":"module_function","visibility":"private"},"Kernel#open_uri_original_open":{"description":":nodoc:","name":"open_uri_original_open","namespace":"Kernel","path":"Kernel#open_uri_original_open","type":"module_function","visibility":"private"},"Kernel#pp":{"description":"prints arguments in pretty form.\n\npp returns argument(s).","name":"pp","namespace":"Kernel","path":"Kernel#pp","type":"module_function","visibility":"private"},"Kernel#pretty_inspect":{"description":"Returns a pretty printed object as a string.\n\nIn order to use this method you must first require the PP module:\n\n  require 'pp'\n\nSee the PP module for more information.","name":"pretty_inspect","namespace":"Kernel","path":"Kernel#pretty_inspect","type":"module_function","visibility":"public"},"Kernel#require":{"description":"When RubyGems is required, Kernel#require is replaced with our own which\nis capable of loading gems on demand.\n\nWhen you call <tt>require 'x'</tt>, this is what happens:\n* If the file can be loaded from the existing Ruby loadpath, it\n  is.\n* Otherwise, installed gems are searched for a file that matches.\n  If it's found in gem 'y', that gem is activated (added to the\n  loadpath).\n\nThe normal <tt>require</tt> functionality of returning false if\nthat file has already been loaded is preserved.","name":"require","namespace":"Kernel","path":"Kernel#require","type":"module_function","visibility":"private"},"Kernel#scanf":{"description":"Scans STDIN for data matching +format+.  See IO#scanf for details.\n\nSee Scanf for details on creating a format string.\n\nYou will need to require 'scanf' to use Kernel#scanf.","name":"scanf","namespace":"Kernel","path":"Kernel#scanf","type":"module_function","visibility":"private"},"Kernel.URI":{"description":"Returns +uri+ converted to a URI object.","name":"URI","namespace":"Kernel","path":"Kernel.URI","type":"module_function","visibility":"public"},"Kernel.open":{"description":"Allows the opening of various resources including URIs.\n\nIf the first argument responds to the 'open' method, 'open' is called on\nit with the rest of the arguments.\n\nIf the first argument is a string that begins with xxx://, it is parsed by\nURI.parse.  If the parsed object responds to the 'open' method,\n'open' is called on it with the rest of the arguments.\n\nOtherwise, the original Kernel#open is called.\n\nOpenURI::OpenRead#open provides URI::HTTP#open, URI::HTTPS#open and\nURI::FTP#open, Kernel#open.\n\nWe can accept URIs and strings that begin with http://, https:// and\nftp://. In these cases, the opened file object is extended by OpenURI::Meta.","name":"open","namespace":"Kernel","path":"Kernel.open","type":"module_function","visibility":"public"},"Kernel.open_uri_original_open":{"description":":nodoc:","name":"open_uri_original_open","namespace":"Kernel","path":"Kernel.open_uri_original_open","type":"module_function","visibility":"public"},"Kernel.pp":{"description":"prints arguments in pretty form.\n\npp returns argument(s).","name":"pp","namespace":"Kernel","path":"Kernel.pp","type":"module_function","visibility":"public"},"Kernel::RUBYGEMS_ACTIVATION_MONITOR":{"description":":nodoc:","name":"RUBYGEMS_ACTIVATION_MONITOR","namespace":"Kernel","path":"Kernel::RUBYGEMS_ACTIVATION_MONITOR","type":"constant","return":["Monitor",""],"visibility":"public"},"OpenURI":{"description":"OpenURI is an easy-to-use wrapper for Net::HTTP, Net::HTTPS and Net::FTP.\n\n== Example\n\nIt is possible to open an http, https or ftp URL as though it were a file:\n\n  open(\"http://www.ruby-lang.org/\") {|f|\n    f.each_line {|line| p line}\n  }\n\nThe opened file has several getter methods for its meta-information, as\nfollows, since it is extended by OpenURI::Meta.\n\n  open(\"http://www.ruby-lang.org/en\") {|f|\n    f.each_line {|line| p line}\n    p f.base_uri         # <URI::HTTP:0x40e6ef2 URL:http://www.ruby-lang.org/en/>\n    p f.content_type     # \"text/html\"\n    p f.charset          # \"iso-8859-1\"\n    p f.content_encoding # []\n    p f.last_modified    # Thu Dec 05 02:45:02 UTC 2002\n  }\n\nAdditional header fields can be specified by an optional hash argument.\n\n  open(\"http://www.ruby-lang.org/en/\",\n    \"User-Agent\" => \"Ruby/#{RUBY_VERSION}\",\n    \"From\" => \"foo@bar.invalid\",\n    \"Referer\" => \"http://www.ruby-lang.org/\") {|f|\n    # ...\n  }\n\nThe environment variables such as http_proxy, https_proxy and ftp_proxy\nare in effect by default. Here we disable proxy:\n\n  open(\"http://www.ruby-lang.org/en/\", :proxy => nil) {|f|\n    # ...\n  }\n\nSee OpenURI::OpenRead.open and Kernel#open for more on available options.\n\nURI objects can be opened in a similar way.\n\n  uri = URI.parse(\"http://www.ruby-lang.org/en/\")\n  uri.open {|f|\n    # ...\n  }\n\nURI objects can be read directly. The returned string is also extended by\nOpenURI::Meta.\n\n  str = uri.read\n  p str.base_uri\n\nAuthor:: Tanaka Akira <akr@m17n.org>","name":"OpenURI","namespace":"","path":"OpenURI","type":"module","visibility":"public"},"OpenURI.check_options":{"description":":nodoc:","name":"check_options","namespace":"OpenURI","path":"OpenURI.check_options","type":"module_function","visibility":"public"},"OpenURI.open_http":{"description":":nodoc:","name":"open_http","namespace":"OpenURI","path":"OpenURI.open_http","type":"module_function","visibility":"public"},"OpenURI.open_loop":{"description":":nodoc:","name":"open_loop","namespace":"OpenURI","path":"OpenURI.open_loop","type":"module_function","visibility":"public"},"OpenURI.open_uri":{"description":":nodoc:","name":"open_uri","namespace":"OpenURI","path":"OpenURI.open_uri","type":"module_function","visibility":"public"},"OpenURI.redirectable?":{"description":":nodoc:","name":"redirectable?","namespace":"OpenURI","path":"OpenURI.redirectable?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"OpenURI.scan_open_optional_arguments":{"description":":nodoc:","name":"scan_open_optional_arguments","namespace":"OpenURI","path":"OpenURI.scan_open_optional_arguments","type":"module_function","visibility":"public"},"OpenURI::Buffer":{"description":":nodoc: all","name":"Buffer","namespace":"OpenURI","path":"OpenURI::Buffer","type":"class","visibility":"public"},"OpenURI::Buffer#<<":{"description":"","name":"<<","namespace":"OpenURI::Buffer","path":"OpenURI::Buffer#<<","type":"instance_method","visibility":"public"},"OpenURI::Buffer#initialize":{"description":"","name":"initialize","namespace":"OpenURI::Buffer","path":"OpenURI::Buffer#initialize","type":"instance_method","visibility":"public","return":[["Buffer"],"a new instance of Buffer"]},"OpenURI::Buffer#io":{"description":"","name":"io","namespace":"OpenURI::Buffer","path":"OpenURI::Buffer#io","type":"instance_method","visibility":"public"},"OpenURI::Buffer#size":{"description":"Returns the value of attribute size","name":"size","namespace":"OpenURI::Buffer","path":"OpenURI::Buffer#size","type":"instance_method","visibility":"public"},"OpenURI::Buffer::StringMax":{"description":"","name":"StringMax","namespace":"OpenURI::Buffer","path":"OpenURI::Buffer::StringMax","type":"constant","return":null,"visibility":"public"},"OpenURI::HTTPError":{"description":"","name":"HTTPError","namespace":"OpenURI","path":"OpenURI::HTTPError","type":"class","visibility":"public"},"OpenURI::HTTPError#initialize":{"description":"","name":"initialize","namespace":"OpenURI::HTTPError","path":"OpenURI::HTTPError#initialize","type":"instance_method","visibility":"public","return":[["HTTPError"],"a new instance of HTTPError"]},"OpenURI::HTTPError#io":{"description":"Returns the value of attribute io","name":"io","namespace":"OpenURI::HTTPError","path":"OpenURI::HTTPError#io","type":"instance_method","visibility":"public"},"OpenURI::HTTPRedirect":{"description":"Raised on redirection,\nonly occurs when +redirect+ option for HTTP is +false+.","name":"HTTPRedirect","namespace":"OpenURI","path":"OpenURI::HTTPRedirect","type":"class","visibility":"public"},"OpenURI::HTTPRedirect#initialize":{"description":"","name":"initialize","namespace":"OpenURI::HTTPRedirect","path":"OpenURI::HTTPRedirect#initialize","type":"instance_method","visibility":"public","return":[["HTTPRedirect"],"a new instance of HTTPRedirect"]},"OpenURI::HTTPRedirect#uri":{"description":"Returns the value of attribute uri","name":"uri","namespace":"OpenURI::HTTPRedirect","path":"OpenURI::HTTPRedirect#uri","type":"instance_method","visibility":"public"},"OpenURI::Meta":{"description":"Mixin for holding meta-information.","name":"Meta","namespace":"OpenURI","path":"OpenURI::Meta","type":"module","visibility":"public"},"OpenURI::Meta#base_uri":{"description":"returns a URI that is the base of relative URIs in the data.\nIt may differ from the URI supplied by a user due to redirection.","name":"base_uri","namespace":"OpenURI::Meta","path":"OpenURI::Meta#base_uri","type":"module_function","visibility":"public"},"OpenURI::Meta#base_uri=":{"description":"returns a URI that is the base of relative URIs in the data.\nIt may differ from the URI supplied by a user due to redirection.","name":"base_uri=","namespace":"OpenURI::Meta","path":"OpenURI::Meta#base_uri=","type":"module_function","visibility":"public"},"OpenURI::Meta#charset":{"description":"returns a charset parameter in Content-Type field.\nIt is downcased for canonicalization.\n\nIf charset parameter is not given but a block is given,\nthe block is called and its result is returned.\nIt can be used to guess charset.\n\nIf charset parameter and block is not given,\nnil is returned except text type in HTTP.\nIn that case, \"iso-8859-1\" is returned as defined by RFC2616 3.7.1.","name":"charset","namespace":"OpenURI::Meta","path":"OpenURI::Meta#charset","type":"module_function","visibility":"public"},"OpenURI::Meta#content_encoding":{"description":"Returns a list of encodings in Content-Encoding field as an array of\nstrings.\n\nThe encodings are downcased for canonicalization.","name":"content_encoding","namespace":"OpenURI::Meta","path":"OpenURI::Meta#content_encoding","type":"module_function","visibility":"public"},"OpenURI::Meta#content_type":{"description":"returns \"type/subtype\" which is MIME Content-Type.\nIt is downcased for canonicalization.\nContent-Type parameters are stripped.","name":"content_type","namespace":"OpenURI::Meta","path":"OpenURI::Meta#content_type","type":"module_function","visibility":"public"},"OpenURI::Meta#content_type_parse":{"description":":startdoc:","name":"content_type_parse","namespace":"OpenURI::Meta","path":"OpenURI::Meta#content_type_parse","type":"module_function","visibility":"public"},"OpenURI::Meta#last_modified":{"description":"returns a Time that represents the Last-Modified field.","name":"last_modified","namespace":"OpenURI::Meta","path":"OpenURI::Meta#last_modified","type":"module_function","visibility":"public"},"OpenURI::Meta#meta":{"description":"returns a Hash that represents header fields.\nThe Hash keys are downcased for canonicalization.\nThe Hash values are a field body.\nIf there are multiple field with same field name,\nthe field values are concatenated with a comma.","name":"meta","namespace":"OpenURI::Meta","path":"OpenURI::Meta#meta","type":"module_function","visibility":"public"},"OpenURI::Meta#meta_add_field":{"description":":nodoc:","name":"meta_add_field","namespace":"OpenURI::Meta","path":"OpenURI::Meta#meta_add_field","type":"module_function","visibility":"public"},"OpenURI::Meta#meta_add_field2":{"description":":nodoc:","name":"meta_add_field2","namespace":"OpenURI::Meta","path":"OpenURI::Meta#meta_add_field2","type":"module_function","visibility":"public"},"OpenURI::Meta#meta_setup_encoding":{"description":":nodoc:","name":"meta_setup_encoding","namespace":"OpenURI::Meta","path":"OpenURI::Meta#meta_setup_encoding","type":"module_function","visibility":"public"},"OpenURI::Meta#metas":{"description":"returns a Hash that represents header fields.\nThe Hash keys are downcased for canonicalization.\nThe Hash value are an array of field values.","name":"metas","namespace":"OpenURI::Meta","path":"OpenURI::Meta#metas","type":"module_function","visibility":"public"},"OpenURI::Meta#status":{"description":"returns an Array that consists of status code and message.","name":"status","namespace":"OpenURI::Meta","path":"OpenURI::Meta#status","type":"module_function","visibility":"public"},"OpenURI::Meta#status=":{"description":"returns an Array that consists of status code and message.","name":"status=","namespace":"OpenURI::Meta","path":"OpenURI::Meta#status=","type":"module_function","visibility":"public"},"OpenURI::Meta.init":{"description":":nodoc:","name":"init","namespace":"OpenURI::Meta","path":"OpenURI::Meta.init","type":"module_function","visibility":"public"},"OpenURI::Meta::RE_LWS":{"description":":stopdoc:","name":"RE_LWS","namespace":"OpenURI::Meta","path":"OpenURI::Meta::RE_LWS","type":"constant","return":null,"visibility":"public"},"OpenURI::Meta::RE_PARAMETERS":{"description":"","name":"RE_PARAMETERS","namespace":"OpenURI::Meta","path":"OpenURI::Meta::RE_PARAMETERS","type":"constant","return":null,"visibility":"public"},"OpenURI::Meta::RE_QUOTED_STRING":{"description":"","name":"RE_QUOTED_STRING","namespace":"OpenURI::Meta","path":"OpenURI::Meta::RE_QUOTED_STRING","type":"constant","return":null,"visibility":"public"},"OpenURI::Meta::RE_TOKEN":{"description":"","name":"RE_TOKEN","namespace":"OpenURI::Meta","path":"OpenURI::Meta::RE_TOKEN","type":"constant","return":null,"visibility":"public"},"OpenURI::OpenRead":{"description":"Mixin for HTTP and FTP URIs.","name":"OpenRead","namespace":"OpenURI","path":"OpenURI::OpenRead","type":"module","visibility":"public"},"OpenURI::OpenRead#open":{"description":"OpenURI::OpenRead#open provides `open' for URI::HTTP and URI::FTP.\n\nOpenURI::OpenRead#open takes optional 3 arguments as:\n\n  OpenURI::OpenRead#open([mode [, perm]] [, options]) [{|io| ... }]\n\nOpenURI::OpenRead#open returns an IO-like object if block is not given.\nOtherwise it yields the IO object and return the value of the block.\nThe IO object is extended with OpenURI::Meta.\n\n+mode+ and +perm+ are the same as Kernel#open.\n\nHowever, +mode+ must be read mode because OpenURI::OpenRead#open doesn't\nsupport write mode (yet).\nAlso +perm+ is ignored because it is meaningful only for file creation.\n\n+options+ must be a hash.\n\nEach option with a string key specifies an extra header field for HTTP.\nI.e., it is ignored for FTP without HTTP proxy.\n\nThe hash may include other options, where keys are symbols:\n\n[:proxy]\n Synopsis:\n   :proxy => \"http://proxy.foo.com:8000/\"\n   :proxy => URI.parse(\"http://proxy.foo.com:8000/\")\n   :proxy => true\n   :proxy => false\n   :proxy => nil\n\n If :proxy option is specified, the value should be String, URI,\n boolean or nil.\n\n When String or URI is given, it is treated as proxy URI.\n\n When true is given or the option itself is not specified,\n environment variable `scheme_proxy' is examined.\n `scheme' is replaced by `http', `https' or `ftp'.\n\n When false or nil is given, the environment variables are ignored and\n connection will be made to a server directly.\n\n[:proxy_http_basic_authentication]\n Synopsis:\n   :proxy_http_basic_authentication =>\n     [\"http://proxy.foo.com:8000/\", \"proxy-user\", \"proxy-password\"]\n   :proxy_http_basic_authentication =>\n     [URI.parse(\"http://proxy.foo.com:8000/\"),\n      \"proxy-user\", \"proxy-password\"]\n\n If :proxy option is specified, the value should be an Array with 3\n elements.  It should contain a proxy URI, a proxy user name and a proxy\n password.  The proxy URI should be a String, an URI or nil.  The proxy\n user name and password should be a String.\n\n If nil is given for the proxy URI, this option is just ignored.\n\n If :proxy and :proxy_http_basic_authentication is specified,\n ArgumentError is raised.\n\n[:http_basic_authentication]\n Synopsis:\n   :http_basic_authentication=>[user, password]\n\n If :http_basic_authentication is specified,\n the value should be an array which contains 2 strings:\n username and password.\n It is used for HTTP Basic authentication defined by RFC 2617.\n\n[:content_length_proc]\n Synopsis:\n   :content_length_proc => lambda {|content_length| ... }\n\n If :content_length_proc option is specified, the option value procedure\n is called before actual transfer is started.\n It takes one argument, which is expected content length in bytes.\n\n If two or more transfer is done by HTTP redirection, the procedure\n is called only one for a last transfer.\n\n When expected content length is unknown, the procedure is called with\n nil.  This happens when the HTTP response has no Content-Length header.\n\n[:progress_proc]\n Synopsis:\n   :progress_proc => lambda {|size| ...}\n\n If :progress_proc option is specified, the proc is called with one\n argument each time when `open' gets content fragment from network.\n The argument +size+ is the accumulated transferred size in bytes.\n\n If two or more transfer is done by HTTP redirection, the procedure\n is called only one for a last transfer.\n\n :progress_proc and :content_length_proc are intended to be used for\n progress bar.\n For example, it can be implemented as follows using Ruby/ProgressBar.\n\n   pbar = nil\n   open(\"http://...\",\n     :content_length_proc => lambda {|t|\n       if t && 0 < t\n         pbar = ProgressBar.new(\"...\", t)\n         pbar.file_transfer_mode\n       end\n     },\n     :progress_proc => lambda {|s|\n       pbar.set s if pbar\n     }) {|f| ... }\n\n[:read_timeout]\n Synopsis:\n   :read_timeout=>nil     (no timeout)\n   :read_timeout=>10      (10 second)\n\n :read_timeout option specifies a timeout of read for http connections.\n\n[:open_timeout]\n Synopsis:\n   :open_timeout=>nil     (no timeout)\n   :open_timeout=>10      (10 second)\n\n :open_timeout option specifies a timeout of open for http connections.\n\n[:ssl_ca_cert]\n Synopsis:\n   :ssl_ca_cert=>filename or an Array of filenames\n\n :ssl_ca_cert is used to specify CA certificate for SSL.\n If it is given, default certificates are not used.\n\n[:ssl_verify_mode]\n Synopsis:\n   :ssl_verify_mode=>mode\n\n :ssl_verify_mode is used to specify openssl verify mode.\n\n[:ftp_active_mode]\n Synopsis:\n   :ftp_active_mode=>bool\n\n <tt>:ftp_active_mode => true</tt> is used to make ftp active mode.\n Ruby 1.9 uses passive mode by default.\n Note that the active mode is default in Ruby 1.8 or prior.\n\n[:redirect]\n Synopsis:\n   :redirect=>bool\n\n +:redirect+ is true by default.  <tt>:redirect => false</tt> is used to\n disable all HTTP redirects.\n\n OpenURI::HTTPRedirect exception raised on redirection.\n Using +true+ also means that redirections between http and ftp are\n permitted.","name":"open","namespace":"OpenURI::OpenRead","path":"OpenURI::OpenRead#open","type":"module_function","visibility":"public"},"OpenURI::OpenRead#read":{"description":"OpenURI::OpenRead#read([options]) reads a content referenced by self and\nreturns the content as string.\nThe string is extended with OpenURI::Meta.\nThe argument +options+ is same as OpenURI::OpenRead#open.","name":"read","namespace":"OpenURI::OpenRead","path":"OpenURI::OpenRead#read","type":"module_function","visibility":"public"},"OpenURI::Options":{"description":"","name":"Options","namespace":"OpenURI","path":"OpenURI::Options","type":"constant","return":null,"visibility":"public"},"URI":{"description":"--\n= uri/common.rb\n\nAuthor:: Akira Yamada <akira@ruby-lang.org>\nRevision:: $Id$\nLicense::\n  You can redistribute it and/or modify it under the same term as Ruby.\n\nSee URI for general documentation","name":"URI","namespace":"","path":"URI","type":"module","visibility":"public"},"URI.decode_www_form":{"description":"Decode URL-encoded form data from given +str+.\n\nThis decodes application/x-www-form-urlencoded data\nand returns array of key-value array.\n\nThis refers http://url.spec.whatwg.org/#concept-urlencoded-parser ,\nso this supports only &-separator, don't support ;-separator.\n\nary = URI.decode_www_form(\"a=1&a=2&b=3\")\np ary                  #=> [['a', '1'], ['a', '2'], ['b', '3']]\np ary.assoc('a').last  #=> '1'\np ary.assoc('b').last  #=> '3'\np ary.rassoc('a').last #=> '2'\np Hash[ary]            # => {\"a\"=>\"2\", \"b\"=>\"3\"}\n\nSee URI.decode_www_form_component, URI.encode_www_form","name":"decode_www_form","namespace":"URI","path":"URI.decode_www_form","type":"module_function","visibility":"public"},"URI.decode_www_form_component":{"description":"Decode given +str+ of URL-encoded form data.\n\nThis decodes + to SP.\n\nSee URI.encode_www_form_component, URI.decode_www_form","name":"decode_www_form_component","namespace":"URI","path":"URI.decode_www_form_component","type":"module_function","visibility":"public"},"URI.encode_www_form":{"description":"Generate URL-encoded form data from given +enum+.\n\nThis generates application/x-www-form-urlencoded data defined in HTML5\nfrom given an Enumerable object.\n\nThis internally uses URI.encode_www_form_component(str).\n\nThis method doesn't convert the encoding of given items, so convert them\nbefore call this method if you want to send data as other than original\nencoding or mixed encoding data. (Strings which are encoded in an HTML5\nASCII incompatible encoding are converted to UTF-8.)\n\nThis method doesn't handle files.  When you send a file, use\nmultipart/form-data.\n\nThis refers http://url.spec.whatwg.org/#concept-urlencoded-serializer\n\n   URI.encode_www_form([[\"q\", \"ruby\"], [\"lang\", \"en\"]])\n   #=> \"q=ruby&lang=en\"\n   URI.encode_www_form(\"q\" => \"ruby\", \"lang\" => \"en\")\n   #=> \"q=ruby&lang=en\"\n   URI.encode_www_form(\"q\" => [\"ruby\", \"perl\"], \"lang\" => \"en\")\n   #=> \"q=ruby&q=perl&lang=en\"\n   URI.encode_www_form([[\"q\", \"ruby\"], [\"q\", \"perl\"], [\"lang\", \"en\"]])\n   #=> \"q=ruby&q=perl&lang=en\"\n\nSee URI.encode_www_form_component, URI.decode_www_form","name":"encode_www_form","namespace":"URI","path":"URI.encode_www_form","type":"module_function","visibility":"public"},"URI.encode_www_form_component":{"description":"Encode given +str+ to URL-encoded form data.\n\nThis method doesn't convert *, -, ., 0-9, A-Z, _, a-z, but does convert SP\n(ASCII space) to + and converts others to %XX.\n\nIf +enc+ is given, convert +str+ to the encoding before percent encoding.\n\nThis is an implementation of\nhttp://www.w3.org/TR/2013/CR-html5-20130806/forms.html#url-encoded-form-data\n\nSee URI.decode_www_form_component, URI.encode_www_form","name":"encode_www_form_component","namespace":"URI","path":"URI.encode_www_form_component","type":"module_function","visibility":"public"},"URI.extract":{"description":"== Synopsis\n\n  URI::extract(str[, schemes][,&blk])\n\n== Args\n\n+str+::\n  String to extract URIs from.\n+schemes+::\n  Limit URI matching to a specific schemes.\n\n== Description\n\nExtracts URIs from a string. If block given, iterates through all matched URIs.\nReturns nil if block given or array with matches.\n\n== Usage\n\n  require \"uri\"\n\n  URI.extract(\"text here http://foo.example.org/bla and here mailto:test@example.com and here also.\")\n  # => [\"http://foo.example.com/bla\", \"mailto:test@example.com\"]","name":"extract","namespace":"URI","path":"URI.extract","type":"module_function","visibility":"public"},"URI.get_encoding":{"description":":nodoc:\nreturn encoding or nil\nhttp://encoding.spec.whatwg.org/#concept-encoding-get","name":"get_encoding","namespace":"URI","path":"URI.get_encoding","type":"module_function","visibility":"private"},"URI.join":{"description":"== Synopsis\n\n  URI::join(str[, str, ...])\n\n== Args\n\n+str+::\n  String(s) to work with, will be converted to RFC3986 URIs before merging.\n\n== Description\n\nJoins URIs.\n\n== Usage\n\n  require 'uri'\n\n  p URI.join(\"http://example.com/\",\"main.rbx\")\n  # => #<URI::HTTP:0x2022ac02 URL:http://localhost/main.rbx>\n\n  p URI.join('http://example.com', 'foo')\n  # => #<URI::HTTP:0x01ab80a0 URL:http://example.com/foo>\n\n  p URI.join('http://example.com', '/foo', '/bar')\n  # => #<URI::HTTP:0x01aaf0b0 URL:http://example.com/bar>\n\n  p URI.join('http://example.com', '/foo', 'bar')\n  # => #<URI::HTTP:0x801a92af0 URL:http://example.com/bar>\n\n  p URI.join('http://example.com', '/foo/', 'bar')\n  # => #<URI::HTTP:0x80135a3a0 URL:http://example.com/foo/bar>","name":"join","namespace":"URI","path":"URI.join","type":"module_function","visibility":"public"},"URI.parse":{"description":"== Synopsis\n\n  URI::parse(uri_str)\n\n== Args\n\n+uri_str+::\n  String with URI.\n\n== Description\n\nCreates one of the URI's subclasses instance from the string.\n\n== Raises\n\nURI::InvalidURIError\n  Raised if URI given is not a correct one.\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://www.ruby-lang.org/\")\n  p uri\n  # => #<URI::HTTP:0x202281be URL:http://www.ruby-lang.org/>\n  p uri.scheme\n  # => \"http\"\n  p uri.host\n  # => \"www.ruby-lang.org\"\n\nIt's recommended to first ::escape the provided +uri_str+ if there are any\ninvalid URI characters.","name":"parse","namespace":"URI","path":"URI.parse","type":"module_function","visibility":"public"},"URI.regexp":{"description":"== Synopsis\n\n  URI::regexp([match_schemes])\n\n== Args\n\n+match_schemes+::\n  Array of schemes. If given, resulting regexp matches to URIs\n  whose scheme is one of the match_schemes.\n\n== Description\nReturns a Regexp object which matches to URI-like strings.\nThe Regexp object returned by this method includes arbitrary\nnumber of capture group (parentheses).  Never rely on it's number.\n\n== Usage\n\n  require 'uri'\n\n  # extract first URI from html_string\n  html_string.slice(URI.regexp)\n\n  # remove ftp URIs\n  html_string.sub(URI.regexp(['ftp'])\n\n  # You should not rely on the number of parentheses\n  html_string.scan(URI.regexp) do |*matches|\n    p $&\n  end","name":"regexp","namespace":"URI","path":"URI.regexp","type":"module_function","visibility":"public"},"URI.scheme_list":{"description":"Returns a Hash of the defined schemes","name":"scheme_list","namespace":"URI","path":"URI.scheme_list","type":"module_function","visibility":"public"},"URI.split":{"description":"== Synopsis\n\n  URI::split(uri)\n\n== Args\n\n+uri+::\n  String with URI.\n\n== Description\n\nSplits the string on following parts and returns array with result:\n\n  * Scheme\n  * Userinfo\n  * Host\n  * Port\n  * Registry\n  * Path\n  * Opaque\n  * Query\n  * Fragment\n\n== Usage\n\n  require 'uri'\n\n  p URI.split(\"http://www.ruby-lang.org/\")\n  # => [\"http\", nil, \"www.ruby-lang.org\", nil, nil, \"/\", nil, nil, nil]","name":"split","namespace":"URI","path":"URI.split","type":"module_function","visibility":"public"},"URI::@@schemes":{"description":"","name":"@@schemes","namespace":"URI","path":"URI::@@schemes","type":"classvariable","visibility":"public"},"URI::BadURIError":{"description":"URI is valid, bad usage is not.","name":"BadURIError","namespace":"URI","path":"URI::BadURIError","type":"class","visibility":"public"},"URI::DEFAULT_PARSER":{"description":"URI::Parser.new","name":"DEFAULT_PARSER","namespace":"URI","path":"URI::DEFAULT_PARSER","type":"constant","return":null,"visibility":"public"},"URI::Error":{"description":"Base class for all URI exceptions.","name":"Error","namespace":"URI","path":"URI::Error","type":"class","visibility":"public"},"URI::Escape":{"description":"module for escaping unsafe characters with codes.","name":"Escape","namespace":"URI","path":"URI::Escape","type":"module","visibility":"public"},"URI::Escape#decode":{"description":"== Synopsis\n\n  URI.unescape(str)\n\n== Args\n\n+str+::\n  Unescapes the string.\n\n== Usage\n\n  require 'uri'\n\n  enc_uri = URI.escape(\"http://example.com/?a=\\11\\15\")\n  p enc_uri\n  # => \"http://example.com/?a=%09%0D\"\n\n  p URI.unescape(enc_uri)\n  # => \"http://example.com/?a=\\t\\r\"","name":"decode","namespace":"URI::Escape","path":"URI::Escape#decode","type":"module_function","visibility":"public"},"URI::Escape#encode":{"description":"== Synopsis\n\n  URI.escape(str [, unsafe])\n\n== Args\n\n+str+::\n  String to replaces in.\n+unsafe+::\n  Regexp that matches all symbols that must be replaced with codes.\n  By default uses <tt>REGEXP::UNSAFE</tt>.\n  When this argument is a String, it represents a character set.\n\n== Description\n\nEscapes the string, replacing all unsafe characters with codes.\n\n== Usage\n\n  require 'uri'\n\n  enc_uri = URI.escape(\"http://example.com/?a=\\11\\15\")\n  p enc_uri\n  # => \"http://example.com/?a=%09%0D\"\n\n  p URI.unescape(enc_uri)\n  # => \"http://example.com/?a=\\t\\r\"\n\n  p URI.escape(\"@?@!\", \"!?\")\n  # => \"@%3F@%21\"","name":"encode","namespace":"URI::Escape","path":"URI::Escape#encode","type":"module_function","visibility":"public"},"URI::Escape#escape":{"description":"== Synopsis\n\n  URI.escape(str [, unsafe])\n\n== Args\n\n+str+::\n  String to replaces in.\n+unsafe+::\n  Regexp that matches all symbols that must be replaced with codes.\n  By default uses <tt>REGEXP::UNSAFE</tt>.\n  When this argument is a String, it represents a character set.\n\n== Description\n\nEscapes the string, replacing all unsafe characters with codes.\n\n== Usage\n\n  require 'uri'\n\n  enc_uri = URI.escape(\"http://example.com/?a=\\11\\15\")\n  p enc_uri\n  # => \"http://example.com/?a=%09%0D\"\n\n  p URI.unescape(enc_uri)\n  # => \"http://example.com/?a=\\t\\r\"\n\n  p URI.escape(\"@?@!\", \"!?\")\n  # => \"@%3F@%21\"","name":"encode","namespace":"URI::Escape","path":"URI::Escape#encode","type":"module_function","visibility":"public"},"URI::Escape#unescape":{"description":"== Synopsis\n\n  URI.unescape(str)\n\n== Args\n\n+str+::\n  Unescapes the string.\n\n== Usage\n\n  require 'uri'\n\n  enc_uri = URI.escape(\"http://example.com/?a=\\11\\15\")\n  p enc_uri\n  # => \"http://example.com/?a=%09%0D\"\n\n  p URI.unescape(enc_uri)\n  # => \"http://example.com/?a=\\t\\r\"","name":"decode","namespace":"URI::Escape","path":"URI::Escape#decode","type":"module_function","visibility":"public"},"URI::FTP":{"description":"FTP URI syntax is defined by RFC1738 section 3.2.\n\nThis class will be redesigned because of difference of implementations;\nthe structure of its path. draft-hoffman-ftp-uri-04 is a draft but it\nis a good summary about the de facto spec.\nhttp://tools.ietf.org/html/draft-hoffman-ftp-uri-04","name":"FTP","namespace":"URI","path":"URI::FTP","type":"class","visibility":"public"},"URI::FTP#buffer_open":{"description":":nodoc:","name":"buffer_open","namespace":"URI::FTP","path":"URI::FTP#buffer_open","type":"instance_method","visibility":"public"},"URI::FTP#check_typecode":{"description":"validates typecode +v+,\nreturns a +true+ or +false+ boolean","name":"check_typecode","namespace":"URI::FTP","path":"URI::FTP#check_typecode","type":"instance_method","visibility":"private"},"URI::FTP#initialize":{"description":"== Description\n\nCreates a new URI::FTP object from generic URL components with no\nsyntax checking.\n\nUnlike build(), this method does not escape the path component as\nrequired by RFC1738; instead it is treated as per RFC2396.\n\nArguments are +scheme+, +userinfo+, +host+, +port+, +registry+, +path+,\n+opaque+, +query+ and +fragment+, in that order.","name":"initialize","namespace":"URI::FTP","path":"URI::FTP#initialize","type":"instance_method","visibility":"public","return":[["FTP"],"a new instance of FTP"]},"URI::FTP#merge":{"description":":nodoc:","name":"merge","namespace":"URI::FTP","path":"URI::FTP#merge","type":"instance_method","visibility":"public"},"URI::FTP#path":{"description":"Returns the path from an FTP URI.\n\nRFC 1738 specifically states that the path for an FTP URI does not\ninclude the / which separates the URI path from the URI host. Example:\n\n    ftp://ftp.example.com/pub/ruby\n\nThe above URI indicates that the client should connect to\nftp.example.com then cd pub/ruby from the initial login directory.\n\nIf you want to cd to an absolute directory, you must include an\nescaped / (%2F) in the path. Example:\n\n    ftp://ftp.example.com/%2Fpub/ruby\n\nThis method will then return \"/pub/ruby\"","name":"path","namespace":"URI::FTP","path":"URI::FTP#path","type":"instance_method","visibility":"public"},"URI::FTP#set_path":{"description":"Private setter for the path of the URI::FTP","name":"set_path","namespace":"URI::FTP","path":"URI::FTP#set_path","type":"instance_method","visibility":"protected"},"URI::FTP#set_typecode":{"description":"Private setter for the typecode +v+\n\nsee also URI::FTP.typecode=","name":"set_typecode","namespace":"URI::FTP","path":"URI::FTP#set_typecode","type":"instance_method","visibility":"protected"},"URI::FTP#to_s":{"description":"Returns a String representation of the URI::FTP","name":"to_s","namespace":"URI::FTP","path":"URI::FTP#to_s","type":"instance_method","visibility":"public"},"URI::FTP#typecode":{"description":"typecode accessor\n\nsee URI::FTP::COMPONENT","name":"typecode","namespace":"URI::FTP","path":"URI::FTP#typecode","type":"instance_method","visibility":"public"},"URI::FTP#typecode=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the typecode +v+.\n(with validation)\n\nsee also URI::FTP.check_typecode\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"ftp://john@ftp.example.com/my_file.img\")\n  #=> #<URI::FTP:0x00000000923650 URL:ftp://john@ftp.example.com/my_file.img>\n  uri.typecode = \"i\"\n  # =>  \"i\"\n  uri\n  #=> #<URI::FTP:0x00000000923650 URL:ftp://john@ftp.example.com/my_file.img;type=i>","name":"typecode=","namespace":"URI::FTP","path":"URI::FTP#typecode=","type":"instance_method","visibility":"public"},"URI::FTP.build":{"description":"== Description\n\nCreates a new URI::FTP object from components, with syntax checking.\n\nThe components accepted are +userinfo+, +host+, +port+, +path+ and\n+typecode+.\n\nThe components should be provided either as an Array, or as a Hash\nwith keys formed by preceding the component names with a colon.\n\nIf an Array is used, the components must be passed in the order\n[userinfo, host, port, path, typecode]\n\nIf the path supplied is absolute, it will be escaped in order to\nmake it absolute in the URI. Examples:\n\n    require 'uri'\n\n    uri = URI::FTP.build(['user:password', 'ftp.example.com', nil,\n      '/path/file.> zip', 'i'])\n    puts uri.to_s  ->  ftp://user:password@ftp.example.com/%2Fpath/file.zip;type=a\n\n    uri2 = URI::FTP.build({:host => 'ftp.example.com',\n      :path => 'ruby/src'})\n    puts uri2.to_s  ->  ftp://ftp.example.com/ruby/src","name":"build","namespace":"URI::FTP","path":"URI::FTP.build","type":"class_method","visibility":"public"},"URI::FTP.new2":{"description":"","name":"new2","namespace":"URI::FTP","path":"URI::FTP.new2","type":"class_method","visibility":"public"},"URI::FTP::COMPONENT":{"description":"An Array of the available components for URI::FTP","name":"COMPONENT","namespace":"URI::FTP","path":"URI::FTP::COMPONENT","type":"constant","return":null,"visibility":"public"},"URI::FTP::DEFAULT_PORT":{"description":"A Default port of 21 for URI::FTP","name":"DEFAULT_PORT","namespace":"URI::FTP","path":"URI::FTP::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::FTP::TYPECODE":{"description":"Typecode is \"a\", \"i\" or \"d\".\n\n* \"a\" indicates a text file (the FTP command was ASCII)\n* \"i\" indicates a binary file (FTP command IMAGE)\n* \"d\" indicates the contents of a directory should be displayed","name":"TYPECODE","namespace":"URI::FTP","path":"URI::FTP::TYPECODE","type":"constant","return":null,"visibility":"public"},"URI::FTP::TYPECODE_PREFIX":{"description":"Typecode prefix\n ';type='","name":"TYPECODE_PREFIX","namespace":"URI::FTP","path":"URI::FTP::TYPECODE_PREFIX","type":"constant","return":null,"visibility":"public"},"URI::Generic":{"description":"Base class for all URI classes.\nImplements generic URI syntax as per RFC 2396.","name":"Generic","namespace":"URI","path":"URI::Generic","type":"class","visibility":"public"},"URI::Generic#+":{"description":"== Args\n\n+oth+::\n   URI or String\n\n== Description\n\nMerges two URI's.\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  p uri.merge(\"/main.rbx?page=1\")\n  # =>  #<URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1>","name":"+","namespace":"URI::Generic","path":"URI::Generic#+","type":"instance_method","visibility":"public"},"URI::Generic#-":{"description":"== Args\n\n+oth+::\n   URI or String\n\n== Description\n\nCalculates relative path from oth to self\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse('http://my.example.com/main.rbx?page=1')\n  p uri.route_from('http://my.example.com')\n  #=> #<URI::Generic:0x20218858 URL:/main.rbx?page=1>","name":"-","namespace":"URI::Generic","path":"URI::Generic#-","type":"instance_method","visibility":"public"},"URI::Generic#==":{"description":"Compares to URI's","name":"==","namespace":"URI::Generic","path":"URI::Generic#==","type":"instance_method","visibility":"public"},"URI::Generic#absolute":{"description":"Checks if URI is an absolute one","name":"absolute","namespace":"URI::Generic","path":"URI::Generic#absolute","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"URI::Generic#absolute?":{"description":"Checks if URI is an absolute one","name":"absolute","namespace":"URI::Generic","path":"URI::Generic#absolute","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"URI::Generic#check_host":{"description":"check the host +v+ component for RFC2396 compliance\nand against the URI::Parser Regexp for :HOST\n\nCan not have a registry or opaque component defined,\nwith a host component defined.","name":"check_host","namespace":"URI::Generic","path":"URI::Generic#check_host","type":"instance_method","visibility":"private"},"URI::Generic#check_opaque":{"description":"check the opaque +v+ component for RFC2396 compliance and\nagainst the URI::Parser Regexp for :OPAQUE\n\nCan not have a host, port, user or path component defined,\nwith an opaque component defined.","name":"check_opaque","namespace":"URI::Generic","path":"URI::Generic#check_opaque","type":"instance_method","visibility":"private"},"URI::Generic#check_password":{"description":"check the password +v+ component for RFC2396 compliance\nand against the URI::Parser Regexp for :USERINFO\n\nCan not have a registry or opaque component defined,\nwith a user component defined.","name":"check_password","namespace":"URI::Generic","path":"URI::Generic#check_password","type":"instance_method","visibility":"private"},"URI::Generic#check_path":{"description":"check the path +v+ component for RFC2396 compliance\nand against the URI::Parser Regexp\nfor :ABS_PATH and :REL_PATH\n\nCan not have a opaque component defined,\nwith a path component defined.","name":"check_path","namespace":"URI::Generic","path":"URI::Generic#check_path","type":"instance_method","visibility":"private"},"URI::Generic#check_port":{"description":"check the port +v+ component for RFC2396 compliance\nand against the URI::Parser Regexp for :PORT\n\nCan not have a registry or opaque component defined,\nwith a port component defined.","name":"check_port","namespace":"URI::Generic","path":"URI::Generic#check_port","type":"instance_method","visibility":"private"},"URI::Generic#check_registry":{"description":":nodoc:","name":"check_registry","namespace":"URI::Generic","path":"URI::Generic#check_registry","type":"instance_method","visibility":"private"},"URI::Generic#check_scheme":{"description":"check the scheme +v+ component against the URI::Parser Regexp for :SCHEME","name":"check_scheme","namespace":"URI::Generic","path":"URI::Generic#check_scheme","type":"instance_method","visibility":"private"},"URI::Generic#check_user":{"description":"check the user +v+ component for RFC2396 compliance\nand against the URI::Parser Regexp for :USERINFO\n\nCan not have a registry or opaque component defined,\nwith a user component defined.","name":"check_user","namespace":"URI::Generic","path":"URI::Generic#check_user","type":"instance_method","visibility":"private"},"URI::Generic#check_userinfo":{"description":"check the +user+ and +password+.\n\nIf +password+ is not provided, then +user+ is\nsplit, using URI::Generic.split_userinfo, to\npull +user+ and +password.\n\nsee also URI::Generic.check_user, URI::Generic.check_password","name":"check_userinfo","namespace":"URI::Generic","path":"URI::Generic#check_userinfo","type":"instance_method","visibility":"private"},"URI::Generic#coerce":{"description":"== Args\n\n+v+::\n   URI or String\n\n== Description\n\n attempt to parse other URI +oth+\n return [parsed_oth, self]\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  uri.coerce(\"http://foo.com\")\n  #=> [#<URI::HTTP:0x00000000bcb028 URL:http://foo.com/>, #<URI::HTTP:0x00000000d92178 URL:http://my.example.com>]","name":"coerce","namespace":"URI::Generic","path":"URI::Generic#coerce","type":"instance_method","visibility":"public"},"URI::Generic#component":{"description":"Components of the URI in the order.","name":"component","namespace":"URI::Generic","path":"URI::Generic#component","type":"instance_method","visibility":"public"},"URI::Generic#component_ary":{"description":"returns an Array of the components defined from the COMPONENT Array","name":"component_ary","namespace":"URI::Generic","path":"URI::Generic#component_ary","type":"instance_method","visibility":"protected"},"URI::Generic#default_port":{"description":"Returns default port","name":"default_port","namespace":"URI::Generic","path":"URI::Generic#default_port","type":"instance_method","visibility":"public"},"URI::Generic#eql?":{"description":"","name":"eql?","namespace":"URI::Generic","path":"URI::Generic#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"URI::Generic#escape_userpass":{"description":"escapes 'user:password' +v+ based on RFC 1738 section 3.1","name":"escape_userpass","namespace":"URI::Generic","path":"URI::Generic#escape_userpass","type":"instance_method","visibility":"private"},"URI::Generic#find_proxy":{"description":"returns a proxy URI.\nThe proxy URI is obtained from environment variables such as http_proxy,\nftp_proxy, no_proxy, etc.\nIf there is no proper proxy, nil is returned.\n\nNote that capitalized variables (HTTP_PROXY, FTP_PROXY, NO_PROXY, etc.)\nare examined too.\n\nBut http_proxy and HTTP_PROXY is treated specially under CGI environment.\nIt's because HTTP_PROXY may be set by Proxy: header.\nSo HTTP_PROXY is not used.\nhttp_proxy is not used too if the variable is case insensitive.\nCGI_HTTP_PROXY can be used instead.","name":"find_proxy","namespace":"URI::Generic","path":"URI::Generic#find_proxy","type":"instance_method","visibility":"public"},"URI::Generic#fragment":{"description":"returns the fragment component of the URI.\n\n  URI(\"http://foo/bar/baz?search=FooBar#ponies\").fragment #=> \"ponies\"","name":"fragment","namespace":"URI::Generic","path":"URI::Generic#fragment","type":"instance_method","visibility":"public"},"URI::Generic#fragment=":{"description":"check the fragment +v+ component against the URI::Parser Regexp for :FRAGMENT\n\n\n== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the fragment component +v+.\n(with validation)\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com/?id=25#time=1305212049\")\n  uri.fragment = \"time=1305212086\"\n  # =>  \"time=1305212086\"\n  uri\n  #=> #<URI::HTTP:0x000000007a81f8 URL:http://my.example.com/?id=25#time=1305212086>","name":"fragment=","namespace":"URI::Generic","path":"URI::Generic#fragment=","type":"instance_method","visibility":"public"},"URI::Generic#hash":{"description":"","name":"hash","namespace":"URI::Generic","path":"URI::Generic#hash","type":"instance_method","visibility":"public"},"URI::Generic#hierarchical?":{"description":"Checks if URI has a path","name":"hierarchical?","namespace":"URI::Generic","path":"URI::Generic#hierarchical?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"URI::Generic#host":{"description":"returns the host component of the URI.\n\n  URI(\"http://foo/bar/baz\").host #=> \"foo\"\n\nIt returns nil if no host component.\n\n  URI(\"mailto:foo@example.org\").host #=> nil\n\nThe component doesn't contains the port number.\n\n  URI(\"http://foo:8080/bar/baz\").host #=> \"foo\"\n\nSince IPv6 addresses are wrapped by brackets in URIs,\nthis method returns IPv6 addresses wrapped by brackets.\nThis form is not appropriate to pass socket methods such as TCPSocket.open.\nIf unwrapped host names are required, use \"hostname\" method.\n\n  URI(\"http://[::1]/bar/baz\").host #=> \"[::1]\"\n  URI(\"http://[::1]/bar/baz\").hostname #=> \"::1\"","name":"host","namespace":"URI::Generic","path":"URI::Generic#host","type":"instance_method","visibility":"public"},"URI::Generic#host=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the host component +v+.\n(with validation)\n\nsee also URI::Generic.check_host\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  uri.host = \"foo.com\"\n  # =>  \"foo.com\"\n  uri\n  #=> #<URI::HTTP:0x000000008e89e8 URL:http://foo.com>","name":"host=","namespace":"URI::Generic","path":"URI::Generic#host=","type":"instance_method","visibility":"public"},"URI::Generic#hostname":{"description":"extract the host part of the URI and unwrap brackets for IPv6 addresses.\n\nThis method is same as URI::Generic#host except\nbrackets for IPv6 (and future IP) addresses are removed.\n\nu = URI(\"http://[::1]/bar\")\np u.hostname      #=> \"::1\"\np u.host          #=> \"[::1]\"","name":"hostname","namespace":"URI::Generic","path":"URI::Generic#hostname","type":"instance_method","visibility":"public"},"URI::Generic#hostname=":{"description":"set the host part of the URI as the argument with brackets for IPv6 addresses.\n\nThis method is same as URI::Generic#host= except\nthe argument can be bare IPv6 address.\n\nu = URI(\"http://foo/bar\")\np u.to_s                  #=> \"http://foo/bar\"\nu.hostname = \"::1\"\np u.to_s                  #=> \"http://[::1]/bar\"\n\nIf the argument seems IPv6 address,\nit is wrapped by brackets.","name":"hostname=","namespace":"URI::Generic","path":"URI::Generic#hostname=","type":"instance_method","visibility":"public"},"URI::Generic#initialize":{"description":"== Args\n\n+scheme+::\n  Protocol scheme, i.e. 'http','ftp','mailto' and so on.\n+userinfo+::\n  User name and password, i.e. 'sdmitry:bla'\n+host+::\n  Server host name\n+port+::\n  Server port\n+registry+::\n  Registry of naming authorities.\n+path+::\n  Path on server\n+opaque+::\n  Opaque part\n+query+::\n  Query data\n+fragment+::\n  A part of URI after '#' sign\n+parser+::\n  Parser for internal use [URI::DEFAULT_PARSER by default]\n+arg_check+::\n  Check arguments [false by default]\n\n== Description\n\nCreates a new URI::Generic instance from ``generic'' components without check.","name":"initialize","namespace":"URI::Generic","path":"URI::Generic#initialize","type":"instance_method","visibility":"public","return":[["Generic"],"a new instance of Generic"]},"URI::Generic#inspect":{"description":"","name":"inspect","namespace":"URI::Generic","path":"URI::Generic#inspect","type":"instance_method","visibility":"public"},"URI::Generic#merge":{"description":"== Args\n\n+oth+::\n   URI or String\n\n== Description\n\nMerges two URI's.\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  p uri.merge(\"/main.rbx?page=1\")\n  # =>  #<URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1>","name":"+","namespace":"URI::Generic","path":"URI::Generic#+","type":"instance_method","visibility":"public"},"URI::Generic#merge!":{"description":"== Args\n\n+oth+::\n   URI or String\n\n== Description\n\nDestructive form of #merge\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  uri.merge!(\"/main.rbx?page=1\")\n  p uri\n  # =>  #<URI::HTTP:0x2021f3b0 URL:http://my.example.com/main.rbx?page=1>","name":"merge!","namespace":"URI::Generic","path":"URI::Generic#merge!","type":"instance_method","visibility":"public"},"URI::Generic#merge0":{"description":"return base and rel.\nyou can modify `base', but can not `rel'.","name":"merge0","namespace":"URI::Generic","path":"URI::Generic#merge0","type":"instance_method","visibility":"private"},"URI::Generic#merge_path":{"description":"Merges a base path +base+, with relative path +rel+,\nreturns a modified base path.","name":"merge_path","namespace":"URI::Generic","path":"URI::Generic#merge_path","type":"instance_method","visibility":"private"},"URI::Generic#normalize":{"description":"Returns normalized URI","name":"normalize","namespace":"URI::Generic","path":"URI::Generic#normalize","type":"instance_method","visibility":"public"},"URI::Generic#normalize!":{"description":"Destructive version of #normalize","name":"normalize!","namespace":"URI::Generic","path":"URI::Generic#normalize!","type":"instance_method","visibility":"public"},"URI::Generic#opaque":{"description":"returns the opaque part of the URI.\n\n  URI(\"mailto:foo@example.org\").opaque #=> \"foo@example.org\"\n\nPortion of the path that does make use of the slash '/'.\nThe path typically refers to the absolute path and the opaque part.\n (see RFC2396 Section 3 and 5.2)","name":"opaque","namespace":"URI::Generic","path":"URI::Generic#opaque","type":"instance_method","visibility":"public"},"URI::Generic#opaque=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the opaque component +v+.\n(with validation)\n\nsee also URI::Generic.check_opaque","name":"opaque=","namespace":"URI::Generic","path":"URI::Generic#opaque=","type":"instance_method","visibility":"public"},"URI::Generic#parser":{"description":"returns the parser to be used.\n\nUnless a URI::Parser is defined, then DEFAULT_PARSER is used.","name":"parser","namespace":"URI::Generic","path":"URI::Generic#parser","type":"instance_method","visibility":"public"},"URI::Generic#password":{"description":"returns the password component","name":"password","namespace":"URI::Generic","path":"URI::Generic#password","type":"instance_method","visibility":"public"},"URI::Generic#password=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the +password+ component.\n(with validation)\n\nsee also URI::Generic.check_password\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://john:S3nsit1ve@my.example.com\")\n  uri.password = \"V3ry_S3nsit1ve\"\n  # =>  \"V3ry_S3nsit1ve\"\n  uri\n  #=> #<URI::HTTP:0x00000000881d90 URL:http://john:V3ry_S3nsit1ve@my.example.com>","name":"password=","namespace":"URI::Generic","path":"URI::Generic#password=","type":"instance_method","visibility":"public"},"URI::Generic#path":{"description":"returns the path component of the URI.\n\n  URI(\"http://foo/bar/baz\").path #=> \"/bar/baz\"","name":"path","namespace":"URI::Generic","path":"URI::Generic#path","type":"instance_method","visibility":"public"},"URI::Generic#path=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the path component +v+.\n(with validation)\n\nsee also URI::Generic.check_path\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com/pub/files\")\n  uri.path = \"/faq/\"\n  # =>  \"/faq/\"\n  uri\n  #=> #<URI::HTTP:0x000000008e89e8 URL:http://my.example.com/faq/>","name":"path=","namespace":"URI::Generic","path":"URI::Generic#path=","type":"instance_method","visibility":"public"},"URI::Generic#port":{"description":"returns the port component of the URI.\n\n  URI(\"http://foo/bar/baz\").port #=> \"80\"\n\n  URI(\"http://foo:8080/bar/baz\").port #=> \"8080\"","name":"port","namespace":"URI::Generic","path":"URI::Generic#port","type":"instance_method","visibility":"public"},"URI::Generic#port=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the port component +v+.\n(with validation)\n\nsee also URI::Generic.check_port\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  uri.port = 8080\n  # =>  8080\n  uri\n  #=> #<URI::HTTP:0x000000008e89e8 URL:http://my.example.com:8080>","name":"port=","namespace":"URI::Generic","path":"URI::Generic#port=","type":"instance_method","visibility":"public"},"URI::Generic#query":{"description":"returns the query component of the URI.\n\n  URI(\"http://foo/bar/baz?search=FooBar\").query #=> \"search=FooBar\"","name":"query","namespace":"URI::Generic","path":"URI::Generic#query","type":"instance_method","visibility":"public"},"URI::Generic#query=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the query component +v+.\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com/?id=25\")\n  uri.query = \"id=1\"\n  # =>  \"id=1\"\n  uri\n  #=> #<URI::HTTP:0x000000008e89e8 URL:http://my.example.com/?id=1>","name":"query=","namespace":"URI::Generic","path":"URI::Generic#query=","type":"instance_method","visibility":"public"},"URI::Generic#registry":{"description":":nodoc:","name":"registry","namespace":"URI::Generic","path":"URI::Generic#registry","type":"instance_method","visibility":"public"},"URI::Generic#registry=":{"description":"","name":"registry=","namespace":"URI::Generic","path":"URI::Generic#registry=","type":"instance_method","visibility":"public"},"URI::Generic#relative?":{"description":"Checks if URI is relative","name":"relative?","namespace":"URI::Generic","path":"URI::Generic#relative?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"URI::Generic#replace!":{"description":"replace self by other URI object","name":"replace!","namespace":"URI::Generic","path":"URI::Generic#replace!","type":"instance_method","visibility":"private"},"URI::Generic#route_from":{"description":"== Args\n\n+oth+::\n   URI or String\n\n== Description\n\nCalculates relative path from oth to self\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse('http://my.example.com/main.rbx?page=1')\n  p uri.route_from('http://my.example.com')\n  #=> #<URI::Generic:0x20218858 URL:/main.rbx?page=1>","name":"-","namespace":"URI::Generic","path":"URI::Generic#-","type":"instance_method","visibility":"public"},"URI::Generic#route_from0":{"description":":stopdoc:","name":"route_from0","namespace":"URI::Generic","path":"URI::Generic#route_from0","type":"instance_method","visibility":"private"},"URI::Generic#route_from_path":{"description":":stopdoc:","name":"route_from_path","namespace":"URI::Generic","path":"URI::Generic#route_from_path","type":"instance_method","visibility":"private"},"URI::Generic#route_to":{"description":"== Args\n\n+oth+::\n   URI or String\n\n== Description\n\nCalculates relative path to oth from self\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse('http://my.example.com')\n  p uri.route_to('http://my.example.com/main.rbx?page=1')\n  #=> #<URI::Generic:0x2020c2f6 URL:/main.rbx?page=1>","name":"route_to","namespace":"URI::Generic","path":"URI::Generic#route_to","type":"instance_method","visibility":"public"},"URI::Generic#scheme":{"description":"returns the scheme component of the URI.\n\n  URI(\"http://foo/bar/baz\").scheme #=> \"http\"","name":"scheme","namespace":"URI::Generic","path":"URI::Generic#scheme","type":"instance_method","visibility":"public"},"URI::Generic#scheme=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the scheme component +v+.\n(with validation)\n\nsee also URI::Generic.check_scheme\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://my.example.com\")\n  uri.scheme = \"https\"\n  # =>  \"https\"\n  uri\n  #=> #<URI::HTTP:0x000000008e89e8 URL:https://my.example.com>","name":"scheme=","namespace":"URI::Generic","path":"URI::Generic#scheme=","type":"instance_method","visibility":"public"},"URI::Generic#select":{"description":"== Args\n\n+components+::\n   Multiple Symbol arguments defined in URI::HTTP\n\n== Description\n\nSelects specified components from URI\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse('http://myuser:mypass@my.example.com/test.rbx')\n  p uri.select(:userinfo, :host, :path)\n  # => [\"myuser:mypass\", \"my.example.com\", \"/test.rbx\"]","name":"select","namespace":"URI::Generic","path":"URI::Generic#select","type":"instance_method","visibility":"public"},"URI::Generic#set_host":{"description":"protected setter for the host component +v+\n\nsee also URI::Generic.host=","name":"set_host","namespace":"URI::Generic","path":"URI::Generic#set_host","type":"instance_method","visibility":"protected"},"URI::Generic#set_opaque":{"description":"protected setter for the opaque component +v+\n\nsee also URI::Generic.opaque=","name":"set_opaque","namespace":"URI::Generic","path":"URI::Generic#set_opaque","type":"instance_method","visibility":"protected"},"URI::Generic#set_password":{"description":"protected setter for the password component +v+\n\nsee also URI::Generic.password=","name":"set_password","namespace":"URI::Generic","path":"URI::Generic#set_password","type":"instance_method","visibility":"protected"},"URI::Generic#set_path":{"description":"protected setter for the path component +v+\n\nsee also URI::Generic.path=","name":"set_path","namespace":"URI::Generic","path":"URI::Generic#set_path","type":"instance_method","visibility":"protected"},"URI::Generic#set_port":{"description":"protected setter for the port component +v+\n\nsee also URI::Generic.port=","name":"set_port","namespace":"URI::Generic","path":"URI::Generic#set_port","type":"instance_method","visibility":"protected"},"URI::Generic#set_registry":{"description":":nodoc:","name":"set_registry","namespace":"URI::Generic","path":"URI::Generic#set_registry","type":"instance_method","visibility":"protected"},"URI::Generic#set_scheme":{"description":"protected setter for the scheme component +v+\n\nsee also URI::Generic.scheme=","name":"set_scheme","namespace":"URI::Generic","path":"URI::Generic#set_scheme","type":"instance_method","visibility":"protected"},"URI::Generic#set_user":{"description":"protected setter for the user component +v+\n\nsee also URI::Generic.user=","name":"set_user","namespace":"URI::Generic","path":"URI::Generic#set_user","type":"instance_method","visibility":"protected"},"URI::Generic#set_userinfo":{"description":"protect setter for the +user+ component, and +password+ if available.\n(with validation)\n\nsee also URI::Generic.userinfo=","name":"set_userinfo","namespace":"URI::Generic","path":"URI::Generic#set_userinfo","type":"instance_method","visibility":"protected"},"URI::Generic#split_path":{"description":"returns an Array of the path split on '/'","name":"split_path","namespace":"URI::Generic","path":"URI::Generic#split_path","type":"instance_method","visibility":"private"},"URI::Generic#split_userinfo":{"description":"returns the userinfo +ui+ as user, password\nif properly formatted as 'user:password'","name":"split_userinfo","namespace":"URI::Generic","path":"URI::Generic#split_userinfo","type":"instance_method","visibility":"private"},"URI::Generic#to_s":{"description":"Constructs String from URI","name":"to_s","namespace":"URI::Generic","path":"URI::Generic#to_s","type":"instance_method","visibility":"public"},"URI::Generic#user":{"description":"returns the user component","name":"user","namespace":"URI::Generic","path":"URI::Generic#user","type":"instance_method","visibility":"public"},"URI::Generic#user=":{"description":"== Args\n\n+v+::\n   String\n\n== Description\n\npublic setter for the +user+ component.\n(with validation)\n\nsee also URI::Generic.check_user\n\n== Usage\n\n  require 'uri'\n\n  uri = URI.parse(\"http://john:S3nsit1ve@my.example.com\")\n  uri.user = \"sam\"\n  # =>  \"sam\"\n  uri\n  #=> #<URI::HTTP:0x00000000881d90 URL:http://sam:V3ry_S3nsit1ve@my.example.com>","name":"user=","namespace":"URI::Generic","path":"URI::Generic#user=","type":"instance_method","visibility":"public"},"URI::Generic#userinfo":{"description":"returns the userinfo, either as 'user' or 'user:password'","name":"userinfo","namespace":"URI::Generic","path":"URI::Generic#userinfo","type":"instance_method","visibility":"public"},"URI::Generic#userinfo=":{"description":"Sets userinfo, argument is string like 'name:pass'","name":"userinfo=","namespace":"URI::Generic","path":"URI::Generic#userinfo=","type":"instance_method","visibility":"public"},"URI::Generic.build":{"description":"== Synopsis\n\nSee #new\n\n== Description\n\nCreates a new URI::Generic instance from components of URI::Generic\nwith check.  Components are: scheme, userinfo, host, port, registry, path,\nopaque, query and fragment. You can provide arguments either by an Array or a Hash.\nSee #new for hash keys to use or for order of array items.","name":"build","namespace":"URI::Generic","path":"URI::Generic.build","type":"class_method","visibility":"public"},"URI::Generic.build2":{"description":"== Synopsis\n\nSee #new\n\n== Description\n\nAt first, tries to create a new URI::Generic instance using\nURI::Generic::build. But, if exception URI::InvalidComponentError is raised,\nthen it URI::Escape.escape all URI components and tries again.","name":"build2","namespace":"URI::Generic","path":"URI::Generic.build2","type":"class_method","visibility":"public"},"URI::Generic.component":{"description":"Components of the URI in the order.","name":"component","namespace":"URI::Generic","path":"URI::Generic.component","type":"class_method","visibility":"public"},"URI::Generic.default_port":{"description":"Returns default port","name":"default_port","namespace":"URI::Generic","path":"URI::Generic.default_port","type":"class_method","visibility":"public"},"URI::Generic.use_registry":{"description":":nodoc:","name":"use_registry","namespace":"URI::Generic","path":"URI::Generic.use_registry","type":"class_method","visibility":"public"},"URI::Generic::COMPONENT":{"description":"An Array of the available components for URI::Generic","name":"COMPONENT","namespace":"URI::Generic","path":"URI::Generic::COMPONENT","type":"constant","return":null,"visibility":"public"},"URI::Generic::DEFAULT_PORT":{"description":"A Default port of nil for URI::Generic","name":"DEFAULT_PORT","namespace":"URI::Generic","path":"URI::Generic::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::Generic::USE_REGISTRY":{"description":":nodoc:","name":"USE_REGISTRY","namespace":"URI::Generic","path":"URI::Generic::USE_REGISTRY","type":"constant","return":null,"visibility":"public"},"URI::HTML5ASCIIINCOMPAT":{"description":"","name":"HTML5ASCIIINCOMPAT","namespace":"URI","path":"URI::HTML5ASCIIINCOMPAT","type":"constant","return":null,"visibility":"public"},"URI::HTTP":{"description":"The syntax of HTTP URIs is defined in RFC1738 section 3.3.\n\nNote that the Ruby URI library allows HTTP URLs containing usernames and\npasswords. This is not legal as per the RFC, but used to be\nsupported in Internet Explorer 5 and 6, before the MS04-004 security\nupdate. See <URL:http://support.microsoft.com/kb/834489>.","name":"HTTP","namespace":"URI","path":"URI::HTTP","type":"class","visibility":"public"},"URI::HTTP#buffer_open":{"description":":nodoc:","name":"buffer_open","namespace":"URI::HTTP","path":"URI::HTTP#buffer_open","type":"instance_method","visibility":"public"},"URI::HTTP#initialize":{"description":"== Description\n\nCreate a new URI::HTTP object from generic URI components as per\nRFC 2396. No HTTP-specific syntax checking (as per RFC 1738) is\nperformed.\n\nArguments are +scheme+, +userinfo+, +host+, +port+, +registry+, +path+,\n+opaque+, +query+ and +fragment+, in that order.\n\nExample:\n\n    uri = URI::HTTP.new('http', nil, \"www.example.com\", nil, \"/path\",\n      \"query\", 'fragment')\n\n\nSee also URI::Generic.new","name":"initialize","namespace":"URI::HTTP","path":"URI::HTTP#initialize","type":"instance_method","visibility":"public","return":[["HTTP"],"a new instance of HTTP"]},"URI::HTTP#request_uri":{"description":"== Description\n\nReturns the full path for an HTTP request, as required by Net::HTTP::Get.\n\nIf the URI contains a query, the full path is URI#path + '?' + URI#query.\nOtherwise, the path is simply URI#path.","name":"request_uri","namespace":"URI::HTTP","path":"URI::HTTP#request_uri","type":"instance_method","visibility":"public"},"URI::HTTP.build":{"description":"== Description\n\nCreate a new URI::HTTP object from components, with syntax checking.\n\nThe components accepted are userinfo, host, port, path, query and\nfragment.\n\nThe components should be provided either as an Array, or as a Hash\nwith keys formed by preceding the component names with a colon.\n\nIf an Array is used, the components must be passed in the order\n[userinfo, host, port, path, query, fragment].\n\nExample:\n\n    newuri = URI::HTTP.build({:host => 'www.example.com',\n      :path => '/foo/bar'})\n\n    newuri = URI::HTTP.build([nil, \"www.example.com\", nil, \"/path\",\n      \"query\", 'fragment'])\n\nCurrently, if passed userinfo components this method generates\ninvalid HTTP URIs as per RFC 1738.","name":"build","namespace":"URI::HTTP","path":"URI::HTTP.build","type":"class_method","visibility":"public"},"URI::HTTP::COMPONENT":{"description":"An Array of the available components for URI::HTTP","name":"COMPONENT","namespace":"URI::HTTP","path":"URI::HTTP::COMPONENT","type":"constant","return":null,"visibility":"public"},"URI::HTTP::DEFAULT_PORT":{"description":"A Default port of 80 for URI::HTTP","name":"DEFAULT_PORT","namespace":"URI::HTTP","path":"URI::HTTP::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::HTTPS":{"description":"The default port for HTTPS URIs is 443, and the scheme is 'https:' rather\nthan 'http:'. Other than that, HTTPS URIs are identical to HTTP URIs;\nsee URI::HTTP.","name":"HTTPS","namespace":"URI","path":"URI::HTTPS","type":"class","visibility":"public"},"URI::HTTPS::DEFAULT_PORT":{"description":"A Default port of 443 for URI::HTTPS","name":"DEFAULT_PORT","namespace":"URI::HTTPS","path":"URI::HTTPS::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::InvalidComponentError":{"description":"Not a URI component.","name":"InvalidComponentError","namespace":"URI","path":"URI::InvalidComponentError","type":"class","visibility":"public"},"URI::InvalidURIError":{"description":"Not a URI.","name":"InvalidURIError","namespace":"URI","path":"URI::InvalidURIError","type":"class","visibility":"public"},"URI::LDAP":{"description":"LDAP URI SCHEMA (described in RFC2255)\nldap://<host>/<dn>[?<attrs>[?<scope>[?<filter>[?<extensions>]]]]","name":"LDAP","namespace":"URI","path":"URI::LDAP","type":"class","visibility":"public"},"URI::LDAP#attributes":{"description":"returns attributes.","name":"attributes","namespace":"URI::LDAP","path":"URI::LDAP#attributes","type":"instance_method","visibility":"public"},"URI::LDAP#attributes=":{"description":"setter for attributes +val+","name":"attributes=","namespace":"URI::LDAP","path":"URI::LDAP#attributes=","type":"instance_method","visibility":"public"},"URI::LDAP#build_path_query":{"description":"private method to assemble +query+ from +attributes+, +scope+, +filter+ and +extensions+.","name":"build_path_query","namespace":"URI::LDAP","path":"URI::LDAP#build_path_query","type":"instance_method","visibility":"private"},"URI::LDAP#dn":{"description":"returns dn.","name":"dn","namespace":"URI::LDAP","path":"URI::LDAP#dn","type":"instance_method","visibility":"public"},"URI::LDAP#dn=":{"description":"setter for dn +val+","name":"dn=","namespace":"URI::LDAP","path":"URI::LDAP#dn=","type":"instance_method","visibility":"public"},"URI::LDAP#extensions":{"description":"returns extensions.","name":"extensions","namespace":"URI::LDAP","path":"URI::LDAP#extensions","type":"instance_method","visibility":"public"},"URI::LDAP#extensions=":{"description":"setter for extensions +val+","name":"extensions=","namespace":"URI::LDAP","path":"URI::LDAP#extensions=","type":"instance_method","visibility":"public"},"URI::LDAP#filter":{"description":"returns filter.","name":"filter","namespace":"URI::LDAP","path":"URI::LDAP#filter","type":"instance_method","visibility":"public"},"URI::LDAP#filter=":{"description":"setter for filter +val+","name":"filter=","namespace":"URI::LDAP","path":"URI::LDAP#filter=","type":"instance_method","visibility":"public"},"URI::LDAP#hierarchical?":{"description":"Checks if URI has a path\nFor URI::LDAP this will return +false+","name":"hierarchical?","namespace":"URI::LDAP","path":"URI::LDAP#hierarchical?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"URI::LDAP#initialize":{"description":"== Description\n\nCreate a new URI::LDAP object from generic URI components as per\nRFC 2396. No LDAP-specific syntax checking is performed.\n\nArguments are +scheme+, +userinfo+, +host+, +port+, +registry+, +path+,\n+opaque+, +query+ and +fragment+, in that order.\n\nExample:\n\n    uri = URI::LDAP.new(\"ldap\", nil, \"ldap.example.com\", nil,\n      \"/dc=example;dc=com\", \"query\", nil, nil, nil, nil)\n\n\nSee also URI::Generic.new","name":"initialize","namespace":"URI::LDAP","path":"URI::LDAP#initialize","type":"instance_method","visibility":"public","return":[["LDAP"],"a new instance of LDAP"]},"URI::LDAP#parse_dn":{"description":"private method to cleanup +dn+ from using the +path+ component attribute","name":"parse_dn","namespace":"URI::LDAP","path":"URI::LDAP#parse_dn","type":"instance_method","visibility":"private"},"URI::LDAP#parse_query":{"description":"private method to cleanup +attributes+, +scope+, +filter+ and +extensions+,\nfrom using the +query+ component attribute","name":"parse_query","namespace":"URI::LDAP","path":"URI::LDAP#parse_query","type":"instance_method","visibility":"private"},"URI::LDAP#scope":{"description":"returns scope.","name":"scope","namespace":"URI::LDAP","path":"URI::LDAP#scope","type":"instance_method","visibility":"public"},"URI::LDAP#scope=":{"description":"setter for scope +val+","name":"scope=","namespace":"URI::LDAP","path":"URI::LDAP#scope=","type":"instance_method","visibility":"public"},"URI::LDAP#set_attributes":{"description":"private setter for attributes +val+","name":"set_attributes","namespace":"URI::LDAP","path":"URI::LDAP#set_attributes","type":"instance_method","visibility":"protected"},"URI::LDAP#set_dn":{"description":"private setter for dn +val+","name":"set_dn","namespace":"URI::LDAP","path":"URI::LDAP#set_dn","type":"instance_method","visibility":"protected"},"URI::LDAP#set_extensions":{"description":"private setter for extensions +val+","name":"set_extensions","namespace":"URI::LDAP","path":"URI::LDAP#set_extensions","type":"instance_method","visibility":"protected"},"URI::LDAP#set_filter":{"description":"private setter for filter +val+","name":"set_filter","namespace":"URI::LDAP","path":"URI::LDAP#set_filter","type":"instance_method","visibility":"protected"},"URI::LDAP#set_scope":{"description":"private setter for scope +val+","name":"set_scope","namespace":"URI::LDAP","path":"URI::LDAP#set_scope","type":"instance_method","visibility":"protected"},"URI::LDAP.build":{"description":"== Description\n\nCreate a new URI::LDAP object from components, with syntax checking.\n\nThe components accepted are host, port, dn, attributes,\nscope, filter, and extensions.\n\nThe components should be provided either as an Array, or as a Hash\nwith keys formed by preceding the component names with a colon.\n\nIf an Array is used, the components must be passed in the order\n[host, port, dn, attributes, scope, filter, extensions].\n\nExample:\n\n    newuri = URI::LDAP.build({:host => 'ldap.example.com',\n      :dn> => '/dc=example'})\n\n    newuri = URI::LDAP.build([\"ldap.example.com\", nil,\n      \"/dc=example;dc=com\", \"query\", nil, nil, nil])","name":"build","namespace":"URI::LDAP","path":"URI::LDAP.build","type":"class_method","visibility":"public"},"URI::LDAP::COMPONENT":{"description":"An Array of the available components for URI::LDAP","name":"COMPONENT","namespace":"URI::LDAP","path":"URI::LDAP::COMPONENT","type":"constant","return":null,"visibility":"public"},"URI::LDAP::DEFAULT_PORT":{"description":"A Default port of 389 for URI::LDAP","name":"DEFAULT_PORT","namespace":"URI::LDAP","path":"URI::LDAP::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::LDAP::SCOPE":{"description":"Scopes available for the starting point.\n\n* SCOPE_BASE - the Base DN\n* SCOPE_ONE  - one level under the Base DN, not including the base DN and\n               not including any entries under this.\n* SCOPE_SUB  - subtress, all entries at all levels","name":"SCOPE","namespace":"URI::LDAP","path":"URI::LDAP::SCOPE","type":"constant","return":null,"visibility":"public"},"URI::LDAPS":{"description":"The default port for LDAPS URIs is 636, and the scheme is 'ldaps:' rather\nthan 'ldap:'. Other than that, LDAPS URIs are identical to LDAP URIs;\nsee URI::LDAP.","name":"LDAPS","namespace":"URI","path":"URI::LDAPS","type":"class","visibility":"public"},"URI::LDAPS::DEFAULT_PORT":{"description":"A Default port of 636 for URI::LDAPS","name":"DEFAULT_PORT","namespace":"URI::LDAPS","path":"URI::LDAPS::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::MailTo":{"description":"RFC6068, The mailto URL scheme","name":"MailTo","namespace":"URI","path":"URI::MailTo","type":"class","visibility":"public"},"URI::MailTo#check_headers":{"description":"check the headers +v+ component against either\n* HEADER_REGEXP","name":"check_headers","namespace":"URI::MailTo","path":"URI::MailTo#check_headers","type":"instance_method","visibility":"private"},"URI::MailTo#check_to":{"description":"check the to +v+ component","name":"check_to","namespace":"URI::MailTo","path":"URI::MailTo#check_to","type":"instance_method","visibility":"private"},"URI::MailTo#headers":{"description":"E-mail headers set by the URL, as an Array of Arrays","name":"headers","namespace":"URI::MailTo","path":"URI::MailTo#headers","type":"instance_method","visibility":"public"},"URI::MailTo#headers=":{"description":"setter for headers +v+","name":"headers=","namespace":"URI::MailTo","path":"URI::MailTo#headers=","type":"instance_method","visibility":"public"},"URI::MailTo#initialize":{"description":"== Description\n\nCreates a new URI::MailTo object from generic URL components with\nno syntax checking.\n\nThis method is usually called from URI::parse, which checks\nthe validity of each component.","name":"initialize","namespace":"URI::MailTo","path":"URI::MailTo#initialize","type":"instance_method","visibility":"public","return":[["MailTo"],"a new instance of MailTo"]},"URI::MailTo#set_headers":{"description":"private setter for headers +v+","name":"set_headers","namespace":"URI::MailTo","path":"URI::MailTo#set_headers","type":"instance_method","visibility":"protected"},"URI::MailTo#set_to":{"description":"private setter for to +v+","name":"set_to","namespace":"URI::MailTo","path":"URI::MailTo#set_to","type":"instance_method","visibility":"protected"},"URI::MailTo#to":{"description":"The primary e-mail address of the URL, as a String","name":"to","namespace":"URI::MailTo","path":"URI::MailTo#to","type":"instance_method","visibility":"public"},"URI::MailTo#to=":{"description":"setter for to +v+","name":"to=","namespace":"URI::MailTo","path":"URI::MailTo#to=","type":"instance_method","visibility":"public"},"URI::MailTo#to_mailtext":{"description":"Returns the RFC822 e-mail text equivalent of the URL, as a String.\n\nExample:\n\n  require 'uri'\n\n  uri = URI.parse(\"mailto:ruby-list@ruby-lang.org?Subject=subscribe&cc=myaddr\")\n  uri.to_mailtext\n  # => \"To: ruby-list@ruby-lang.org\\nSubject: subscribe\\nCc: myaddr\\n\\n\\n\"","name":"to_rfc822text","namespace":"URI::MailTo","path":"URI::MailTo#to_rfc822text","type":"instance_method","visibility":"public"},"URI::MailTo#to_rfc822text":{"description":"Returns the RFC822 e-mail text equivalent of the URL, as a String.\n\nExample:\n\n  require 'uri'\n\n  uri = URI.parse(\"mailto:ruby-list@ruby-lang.org?Subject=subscribe&cc=myaddr\")\n  uri.to_mailtext\n  # => \"To: ruby-list@ruby-lang.org\\nSubject: subscribe\\nCc: myaddr\\n\\n\\n\"","name":"to_rfc822text","namespace":"URI::MailTo","path":"URI::MailTo#to_rfc822text","type":"instance_method","visibility":"public"},"URI::MailTo#to_s":{"description":"Constructs String from URI","name":"to_s","namespace":"URI::MailTo","path":"URI::MailTo#to_s","type":"instance_method","visibility":"public"},"URI::MailTo.build":{"description":"== Description\n\nCreates a new URI::MailTo object from components, with syntax checking.\n\nComponents can be provided as an Array or Hash. If an Array is used,\nthe components must be supplied as [to, headers].\n\nIf a Hash is used, the keys are the component names preceded by colons.\n\nThe headers can be supplied as a pre-encoded string, such as\n\"subject=subscribe&cc=address\", or as an Array of Arrays like\n[['subject', 'subscribe'], ['cc', 'address']]\n\nExamples:\n\n   require 'uri'\n\n   m1 = URI::MailTo.build(['joe@example.com', 'subject=Ruby'])\n   puts m1.to_s  ->  mailto:joe@example.com?subject=Ruby\n\n   m2 = URI::MailTo.build(['john@example.com', [['Subject', 'Ruby'], ['Cc', 'jack@example.com']]])\n   puts m2.to_s  ->  mailto:john@example.com?Subject=Ruby&Cc=jack@example.com\n\n   m3 = URI::MailTo.build({:to => 'listman@example.com', :headers => [['subject', 'subscribe']]})\n   puts m3.to_s  ->  mailto:listman@example.com?subject=subscribe","name":"build","namespace":"URI::MailTo","path":"URI::MailTo.build","type":"class_method","visibility":"public"},"URI::MailTo::COMPONENT":{"description":"An Array of the available components for URI::MailTo","name":"COMPONENT","namespace":"URI::MailTo","path":"URI::MailTo::COMPONENT","type":"constant","return":null,"visibility":"public"},"URI::MailTo::DEFAULT_PORT":{"description":"A Default port of nil for URI::MailTo","name":"DEFAULT_PORT","namespace":"URI::MailTo","path":"URI::MailTo::DEFAULT_PORT","type":"constant","return":null,"visibility":"public"},"URI::MailTo::EMAIL_REGEXP":{"description":"practical regexp for email address\nhttp://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address","name":"EMAIL_REGEXP","namespace":"URI::MailTo","path":"URI::MailTo::EMAIL_REGEXP","type":"constant","return":null,"visibility":"public"},"URI::MailTo::HEADER_REGEXP":{"description":"; RFC 6068\nhfields      = \"?\" hfield *( \"&\" hfield )\nhfield       = hfname \"=\" hfvalue\nhfname       = *qchar\nhfvalue      = *qchar\nqchar        = unreserved / pct-encoded / some-delims\nsome-delims  = \"!\" / \"$\" / \"'\" / \"(\" / \")\" / \"*\"\n             / \"+\" / \",\" / \";\" / \":\" / \"@\"\n\n; RFC3986\nunreserved   = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\npct-encoded  = \"%\" HEXDIG HEXDIG","name":"HEADER_REGEXP","namespace":"URI::MailTo","path":"URI::MailTo::HEADER_REGEXP","type":"constant","return":null,"visibility":"public"},"URI::Parser":{"description":"","name":"Parser","namespace":"URI","path":"URI::Parser","type":"constant","return":null,"visibility":"public"},"URI::REGEXP":{"description":"","name":"REGEXP","namespace":"URI","path":"URI::REGEXP","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_Parser":{"description":"class that Parses String's into URI's\n\nIt contains a Hash set of patterns and Regexp's that match and validate.","name":"RFC2396_Parser","namespace":"URI","path":"URI::RFC2396_Parser","type":"class","visibility":"public"},"URI::RFC2396_Parser#convert_to_uri":{"description":"","name":"convert_to_uri","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#convert_to_uri","type":"instance_method","visibility":"private"},"URI::RFC2396_Parser#escape":{"description":":call-seq:\n  escape( str )\n  escape( str, unsafe )\n\n== Args\n\n+str+::\n   String to make safe\n+unsafe+::\n   Regexp to apply. Defaults to self.regexp[:UNSAFE]\n\n== Description\n\nconstructs a safe String from +str+, removing unsafe characters,\nreplacing them with codes.","name":"escape","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#escape","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#extract":{"description":":call-seq:\n  extract( str )\n  extract( str, schemes )\n  extract( str, schemes ) {|item| block }\n\n== Args\n\n+str+::\n   String to search\n+schemes+::\n   Patterns to apply to +str+\n\n== Description\n\nAttempts to parse and merge a set of URIs\nIf no +block+ given , then returns the result,\nelse it calls +block+ for each element in result.\n\nsee also URI::Parser.make_regexp","name":"extract","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#extract","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#initialize":{"description":"== Synopsis\n\n  URI::Parser.new([opts])\n\n== Args\n\nThe constructor accepts a hash as options for parser.\nKeys of options are pattern names of URI components\nand values of options are pattern strings.\nThe constructor generates set of regexps for parsing URIs.\n\nYou can use the following keys:\n\n  * :ESCAPED (URI::PATTERN::ESCAPED in default)\n  * :UNRESERVED (URI::PATTERN::UNRESERVED in default)\n  * :DOMLABEL (URI::PATTERN::DOMLABEL in default)\n  * :TOPLABEL (URI::PATTERN::TOPLABEL in default)\n  * :HOSTNAME (URI::PATTERN::HOSTNAME in default)\n\n== Examples\n\n  p = URI::Parser.new(:ESCAPED => \"(?:%[a-fA-F0-9]{2}|%u[a-fA-F0-9]{4})\")\n  u = p.parse(\"http://example.jp/%uABCD\") #=> #<URI::HTTP:0xb78cf4f8 URL:http://example.jp/%uABCD>\n  URI.parse(u.to_s) #=> raises URI::InvalidURIError\n\n  s = \"http://example.com/ABCD\"\n  u1 = p.parse(s) #=> #<URI::HTTP:0xb78c3220 URL:http://example.com/ABCD>\n  u2 = URI.parse(s) #=> #<URI::HTTP:0xb78b6d54 URL:http://example.com/ABCD>\n  u1 == u2 #=> true\n  u1.eql?(u2) #=> false","name":"initialize","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#initialize","type":"instance_method","visibility":"public","return":[["RFC2396_Parser"],"a new instance of RFC2396_Parser"]},"URI::RFC2396_Parser#initialize_pattern":{"description":"Constructs the default Hash of patterns","name":"initialize_pattern","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#initialize_pattern","type":"instance_method","visibility":"private"},"URI::RFC2396_Parser#initialize_regexp":{"description":"Constructs the default Hash of Regexp's","name":"initialize_regexp","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#initialize_regexp","type":"instance_method","visibility":"private"},"URI::RFC2396_Parser#inspect":{"description":"","name":"inspect","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#inspect","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#join":{"description":"== Args\n\n+uris+::\n   an Array of Strings\n\n== Description\n\nAttempts to parse and merge a set of URIs","name":"join","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#join","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#make_regexp":{"description":"returns Regexp that is default self.regexp[:ABS_URI_REF],\nunless +schemes+ is provided. Then it is a Regexp.union with self.pattern[:X_ABS_URI]","name":"make_regexp","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#make_regexp","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#parse":{"description":"== Args\n\n+uri+::\n   String\n\n== Description\n\nparses +uri+ and constructs either matching URI scheme object\n(FTP, HTTP, HTTPS, LDAP, LDAPS, or MailTo) or URI::Generic\n\n== Usage\n\n  p = URI::Parser.new\n  p.parse(\"ldap://ldap.example.com/dc=example?user=john\")\n  #=> #<URI::LDAP:0x00000000b9e7e8 URL:ldap://ldap.example.com/dc=example?user=john>","name":"parse","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#parse","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#pattern":{"description":"The Hash of patterns.\n\nsee also URI::Parser.initialize_pattern","name":"pattern","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#pattern","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#regexp":{"description":"The Hash of Regexp\n\nsee also URI::Parser.initialize_regexp","name":"regexp","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#regexp","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#split":{"description":"Returns a split URI against regexp[:ABS_URI]","name":"split","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#split","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser#unescape":{"description":":call-seq:\n  unescape( str )\n  unescape( str, unsafe )\n\n== Args\n\n+str+::\n   String to remove escapes from\n+unsafe+::\n   Regexp to apply. Defaults to self.regexp[:ESCAPED]\n\n== Description\n\nRemoves escapes from +str+","name":"unescape","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser#unescape","type":"instance_method","visibility":"public"},"URI::RFC2396_Parser::@@to_s":{"description":"","name":"@@to_s","namespace":"URI::RFC2396_Parser","path":"URI::RFC2396_Parser::@@to_s","type":"classvariable","visibility":"public"},"URI::RFC2396_REGEXP":{"description":"Includes URI::REGEXP::PATTERN","name":"RFC2396_REGEXP","namespace":"URI","path":"URI::RFC2396_REGEXP","type":"module","visibility":"public"},"URI::RFC2396_REGEXP::PATTERN":{"description":"Patterns used to parse URI's","name":"PATTERN","namespace":"URI::RFC2396_REGEXP","path":"URI::RFC2396_REGEXP::PATTERN","type":"module","visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::ALNUM":{"description":"alphanum      = alpha | digit","name":"ALNUM","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::ALNUM","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::ALPHA":{"description":"alpha         = lowalpha | upalpha","name":"ALPHA","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::ALPHA","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::DOMLABEL":{"description":"domainlabel   = alphanum | alphanum *( alphanum | \"-\" ) alphanum","name":"DOMLABEL","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::DOMLABEL","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::ESCAPED":{"description":"escaped       = \"%\" hex hex","name":"ESCAPED","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::ESCAPED","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::HEX":{"description":"hex           = digit | \"A\" | \"B\" | \"C\" | \"D\" | \"E\" | \"F\" |\n                        \"a\" | \"b\" | \"c\" | \"d\" | \"e\" | \"f\"","name":"HEX","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::HEX","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::HOSTNAME":{"description":"hostname      = *( domainlabel \".\" ) toplabel [ \".\" ]","name":"HOSTNAME","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::HOSTNAME","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::RESERVED":{"description":"reserved      = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" |\n                \"$\" | \",\"\nreserved      = \";\" | \"/\" | \"?\" | \":\" | \"@\" | \"&\" | \"=\" | \"+\" |\n                \"$\" | \",\" | \"[\" | \"]\" (RFC 2732)","name":"RESERVED","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::RESERVED","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::TOPLABEL":{"description":"toplabel      = alpha | alpha *( alphanum | \"-\" ) alphanum","name":"TOPLABEL","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::TOPLABEL","type":"constant","return":null,"visibility":"public"},"URI::RFC2396_REGEXP::PATTERN::UNRESERVED":{"description":"mark          = \"-\" | \"_\" | \".\" | \"!\" | \"~\" | \"*\" | \"'\" |\n                \"(\" | \")\"\nunreserved    = alphanum | mark","name":"UNRESERVED","namespace":"URI::RFC2396_REGEXP::PATTERN","path":"URI::RFC2396_REGEXP::PATTERN::UNRESERVED","type":"constant","return":null,"visibility":"public"},"URI::RFC3986_PARSER":{"description":"","name":"RFC3986_PARSER","namespace":"URI","path":"URI::RFC3986_PARSER","type":"constant","return":null,"visibility":"public"},"URI::RFC3986_Parser":{"description":":nodoc:","name":"RFC3986_Parser","namespace":"URI","path":"URI::RFC3986_Parser","type":"class","visibility":"public"},"URI::RFC3986_Parser#convert_to_uri":{"description":"","name":"convert_to_uri","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#convert_to_uri","type":"instance_method","visibility":"private"},"URI::RFC3986_Parser#default_regexp":{"description":":nodoc:","name":"default_regexp","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#default_regexp","type":"instance_method","visibility":"private"},"URI::RFC3986_Parser#initialize":{"description":"","name":"initialize","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#initialize","type":"instance_method","visibility":"public","return":[["RFC3986_Parser"],"a new instance of RFC3986_Parser"]},"URI::RFC3986_Parser#inspect":{"description":"","name":"inspect","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#inspect","type":"instance_method","visibility":"public"},"URI::RFC3986_Parser#join":{"description":":nodoc:","name":"join","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#join","type":"instance_method","visibility":"public"},"URI::RFC3986_Parser#parse":{"description":":nodoc:","name":"parse","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#parse","type":"instance_method","visibility":"public"},"URI::RFC3986_Parser#regexp":{"description":"Returns the value of attribute regexp","name":"regexp","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#regexp","type":"instance_method","visibility":"public"},"URI::RFC3986_Parser#split":{"description":":nodoc:","name":"split","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser#split","type":"instance_method","visibility":"public"},"URI::RFC3986_Parser::@@to_s":{"description":"","name":"@@to_s","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser::@@to_s","type":"classvariable","visibility":"public"},"URI::RFC3986_Parser::RFC3986_URI":{"description":"URI defined in RFC3986\nthis regexp is modified not to host is not empty string","name":"RFC3986_URI","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser::RFC3986_URI","type":"constant","return":null,"visibility":"public"},"URI::RFC3986_Parser::RFC3986_relative_ref":{"description":"","name":"RFC3986_relative_ref","namespace":"URI::RFC3986_Parser","path":"URI::RFC3986_Parser::RFC3986_relative_ref","type":"constant","return":null,"visibility":"public"},"URI::TBLDECWWWCOMP_":{"description":":nodoc:","name":"TBLDECWWWCOMP_","namespace":"URI","path":"URI::TBLDECWWWCOMP_","type":"constant","return":null,"visibility":"public"},"URI::TBLENCWWWCOMP_":{"description":":nodoc:","name":"TBLENCWWWCOMP_","namespace":"URI","path":"URI::TBLENCWWWCOMP_","type":"constant","return":null,"visibility":"public"},"URI::Util":{"description":":nodoc:","name":"Util","namespace":"URI","path":"URI::Util","type":"module","visibility":"public"},"URI::Util#make_components_hash":{"description":"","name":"make_components_hash","namespace":"URI::Util","path":"URI::Util#make_components_hash","type":"module_function","visibility":"private"},"URI::Util.make_components_hash":{"description":"","name":"make_components_hash","namespace":"URI::Util","path":"URI::Util.make_components_hash","type":"module_function","visibility":"public"},"URI::VERSION":{"description":"","name":"VERSION","namespace":"URI","path":"URI::VERSION","type":"constant","return":null,"visibility":"public"},"URI::VERSION_CODE":{"description":":stopdoc:","name":"VERSION_CODE","namespace":"URI","path":"URI::VERSION_CODE","type":"constant","return":null,"visibility":"public"},"URI::WEB_ENCODINGS_":{"description":"curl http://encoding.spec.whatwg.org/encodings.json|rb -rpp -rjson -e'H={};h={\"shift_jis\"=>\"Windows-31J\",\"euc-jp\"=>\"cp51932\",\"iso-2022-jp\"=>\"cp50221\",\"x-mac-cyrillic\"=>\"macCyrillic\"};JSON($<.read).map{|x|x[\"encodings\"]}.flatten.each{|x|Encoding.find(n=h.fetch(n=x[\"name\"],n))rescue next;x[\"labels\"].each{|y|H[y]=n}};pp H'","name":"WEB_ENCODINGS_","namespace":"URI","path":"URI::WEB_ENCODINGS_","type":"constant","return":null,"visibility":"private"},"OptionParser":{"description":"--\n== Developer Documentation (not for RDoc output)\n\n=== Class tree\n\n- OptionParser:: front end\n- OptionParser::Switch:: each switches\n- OptionParser::List:: options list\n- OptionParser::ParseError:: errors on parsing\n  - OptionParser::AmbiguousOption\n  - OptionParser::NeedlessArgument\n  - OptionParser::MissingArgument\n  - OptionParser::InvalidOption\n  - OptionParser::InvalidArgument\n    - OptionParser::AmbiguousArgument\n\n=== Object relationship diagram\n\n  +--------------+\n  | OptionParser |<>-----+\n  +--------------+       |                      +--------+\n                         |                    ,-| Switch |\n       on_head -------->+---------------+    /  +--------+\n       accept/reject -->| List          |<|>-\n                        |               |<|>-  +----------+\n       on ------------->+---------------+    `-| argument |\n                          :           :        |  class   |\n                        +---------------+      |==========|\n       on_tail -------->|               |      |pattern   |\n                        +---------------+      |----------|\n  OptionParser.accept ->| DefaultList   |      |converter |\n               reject   |(shared between|      +----------+\n                        | all instances)|\n                        +---------------+\n\n++\n\n== OptionParser\n\n=== Introduction\n\nOptionParser is a class for command-line option analysis.  It is much more\nadvanced, yet also easier to use, than GetoptLong, and is a more Ruby-oriented\nsolution.\n\n=== Features\n\n1. The argument specification and the code to handle it are written in the\n   same place.\n2. It can output an option summary; you don't need to maintain this string\n   separately.\n3. Optional and mandatory arguments are specified very gracefully.\n4. Arguments can be automatically converted to a specified class.\n5. Arguments can be restricted to a certain set.\n\nAll of these features are demonstrated in the examples below.  See\n#make_switch for full documentation.\n\n=== Minimal example\n\n  require 'optparse'\n\n  options = {}\n  OptionParser.new do |opts|\n    opts.banner = \"Usage: example.rb [options]\"\n\n    opts.on(\"-v\", \"--[no-]verbose\", \"Run verbosely\") do |v|\n      options[:verbose] = v\n    end\n  end.parse!\n\n  p options\n  p ARGV\n\n=== Generating Help\n\nOptionParser can be used to automatically generate help for the commands you\nwrite:\n\n  require 'optparse'\n\n  Options = Struct.new(:name)\n\n  class Parser\n    def self.parse(options)\n      args = Options.new(\"world\")\n\n      opt_parser = OptionParser.new do |opts|\n        opts.banner = \"Usage: example.rb [options]\"\n\n        opts.on(\"-nNAME\", \"--name=NAME\", \"Name to say hello to\") do |n|\n          args.name = n\n        end\n\n        opts.on(\"-h\", \"--help\", \"Prints this help\") do\n          puts opts\n          exit\n        end\n      end\n\n      opt_parser.parse!(options)\n      return args\n    end\n  end\n  options = Parser.parse %w[--help]\n\n  #=>\n     # Usage: example.rb [options]\n     #     -n, --name=NAME                  Name to say hello to\n     #     -h, --help                       Prints this help#\n\n=== Complete example\n\nThe following example is a complete Ruby program.  You can run it and see the\neffect of specifying various options.  This is probably the best way to learn\nthe features of +optparse+.\n\n  require 'optparse'\n  require 'optparse/time'\n  require 'ostruct'\n  require 'pp'\n\n  class OptparseExample\n\n    CODES = %w[iso-2022-jp shift_jis euc-jp utf8 binary]\n    CODE_ALIASES = { \"jis\" => \"iso-2022-jp\", \"sjis\" => \"shift_jis\" }\n\n    #\n    # Return a structure describing the options.\n    #\n    def self.parse(args)\n      # The options specified on the command line will be collected in *options*.\n      # We set default values here.\n      options = OpenStruct.new\n      options.library = []\n      options.inplace = false\n      options.encoding = \"utf8\"\n      options.transfer_type = :auto\n      options.verbose = false\n\n      opt_parser = OptionParser.new do |opts|\n        opts.banner = \"Usage: example.rb [options]\"\n\n        opts.separator \"\"\n        opts.separator \"Specific options:\"\n\n        # Mandatory argument.\n        opts.on(\"-r\", \"--require LIBRARY\",\n                \"Require the LIBRARY before executing your script\") do |lib|\n          options.library << lib\n        end\n\n        # Optional argument; multi-line description.\n        opts.on(\"-i\", \"--inplace [EXTENSION]\",\n                \"Edit ARGV files in place\",\n                \"  (make backup if EXTENSION supplied)\") do |ext|\n          options.inplace = true\n          options.extension = ext || ''\n          options.extension.sub!(/\\A\\.?(?=.)/, \".\")  # Ensure extension begins with dot.\n        end\n\n        # Cast 'delay' argument to a Float.\n        opts.on(\"--delay N\", Float, \"Delay N seconds before executing\") do |n|\n          options.delay = n\n        end\n\n        # Cast 'time' argument to a Time object.\n        opts.on(\"-t\", \"--time [TIME]\", Time, \"Begin execution at given time\") do |time|\n          options.time = time\n        end\n\n        # Cast to octal integer.\n        opts.on(\"-F\", \"--irs [OCTAL]\", OptionParser::OctalInteger,\n                \"Specify record separator (default \\\\0)\") do |rs|\n          options.record_separator = rs\n        end\n\n        # List of arguments.\n        opts.on(\"--list x,y,z\", Array, \"Example 'list' of arguments\") do |list|\n          options.list = list\n        end\n\n        # Keyword completion.  We are specifying a specific set of arguments (CODES\n        # and CODE_ALIASES - notice the latter is a Hash), and the user may provide\n        # the shortest unambiguous text.\n        code_list = (CODE_ALIASES.keys + CODES).join(',')\n        opts.on(\"--code CODE\", CODES, CODE_ALIASES, \"Select encoding\",\n                \"  (#{code_list})\") do |encoding|\n          options.encoding = encoding\n        end\n\n        # Optional argument with keyword completion.\n        opts.on(\"--type [TYPE]\", [:text, :binary, :auto],\n                \"Select transfer type (text, binary, auto)\") do |t|\n          options.transfer_type = t\n        end\n\n        # Boolean switch.\n        opts.on(\"-v\", \"--[no-]verbose\", \"Run verbosely\") do |v|\n          options.verbose = v\n        end\n\n        opts.separator \"\"\n        opts.separator \"Common options:\"\n\n        # No argument, shows at tail.  This will print an options summary.\n        # Try it and see!\n        opts.on_tail(\"-h\", \"--help\", \"Show this message\") do\n          puts opts\n          exit\n        end\n\n        # Another typical switch to print the version.\n        opts.on_tail(\"--version\", \"Show version\") do\n          puts ::Version.join('.')\n          exit\n        end\n      end\n\n      opt_parser.parse!(args)\n      options\n    end  # parse()\n\n  end  # class OptparseExample\n\n  options = OptparseExample.parse(ARGV)\n  pp options\n  pp ARGV\n\n=== Shell Completion\n\nFor modern shells (e.g. bash, zsh, etc.), you can use shell\ncompletion for command line options.\n\n=== Further documentation\n\nThe above examples should be enough to learn how to use this class.  If you\nhave any questions, file a ticket at http://bugs.ruby-lang.org.","name":"OptionParser","namespace":"","path":"OptionParser","type":"class","visibility":"public"},"OptionParser#abort":{"description":"","name":"abort","namespace":"OptionParser","path":"OptionParser#abort","type":"instance_method","visibility":"public"},"OptionParser#accept":{"description":"Directs to accept specified class +t+. The argument string is passed to\nthe block in which it should be converted to the desired class.\n\n+t+::   Argument class specifier, any object including Class.\n+pat+:: Pattern for argument, defaults to +t+ if it responds to match.\n\n  accept(t, pat, &block)","name":"accept","namespace":"OptionParser","path":"OptionParser#accept","type":"instance_method","visibility":"public"},"OptionParser#add_officious":{"description":":nodoc:","name":"add_officious","namespace":"OptionParser","path":"OptionParser#add_officious","type":"instance_method","visibility":"public"},"OptionParser#banner":{"description":"Heading banner preceding summary.","name":"banner","namespace":"OptionParser","path":"OptionParser#banner","type":"instance_method","visibility":"public"},"OptionParser#banner=":{"description":"Heading banner preceding summary.","name":"set_banner","namespace":"OptionParser","path":"OptionParser#set_banner","type":"instance_method","visibility":"public"},"OptionParser#set_banner":{"description":"Heading banner preceding summary.\nfor experimental cascading :-)","name":"set_banner","namespace":"OptionParser","path":"OptionParser#set_banner","type":"instance_method","visibility":"public"},"OptionParser#base":{"description":"Subject of #on_tail.","name":"base","namespace":"OptionParser","path":"OptionParser#base","type":"instance_method","visibility":"public"},"OptionParser#candidate":{"description":"","name":"candidate","namespace":"OptionParser","path":"OptionParser#candidate","type":"instance_method","visibility":"public"},"OptionParser#complete":{"description":"Completes shortened long style option switch and returns pair of\ncanonical switch and switch descriptor OptionParser::Switch.\n\n+id+::    Searching table.\n+opt+::   Searching key.\n+icase+:: Search case insensitive if true.\n+pat+::   Optional pattern for completion.","name":"complete","namespace":"OptionParser","path":"OptionParser#complete","type":"instance_method","visibility":"private"},"OptionParser#compsys":{"description":":nodoc:","name":"compsys","namespace":"OptionParser","path":"OptionParser#compsys","type":"instance_method","visibility":"public"},"OptionParser#def_head_option":{"description":"","name":"def_head_option","namespace":"OptionParser","path":"OptionParser#def_head_option","type":"instance_method","visibility":"public"},"OptionParser#def_option":{"description":"","name":"def_option","namespace":"OptionParser","path":"OptionParser#def_option","type":"instance_method","visibility":"public"},"OptionParser#def_tail_option":{"description":"","name":"def_tail_option","namespace":"OptionParser","path":"OptionParser#def_tail_option","type":"instance_method","visibility":"public"},"OptionParser#default_argv":{"description":"Strings to be parsed in default.","name":"default_argv","namespace":"OptionParser","path":"OptionParser#default_argv","type":"instance_method","visibility":"public"},"OptionParser#default_argv=":{"description":"Strings to be parsed in default.","name":"default_argv=","namespace":"OptionParser","path":"OptionParser#default_argv=","type":"instance_method","visibility":"public"},"OptionParser#define":{"description":"","name":"def_option","namespace":"OptionParser","path":"OptionParser#def_option","type":"instance_method","visibility":"public"},"OptionParser#define_head":{"description":"","name":"def_head_option","namespace":"OptionParser","path":"OptionParser#def_head_option","type":"instance_method","visibility":"public"},"OptionParser#define_tail":{"description":"","name":"def_tail_option","namespace":"OptionParser","path":"OptionParser#def_tail_option","type":"instance_method","visibility":"public"},"OptionParser#environment":{"description":"Parses environment variable +env+ or its uppercase with splitting like a\nshell.\n\n+env+ defaults to the basename of the program.","name":"environment","namespace":"OptionParser","path":"OptionParser#environment","type":"instance_method","visibility":"public"},"OptionParser#getopts":{"description":"Wrapper method for getopts.rb.\n\n  params = ARGV.getopts(\"ab:\", \"foo\", \"bar:\", \"zot:Z;zot option)\n  # params[:a] = true   # -a\n  # params[:b] = \"1\"    # -b1\n  # params[:foo] = \"1\"  # --foo\n  # params[:bar] = \"x\"  # --bar x\n  # params[:zot] = \"z\"  # --zot Z","name":"getopts","namespace":"OptionParser","path":"OptionParser#getopts","type":"instance_method","visibility":"public"},"OptionParser#help":{"description":"Returns option summary string.","name":"to_s","namespace":"OptionParser","path":"OptionParser#to_s","type":"instance_method","visibility":"public"},"OptionParser#to_s":{"description":"Returns option summary string.","name":"to_s","namespace":"OptionParser","path":"OptionParser#to_s","type":"instance_method","visibility":"public"},"OptionParser#inc":{"description":"","name":"inc","namespace":"OptionParser","path":"OptionParser#inc","type":"instance_method","visibility":"public"},"OptionParser#initialize":{"description":"Initializes the instance and yields itself if called with a block.\n\n+banner+:: Banner message.\n+width+::  Summary width.\n+indent+:: Summary indent.","name":"initialize","namespace":"OptionParser","path":"OptionParser#initialize","type":"instance_method","visibility":"public","return":[["OptionParser"],"a new instance of OptionParser"]},"OptionParser#load":{"description":"Loads options from file names as +filename+. Does nothing when the file\nis not present. Returns whether successfully loaded.\n\n+filename+ defaults to basename of the program without suffix in a\ndirectory ~/.options.","name":"load","namespace":"OptionParser","path":"OptionParser#load","type":"instance_method","visibility":"public"},"OptionParser#make_switch":{"description":"Creates an OptionParser::Switch from the parameters. The parsed argument\nvalue is passed to the given block, where it can be processed.\n\nSee at the beginning of OptionParser for some full examples.\n\n+opts+ can include the following elements:\n\n[Argument style:]\n  One of the following:\n    :NONE, :REQUIRED, :OPTIONAL\n\n[Argument pattern:]\n  Acceptable option argument format, must be pre-defined with\n  OptionParser.accept or OptionParser#accept, or Regexp. This can appear\n  once or assigned as String if not present, otherwise causes an\n  ArgumentError. Examples:\n    Float, Time, Array\n\n[Possible argument values:]\n  Hash or Array.\n    [:text, :binary, :auto]\n    %w[iso-2022-jp shift_jis euc-jp utf8 binary]\n    { \"jis\" => \"iso-2022-jp\", \"sjis\" => \"shift_jis\" }\n\n[Long style switch:]\n  Specifies a long style switch which takes a mandatory, optional or no\n  argument. It's a string of the following form:\n    \"--switch=MANDATORY\" or \"--switch MANDATORY\"\n    \"--switch[=OPTIONAL]\"\n    \"--switch\"\n\n[Short style switch:]\n  Specifies short style switch which takes a mandatory, optional or no\n  argument. It's a string of the following form:\n    \"-xMANDATORY\"\n    \"-x[OPTIONAL]\"\n    \"-x\"\n  There is also a special form which matches character range (not full\n  set of regular expression):\n    \"-[a-z]MANDATORY\"\n    \"-[a-z][OPTIONAL]\"\n    \"-[a-z]\"\n\n[Argument style and description:]\n  Instead of specifying mandatory or optional arguments directly in the\n  switch parameter, this separate parameter can be used.\n    \"=MANDATORY\"\n    \"=[OPTIONAL]\"\n\n[Description:]\n  Description string for the option.\n    \"Run verbosely\"\n\n[Handler:]\n  Handler for the parsed argument value. Either give a block or pass a\n  Proc or Method as an argument.","name":"make_switch","namespace":"OptionParser","path":"OptionParser#make_switch","type":"instance_method","visibility":"public"},"OptionParser#new":{"description":"Pushes a new List.","name":"new","namespace":"OptionParser","path":"OptionParser#new","type":"instance_method","visibility":"public"},"OptionParser#notwice":{"description":"Checks if an argument is given twice, in which case an ArgumentError is\nraised. Called from OptionParser#switch only.\n\n+obj+:: New argument.\n+prv+:: Previously specified argument.\n+msg+:: Exception message.","name":"notwice","namespace":"OptionParser","path":"OptionParser#notwice","type":"instance_method","visibility":"private"},"OptionParser#on":{"description":"Add option switch and handler. See #make_switch for an explanation of\nparameters.","name":"on","namespace":"OptionParser","path":"OptionParser#on","type":"instance_method","visibility":"public"},"OptionParser#on_head":{"description":"Add option switch like with #on, but at head of summary.","name":"on_head","namespace":"OptionParser","path":"OptionParser#on_head","type":"instance_method","visibility":"public"},"OptionParser#on_tail":{"description":"Add option switch like with #on, but at tail of summary.","name":"on_tail","namespace":"OptionParser","path":"OptionParser#on_tail","type":"instance_method","visibility":"public"},"OptionParser#order":{"description":"Parses command line arguments +argv+ in order. When a block is given,\neach non-option argument is yielded.\n\nReturns the rest of +argv+ left unparsed.","name":"order","namespace":"OptionParser","path":"OptionParser#order","type":"instance_method","visibility":"public"},"OptionParser#order!":{"description":"Same as #order, but removes switches destructively.\nNon-option arguments remain in +argv+.","name":"order!","namespace":"OptionParser","path":"OptionParser#order!","type":"instance_method","visibility":"public"},"OptionParser#parse":{"description":"Parses command line arguments +argv+ in order when environment variable\nPOSIXLY_CORRECT is set, and in permutation mode otherwise.","name":"parse","namespace":"OptionParser","path":"OptionParser#parse","type":"instance_method","visibility":"public"},"OptionParser#parse!":{"description":"Same as #parse, but removes switches destructively.\nNon-option arguments remain in +argv+.","name":"parse!","namespace":"OptionParser","path":"OptionParser#parse!","type":"instance_method","visibility":"public"},"OptionParser#parse_in_order":{"description":":nodoc:","name":"parse_in_order","namespace":"OptionParser","path":"OptionParser#parse_in_order","type":"instance_method","visibility":"private"},"OptionParser#permute":{"description":"Parses command line arguments +argv+ in permutation mode and returns\nlist of non-option arguments.","name":"permute","namespace":"OptionParser","path":"OptionParser#permute","type":"instance_method","visibility":"public"},"OptionParser#permute!":{"description":"Same as #permute, but removes switches destructively.\nNon-option arguments remain in +argv+.","name":"permute!","namespace":"OptionParser","path":"OptionParser#permute!","type":"instance_method","visibility":"public"},"OptionParser#program_name":{"description":"Program name to be emitted in error message and default banner, defaults\nto $0.","name":"program_name","namespace":"OptionParser","path":"OptionParser#program_name","type":"instance_method","visibility":"public"},"OptionParser#program_name=":{"description":"Program name to be emitted in error message and default banner,\ndefaults to $0.","name":"set_program_name","namespace":"OptionParser","path":"OptionParser#set_program_name","type":"instance_method","visibility":"public"},"OptionParser#set_program_name":{"description":"Program name to be emitted in error message and default banner,\ndefaults to $0.","name":"set_program_name","namespace":"OptionParser","path":"OptionParser#set_program_name","type":"instance_method","visibility":"public"},"OptionParser#reject":{"description":"Directs to reject specified class argument.\n\n+t+:: Argument class specifier, any object including Class.\n\n  reject(t)","name":"reject","namespace":"OptionParser","path":"OptionParser#reject","type":"instance_method","visibility":"public"},"OptionParser#release":{"description":"Release code","name":"release","namespace":"OptionParser","path":"OptionParser#release","type":"instance_method","visibility":"public"},"OptionParser#release=":{"description":"Release code","name":"release=","namespace":"OptionParser","path":"OptionParser#release=","type":"instance_method","visibility":"public"},"OptionParser#remove":{"description":"Removes the last List.","name":"remove","namespace":"OptionParser","path":"OptionParser#remove","type":"instance_method","visibility":"public"},"OptionParser#search":{"description":"Searches +key+ in @stack for +id+ hash and returns or yields the result.","name":"search","namespace":"OptionParser","path":"OptionParser#search","type":"instance_method","visibility":"private"},"OptionParser#separator":{"description":"Add separator in summary.","name":"separator","namespace":"OptionParser","path":"OptionParser#separator","type":"instance_method","visibility":"public"},"OptionParser#set_summary_indent":{"description":"Indentation for summary. Must be String (or have + String method).","name":"set_summary_indent","namespace":"OptionParser","path":"OptionParser#set_summary_indent","type":"instance_method","visibility":"public"},"OptionParser#set_summary_width":{"description":"Width for option list portion of summary. Must be Numeric.","name":"set_summary_width","namespace":"OptionParser","path":"OptionParser#set_summary_width","type":"instance_method","visibility":"public"},"OptionParser#summarize":{"description":"Puts option summary into +to+ and returns +to+. Yields each line if\na block is given.\n\n+to+:: Output destination, which must have method <<. Defaults to [].\n+width+:: Width of left side, defaults to @summary_width.\n+max+:: Maximum length allowed for left side, defaults to +width+ - 1.\n+indent+:: Indentation, defaults to @summary_indent.","name":"summarize","namespace":"OptionParser","path":"OptionParser#summarize","type":"instance_method","visibility":"public"},"OptionParser#summary_indent":{"description":"Indentation for summary. Must be String (or have + String method).","name":"summary_indent","namespace":"OptionParser","path":"OptionParser#summary_indent","type":"instance_method","visibility":"public"},"OptionParser#summary_indent=":{"description":"Indentation for summary. Must be String (or have + String method).","name":"set_summary_indent","namespace":"OptionParser","path":"OptionParser#set_summary_indent","type":"instance_method","visibility":"public"},"OptionParser#summary_width":{"description":"Width for option list portion of summary. Must be Numeric.","name":"summary_width","namespace":"OptionParser","path":"OptionParser#summary_width","type":"instance_method","visibility":"public"},"OptionParser#summary_width=":{"description":"Width for option list portion of summary. Must be Numeric.","name":"set_summary_width","namespace":"OptionParser","path":"OptionParser#set_summary_width","type":"instance_method","visibility":"public"},"OptionParser#terminate":{"description":"Terminates option parsing. Optional parameter +arg+ is a string pushed\nback to be the first non-option argument.","name":"terminate","namespace":"OptionParser","path":"OptionParser#terminate","type":"instance_method","visibility":"public"},"OptionParser#to_a":{"description":"Returns option summary list.","name":"to_a","namespace":"OptionParser","path":"OptionParser#to_a","type":"instance_method","visibility":"public"},"OptionParser#top":{"description":"Subject of #on / #on_head, #accept / #reject","name":"top","namespace":"OptionParser","path":"OptionParser#top","type":"instance_method","visibility":"public"},"OptionParser#ver":{"description":"Returns version string from program_name, version and release.","name":"ver","namespace":"OptionParser","path":"OptionParser#ver","type":"instance_method","visibility":"public"},"OptionParser#version":{"description":"Version","name":"version","namespace":"OptionParser","path":"OptionParser#version","type":"instance_method","visibility":"public"},"OptionParser#version=":{"description":"Version","name":"version=","namespace":"OptionParser","path":"OptionParser#version=","type":"instance_method","visibility":"public"},"OptionParser#visit":{"description":"Traverses @stack, sending each element method +id+ with +args+ and\n+block+.","name":"visit","namespace":"OptionParser","path":"OptionParser#visit","type":"instance_method","visibility":"private"},"OptionParser#warn":{"description":"","name":"warn","namespace":"OptionParser","path":"OptionParser#warn","type":"instance_method","visibility":"public"},"OptionParser.accept":{"description":"See #accept.","name":"accept","namespace":"OptionParser","path":"OptionParser.accept","type":"class_method","visibility":"public"},"OptionParser.each_const":{"description":"","name":"each_const","namespace":"OptionParser","path":"OptionParser.each_const","type":"class_method","visibility":"public"},"OptionParser.getopts":{"description":"See #getopts.","name":"getopts","namespace":"OptionParser","path":"OptionParser.getopts","type":"class_method","visibility":"public"},"OptionParser.inc":{"description":"Returns an incremented value of +default+ according to +arg+.","name":"inc","namespace":"OptionParser","path":"OptionParser.inc","type":"class_method","visibility":"public"},"OptionParser.reject":{"description":"See #reject.","name":"reject","namespace":"OptionParser","path":"OptionParser.reject","type":"class_method","visibility":"public"},"OptionParser.search_const":{"description":"","name":"search_const","namespace":"OptionParser","path":"OptionParser.search_const","type":"class_method","visibility":"public"},"OptionParser.show_version":{"description":"","name":"show_version","namespace":"OptionParser","path":"OptionParser.show_version","type":"class_method","visibility":"public"},"OptionParser.terminate":{"description":"","name":"terminate","namespace":"OptionParser","path":"OptionParser.terminate","type":"class_method","visibility":"public"},"OptionParser.top":{"description":"","name":"top","namespace":"OptionParser","path":"OptionParser.top","type":"class_method","visibility":"public"},"OptionParser.with":{"description":"Initializes a new instance and evaluates the optional block in context\nof the instance. Arguments +args+ are passed to #new, see there for\ndescription of parameters.\n\nThis method is *deprecated*, its behavior corresponds to the older #new\nmethod.","name":"with","namespace":"OptionParser","path":"OptionParser.with","type":"class_method","visibility":"public"},"OptionParser::AC":{"description":"","name":"AC","namespace":"OptionParser","path":"OptionParser::AC","type":"class","visibility":"public"},"OptionParser::AC#_ac_arg_enable":{"description":"","name":"_ac_arg_enable","namespace":"OptionParser::AC","path":"OptionParser::AC#_ac_arg_enable","type":"instance_method","visibility":"private"},"OptionParser::AC#_check_ac_args":{"description":"","name":"_check_ac_args","namespace":"OptionParser::AC","path":"OptionParser::AC#_check_ac_args","type":"instance_method","visibility":"private"},"OptionParser::AC#ac_arg_disable":{"description":"","name":"ac_arg_disable","namespace":"OptionParser::AC","path":"OptionParser::AC#ac_arg_disable","type":"instance_method","visibility":"public"},"OptionParser::AC#ac_arg_enable":{"description":"","name":"ac_arg_enable","namespace":"OptionParser::AC","path":"OptionParser::AC#ac_arg_enable","type":"instance_method","visibility":"public"},"OptionParser::AC#ac_arg_with":{"description":"","name":"ac_arg_with","namespace":"OptionParser::AC","path":"OptionParser::AC#ac_arg_with","type":"instance_method","visibility":"public"},"OptionParser::Acceptables":{"description":"Acceptable argument classes. Now contains DecimalInteger, OctalInteger\nand DecimalNumeric. See Acceptable argument classes (in source code).","name":"Acceptables","namespace":"OptionParser","path":"OptionParser::Acceptables","type":"module","visibility":"public"},"OptionParser::AmbiguousArgument":{"description":"Raises when the given argument word can't be completed uniquely.","name":"AmbiguousArgument","namespace":"OptionParser","path":"OptionParser::AmbiguousArgument","type":"class","visibility":"public"},"OptionParser::AmbiguousOption":{"description":"Raises when ambiguously completable string is encountered.","name":"AmbiguousOption","namespace":"OptionParser","path":"OptionParser::AmbiguousOption","type":"class","visibility":"public"},"OptionParser::Arguable":{"description":"Extends command line arguments array (ARGV) to parse itself.","name":"Arguable","namespace":"OptionParser","path":"OptionParser::Arguable","type":"module","visibility":"public"},"OptionParser::Arguable#getopts":{"description":"Substitution of getopts is possible as follows. Also see\nOptionParser#getopts.\n\n  def getopts(*args)\n    ($OPT = ARGV.getopts(*args)).each do |opt, val|\n      eval \"$OPT_#{opt.gsub(/[^A-Za-z0-9_]/, '_')} = val\"\n    end\n  rescue OptionParser::ParseError\n  end","name":"getopts","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#getopts","type":"module_function","visibility":"public"},"OptionParser::Arguable#initialize":{"description":"","name":"initialize","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#initialize","type":"module_function","visibility":"public"},"OptionParser::Arguable#options":{"description":"Actual OptionParser object, automatically created if nonexistent.\n\nIf called with a block, yields the OptionParser object and returns the\nresult of the block. If an OptionParser::ParseError exception occurs\nin the block, it is rescued, a error message printed to STDERR and\n+nil+ returned.","name":"options","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#options","type":"module_function","visibility":"public"},"OptionParser::Arguable#options=":{"description":"Sets OptionParser object, when +opt+ is +false+ or +nil+, methods\nOptionParser::Arguable#options and OptionParser::Arguable#options= are\nundefined. Thus, there is no ways to access the OptionParser object\nvia the receiver object.","name":"options=","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#options=","type":"module_function","visibility":"public"},"OptionParser::Arguable#order!":{"description":"Parses +self+ destructively in order and returns +self+ containing the\nrest arguments left unparsed.","name":"order!","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#order!","type":"module_function","visibility":"public"},"OptionParser::Arguable#parse!":{"description":"Parses +self+ destructively and returns +self+ containing the\nrest arguments left unparsed.","name":"parse!","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#parse!","type":"module_function","visibility":"public"},"OptionParser::Arguable#permute!":{"description":"Parses +self+ destructively in permutation mode and returns +self+\ncontaining the rest arguments left unparsed.","name":"permute!","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable#permute!","type":"module_function","visibility":"public"},"OptionParser::Arguable.extend_object":{"description":"Initializes instance variable.","name":"extend_object","namespace":"OptionParser::Arguable","path":"OptionParser::Arguable.extend_object","type":"module_function","visibility":"public"},"OptionParser::ArgumentStyle":{"description":"Enumeration of acceptable argument styles. Possible values are:\n\nNO_ARGUMENT::       The switch takes no arguments. (:NONE)\nREQUIRED_ARGUMENT:: The switch requires an argument. (:REQUIRED)\nOPTIONAL_ARGUMENT:: The switch requires an optional argument. (:OPTIONAL)\n\nUse like --switch=argument (long style) or -Xargument (short style). For\nshort style, only portion matched to argument pattern is treated as\nargument.","name":"ArgumentStyle","namespace":"OptionParser","path":"OptionParser::ArgumentStyle","type":"constant","return":["Hash",""],"visibility":"public"},"OptionParser::COMPSYS_HEADER":{"description":":nodoc:","name":"COMPSYS_HEADER","namespace":"OptionParser","path":"OptionParser::COMPSYS_HEADER","type":"constant","return":["String",""],"visibility":"public"},"OptionParser::CompletingHash":{"description":"Hash with completion search feature. See OptionParser::Completion.","name":"CompletingHash","namespace":"OptionParser","path":"OptionParser::CompletingHash","type":"class","visibility":"public"},"OptionParser::CompletingHash#match":{"description":"Completion for hash key.","name":"match","namespace":"OptionParser::CompletingHash","path":"OptionParser::CompletingHash#match","type":"instance_method","visibility":"public"},"OptionParser::Completion":{"description":"Keyword completion module.  This allows partial arguments to be specified\nand resolved against a list of acceptable values.","name":"Completion","namespace":"OptionParser","path":"OptionParser::Completion","type":"module","visibility":"public"},"OptionParser::Completion#candidate":{"description":"","name":"candidate","namespace":"OptionParser::Completion","path":"OptionParser::Completion#candidate","type":"module_function","visibility":"public"},"OptionParser::Completion#complete":{"description":"","name":"complete","namespace":"OptionParser::Completion","path":"OptionParser::Completion#complete","type":"module_function","visibility":"public"},"OptionParser::Completion#convert":{"description":"","name":"convert","namespace":"OptionParser::Completion","path":"OptionParser::Completion#convert","type":"module_function","visibility":"public"},"OptionParser::Completion.candidate":{"description":"","name":"candidate","namespace":"OptionParser::Completion","path":"OptionParser::Completion.candidate","type":"module_function","visibility":"public"},"OptionParser::Completion.regexp":{"description":"","name":"regexp","namespace":"OptionParser::Completion","path":"OptionParser::Completion.regexp","type":"module_function","visibility":"public"},"OptionParser::DecimalInteger":{"description":"Decimal integer format, to be converted to Integer.","name":"DecimalInteger","namespace":"OptionParser","path":"OptionParser::DecimalInteger","type":"constant","return":["Regexp",""],"visibility":"public"},"OptionParser::DecimalNumeric":{"description":"Decimal integer/float number format, to be converted to Integer for\ninteger format, Float for float format.","name":"DecimalNumeric","namespace":"OptionParser","path":"OptionParser::DecimalNumeric","type":"constant","return":["Regexp",""],"visibility":"public"},"OptionParser::DefaultList":{"description":"Switches common used such as '--', and also provides default\nargument classes","name":"DefaultList","namespace":"OptionParser","path":"OptionParser::DefaultList","type":"constant","return":["OptionParser::List",""],"visibility":"public"},"OptionParser::InvalidArgument":{"description":"Raises when the given argument does not match required format.","name":"InvalidArgument","namespace":"OptionParser","path":"OptionParser::InvalidArgument","type":"class","visibility":"public"},"OptionParser::InvalidOption":{"description":"Raises when switch is undefined.","name":"InvalidOption","namespace":"OptionParser","path":"OptionParser::InvalidOption","type":"class","visibility":"public"},"OptionParser::List":{"description":"Simple option list providing mapping from short and/or long option\nstring to OptionParser::Switch and mapping from acceptable argument to\nmatching pattern and converter pair. Also provides summary feature.","name":"List","namespace":"OptionParser","path":"OptionParser::List","type":"class","visibility":"public"},"OptionParser::List#accept":{"description":"See OptionParser.accept.","name":"accept","namespace":"OptionParser::List","path":"OptionParser::List#accept","type":"instance_method","visibility":"public"},"OptionParser::List#add_banner":{"description":":nodoc:","name":"add_banner","namespace":"OptionParser::List","path":"OptionParser::List#add_banner","type":"instance_method","visibility":"public"},"OptionParser::List#append":{"description":"Appends +switch+ at the tail of the list, and associates short, long\nand negated long options. Arguments are:\n\n+switch+::      OptionParser::Switch instance to be inserted.\n+short_opts+::  List of short style options.\n+long_opts+::   List of long style options.\n+nolong_opts+:: List of long style options with \"no-\" prefix.\n\n  append(switch, short_opts, long_opts, nolong_opts)","name":"append","namespace":"OptionParser::List","path":"OptionParser::List#append","type":"instance_method","visibility":"public"},"OptionParser::List#atype":{"description":"Map from acceptable argument types to pattern and converter pairs.","name":"atype","namespace":"OptionParser::List","path":"OptionParser::List#atype","type":"instance_method","visibility":"public"},"OptionParser::List#complete":{"description":"Searches list +id+ for +opt+ and the optional patterns for completion\n+pat+. If +icase+ is true, the search is case insensitive. The result\nis returned or yielded if a block is given. If it isn't found, nil is\nreturned.","name":"complete","namespace":"OptionParser::List","path":"OptionParser::List#complete","type":"instance_method","visibility":"public"},"OptionParser::List#compsys":{"description":":nodoc:","name":"compsys","namespace":"OptionParser::List","path":"OptionParser::List#compsys","type":"instance_method","visibility":"public"},"OptionParser::List#each_option":{"description":"Iterates over each option, passing the option to the +block+.","name":"each_option","namespace":"OptionParser::List","path":"OptionParser::List#each_option","type":"instance_method","visibility":"public"},"OptionParser::List#initialize":{"description":"Just initializes all instance variables.","name":"initialize","namespace":"OptionParser::List","path":"OptionParser::List#initialize","type":"instance_method","visibility":"public","return":[["List"],"a new instance of List"]},"OptionParser::List#list":{"description":"List of all switches and summary string.","name":"list","namespace":"OptionParser::List","path":"OptionParser::List#list","type":"instance_method","visibility":"public"},"OptionParser::List#long":{"description":"Map from long style option switches to actual switch objects.","name":"long","namespace":"OptionParser::List","path":"OptionParser::List#long","type":"instance_method","visibility":"public"},"OptionParser::List#prepend":{"description":"Inserts +switch+ at the head of the list, and associates short, long\nand negated long options. Arguments are:\n\n+switch+::      OptionParser::Switch instance to be inserted.\n+short_opts+::  List of short style options.\n+long_opts+::   List of long style options.\n+nolong_opts+:: List of long style options with \"no-\" prefix.\n\n  prepend(switch, short_opts, long_opts, nolong_opts)","name":"prepend","namespace":"OptionParser::List","path":"OptionParser::List#prepend","type":"instance_method","visibility":"public"},"OptionParser::List#reject":{"description":"See OptionParser.reject.","name":"reject","namespace":"OptionParser::List","path":"OptionParser::List#reject","type":"instance_method","visibility":"public"},"OptionParser::List#search":{"description":"Searches +key+ in +id+ list. The result is returned or yielded if a\nblock is given. If it isn't found, nil is returned.","name":"search","namespace":"OptionParser::List","path":"OptionParser::List#search","type":"instance_method","visibility":"public"},"OptionParser::List#short":{"description":"Map from short style option switches to actual switch objects.","name":"short","namespace":"OptionParser::List","path":"OptionParser::List#short","type":"instance_method","visibility":"public"},"OptionParser::List#summarize":{"description":"Creates the summary table, passing each line to the +block+ (without\nnewline). The arguments +args+ are passed along to the summarize\nmethod which is called on every option.","name":"summarize","namespace":"OptionParser::List","path":"OptionParser::List#summarize","type":"instance_method","visibility":"public"},"OptionParser::List#update":{"description":"Adds +sw+ according to +sopts+, +lopts+ and +nlopts+.\n\n+sw+::     OptionParser::Switch instance to be added.\n+sopts+::  Short style option list.\n+lopts+::  Long style option list.\n+nlopts+:: Negated long style options list.","name":"update","namespace":"OptionParser::List","path":"OptionParser::List#update","type":"instance_method","visibility":"private"},"OptionParser::MissingArgument":{"description":"Raises when a switch with mandatory argument has no argument.","name":"MissingArgument","namespace":"OptionParser","path":"OptionParser::MissingArgument","type":"class","visibility":"public"},"OptionParser::NeedlessArgument":{"description":"Raises when there is an argument for a switch which takes no argument.","name":"NeedlessArgument","namespace":"OptionParser","path":"OptionParser::NeedlessArgument","type":"class","visibility":"public"},"OptionParser::NoArgument":{"description":":stopdoc:","name":"NoArgument","namespace":"OptionParser","path":"OptionParser::NoArgument","type":"constant","return":["Array",""],"visibility":"public"},"OptionParser::OctalInteger":{"description":"Ruby/C like octal/hexadecimal/binary integer format, to be converted to\nInteger.","name":"OctalInteger","namespace":"OptionParser","path":"OptionParser::OctalInteger","type":"constant","return":["Regexp",""],"visibility":"public"},"OptionParser::Officious":{"description":"Default options for ARGV, which never appear in option summary.","name":"Officious","namespace":"OptionParser","path":"OptionParser::Officious","type":"constant","return":["Hash",""],"visibility":"public"},"OptionParser::OptionMap":{"description":"Map from option/keyword string to object with completion.","name":"OptionMap","namespace":"OptionParser","path":"OptionParser::OptionMap","type":"class","visibility":"public"},"OptionParser::OptionalArgument":{"description":"","name":"OptionalArgument","namespace":"OptionParser","path":"OptionParser::OptionalArgument","type":"constant","return":["Array",""],"visibility":"public"},"OptionParser::ParseError":{"description":"Base class of exceptions from OptionParser.","name":"ParseError","namespace":"OptionParser","path":"OptionParser::ParseError","type":"class","visibility":"public"},"OptionParser::ParseError#args":{"description":"Returns the value of attribute args","name":"args","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#args","type":"instance_method","visibility":"public"},"OptionParser::ParseError#initialize":{"description":"","name":"initialize","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#initialize","type":"instance_method","visibility":"public","return":[["ParseError"],"a new instance of ParseError"]},"OptionParser::ParseError#inspect":{"description":"","name":"inspect","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#inspect","type":"instance_method","visibility":"public"},"OptionParser::ParseError#message":{"description":"Default stringizing method to emit standard error message.","name":"to_s","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#to_s","type":"instance_method","visibility":"public"},"OptionParser::ParseError#to_s":{"description":"Default stringizing method to emit standard error message.","name":"to_s","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#to_s","type":"instance_method","visibility":"public"},"OptionParser::ParseError#reason":{"description":"Returns error reason. Override this for I18N.","name":"reason","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#reason","type":"instance_method","visibility":"public"},"OptionParser::ParseError#reason=":{"description":"Sets the attribute reason","name":"reason=","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#reason=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute reason to."]]},"OptionParser::ParseError#recover":{"description":"Pushes back erred argument(s) to +argv+.","name":"recover","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#recover","type":"instance_method","visibility":"public"},"OptionParser::ParseError#set_backtrace":{"description":"","name":"set_backtrace","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#set_backtrace","type":"instance_method","visibility":"public"},"OptionParser::ParseError#set_option":{"description":"","name":"set_option","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError#set_option","type":"instance_method","visibility":"public"},"OptionParser::ParseError.filter_backtrace":{"description":"","name":"filter_backtrace","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError.filter_backtrace","type":"class_method","visibility":"public"},"OptionParser::ParseError::Reason":{"description":"Reason which caused the error.","name":"Reason","namespace":"OptionParser::ParseError","path":"OptionParser::ParseError::Reason","type":"constant","return":["String",""],"visibility":"public"},"OptionParser::RequiredArgument":{"description":"","name":"RequiredArgument","namespace":"OptionParser","path":"OptionParser::RequiredArgument","type":"constant","return":["Array",""],"visibility":"public"},"OptionParser::SPLAT_PROC":{"description":":nodoc:","name":"SPLAT_PROC","namespace":"OptionParser","path":"OptionParser::SPLAT_PROC","type":"constant","return":["Proc",""],"visibility":"public"},"OptionParser::Switch":{"description":"Individual switch class.  Not important to the user.\n\nDefined within Switch are several Switch-derived classes: NoArgument,\nRequiredArgument, etc.","name":"Switch","namespace":"OptionParser","path":"OptionParser::Switch","type":"class","visibility":"public"},"OptionParser::Switch#add_banner":{"description":":nodoc:","name":"add_banner","namespace":"OptionParser::Switch","path":"OptionParser::Switch#add_banner","type":"instance_method","visibility":"public"},"OptionParser::Switch#arg":{"description":"Returns the value of attribute arg","name":"arg","namespace":"OptionParser::Switch","path":"OptionParser::Switch#arg","type":"instance_method","visibility":"public"},"OptionParser::Switch#block":{"description":"Returns the value of attribute block","name":"block","namespace":"OptionParser::Switch","path":"OptionParser::Switch#block","type":"instance_method","visibility":"public"},"OptionParser::Switch#compsys":{"description":":nodoc:","name":"compsys","namespace":"OptionParser::Switch","path":"OptionParser::Switch#compsys","type":"instance_method","visibility":"public"},"OptionParser::Switch#conv":{"description":"Returns the value of attribute conv","name":"conv","namespace":"OptionParser::Switch","path":"OptionParser::Switch#conv","type":"instance_method","visibility":"public"},"OptionParser::Switch#conv_arg":{"description":"Parses argument, converts and returns +arg+, +block+ and result of\nconversion. Yields at semi-error condition instead of raising an\nexception.","name":"conv_arg","namespace":"OptionParser::Switch","path":"OptionParser::Switch#conv_arg","type":"instance_method","visibility":"private"},"OptionParser::Switch#desc":{"description":"Returns the value of attribute desc","name":"desc","namespace":"OptionParser::Switch","path":"OptionParser::Switch#desc","type":"instance_method","visibility":"public"},"OptionParser::Switch#initialize":{"description":"","name":"initialize","namespace":"OptionParser::Switch","path":"OptionParser::Switch#initialize","type":"instance_method","visibility":"public","return":[["Switch"],"a new instance of Switch"]},"OptionParser::Switch#long":{"description":"Returns the value of attribute long","name":"long","namespace":"OptionParser::Switch","path":"OptionParser::Switch#long","type":"instance_method","visibility":"public"},"OptionParser::Switch#match_nonswitch?":{"description":":nodoc:","name":"match_nonswitch?","namespace":"OptionParser::Switch","path":"OptionParser::Switch#match_nonswitch?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OptionParser::Switch#parse_arg":{"description":"Parses +arg+ and returns rest of +arg+ and matched portion to the\nargument pattern. Yields when the pattern doesn't match substring.","name":"parse_arg","namespace":"OptionParser::Switch","path":"OptionParser::Switch#parse_arg","type":"instance_method","visibility":"private"},"OptionParser::Switch#pattern":{"description":"Returns the value of attribute pattern","name":"pattern","namespace":"OptionParser::Switch","path":"OptionParser::Switch#pattern","type":"instance_method","visibility":"public"},"OptionParser::Switch#short":{"description":"Returns the value of attribute short","name":"short","namespace":"OptionParser::Switch","path":"OptionParser::Switch#short","type":"instance_method","visibility":"public"},"OptionParser::Switch#summarize":{"description":"Produces the summary text. Each line of the summary is yielded to the\nblock (without newline).\n\n+sdone+::  Already summarized short style options keyed hash.\n+ldone+::  Already summarized long style options keyed hash.\n+width+::  Width of left side (option part). In other words, the right\n           side (description part) starts after +width+ columns.\n+max+::    Maximum width of left side -> the options are filled within\n           +max+ columns.\n+indent+:: Prefix string indents all summarized lines.","name":"summarize","namespace":"OptionParser::Switch","path":"OptionParser::Switch#summarize","type":"instance_method","visibility":"public"},"OptionParser::Switch#switch_name":{"description":"Main name of the switch.","name":"switch_name","namespace":"OptionParser::Switch","path":"OptionParser::Switch#switch_name","type":"instance_method","visibility":"public"},"OptionParser::Switch.guess":{"description":"Guesses argument style from +arg+.  Returns corresponding\nOptionParser::Switch class (OptionalArgument, etc.).","name":"guess","namespace":"OptionParser::Switch","path":"OptionParser::Switch.guess","type":"class_method","visibility":"public"},"OptionParser::Switch.incompatible_argument_styles":{"description":"","name":"incompatible_argument_styles","namespace":"OptionParser::Switch","path":"OptionParser::Switch.incompatible_argument_styles","type":"class_method","visibility":"public"},"OptionParser::Switch.pattern":{"description":"","name":"pattern","namespace":"OptionParser::Switch","path":"OptionParser::Switch.pattern","type":"class_method","visibility":"public"},"OptionParser::Switch::NoArgument":{"description":"Switch that takes no arguments.","name":"NoArgument","namespace":"OptionParser::Switch","path":"OptionParser::Switch::NoArgument","type":"class","visibility":"public"},"OptionParser::Switch::NoArgument#parse":{"description":"Raises an exception if any arguments given.","name":"parse","namespace":"OptionParser::Switch::NoArgument","path":"OptionParser::Switch::NoArgument#parse","type":"instance_method","visibility":"public"},"OptionParser::Switch::NoArgument.incompatible_argument_styles":{"description":"","name":"incompatible_argument_styles","namespace":"OptionParser::Switch::NoArgument","path":"OptionParser::Switch::NoArgument.incompatible_argument_styles","type":"class_method","visibility":"public"},"OptionParser::Switch::NoArgument.pattern":{"description":"","name":"pattern","namespace":"OptionParser::Switch::NoArgument","path":"OptionParser::Switch::NoArgument.pattern","type":"class_method","visibility":"public"},"OptionParser::Switch::OptionalArgument":{"description":"Switch that can omit argument.","name":"OptionalArgument","namespace":"OptionParser::Switch","path":"OptionParser::Switch::OptionalArgument","type":"class","visibility":"public"},"OptionParser::Switch::OptionalArgument#parse":{"description":"Parses argument if given, or uses default value.","name":"parse","namespace":"OptionParser::Switch::OptionalArgument","path":"OptionParser::Switch::OptionalArgument#parse","type":"instance_method","visibility":"public"},"OptionParser::Switch::PlacedArgument":{"description":"Switch that takes an argument, which does not begin with '-'.","name":"PlacedArgument","namespace":"OptionParser::Switch","path":"OptionParser::Switch::PlacedArgument","type":"class","visibility":"public"},"OptionParser::Switch::PlacedArgument#parse":{"description":"Returns nil if argument is not present or begins with '-'.","name":"parse","namespace":"OptionParser::Switch::PlacedArgument","path":"OptionParser::Switch::PlacedArgument#parse","type":"instance_method","visibility":"public"},"OptionParser::Switch::RequiredArgument":{"description":"Switch that takes an argument.","name":"RequiredArgument","namespace":"OptionParser::Switch","path":"OptionParser::Switch::RequiredArgument","type":"class","visibility":"public"},"OptionParser::Switch::RequiredArgument#parse":{"description":"Raises an exception if argument is not present.","name":"parse","namespace":"OptionParser::Switch::RequiredArgument","path":"OptionParser::Switch::RequiredArgument#parse","type":"instance_method","visibility":"public"},"OpenStruct":{"description":"OpenStruct serialization/deserialization","name":"OpenStruct","namespace":"","path":"OpenStruct","type":"class","visibility":"public"},"OpenStruct#==":{"description":"Compares this object and +other+ for equality.  An OpenStruct is equal to\n+other+ when +other+ is an OpenStruct and the two objects' Hash tables are\nequal.","name":"==","namespace":"OpenStruct","path":"OpenStruct#==","type":"instance_method","visibility":"public"},"OpenStruct#[]":{"description":"Returns the value of a member.\n\n  person = OpenStruct.new('name' => 'John Smith', 'age' => 70)\n  person[:age] # => 70, same as ostruct.age","name":"[]","namespace":"OpenStruct","path":"OpenStruct#[]","type":"instance_method","visibility":"public"},"OpenStruct#[]=":{"description":"Sets the value of a member.\n\n  person = OpenStruct.new('name' => 'John Smith', 'age' => 70)\n  person[:age] = 42 # => equivalent to ostruct.age = 42\n  person.age # => 42","name":"[]=","namespace":"OpenStruct","path":"OpenStruct#[]=","type":"instance_method","visibility":"public"},"OpenStruct#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"OpenStruct","path":"OpenStruct#as_json","type":"instance_method","visibility":"public"},"OpenStruct#delete_field":{"description":"Remove the named field from the object. Returns the value that the field\ncontained if it was defined.\n\n  require 'ostruct'\n\n  person = OpenStruct.new('name' => 'John Smith', 'age' => 70)\n\n  person.delete_field('name')  # => 'John Smith'","name":"delete_field","namespace":"OpenStruct","path":"OpenStruct#delete_field","type":"instance_method","visibility":"public"},"OpenStruct#each_pair":{"description":"Yields all attributes (as a symbol) along with the corresponding values\nor returns an enumerator if not block is given.\nExample:\n\n  require 'ostruct'\n  data = OpenStruct.new(\"country\" => \"Australia\", :population => 20_000_000)\n  data.each_pair.to_a  # => [[:country, \"Australia\"], [:population, 20000000]]","name":"each_pair","namespace":"OpenStruct","path":"OpenStruct#each_pair","type":"instance_method","visibility":"public"},"OpenStruct#eql?":{"description":"Compares this object and +other+ for equality.  An OpenStruct is eql? to\n+other+ when +other+ is an OpenStruct and the two objects' Hash tables are\neql?.","name":"eql?","namespace":"OpenStruct","path":"OpenStruct#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenStruct#hash":{"description":"Compute a hash-code for this OpenStruct.\nTwo hashes with the same content will have the same hash code\n(and will be eql?).","name":"hash","namespace":"OpenStruct","path":"OpenStruct#hash","type":"instance_method","visibility":"public"},"OpenStruct#initialize":{"description":"Creates a new OpenStruct object.  By default, the resulting OpenStruct\nobject will have no attributes.\n\nThe optional +hash+, if given, will generate attributes and values\n(can be a Hash, an OpenStruct or a Struct).\nFor example:\n\n  require 'ostruct'\n  hash = { \"country\" => \"Australia\", :population => 20_000_000 }\n  data = OpenStruct.new(hash)\n\n  p data        # -> <OpenStruct country=\"Australia\" population=20000000>","name":"initialize","namespace":"OpenStruct","path":"OpenStruct#initialize","type":"instance_method","visibility":"public","return":[["OpenStruct"],"a new instance of OpenStruct"]},"OpenStruct#initialize_copy":{"description":"Duplicate an OpenStruct object members.","name":"initialize_copy","namespace":"OpenStruct","path":"OpenStruct#initialize_copy","type":"instance_method","visibility":"public"},"OpenStruct#inspect":{"description":"Returns a string containing a detailed summary of the keys and values.","name":"to_s","namespace":"OpenStruct","path":"OpenStruct#to_s","type":"instance_method","visibility":"public"},"OpenStruct#to_s":{"description":"Returns a string containing a detailed summary of the keys and values.","name":"to_s","namespace":"OpenStruct","path":"OpenStruct#to_s","type":"instance_method","visibility":"public"},"OpenStruct#marshal_dump":{"description":"Provides marshalling support for use by the Marshal library.","name":"marshal_dump","namespace":"OpenStruct","path":"OpenStruct#marshal_dump","type":"instance_method","visibility":"public"},"OpenStruct#marshal_load":{"description":"Provides marshalling support for use by the Marshal library.","name":"marshal_load","namespace":"OpenStruct","path":"OpenStruct#marshal_load","type":"instance_method","visibility":"public"},"OpenStruct#method_missing":{"description":":nodoc:","name":"method_missing","namespace":"OpenStruct","path":"OpenStruct#method_missing","type":"instance_method","visibility":"public"},"OpenStruct#modifiable":{"description":"Used internally to check if the OpenStruct is able to be\nmodified before granting access to the internal Hash table to be modified.","name":"modifiable","namespace":"OpenStruct","path":"OpenStruct#modifiable","type":"instance_method","visibility":"protected"},"OpenStruct#new_ostruct_member":{"description":"Used internally to defined properties on the\nOpenStruct. It does this by using the metaprogramming function\ndefine_singleton_method for both the getter method and the setter method.","name":"new_ostruct_member","namespace":"OpenStruct","path":"OpenStruct#new_ostruct_member","type":"instance_method","visibility":"protected"},"OpenStruct#table":{"description":":nodoc:","name":"table","namespace":"OpenStruct","path":"OpenStruct#table","type":"instance_method","visibility":"protected"},"OpenStruct#to_h":{"description":"Converts the OpenStruct to a hash with keys representing\neach attribute (as symbols) and their corresponding values\nExample:\n\n  require 'ostruct'\n  data = OpenStruct.new(\"country\" => \"Australia\", :population => 20_000_000)\n  data.to_h   # => {:country => \"Australia\", :population => 20000000 }","name":"to_h","namespace":"OpenStruct","path":"OpenStruct#to_h","type":"instance_method","visibility":"public"},"OpenStruct#to_json":{"description":"Stores class name (OpenStruct) with this struct's values <tt>v</tt> as a\nJSON string.","name":"to_json","namespace":"OpenStruct","path":"OpenStruct#to_json","type":"instance_method","visibility":"public"},"OpenStruct.json_create":{"description":"Deserializes JSON string by constructing new Struct object with values\n<tt>v</tt> serialized by <tt>to_json</tt>.","name":"json_create","namespace":"OpenStruct","path":"OpenStruct.json_create","type":"class_method","visibility":"public"},"OpenStruct::InspectKey":{"description":":nodoc:","name":"InspectKey","namespace":"OpenStruct","path":"OpenStruct::InspectKey","type":"constant","return":["Symbol",""],"visibility":"public"},"PP":{"description":"A pretty-printer for Ruby objects.\n\nAll examples assume you have loaded the PP class with:\n  require 'pp'\n\n\n== What PP Does\n\nStandard output by #p returns this:\n  #<PP:0x81fedf0 @genspace=#<Proc:0x81feda0>, @group_queue=#<PrettyPrint::GroupQueue:0x81fed3c @queue=[[#<PrettyPrint::Group:0x81fed78 @breakables=[], @depth=0, @break=false>], []]>, @buffer=[], @newline=\"\\n\", @group_stack=[#<PrettyPrint::Group:0x81fed78 @breakables=[], @depth=0, @break=false>], @buffer_width=0, @indent=0, @maxwidth=79, @output_width=2, @output=#<IO:0x8114ee4>>\n\nPretty-printed output returns this:\n  #<PP:0x81fedf0\n   @buffer=[],\n   @buffer_width=0,\n   @genspace=#<Proc:0x81feda0>,\n   @group_queue=\n    #<PrettyPrint::GroupQueue:0x81fed3c\n     @queue=\n      [[#<PrettyPrint::Group:0x81fed78 @break=false, @breakables=[], @depth=0>],\n       []]>,\n   @group_stack=\n    [#<PrettyPrint::Group:0x81fed78 @break=false, @breakables=[], @depth=0>],\n   @indent=0,\n   @maxwidth=79,\n   @newline=\"\\n\",\n   @output=#<IO:0x8114ee4>,\n   @output_width=2>\n\n\n== Usage\n\n  pp(obj)             #=> obj\n  pp obj              #=> obj\n  pp(obj1, obj2, ...) #=> [obj1, obj2, ...]\n  pp()                #=> nil\n\nOutput <tt>obj(s)</tt> to <tt>$></tt> in pretty printed format.\n\nIt returns <tt>obj(s)</tt>.\n\n\n== Output Customization\n\nTo define a customized pretty printing function for your classes,\nredefine method <code>#pretty_print(pp)</code> in the class.\n\n<code>#pretty_print</code> takes the +pp+ argument, which is an instance of the PP class.\nThe method uses #text, #breakable, #nest, #group and #pp to print the\nobject.\n\n\n== Pretty-Print JSON\n\nTo pretty-print JSON refer to JSON#pretty_generate.\n\n\n== Author\nTanaka Akira <akr@fsij.org>","name":"PP","namespace":"","path":"PP","type":"class","visibility":"public"},"PP.mcall":{"description":":stopdoc:","name":"mcall","namespace":"PP","path":"PP.mcall","type":"class_method","visibility":"public"},"PP.pp":{"description":"Outputs +obj+ to +out+ in pretty printed format of\n+width+ columns in width.\n\nIf +out+ is omitted, <code>$></code> is assumed.\nIf +width+ is omitted, 79 is assumed.\n\nPP.pp returns +out+.","name":"pp","namespace":"PP","path":"PP.pp","type":"class_method","visibility":"public"},"PP.sharing_detection":{"description":"Returns the sharing detection flag as a boolean value.\nIt is false by default.","name":"sharing_detection","namespace":"PP","path":"PP.sharing_detection","type":"class_method","visibility":"public"},"PP.sharing_detection=":{"description":"Returns the sharing detection flag as a boolean value.\nIt is false by default.","name":"sharing_detection=","namespace":"PP","path":"PP.sharing_detection=","type":"class_method","visibility":"public"},"PP.singleline_pp":{"description":"Outputs +obj+ to +out+ like PP.pp but with no indent and\nnewline.\n\nPP.singleline_pp returns +out+.","name":"singleline_pp","namespace":"PP","path":"PP.singleline_pp","type":"class_method","visibility":"public"},"PP::ObjectMixin":{"description":":nodoc:","name":"ObjectMixin","namespace":"PP","path":"PP::ObjectMixin","type":"module","visibility":"public"},"PP::ObjectMixin#pretty_print":{"description":"A default pretty printing method for general objects.\nIt calls #pretty_print_instance_variables to list instance variables.\n\nIf +self+ has a customized (redefined) #inspect method,\nthe result of self.inspect is used but it obviously has no\nline break hints.\n\nThis module provides predefined #pretty_print methods for some of\nthe most commonly used built-in classes for convenience.","name":"pretty_print","namespace":"PP::ObjectMixin","path":"PP::ObjectMixin#pretty_print","type":"module_function","visibility":"public"},"PP::ObjectMixin#pretty_print_cycle":{"description":"A default pretty printing method for general objects that are\ndetected as part of a cycle.","name":"pretty_print_cycle","namespace":"PP::ObjectMixin","path":"PP::ObjectMixin#pretty_print_cycle","type":"module_function","visibility":"public"},"PP::ObjectMixin#pretty_print_inspect":{"description":"Is #inspect implementation using #pretty_print.\nIf you implement #pretty_print, it can be used as follows.\n\n  alias inspect pretty_print_inspect\n\nHowever, doing this requires that every class that #inspect is called on\nimplement #pretty_print, or a RuntimeError will be raised.","name":"pretty_print_inspect","namespace":"PP::ObjectMixin","path":"PP::ObjectMixin#pretty_print_inspect","type":"module_function","visibility":"public"},"PP::ObjectMixin#pretty_print_instance_variables":{"description":"Returns a sorted array of instance variable names.\n\nThis method should return an array of names of instance variables as symbols or strings as:\n+[:@a, :@b]+.","name":"pretty_print_instance_variables","namespace":"PP::ObjectMixin","path":"PP::ObjectMixin#pretty_print_instance_variables","type":"module_function","visibility":"public"},"PP::PPMethods":{"description":"","name":"PPMethods","namespace":"PP","path":"PP::PPMethods","type":"module","visibility":"public"},"PP::PPMethods#check_inspect_key":{"description":"Check whether the object_id +id+ is in the current buffer of objects\nto be pretty printed. Used to break cycles in chains of objects to be\npretty printed.","name":"check_inspect_key","namespace":"PP::PPMethods","path":"PP::PPMethods#check_inspect_key","type":"module_function","visibility":"public"},"PP::PPMethods#comma_breakable":{"description":"A convenience method which is same as follows:\n\n  text ','\n  breakable","name":"comma_breakable","namespace":"PP::PPMethods","path":"PP::PPMethods#comma_breakable","type":"module_function","visibility":"public"},"PP::PPMethods#guard_inspect_key":{"description":"Yields to a block\nand preserves the previous set of objects being printed.","name":"guard_inspect_key","namespace":"PP::PPMethods","path":"PP::PPMethods#guard_inspect_key","type":"module_function","visibility":"public"},"PP::PPMethods#object_address_group":{"description":"A convenience method, like object_group, but also reformats the Object's\nobject_id.","name":"object_address_group","namespace":"PP::PPMethods","path":"PP::PPMethods#object_address_group","type":"module_function","visibility":"public"},"PP::PPMethods#object_group":{"description":"A convenience method which is same as follows:\n\n  group(1, '#<' + obj.class.name, '>') { ... }","name":"object_group","namespace":"PP::PPMethods","path":"PP::PPMethods#object_group","type":"module_function","visibility":"public"},"PP::PPMethods#pop_inspect_key":{"description":"Removes an object from the set of objects being pretty printed.","name":"pop_inspect_key","namespace":"PP::PPMethods","path":"PP::PPMethods#pop_inspect_key","type":"module_function","visibility":"public"},"PP::PPMethods#pp":{"description":"Adds +obj+ to the pretty printing buffer\nusing Object#pretty_print or Object#pretty_print_cycle.\n\nObject#pretty_print_cycle is used when +obj+ is already\nprinted, a.k.a the object reference chain has a cycle.","name":"pp","namespace":"PP::PPMethods","path":"PP::PPMethods#pp","type":"module_function","visibility":"public"},"PP::PPMethods#pp_hash":{"description":"A pretty print for a Hash","name":"pp_hash","namespace":"PP::PPMethods","path":"PP::PPMethods#pp_hash","type":"module_function","visibility":"public"},"PP::PPMethods#pp_object":{"description":"A present standard failsafe for pretty printing any given Object","name":"pp_object","namespace":"PP::PPMethods","path":"PP::PPMethods#pp_object","type":"module_function","visibility":"public"},"PP::PPMethods#push_inspect_key":{"description":"Adds the object_id +id+ to the set of objects being pretty printed, so\nas to not repeat objects.","name":"push_inspect_key","namespace":"PP::PPMethods","path":"PP::PPMethods#push_inspect_key","type":"module_function","visibility":"public"},"PP::PPMethods#seplist":{"description":"Adds a separated list.\nThe list is separated by comma with breakable space, by default.\n\n#seplist iterates the +list+ using +iter_method+.\nIt yields each object to the block given for #seplist.\nThe procedure +separator_proc+ is called between each yields.\n\nIf the iteration is zero times, +separator_proc+ is not called at all.\n\nIf +separator_proc+ is nil or not given,\n+lambda { comma_breakable }+ is used.\nIf +iter_method+ is not given, :each is used.\n\nFor example, following 3 code fragments has similar effect.\n\n  q.seplist([1,2,3]) {|v| xxx v }\n\n  q.seplist([1,2,3], lambda { q.comma_breakable }, :each) {|v| xxx v }\n\n  xxx 1\n  q.comma_breakable\n  xxx 2\n  q.comma_breakable\n  xxx 3","name":"seplist","namespace":"PP::PPMethods","path":"PP::PPMethods#seplist","type":"module_function","visibility":"public"},"PP::SingleLine":{"description":":nodoc:","name":"SingleLine","namespace":"PP","path":"PP::SingleLine","type":"class","visibility":"public"},"Hash":{"description":":nodoc:","name":"Hash","namespace":"","path":"Hash","type":"class","visibility":"public"},"Hash#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Hash","path":"Hash#pretty_print","type":"instance_method","visibility":"public"},"Hash#pretty_print_cycle":{"description":":nodoc:","name":"pretty_print_cycle","namespace":"Hash","path":"Hash#pretty_print_cycle","type":"instance_method","visibility":"public"},"ENV":{"description":":nodoc:","name":"ENV","namespace":"","path":"ENV","type":"class","visibility":"public"},"ENV.pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"ENV","path":"ENV.pretty_print","type":"class_method","visibility":"public"},"Struct":{"description":"Struct serialization/deserialization","name":"Struct","namespace":"","path":"Struct","type":"class","visibility":"public"},"Struct#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Struct","path":"Struct#as_json","type":"instance_method","visibility":"public"},"Struct#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Struct","path":"Struct#pretty_print","type":"instance_method","visibility":"public"},"Struct#pretty_print_cycle":{"description":":nodoc:","name":"pretty_print_cycle","namespace":"Struct","path":"Struct#pretty_print_cycle","type":"instance_method","visibility":"public"},"Struct#to_json":{"description":"Stores class name (Struct) with Struct values <tt>v</tt> as a JSON string.\nOnly named structs are supported.","name":"to_json","namespace":"Struct","path":"Struct#to_json","type":"instance_method","visibility":"public"},"Struct.json_create":{"description":"Deserializes JSON string by constructing new Struct object with values\n<tt>v</tt> serialized by <tt>to_json</tt>.","name":"json_create","namespace":"Struct","path":"Struct.json_create","type":"class_method","visibility":"public"},"Range":{"description":"Range serialization/deserialization","name":"Range","namespace":"","path":"Range","type":"class","visibility":"public"},"Range#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Range","path":"Range#as_json","type":"instance_method","visibility":"public"},"Range#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Range","path":"Range#pretty_print","type":"instance_method","visibility":"public"},"Range#to_json":{"description":"Stores class name (Range) with JSON array of arguments <tt>a</tt> which\ninclude <tt>first</tt> (integer), <tt>last</tt> (integer), and\n<tt>exclude_end?</tt> (boolean) as JSON string.","name":"to_json","namespace":"Range","path":"Range#to_json","type":"instance_method","visibility":"public"},"Range.json_create":{"description":"Deserializes JSON string by constructing new Range object with arguments\n<tt>a</tt> serialized by <tt>to_json</tt>.","name":"json_create","namespace":"Range","path":"Range.json_create","type":"class_method","visibility":"public"},"File":{"description":":nodoc:","name":"File","namespace":"","path":"File","type":"class","visibility":"public"},"File::Stat":{"description":":nodoc:","name":"Stat","namespace":"File","path":"File::Stat","type":"class","visibility":"public"},"File::Stat#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"File::Stat","path":"File::Stat#pretty_print","type":"instance_method","visibility":"public"},"MatchData":{"description":":nodoc:","name":"MatchData","namespace":"","path":"MatchData","type":"class","visibility":"public"},"MatchData#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"MatchData","path":"MatchData#pretty_print","type":"instance_method","visibility":"public"},"Object":{"description":":nodoc:","name":"Object","namespace":"","path":"Object","type":"class","visibility":"public"},"Object#assert_Qundef":{"description":":nodoc:","name":"assert_Qundef","namespace":"Object","path":"Object#assert_Qundef","type":"instance_method","visibility":"public"},"Object#rawVALUE":{"description":":nodoc:","name":"rawVALUE","namespace":"Object","path":"Object#rawVALUE","type":"instance_method","visibility":"public"},"Object#validate_object":{"description":":nodoc:","name":"validate_object","namespace":"Object","path":"Object#validate_object","type":"instance_method","visibility":"public"},"PrettyPrint":{"description":"This class implements a pretty printing algorithm. It finds line breaks and\nnice indentations for grouped structure.\n\nBy default, the class assumes that primitive elements are strings and each\nbyte in the strings have single column in width. But it can be used for\nother situations by giving suitable arguments for some methods:\n* newline object and space generation block for PrettyPrint.new\n* optional width argument for PrettyPrint#text\n* PrettyPrint#breakable\n\nThere are several candidate uses:\n* text formatting using proportional fonts\n* multibyte characters which has columns different to number of bytes\n* non-string formatting\n\n== Bugs\n* Box based formatting?\n* Other (better) model/algorithm?\n\nReport any bugs at http://bugs.ruby-lang.org\n\n== References\nChristian Lindig, Strictly Pretty, March 2000,\nhttp://www.st.cs.uni-sb.de/~lindig/papers/#pretty\n\nPhilip Wadler, A prettier printer, March 1998,\nhttp://homepages.inf.ed.ac.uk/wadler/topics/language-design.html#prettier\n\n== Author\nTanaka Akira <akr@fsij.org>","name":"PrettyPrint","namespace":"","path":"PrettyPrint","type":"class","visibility":"public"},"PrettyPrint#break_outmost_groups":{"description":"Breaks the buffer into lines that are shorter than #maxwidth","name":"break_outmost_groups","namespace":"PrettyPrint","path":"PrettyPrint#break_outmost_groups","type":"instance_method","visibility":"public"},"PrettyPrint#breakable":{"description":"This says \"you can break a line here if necessary\", and a +width+\\-column\ntext +sep+ is inserted if a line is not broken at the point.\n\nIf +sep+ is not specified, \" \" is used.\n\nIf +width+ is not specified, +sep.length+ is used. You will have to\nspecify this when +sep+ is a multibyte character, for example.","name":"breakable","namespace":"PrettyPrint","path":"PrettyPrint#breakable","type":"instance_method","visibility":"public"},"PrettyPrint#current_group":{"description":"Returns the group most recently added to the stack.\n\nContrived example:\n  out = \"\"\n  => \"\"\n  q = PrettyPrint.new(out)\n  => #<PrettyPrint:0x82f85c0 @output=\"\", @maxwidth=79, @newline=\"\\n\", @genspace=#<Proc:0x82f8368@/home/vbatts/.rvm/rubies/ruby-head/lib/ruby/2.0.0/prettyprint.rb:82 (lambda)>, @output_width=0, @buffer_width=0, @buffer=[], @group_stack=[#<PrettyPrint::Group:0x82f8138 @depth=0, @breakables=[], @break=false>], @group_queue=#<PrettyPrint::GroupQueue:0x82fb7c0 @queue=[[#<PrettyPrint::Group:0x82f8138 @depth=0, @breakables=[], @break=false>]]>, @indent=0>\n  q.group {\n    q.text q.current_group.inspect\n    q.text q.newline\n    q.group(q.current_group.depth + 1) {\n      q.text q.current_group.inspect\n      q.text q.newline\n      q.group(q.current_group.depth + 1) {\n        q.text q.current_group.inspect\n        q.text q.newline\n        q.group(q.current_group.depth + 1) {\n          q.text q.current_group.inspect\n          q.text q.newline\n        }\n      }\n    }\n  }\n  => 284\n   puts out\n  #<PrettyPrint::Group:0x8354758 @depth=1, @breakables=[], @break=false>\n  #<PrettyPrint::Group:0x8354550 @depth=2, @breakables=[], @break=false>\n  #<PrettyPrint::Group:0x83541cc @depth=3, @breakables=[], @break=false>\n  #<PrettyPrint::Group:0x8347e54 @depth=4, @breakables=[], @break=false>","name":"current_group","namespace":"PrettyPrint","path":"PrettyPrint#current_group","type":"instance_method","visibility":"public"},"PrettyPrint#fill_breakable":{"description":"This is similar to #breakable except\nthe decision to break or not is determined individually.\n\nTwo #fill_breakable under a group may cause 4 results:\n(break,break), (break,non-break), (non-break,break), (non-break,non-break).\nThis is different to #breakable because two #breakable under a group\nmay cause 2 results:\n(break,break), (non-break,non-break).\n\nThe text +sep+ is inserted if a line is not broken at this point.\n\nIf +sep+ is not specified, \" \" is used.\n\nIf +width+ is not specified, +sep.length+ is used. You will have to\nspecify this when +sep+ is a multibyte character, for example.","name":"fill_breakable","namespace":"PrettyPrint","path":"PrettyPrint#fill_breakable","type":"instance_method","visibility":"public"},"PrettyPrint#flush":{"description":"outputs buffered data.","name":"flush","namespace":"PrettyPrint","path":"PrettyPrint#flush","type":"instance_method","visibility":"public"},"PrettyPrint#genspace":{"description":"A lambda or Proc, that takes one argument, of a Fixnum, and returns\nthe corresponding number of spaces.\n\nBy default this is:\n  lambda {|n| ' ' * n}","name":"genspace","namespace":"PrettyPrint","path":"PrettyPrint#genspace","type":"instance_method","visibility":"public"},"PrettyPrint#group":{"description":"Groups line break hints added in the block. The line break hints are all\nto be used or not.\n\nIf +indent+ is specified, the method call is regarded as nested by\nnest(indent) { ... }.\n\nIf +open_obj+ is specified, <tt>text open_obj, open_width</tt> is called\nbefore grouping. If +close_obj+ is specified, <tt>text close_obj,\nclose_width</tt> is called after grouping.","name":"group","namespace":"PrettyPrint","path":"PrettyPrint#group","type":"instance_method","visibility":"public"},"PrettyPrint#group_queue":{"description":"The PrettyPrint::GroupQueue of groups in stack to be pretty printed","name":"group_queue","namespace":"PrettyPrint","path":"PrettyPrint#group_queue","type":"instance_method","visibility":"public"},"PrettyPrint#group_sub":{"description":"Takes a block and queues a new group that is indented 1 level further.","name":"group_sub","namespace":"PrettyPrint","path":"PrettyPrint#group_sub","type":"instance_method","visibility":"public"},"PrettyPrint#indent":{"description":"The number of spaces to be indented","name":"indent","namespace":"PrettyPrint","path":"PrettyPrint#indent","type":"instance_method","visibility":"public"},"PrettyPrint#initialize":{"description":"Creates a buffer for pretty printing.\n\n+output+ is an output target. If it is not specified, '' is assumed. It\nshould have a << method which accepts the first argument +obj+ of\nPrettyPrint#text, the first argument +sep+ of PrettyPrint#breakable, the\nfirst argument +newline+ of PrettyPrint.new, and the result of a given\nblock for PrettyPrint.new.\n\n+maxwidth+ specifies maximum line length. If it is not specified, 79 is\nassumed. However actual outputs may overflow +maxwidth+ if long\nnon-breakable texts are provided.\n\n+newline+ is used for line breaks. \"\\n\" is used if it is not specified.\n\nThe block is used to generate spaces. {|width| ' ' * width} is used if it\nis not given.","name":"initialize","namespace":"PrettyPrint","path":"PrettyPrint#initialize","type":"instance_method","visibility":"public","return":[["PrettyPrint"],"a new instance of PrettyPrint"]},"PrettyPrint#maxwidth":{"description":"The maximum width of a line, before it is separated in to a newline\n\nThis defaults to 79, and should be a Fixnum","name":"maxwidth","namespace":"PrettyPrint","path":"PrettyPrint#maxwidth","type":"instance_method","visibility":"public"},"PrettyPrint#nest":{"description":"Increases left margin after newline with +indent+ for line breaks added in\nthe block.","name":"nest","namespace":"PrettyPrint","path":"PrettyPrint#nest","type":"instance_method","visibility":"public"},"PrettyPrint#newline":{"description":"The value that is appended to +output+ to add a new line.\n\nThis defaults to \"\\n\", and should be String","name":"newline","namespace":"PrettyPrint","path":"PrettyPrint#newline","type":"instance_method","visibility":"public"},"PrettyPrint#output":{"description":"The output object.\n\nThis defaults to '', and should accept the << method","name":"output","namespace":"PrettyPrint","path":"PrettyPrint#output","type":"instance_method","visibility":"public"},"PrettyPrint#text":{"description":"This adds +obj+ as a text of +width+ columns in width.\n\nIf +width+ is not specified, obj.length is used.","name":"text","namespace":"PrettyPrint","path":"PrettyPrint#text","type":"instance_method","visibility":"public"},"PrettyPrint.format":{"description":"This is a convenience method which is same as follows:\n\n  begin\n    q = PrettyPrint.new(output, maxwidth, newline, &genspace)\n    ...\n    q.flush\n    output\n  end","name":"format","namespace":"PrettyPrint","path":"PrettyPrint.format","type":"class_method","visibility":"public"},"PrettyPrint.singleline_format":{"description":"This is similar to PrettyPrint::format but the result has no breaks.\n\n+maxwidth+, +newline+ and +genspace+ are ignored.\n\nThe invocation of +breakable+ in the block doesn't break a line and is\ntreated as just an invocation of +text+.","name":"singleline_format","namespace":"PrettyPrint","path":"PrettyPrint.singleline_format","type":"class_method","visibility":"public"},"PrettyPrint::Breakable":{"description":"The Breakable class is used for breaking up object information\n\nThis class is intended for internal use of the PrettyPrint buffers.","name":"Breakable","namespace":"PrettyPrint","path":"PrettyPrint::Breakable","type":"class","visibility":"public"},"PrettyPrint::Breakable#indent":{"description":"The number of spaces to indent.\n\nThis is inferred from +q+ within PrettyPrint, passed in ::new","name":"indent","namespace":"PrettyPrint::Breakable","path":"PrettyPrint::Breakable#indent","type":"instance_method","visibility":"public"},"PrettyPrint::Breakable#initialize":{"description":"Create a new Breakable object.\n\nArguments:\n* +sep+ String of the separator\n* +width+ Fixnum width of the +sep+\n* +q+ parent PrettyPrint object, to base from","name":"initialize","namespace":"PrettyPrint::Breakable","path":"PrettyPrint::Breakable#initialize","type":"instance_method","visibility":"public","return":[["Breakable"],"a new instance of Breakable"]},"PrettyPrint::Breakable#obj":{"description":"Holds the separator String\n\nThe +sep+ argument from ::new","name":"obj","namespace":"PrettyPrint::Breakable","path":"PrettyPrint::Breakable#obj","type":"instance_method","visibility":"public"},"PrettyPrint::Breakable#output":{"description":"Render the String text of the objects that have been added to this\nBreakable object.\n\nOutput the text to +out+, and increment the width to +output_width+","name":"output","namespace":"PrettyPrint::Breakable","path":"PrettyPrint::Breakable#output","type":"instance_method","visibility":"public"},"PrettyPrint::Breakable#width":{"description":"The width of +obj+ / +sep+","name":"width","namespace":"PrettyPrint::Breakable","path":"PrettyPrint::Breakable#width","type":"instance_method","visibility":"public"},"PrettyPrint::Group":{"description":"The Group class is used for making indentation easier.\n\nWhile this class does neither the breaking into newlines nor indentation,\nit is used in a stack (as well as a queue) within PrettyPrint, to group\nobjects.\n\nFor information on using groups, see PrettyPrint#group\n\nThis class is intended for internal use of the PrettyPrint buffers.","name":"Group","namespace":"PrettyPrint","path":"PrettyPrint::Group","type":"class","visibility":"public"},"PrettyPrint::Group#break":{"description":"Makes a break for this Group, and returns true","name":"break","namespace":"PrettyPrint::Group","path":"PrettyPrint::Group#break","type":"instance_method","visibility":"public"},"PrettyPrint::Group#break?":{"description":"Boolean of whether this Group has made a break","name":"break?","namespace":"PrettyPrint::Group","path":"PrettyPrint::Group#break?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"PrettyPrint::Group#breakables":{"description":"Array to hold the Breakable objects for this Group","name":"breakables","namespace":"PrettyPrint::Group","path":"PrettyPrint::Group#breakables","type":"instance_method","visibility":"public"},"PrettyPrint::Group#depth":{"description":"This group's relation to previous groups","name":"depth","namespace":"PrettyPrint::Group","path":"PrettyPrint::Group#depth","type":"instance_method","visibility":"public"},"PrettyPrint::Group#first?":{"description":"Boolean of whether this Group has been queried for being first\n\nThis is used as a predicate, and ought to be called first.","name":"first?","namespace":"PrettyPrint::Group","path":"PrettyPrint::Group#first?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"PrettyPrint::Group#initialize":{"description":"Create a Group object\n\nArguments:\n* +depth+ - this group's relation to previous groups","name":"initialize","namespace":"PrettyPrint::Group","path":"PrettyPrint::Group#initialize","type":"instance_method","visibility":"public","return":[["Group"],"a new instance of Group"]},"PrettyPrint::GroupQueue":{"description":"The GroupQueue class is used for managing the queue of Group to be pretty\nprinted.\n\nThis queue groups the Group objects, based on their depth.\n\nThis class is intended for internal use of the PrettyPrint buffers.","name":"GroupQueue","namespace":"PrettyPrint","path":"PrettyPrint::GroupQueue","type":"class","visibility":"public"},"PrettyPrint::GroupQueue#delete":{"description":"Remote +group+ from this queue","name":"delete","namespace":"PrettyPrint::GroupQueue","path":"PrettyPrint::GroupQueue#delete","type":"instance_method","visibility":"public"},"PrettyPrint::GroupQueue#deq":{"description":"Returns the outer group of the queue","name":"deq","namespace":"PrettyPrint::GroupQueue","path":"PrettyPrint::GroupQueue#deq","type":"instance_method","visibility":"public"},"PrettyPrint::GroupQueue#enq":{"description":"Enqueue +group+\n\nThis does not strictly append the group to the end of the queue,\nbut instead adds it in line, base on the +group.depth+","name":"enq","namespace":"PrettyPrint::GroupQueue","path":"PrettyPrint::GroupQueue#enq","type":"instance_method","visibility":"public"},"PrettyPrint::GroupQueue#initialize":{"description":"Create a GroupQueue object\n\nArguments:\n* +groups+ - one or more PrettyPrint::Group objects","name":"initialize","namespace":"PrettyPrint::GroupQueue","path":"PrettyPrint::GroupQueue#initialize","type":"instance_method","visibility":"public","return":[["GroupQueue"],"a new instance of GroupQueue"]},"PrettyPrint::SingleLine":{"description":"PrettyPrint::SingleLine is used by PrettyPrint.singleline_format\n\nIt is passed to be similar to a PrettyPrint object itself, by responding to:\n* #text\n* #breakable\n* #nest\n* #group\n* #flush\n* #first?\n\nbut instead, the output has no line breaks","name":"SingleLine","namespace":"PrettyPrint","path":"PrettyPrint::SingleLine","type":"class","visibility":"public"},"PrettyPrint::SingleLine#breakable":{"description":"Appends +sep+ to the text to be output. By default +sep+ is ' '\n\n+width+ argument is here for compatibility. It is a noop argument.","name":"breakable","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#breakable","type":"instance_method","visibility":"public"},"PrettyPrint::SingleLine#first?":{"description":"This is used as a predicate, and ought to be called first.","name":"first?","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#first?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"PrettyPrint::SingleLine#flush":{"description":"Method present for compatibility, but is a noop","name":"flush","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#flush","type":"instance_method","visibility":"public"},"PrettyPrint::SingleLine#group":{"description":"Opens a block for grouping objects to be pretty printed.\n\nArguments:\n* +indent+ - noop argument. Present for compatibility.\n* +open_obj+ - text appended before the &blok. Default is ''\n* +close_obj+ - text appended after the &blok. Default is ''\n* +open_width+ - noop argument. Present for compatibility.\n* +close_width+ - noop argument. Present for compatibility.","name":"group","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#group","type":"instance_method","visibility":"public"},"PrettyPrint::SingleLine#initialize":{"description":"Create a PrettyPrint::SingleLine object\n\nArguments:\n* +output+ - String (or similar) to store rendered text. Needs to respond to '<<'\n* +maxwidth+ - Argument position expected to be here for compatibility.\n               This argument is a noop.\n* +newline+ - Argument position expected to be here for compatibility.\n              This argument is a noop.","name":"initialize","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#initialize","type":"instance_method","visibility":"public","return":[["SingleLine"],"a new instance of SingleLine"]},"PrettyPrint::SingleLine#nest":{"description":"Takes +indent+ arg, but does nothing with it.\n\nYields to a block.","name":"nest","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#nest","type":"instance_method","visibility":"public"},"PrettyPrint::SingleLine#text":{"description":"Add +obj+ to the text to be output.\n\n+width+ argument is here for compatibility. It is a noop argument.","name":"text","namespace":"PrettyPrint::SingleLine","path":"PrettyPrint::SingleLine#text","type":"instance_method","visibility":"public"},"PrettyPrint::Text":{"description":"The Text class is the means by which to collect strings from objects.\n\nThis class is intended for internal use of the PrettyPrint buffers.","name":"Text","namespace":"PrettyPrint","path":"PrettyPrint::Text","type":"class","visibility":"public"},"PrettyPrint::Text#add":{"description":"Include +obj+ in the objects to be pretty printed, and increment\nthis Text object's total width by +width+","name":"add","namespace":"PrettyPrint::Text","path":"PrettyPrint::Text#add","type":"instance_method","visibility":"public"},"PrettyPrint::Text#initialize":{"description":"Creates a new text object.\n\nThis constructor takes no arguments.\n\nThe workflow is to append a PrettyPrint::Text object to the buffer, and\nbeing able to call the buffer.last() to reference it.\n\nAs there are objects, use PrettyPrint::Text#add to include the objects\nand the width to utilized by the String version of this object.","name":"initialize","namespace":"PrettyPrint::Text","path":"PrettyPrint::Text#initialize","type":"instance_method","visibility":"public","return":[["Text"],"a new instance of Text"]},"PrettyPrint::Text#output":{"description":"Render the String text of the objects that have been added to this Text object.\n\nOutput the text to +out+, and increment the width to +output_width+","name":"output","namespace":"PrettyPrint::Text","path":"PrettyPrint::Text#output","type":"instance_method","visibility":"public"},"PrettyPrint::Text#width":{"description":"The total width of the objects included in this Text object.","name":"width","namespace":"PrettyPrint::Text","path":"PrettyPrint::Text#width","type":"instance_method","visibility":"public"},"Gem":{"description":"--\nThis file contains all sorts of little compatibility hacks that we've\nhad to introduce over the years. Quarantining them into one file helps\nus know when we can get rid of them.\n\nRuby 1.9.x has introduced some things that are awkward, and we need to\nsupport them, so we define some constants to use later.\n++","name":"Gem","namespace":"","path":"Gem","type":"module","visibility":"public"},"Gem.bin_path":{"description":"Find the full path to the executable for gem +name+.  If the +exec_name+\nis not given, the gem's default_executable is chosen, otherwise the\nspecified executable's path is returned.  +requirements+ allows\nyou to specify specific gem versions.","name":"bin_path","namespace":"Gem","path":"Gem.bin_path","type":"module_function","visibility":"public"},"Gem.binary_mode":{"description":"The mode needed to read a file as straight binary.","name":"binary_mode","namespace":"Gem","path":"Gem.binary_mode","type":"module_function","visibility":"public"},"Gem.bindir":{"description":"The path where gem executables are to be installed.","name":"bindir","namespace":"Gem","path":"Gem.bindir","type":"module_function","visibility":"public"},"Gem.clear_default_specs":{"description":"Clear default gem related variables. It is for test","name":"clear_default_specs","namespace":"Gem","path":"Gem.clear_default_specs","type":"module_function","visibility":"public"},"Gem.clear_paths":{"description":"Reset the +dir+ and +path+ values.  The next time +dir+ or +path+\nis requested, the values will be calculated from scratch.  This is\nmainly used by the unit tests to provide test isolation.","name":"clear_paths","namespace":"Gem","path":"Gem.clear_paths","type":"module_function","visibility":"public"},"Gem.config_file":{"description":"The path to standard location of the user's .gemrc file.","name":"config_file","namespace":"Gem","path":"Gem.config_file","type":"module_function","visibility":"public"},"Gem.configuration":{"description":"The standard configuration object for gems.","name":"configuration","namespace":"Gem","path":"Gem.configuration","type":"module_function","visibility":"public"},"Gem.configuration=":{"description":"Use the given configuration object (which implements the ConfigFile\nprotocol) as the standard configuration object.","name":"configuration=","namespace":"Gem","path":"Gem.configuration=","type":"module_function","visibility":"public"},"Gem.datadir":{"description":"The path to the data directory specified by the gem name.  If the\npackage is not available as a gem, return nil.","name":"datadir","namespace":"Gem","path":"Gem.datadir","type":"module_function","visibility":"public"},"Gem.default_bindir":{"description":"The default directory for binaries","name":"default_bindir","namespace":"Gem","path":"Gem.default_bindir","type":"module_function","visibility":"public"},"Gem.default_cert_path":{"description":"The default signing certificate chain path","name":"default_cert_path","namespace":"Gem","path":"Gem.default_cert_path","type":"module_function","visibility":"public"},"Gem.default_dir":{"description":"Default home directory path to be used if an alternate value is not\nspecified in the environment","name":"default_dir","namespace":"Gem","path":"Gem.default_dir","type":"module_function","visibility":"public"},"Gem.default_exec_format":{"description":"Deduce Ruby's --program-prefix and --program-suffix from its install name","name":"default_exec_format","namespace":"Gem","path":"Gem.default_exec_format","type":"module_function","visibility":"public"},"Gem.default_ext_dir_for":{"description":"Returns binary extensions dir for specified RubyGems base dir or nil\nif such directory cannot be determined.\n\nBy default, the binary extensions are located side by side with their\nRuby counterparts, therefore nil is returned","name":"default_ext_dir_for","namespace":"Gem","path":"Gem.default_ext_dir_for","type":"module_function","visibility":"public"},"Gem.default_gems_use_full_paths?":{"description":"Whether to expect full paths in default gems - true for non-MRI\nruby implementations","name":"default_gems_use_full_paths?","namespace":"Gem","path":"Gem.default_gems_use_full_paths?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Gem.default_key_path":{"description":"The default signing key path","name":"default_key_path","namespace":"Gem","path":"Gem.default_key_path","type":"module_function","visibility":"public"},"Gem.default_path":{"description":"Default gem load path","name":"default_path","namespace":"Gem","path":"Gem.default_path","type":"module_function","visibility":"public"},"Gem.default_rubygems_dirs":{"description":"Paths where RubyGems' .rb files and bin files are installed","name":"default_rubygems_dirs","namespace":"Gem","path":"Gem.default_rubygems_dirs","type":"module_function","visibility":"public"},"Gem.default_sources":{"description":"An Array of the default sources that come with RubyGems","name":"default_sources","namespace":"Gem","path":"Gem.default_sources","type":"module_function","visibility":"public"},"Gem.default_spec_cache_dir":{"description":"Default spec directory path to be used if an alternate value is not\nspecified in the environment","name":"default_spec_cache_dir","namespace":"Gem","path":"Gem.default_spec_cache_dir","type":"module_function","visibility":"public"},"Gem.deflate":{"description":"A Zlib::Deflate.deflate wrapper","name":"deflate","namespace":"Gem","path":"Gem.deflate","type":"module_function","visibility":"public"},"Gem.detect_gemdeps":{"description":"Looks for a gem dependency file at +path+ and activates the gems in the\nfile if found.  If the file is not found an ArgumentError is raised.\n\nIf +path+ is not given the RUBYGEMS_GEMDEPS environment variable is used,\nbut if no file is found no exception is raised.\n\nIf '-' is given for +path+ RubyGems searches up from the current working\ndirectory for gem dependency files (gem.deps.rb, Gemfile, Isolate) and\nactivates the gems in the first one found.\n\nYou can run this automatically when rubygems starts.  To enable, set\nthe <code>RUBYGEMS_GEMDEPS</code> environment variable to either the path\nof your gem dependencies file or \"-\" to auto-discover in parent\ndirectories.\n\nNOTE: Enabling automatic discovery on multiuser systems can lead to\nexecution of arbitrary code when used from directories outside your\ncontrol.","name":"detect_gemdeps","namespace":"Gem","path":"Gem.detect_gemdeps","type":"module_function","visibility":"public"},"Gem.dir":{"description":"The path where gems are to be installed.\n--\nFIXME deprecate these once everything else has been done -ebh","name":"dir","namespace":"Gem","path":"Gem.dir","type":"module_function","visibility":"public"},"Gem.done_installing":{"description":"Adds a post-installs hook that will be passed a Gem::DependencyInstaller\nand a list of installed specifications when\nGem::DependencyInstaller#install is complete","name":"done_installing","namespace":"Gem","path":"Gem.done_installing","type":"module_function","visibility":"public"},"Gem.done_installing_hooks":{"description":"The list of hooks to be run after Gem::DependencyInstaller installs a\nset of gems","name":"done_installing_hooks","namespace":"Gem","path":"Gem.done_installing_hooks","type":"module_function","visibility":"public"},"Gem.ensure_default_gem_subdirectories":{"description":"Quietly ensure the Gem directory +dir+ contains all the proper\nsubdirectories for handling default gems.  If we can't create a\ndirectory due to a permission problem, then we will silently continue.\n\nIf +mode+ is given, missing directories are created with this mode.\n\nWorld-writable directories will never be created.","name":"ensure_default_gem_subdirectories","namespace":"Gem","path":"Gem.ensure_default_gem_subdirectories","type":"module_function","visibility":"public"},"Gem.ensure_gem_subdirectories":{"description":"Quietly ensure the Gem directory +dir+ contains all the proper\nsubdirectories.  If we can't create a directory due to a permission\nproblem, then we will silently continue.\n\nIf +mode+ is given, missing directories are created with this mode.\n\nWorld-writable directories will never be created.","name":"ensure_gem_subdirectories","namespace":"Gem","path":"Gem.ensure_gem_subdirectories","type":"module_function","visibility":"public"},"Gem.ensure_subdirectories":{"description":":nodoc:","name":"ensure_subdirectories","namespace":"Gem","path":"Gem.ensure_subdirectories","type":"module_function","visibility":"public"},"Gem.extension_api_version":{"description":"The extension API version of ruby.  This includes the static vs non-static\ndistinction as extensions cannot be shared between the two.","name":"extension_api_version","namespace":"Gem","path":"Gem.extension_api_version","type":"module_function","visibility":"public"},"Gem.find_files":{"description":"Returns a list of paths matching +glob+ that can be used by a gem to pick\nup features from other gems.  For example:\n\n  Gem.find_files('rdoc/discover').each do |path| load path end\n\nif +check_load_path+ is true (the default), then find_files also searches\n$LOAD_PATH for files as well as gems.\n\nNote that find_files will return all files even if they are from different\nversions of the same gem.  See also find_latest_files","name":"find_files","namespace":"Gem","path":"Gem.find_files","type":"module_function","visibility":"public"},"Gem.find_files_from_load_path":{"description":":nodoc:","name":"find_files_from_load_path","namespace":"Gem","path":"Gem.find_files_from_load_path","type":"module_function","visibility":"public"},"Gem.find_home":{"description":"Finds the user's home directory.\n--\nSome comments from the ruby-talk list regarding finding the home\ndirectory:\n\n  I have HOME, USERPROFILE and HOMEDRIVE + HOMEPATH. Ruby seems\n  to be depending on HOME in those code samples. I propose that\n  it should fallback to USERPROFILE and HOMEDRIVE + HOMEPATH (at\n  least on Win32).\n++\n--\n\nFIXME move to pathsupport\n\n++","name":"find_home","namespace":"Gem","path":"Gem.find_home","type":"module_function","visibility":"private"},"Gem.find_latest_files":{"description":"Returns a list of paths matching +glob+ from the latest gems that can be\nused by a gem to pick up features from other gems.  For example:\n\n  Gem.find_latest_files('rdoc/discover').each do |path| load path end\n\nif +check_load_path+ is true (the default), then find_latest_files also\nsearches $LOAD_PATH for files as well as gems.\n\nUnlike find_files, find_latest_files will return only files from the\nlatest version of a gem.","name":"find_latest_files","namespace":"Gem","path":"Gem.find_latest_files","type":"module_function","visibility":"public"},"Gem.find_unresolved_default_spec":{"description":"Find a Gem::Specification of default gem from +path+","name":"find_unresolved_default_spec","namespace":"Gem","path":"Gem.find_unresolved_default_spec","type":"module_function","visibility":"public"},"Gem.finish_resolve":{"description":"","name":"finish_resolve","namespace":"Gem","path":"Gem.finish_resolve","type":"module_function","visibility":"public"},"Gem.gunzip":{"description":"Zlib::GzipReader wrapper that unzips +data+.","name":"gunzip","namespace":"Gem","path":"Gem.gunzip","type":"module_function","visibility":"public"},"Gem.gzip":{"description":"Zlib::GzipWriter wrapper that zips +data+.","name":"gzip","namespace":"Gem","path":"Gem.gzip","type":"module_function","visibility":"public"},"Gem.host":{"description":"Get the default RubyGems API host. This is normally\n<tt>https://rubygems.org</tt>.","name":"host","namespace":"Gem","path":"Gem.host","type":"module_function","visibility":"public"},"Gem.host=":{"description":"Set the default RubyGems API host.","name":"host=","namespace":"Gem","path":"Gem.host=","type":"module_function","visibility":"public"},"Gem.inflate":{"description":"A Zlib::Inflate#inflate wrapper","name":"inflate","namespace":"Gem","path":"Gem.inflate","type":"module_function","visibility":"public"},"Gem.install":{"description":"Top level install helper method. Allows you to install gems interactively:\n\n  % irb\n  >> Gem.install \"minitest\"\n  Fetching: minitest-3.0.1.gem (100%)\n  => [#<Gem::Specification:0x1013b4528 @name=\"minitest\", ...>]","name":"install","namespace":"Gem","path":"Gem.install","type":"module_function","visibility":"public"},"Gem.install_extension_in_lib":{"description":"Install extensions into lib as well as into the extension directory.","name":"install_extension_in_lib","namespace":"Gem","path":"Gem.install_extension_in_lib","type":"module_function","visibility":"public"},"Gem.latest_rubygems_version":{"description":"Returns the latest release version of RubyGems.","name":"latest_rubygems_version","namespace":"Gem","path":"Gem.latest_rubygems_version","type":"module_function","visibility":"public"},"Gem.latest_spec_for":{"description":"Returns the latest release-version specification for the gem +name+.","name":"latest_spec_for","namespace":"Gem","path":"Gem.latest_spec_for","type":"module_function","visibility":"public"},"Gem.latest_version_for":{"description":"Returns the version of the latest release-version of gem +name+","name":"latest_version_for","namespace":"Gem","path":"Gem.latest_version_for","type":"module_function","visibility":"public"},"Gem.load_env_plugins":{"description":"Find all 'rubygems_plugin' files in $LOAD_PATH and load them","name":"load_env_plugins","namespace":"Gem","path":"Gem.load_env_plugins","type":"module_function","visibility":"public"},"Gem.load_path_insert_index":{"description":"The index to insert activated gem paths into the $LOAD_PATH. The activated\ngem's paths are inserted before site lib directory by default.","name":"load_path_insert_index","namespace":"Gem","path":"Gem.load_path_insert_index","type":"module_function","visibility":"public"},"Gem.load_plugin_files":{"description":"Load +plugins+ as Ruby files","name":"load_plugin_files","namespace":"Gem","path":"Gem.load_plugin_files","type":"module_function","visibility":"public"},"Gem.load_plugins":{"description":"Find the 'rubygems_plugin' files in the latest installed gems and load\nthem","name":"load_plugins","namespace":"Gem","path":"Gem.load_plugins","type":"module_function","visibility":"public"},"Gem.load_yaml":{"description":"Loads YAML, preferring Psych","name":"load_yaml","namespace":"Gem","path":"Gem.load_yaml","type":"module_function","visibility":"public"},"Gem.loaded_specs":{"description":"Hash of loaded Gem::Specification keyed by name","name":"loaded_specs","namespace":"Gem","path":"Gem.loaded_specs","type":"module_function","visibility":"public"},"Gem.location_of_caller":{"description":"The file name and line number of the caller of the caller of this method.","name":"location_of_caller","namespace":"Gem","path":"Gem.location_of_caller","type":"module_function","visibility":"public"},"Gem.marshal_version":{"description":"The version of the Marshal format for your Ruby.","name":"marshal_version","namespace":"Gem","path":"Gem.marshal_version","type":"module_function","visibility":"public"},"Gem.needs":{"description":"","name":"needs","namespace":"Gem","path":"Gem.needs","type":"module_function","visibility":"public"},"Gem.path":{"description":"","name":"path","namespace":"Gem","path":"Gem.path","type":"module_function","visibility":"public"},"Gem.path_separator":{"description":"How String Gem paths should be split.  Overridable for esoteric platforms.","name":"path_separator","namespace":"Gem","path":"Gem.path_separator","type":"module_function","visibility":"public"},"Gem.paths":{"description":"Retrieve the PathSupport object that RubyGems uses to\nlookup files.","name":"paths","namespace":"Gem","path":"Gem.paths","type":"module_function","visibility":"public"},"Gem.paths=":{"description":"Initialize the filesystem paths to use from +env+.\n+env+ is a hash-like object (typically ENV) that\nis queried for 'GEM_HOME', 'GEM_PATH', and 'GEM_SPEC_CACHE'","name":"paths=","namespace":"Gem","path":"Gem.paths=","type":"module_function","visibility":"public"},"Gem.platforms":{"description":"Array of platforms this RubyGems supports.","name":"platforms","namespace":"Gem","path":"Gem.platforms","type":"module_function","visibility":"public"},"Gem.platforms=":{"description":"Set array of platforms this RubyGems supports (primarily for testing).","name":"platforms=","namespace":"Gem","path":"Gem.platforms=","type":"module_function","visibility":"public"},"Gem.post_build":{"description":"Adds a post-build hook that will be passed an Gem::Installer instance\nwhen Gem::Installer#install is called.  The hook is called after the gem\nhas been extracted and extensions have been built but before the\nexecutables or gemspec has been written.  If the hook returns +false+ then\nthe gem's files will be removed and the install will be aborted.","name":"post_build","namespace":"Gem","path":"Gem.post_build","type":"module_function","visibility":"public"},"Gem.post_build_hooks":{"description":"The list of hooks to be run after Gem::Installer#install extracts files\nand builds extensions","name":"post_build_hooks","namespace":"Gem","path":"Gem.post_build_hooks","type":"module_function","visibility":"public"},"Gem.post_install":{"description":"Adds a post-install hook that will be passed an Gem::Installer instance\nwhen Gem::Installer#install is called","name":"post_install","namespace":"Gem","path":"Gem.post_install","type":"module_function","visibility":"public"},"Gem.post_install_hooks":{"description":"The list of hooks to be run after Gem::Installer#install completes\ninstallation","name":"post_install_hooks","namespace":"Gem","path":"Gem.post_install_hooks","type":"module_function","visibility":"public"},"Gem.post_reset":{"description":"Adds a hook that will get run after Gem::Specification.reset is\nrun.","name":"post_reset","namespace":"Gem","path":"Gem.post_reset","type":"module_function","visibility":"public"},"Gem.post_reset_hooks":{"description":"The list of hooks to be run after Gem::Specification.reset is run.","name":"post_reset_hooks","namespace":"Gem","path":"Gem.post_reset_hooks","type":"module_function","visibility":"public"},"Gem.post_uninstall":{"description":"Adds a post-uninstall hook that will be passed a Gem::Uninstaller instance\nand the spec that was uninstalled when Gem::Uninstaller#uninstall is\ncalled","name":"post_uninstall","namespace":"Gem","path":"Gem.post_uninstall","type":"module_function","visibility":"public"},"Gem.post_uninstall_hooks":{"description":"The list of hooks to be run after Gem::Uninstaller#uninstall completes\ninstallation","name":"post_uninstall_hooks","namespace":"Gem","path":"Gem.post_uninstall_hooks","type":"module_function","visibility":"public"},"Gem.pre_install":{"description":"Adds a pre-install hook that will be passed an Gem::Installer instance\nwhen Gem::Installer#install is called.  If the hook returns +false+ then\nthe install will be aborted.","name":"pre_install","namespace":"Gem","path":"Gem.pre_install","type":"module_function","visibility":"public"},"Gem.pre_install_hooks":{"description":"The list of hooks to be run before Gem::Installer#install does any work","name":"pre_install_hooks","namespace":"Gem","path":"Gem.pre_install_hooks","type":"module_function","visibility":"public"},"Gem.pre_reset":{"description":"Adds a hook that will get run before Gem::Specification.reset is\nrun.","name":"pre_reset","namespace":"Gem","path":"Gem.pre_reset","type":"module_function","visibility":"public"},"Gem.pre_reset_hooks":{"description":"The list of hooks to be run before Gem::Specification.reset is run.","name":"pre_reset_hooks","namespace":"Gem","path":"Gem.pre_reset_hooks","type":"module_function","visibility":"public"},"Gem.pre_uninstall":{"description":"Adds a pre-uninstall hook that will be passed an Gem::Uninstaller instance\nand the spec that will be uninstalled when Gem::Uninstaller#uninstall is\ncalled","name":"pre_uninstall","namespace":"Gem","path":"Gem.pre_uninstall","type":"module_function","visibility":"public"},"Gem.pre_uninstall_hooks":{"description":"The list of hooks to be run before Gem::Uninstaller#uninstall does any\nwork","name":"pre_uninstall_hooks","namespace":"Gem","path":"Gem.pre_uninstall_hooks","type":"module_function","visibility":"public"},"Gem.prefix":{"description":"The directory prefix this RubyGems was installed at. If your\nprefix is in a standard location (ie, rubygems is installed where\nyou'd expect it to be), then prefix returns nil.","name":"prefix","namespace":"Gem","path":"Gem.prefix","type":"module_function","visibility":"public"},"Gem.read_binary":{"description":"Safely read a file in binary mode on all platforms.","name":"read_binary","namespace":"Gem","path":"Gem.read_binary","type":"module_function","visibility":"public"},"Gem.refresh":{"description":"Refresh available gems from disk.","name":"refresh","namespace":"Gem","path":"Gem.refresh","type":"module_function","visibility":"public"},"Gem.register_default_spec":{"description":"Register a Gem::Specification for default gem.\n\nTwo formats for the specification are supported:\n\n* MRI 2.0 style, where spec.files contains unprefixed require names.\n  The spec's filenames will be registered as-is.\n* New style, where spec.files contains files prefixed with paths\n  from spec.require_paths. The prefixes are stripped before\n  registering the spec's filenames. Unprefixed files are omitted.","name":"register_default_spec","namespace":"Gem","path":"Gem.register_default_spec","type":"module_function","visibility":"public"},"Gem.remove_unresolved_default_spec":{"description":"Remove needless Gem::Specification of default gem from\nunresolved default gem list","name":"remove_unresolved_default_spec","namespace":"Gem","path":"Gem.remove_unresolved_default_spec","type":"module_function","visibility":"public"},"Gem.ruby":{"description":"The path to the running Ruby interpreter.","name":"ruby","namespace":"Gem","path":"Gem.ruby","type":"module_function","visibility":"public"},"Gem.ruby=":{"description":"Allows setting path to Ruby.  This method is available when requiring\n'rubygems/test_case'","name":"ruby=","namespace":"Gem","path":"Gem.ruby=","type":"module_function","visibility":"public"},"Gem.ruby_api_version":{"description":"Returns a String containing the API compatibility version of Ruby","name":"ruby_api_version","namespace":"Gem","path":"Gem.ruby_api_version","type":"module_function","visibility":"public"},"Gem.ruby_engine":{"description":"A wrapper around RUBY_ENGINE const that may not be defined","name":"ruby_engine","namespace":"Gem","path":"Gem.ruby_engine","type":"module_function","visibility":"public"},"Gem.ruby_version":{"description":"A Gem::Version for the currently running Ruby.","name":"ruby_version","namespace":"Gem","path":"Gem.ruby_version","type":"module_function","visibility":"public"},"Gem.rubygems_version":{"description":"A Gem::Version for the currently running RubyGems","name":"rubygems_version","namespace":"Gem","path":"Gem.rubygems_version","type":"module_function","visibility":"public"},"Gem.searcher=":{"description":"Allows setting the gem path searcher.  This method is available when\nrequiring 'rubygems/test_case'","name":"searcher=","namespace":"Gem","path":"Gem.searcher=","type":"module_function","visibility":"public"},"Gem.sources":{"description":"Returns an Array of sources to fetch remote gems from. Uses\ndefault_sources if the sources list is empty.","name":"sources","namespace":"Gem","path":"Gem.sources","type":"module_function","visibility":"public"},"Gem.sources=":{"description":"Need to be able to set the sources without calling\nGem.sources.replace since that would cause an infinite loop.\n\nDOC: This comment is not documentation about the method itself, it's\nmore of a code comment about the implementation.","name":"sources=","namespace":"Gem","path":"Gem.sources=","type":"module_function","visibility":"public"},"Gem.spec_cache_dir":{"description":"","name":"spec_cache_dir","namespace":"Gem","path":"Gem.spec_cache_dir","type":"module_function","visibility":"public"},"Gem.suffix_pattern":{"description":"Glob pattern for require-able path suffixes.","name":"suffix_pattern","namespace":"Gem","path":"Gem.suffix_pattern","type":"module_function","visibility":"public"},"Gem.suffixes":{"description":"Suffixes for require-able paths.","name":"suffixes","namespace":"Gem","path":"Gem.suffixes","type":"module_function","visibility":"public"},"Gem.time":{"description":"Prints the amount of time the supplied block takes to run using the debug\nUI output.","name":"time","namespace":"Gem","path":"Gem.time","type":"module_function","visibility":"public"},"Gem.try_activate":{"description":"Try to activate a gem containing +path+. Returns true if\nactivation succeeded or wasn't needed because it was already\nactivated. Returns false if it can't find the path in a gem.","name":"try_activate","namespace":"Gem","path":"Gem.try_activate","type":"module_function","visibility":"public"},"Gem.ui":{"description":"Lazily loads DefaultUserInteraction and returns the default UI.","name":"ui","namespace":"Gem","path":"Gem.ui","type":"module_function","visibility":"public"},"Gem.use_gemdeps":{"description":"Looks for a gem dependency file at +path+ and activates the gems in the\nfile if found.  If the file is not found an ArgumentError is raised.\n\nIf +path+ is not given the RUBYGEMS_GEMDEPS environment variable is used,\nbut if no file is found no exception is raised.\n\nIf '-' is given for +path+ RubyGems searches up from the current working\ndirectory for gem dependency files (gem.deps.rb, Gemfile, Isolate) and\nactivates the gems in the first one found.\n\nYou can run this automatically when rubygems starts.  To enable, set\nthe <code>RUBYGEMS_GEMDEPS</code> environment variable to either the path\nof your gem dependencies file or \"-\" to auto-discover in parent\ndirectories.\n\nNOTE: Enabling automatic discovery on multiuser systems can lead to\nexecution of arbitrary code when used from directories outside your\ncontrol.","name":"detect_gemdeps","namespace":"Gem","path":"Gem.detect_gemdeps","type":"module_function","visibility":"public"},"Gem.use_paths":{"description":"Use the +home+ and +paths+ values for Gem.dir and Gem.path.  Used mainly\nby the unit tests to provide environment isolation.","name":"use_paths","namespace":"Gem","path":"Gem.use_paths","type":"module_function","visibility":"public"},"Gem.user_dir":{"description":"Path for gems in the user's home directory","name":"user_dir","namespace":"Gem","path":"Gem.user_dir","type":"module_function","visibility":"public"},"Gem.user_home":{"description":"The home directory for the user.","name":"user_home","namespace":"Gem","path":"Gem.user_home","type":"module_function","visibility":"public"},"Gem.vendor_dir":{"description":"Directory where vendor gems are installed.","name":"vendor_dir","namespace":"Gem","path":"Gem.vendor_dir","type":"module_function","visibility":"public"},"Gem.win_platform=":{"description":"Allows toggling Windows behavior.  This method is available when requiring\n'rubygems/test_case'","name":"win_platform=","namespace":"Gem","path":"Gem.win_platform=","type":"module_function","visibility":"public"},"Gem.win_platform?":{"description":"Is this a windows platform?","name":"win_platform?","namespace":"Gem","path":"Gem.win_platform?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Gem::@@win_platform":{"description":"","name":"@@win_platform","namespace":"Gem","path":"Gem::@@win_platform","type":"classvariable","visibility":"public"},"Gem::AvailableSet":{"description":"","name":"AvailableSet","namespace":"Gem","path":"Gem::AvailableSet","type":"class","visibility":"public"},"Gem::AvailableSet#<<":{"description":"","name":"<<","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#<<","type":"instance_method","visibility":"public"},"Gem::AvailableSet#add":{"description":"","name":"add","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#add","type":"instance_method","visibility":"public"},"Gem::AvailableSet#all_specs":{"description":"","name":"all_specs","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#all_specs","type":"instance_method","visibility":"public"},"Gem::AvailableSet#each":{"description":"Yields each Tuple in this AvailableSet","name":"each","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#each","type":"instance_method","visibility":"public"},"Gem::AvailableSet#each_spec":{"description":"Yields the Gem::Specification for each Tuple in this AvailableSet","name":"each_spec","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#each_spec","type":"instance_method","visibility":"public"},"Gem::AvailableSet#empty?":{"description":"","name":"empty?","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::AvailableSet#find_all":{"description":"Used by the Resolver, the protocol to use a AvailableSet as a\nsearch Set.","name":"find_all","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#find_all","type":"instance_method","visibility":"public"},"Gem::AvailableSet#initialize":{"description":"","name":"initialize","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#initialize","type":"instance_method","visibility":"public","return":[["AvailableSet"],"a new instance of AvailableSet"]},"Gem::AvailableSet#inject_into_list":{"description":"","name":"inject_into_list","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#inject_into_list","type":"instance_method","visibility":"public"},"Gem::AvailableSet#match_platform!":{"description":"","name":"match_platform!","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#match_platform!","type":"instance_method","visibility":"public"},"Gem::AvailableSet#pick_best!":{"description":"","name":"pick_best!","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#pick_best!","type":"instance_method","visibility":"public"},"Gem::AvailableSet#prefetch":{"description":"","name":"prefetch","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#prefetch","type":"instance_method","visibility":"public"},"Gem::AvailableSet#remote":{"description":":nodoc:","name":"remote","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#remote","type":"instance_method","visibility":"public"},"Gem::AvailableSet#remote=":{"description":":nodoc:","name":"remote=","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#remote=","type":"instance_method","visibility":"public"},"Gem::AvailableSet#remove_installed!":{"description":"","name":"remove_installed!","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#remove_installed!","type":"instance_method","visibility":"public"},"Gem::AvailableSet#set":{"description":"Returns the value of attribute set","name":"set","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#set","type":"instance_method","visibility":"public"},"Gem::AvailableSet#size":{"description":"","name":"size","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#size","type":"instance_method","visibility":"public"},"Gem::AvailableSet#sorted":{"description":"","name":"sorted","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#sorted","type":"instance_method","visibility":"public"},"Gem::AvailableSet#source_for":{"description":"","name":"source_for","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#source_for","type":"instance_method","visibility":"public"},"Gem::AvailableSet#to_request_set":{"description":"Converts this AvailableSet into a RequestSet that can be used to install\ngems.\n\nIf +development+ is :none then no development dependencies are installed.\nOther options are :shallow for only direct development dependencies of the\ngems in this set or :all for all development dependencies.","name":"to_request_set","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet#to_request_set","type":"instance_method","visibility":"public"},"Gem::AvailableSet::Tuple":{"description":"","name":"Tuple","namespace":"Gem::AvailableSet","path":"Gem::AvailableSet::Tuple","type":"class","visibility":"public"},"Gem::AvailableSet::Tuple#source":{"description":"Returns the value of attribute source","name":"source","namespace":"Gem::AvailableSet::Tuple","path":"Gem::AvailableSet::Tuple#source","type":"instance_method","visibility":"public","return":[["Object"],"the current value of source"]},"Gem::AvailableSet::Tuple#source=":{"description":"Sets the attribute source","name":"source=","namespace":"Gem::AvailableSet::Tuple","path":"Gem::AvailableSet::Tuple#source=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute source to."]],"return":[["Object"],"the newly set value"]},"Gem::AvailableSet::Tuple#spec":{"description":"Returns the value of attribute spec","name":"spec","namespace":"Gem::AvailableSet::Tuple","path":"Gem::AvailableSet::Tuple#spec","type":"instance_method","visibility":"public","return":[["Object"],"the current value of spec"]},"Gem::AvailableSet::Tuple#spec=":{"description":"Sets the attribute spec","name":"spec=","namespace":"Gem::AvailableSet::Tuple","path":"Gem::AvailableSet::Tuple#spec=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute spec to."]],"return":[["Object"],"the newly set value"]},"Gem::BasicSpecification":{"description":"BasicSpecification is an abstract class which implements some common code\nused by both Specification and StubSpecification.","name":"BasicSpecification","namespace":"Gem","path":"Gem::BasicSpecification","type":"class","visibility":"public"},"Gem::BasicSpecification#activated?":{"description":"True when the gem has been activated","name":"activated?","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#activated?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::BasicSpecification#base_dir":{"description":"Returns the full path to the base gem directory.\n\neg: /usr/local/lib/ruby/gems/1.8","name":"base_dir","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#base_dir","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#base_dir=":{"description":"Allows installation of extensions for git: gems.","name":"base_dir=","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#base_dir=","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#contains_requirable_file?":{"description":"Return true if this spec can require +file+.","name":"contains_requirable_file?","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#contains_requirable_file?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::BasicSpecification#default_gem?":{"description":"","name":"default_gem?","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#default_gem?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::BasicSpecification#extension_dir":{"description":"Returns full path to the directory where gem's extensions are installed.","name":"extension_dir","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#extension_dir","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#extension_dir=":{"description":"Sets the directory where extensions for this gem will be installed.","name":"extension_dir=","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#extension_dir=","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#extensions_dir":{"description":"Returns path to the extensions directory.","name":"extensions_dir","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#extensions_dir","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#find_full_gem_path":{"description":":nodoc:","name":"find_full_gem_path","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#find_full_gem_path","type":"instance_method","visibility":"private"},"Gem::BasicSpecification#full_gem_path":{"description":"The full path to the gem (install path + full name).","name":"full_gem_path","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#full_gem_path","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#full_gem_path=":{"description":"Allows correct activation of git: and path: gems.","name":"full_gem_path=","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#full_gem_path=","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#full_name":{"description":"Returns the full name (name-version) of this Gem.  Platform information\nis included (name-version-platform) if it is specified and not the\ndefault Ruby platform.","name":"full_name","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#full_name","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#full_require_paths":{"description":"Full paths in the gem to add to <code>$LOAD_PATH</code> when this gem is\nactivated.","name":"full_require_paths","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#full_require_paths","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#gem_dir":{"description":"Returns the full path to this spec's gem directory.\neg: /usr/local/lib/ruby/1.8/gems/mygem-1.0","name":"gem_dir","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#gem_dir","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#gems_dir":{"description":"Returns the full path to the gems directory containing this spec's\ngem directory. eg: /usr/local/lib/ruby/1.8/gems","name":"gems_dir","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#gems_dir","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#ignored=":{"description":"Is this specification ignored for activation purposes?","name":"ignored=","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#ignored=","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#loaded_from":{"description":"The path this gemspec was loaded from.  This attribute is not persisted.","name":"loaded_from","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#loaded_from","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#loaded_from=":{"description":"Set the path the Specification was loaded from. +path+ is converted to a\nString.","name":"loaded_from=","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#loaded_from=","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#name":{"description":"Name of the gem","name":"name","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#name","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#platform":{"description":"Platform of the gem","name":"platform","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#platform","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#raw_require_paths":{"description":":nodoc:","name":"raw_require_paths","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#raw_require_paths","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#require_paths":{"description":"Paths in the gem to add to <code>$LOAD_PATH</code> when this gem is\nactivated.\n\nSee also #require_paths=\n\nIf you have an extension you do not need to add <code>\"ext\"</code> to the\nrequire path, the extension build process will copy the extension files\ninto \"lib\" for you.\n\nThe default value is <code>\"lib\"</code>\n\nUsage:\n\n  # If all library files are in the root directory...\n  spec.require_path = '.'","name":"require_paths","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#require_paths","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#source_paths":{"description":"Returns the paths to the source files for use with analysis and\ndocumentation tools.  These paths are relative to full_gem_path.","name":"source_paths","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#source_paths","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#stubbed?":{"description":"Whether this specification is stubbed - i.e. we have information\nabout the gem from a stub line, without having to evaluate the\nentire gemspec file.","name":"stubbed?","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#stubbed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::BasicSpecification#to_fullpath":{"description":"Full path of the target library file.\nIf the file is not in this gem, return nil.","name":"to_fullpath","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#to_fullpath","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#to_spec":{"description":"Return a Gem::Specification from this gem","name":"to_spec","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#to_spec","type":"instance_method","visibility":"public"},"Gem::BasicSpecification#version":{"description":"Version of the gem","name":"version","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification#version","type":"instance_method","visibility":"public"},"Gem::BasicSpecification.default_specifications_dir":{"description":"","name":"default_specifications_dir","namespace":"Gem::BasicSpecification","path":"Gem::BasicSpecification.default_specifications_dir","type":"class_method","visibility":"public"},"Gem::Command":{"description":"Base class for all Gem commands.  When creating a new gem command, define\n#initialize, #execute, #arguments, #defaults_str, #description and #usage\n(as appropriate).  See the above mentioned methods for details.\n\nA very good example to look at is Gem::Commands::ContentsCommand","name":"Command","namespace":"Gem","path":"Gem::Command","type":"class","visibility":"public"},"Gem::Command#add_extra_args":{"description":"Adds extra args from ~/.gemrc","name":"add_extra_args","namespace":"Gem::Command","path":"Gem::Command#add_extra_args","type":"instance_method","visibility":"public"},"Gem::Command#add_option":{"description":"Add a command-line option and handler to the command.\n\nSee OptionParser#make_switch for an explanation of +opts+.\n\n+handler+ will be called with two values, the value of the argument and\nthe options hash.\n\nIf the first argument of add_option is a Symbol, it's used to group\noptions in output.  See `gem help list` for an example.","name":"add_option","namespace":"Gem::Command","path":"Gem::Command#add_option","type":"instance_method","visibility":"public"},"Gem::Command#add_parser_description":{"description":":nodoc:","name":"add_parser_description","namespace":"Gem::Command","path":"Gem::Command#add_parser_description","type":"instance_method","visibility":"private"},"Gem::Command#add_parser_options":{"description":":nodoc:","name":"add_parser_options","namespace":"Gem::Command","path":"Gem::Command#add_parser_options","type":"instance_method","visibility":"private"},"Gem::Command#add_parser_run_info":{"description":"Adds a section with +title+ and +content+ to the parser help view.  Used\nfor adding command arguments and default arguments.","name":"add_parser_run_info","namespace":"Gem::Command","path":"Gem::Command#add_parser_run_info","type":"instance_method","visibility":"private"},"Gem::Command#add_parser_summary":{"description":":nodoc:","name":"add_parser_summary","namespace":"Gem::Command","path":"Gem::Command#add_parser_summary","type":"instance_method","visibility":"private"},"Gem::Command#arguments":{"description":"Override to provide details of the arguments a command takes.  It should\nreturn a left-justified string, one argument per line.\n\nFor example:\n\n  def usage\n    \"#{program_name} FILE [FILE ...]\"\n  end\n\n  def arguments\n    \"FILE          name of file to find\"\n  end","name":"arguments","namespace":"Gem::Command","path":"Gem::Command#arguments","type":"instance_method","visibility":"public"},"Gem::Command#begins?":{"description":"True if +long+ begins with the characters from +short+.","name":"begins?","namespace":"Gem::Command","path":"Gem::Command#begins?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Command#command":{"description":"The name of the command.","name":"command","namespace":"Gem::Command","path":"Gem::Command#command","type":"instance_method","visibility":"public"},"Gem::Command#configure_options":{"description":"","name":"configure_options","namespace":"Gem::Command","path":"Gem::Command#configure_options","type":"instance_method","visibility":"private"},"Gem::Command#create_option_parser":{"description":"Creates an option parser and fills it in with the help info for the\ncommand.","name":"create_option_parser","namespace":"Gem::Command","path":"Gem::Command#create_option_parser","type":"instance_method","visibility":"private"},"Gem::Command#defaults":{"description":"The default options for the command.","name":"defaults","namespace":"Gem::Command","path":"Gem::Command#defaults","type":"instance_method","visibility":"public"},"Gem::Command#defaults=":{"description":"The default options for the command.","name":"defaults=","namespace":"Gem::Command","path":"Gem::Command#defaults=","type":"instance_method","visibility":"public"},"Gem::Command#defaults_str":{"description":"Override to display the default values of the command options. (similar to\n+arguments+, but displays the default values).\n\nFor example:\n\n  def defaults_str\n    --no-gems-first --no-all\n  end","name":"defaults_str","namespace":"Gem::Command","path":"Gem::Command#defaults_str","type":"instance_method","visibility":"public"},"Gem::Command#description":{"description":"Override to display a longer description of what this command does.","name":"description","namespace":"Gem::Command","path":"Gem::Command#description","type":"instance_method","visibility":"public"},"Gem::Command#execute":{"description":"Override to provide command handling.\n\n#options will be filled in with your parsed options, unparsed options will\nbe left in <tt>options[:args]</tt>.\n\nSee also: #get_all_gem_names, #get_one_gem_name,\n#get_one_optional_argument","name":"execute","namespace":"Gem::Command","path":"Gem::Command#execute","type":"instance_method","visibility":"public"},"Gem::Command#get_all_gem_names":{"description":"Get all gem names from the command line.","name":"get_all_gem_names","namespace":"Gem::Command","path":"Gem::Command#get_all_gem_names","type":"instance_method","visibility":"public"},"Gem::Command#get_all_gem_names_and_versions":{"description":"Get all [gem, version] from the command line.\n\nAn argument in the form gem:ver is pull apart into the gen name and version,\nrespectively.","name":"get_all_gem_names_and_versions","namespace":"Gem::Command","path":"Gem::Command#get_all_gem_names_and_versions","type":"instance_method","visibility":"public"},"Gem::Command#get_one_gem_name":{"description":"Get a single gem name from the command line.  Fail if there is no gem name\nor if there is more than one gem name given.","name":"get_one_gem_name","namespace":"Gem::Command","path":"Gem::Command#get_one_gem_name","type":"instance_method","visibility":"public"},"Gem::Command#get_one_optional_argument":{"description":"Get a single optional argument from the command line.  If more than one\nargument is given, return only the first. Return nil if none are given.","name":"get_one_optional_argument","namespace":"Gem::Command","path":"Gem::Command#get_one_optional_argument","type":"instance_method","visibility":"public"},"Gem::Command#handle_options":{"description":"Handle the given list of arguments by parsing them and recording the\nresults.","name":"handle_options","namespace":"Gem::Command","path":"Gem::Command#handle_options","type":"instance_method","visibility":"public"},"Gem::Command#handles?":{"description":"True if the command handles the given argument list.","name":"handles?","namespace":"Gem::Command","path":"Gem::Command#handles?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Command#initialize":{"description":"Initializes a generic gem command named +command+.  +summary+ is a short\ndescription displayed in `gem help commands`.  +defaults+ are the default\noptions.  Defaults should be mirrored in #defaults_str, unless there are\nnone.\n\nWhen defining a new command subclass, use add_option to add command-line\nswitches.\n\nUnhandled arguments (gem names, files, etc.) are left in\n<tt>options[:args]</tt>.","name":"initialize","namespace":"Gem::Command","path":"Gem::Command#initialize","type":"instance_method","visibility":"public","return":[["Command"],"a new instance of Command"]},"Gem::Command#invoke":{"description":"Invoke the command with the given list of arguments.","name":"invoke","namespace":"Gem::Command","path":"Gem::Command#invoke","type":"instance_method","visibility":"public"},"Gem::Command#invoke_with_build_args":{"description":"Invoke the command with the given list of normal arguments\nand additional build arguments.","name":"invoke_with_build_args","namespace":"Gem::Command","path":"Gem::Command#invoke_with_build_args","type":"instance_method","visibility":"public"},"Gem::Command#merge_options":{"description":"Merge a set of command options with the set of default options (without\nmodifying the default option hash).","name":"merge_options","namespace":"Gem::Command","path":"Gem::Command#merge_options","type":"instance_method","visibility":"public"},"Gem::Command#options":{"description":"The options for the command.","name":"options","namespace":"Gem::Command","path":"Gem::Command#options","type":"instance_method","visibility":"public"},"Gem::Command#parser":{"description":"Create on demand parser.","name":"parser","namespace":"Gem::Command","path":"Gem::Command#parser","type":"instance_method","visibility":"private"},"Gem::Command#program_name":{"description":"The name of the command for command-line invocation.","name":"program_name","namespace":"Gem::Command","path":"Gem::Command#program_name","type":"instance_method","visibility":"public"},"Gem::Command#program_name=":{"description":"The name of the command for command-line invocation.","name":"program_name=","namespace":"Gem::Command","path":"Gem::Command#program_name=","type":"instance_method","visibility":"public"},"Gem::Command#remove_option":{"description":"Remove previously defined command-line argument +name+.","name":"remove_option","namespace":"Gem::Command","path":"Gem::Command#remove_option","type":"instance_method","visibility":"public"},"Gem::Command#show_help":{"description":"Display the help message for the command.","name":"show_help","namespace":"Gem::Command","path":"Gem::Command#show_help","type":"instance_method","visibility":"public"},"Gem::Command#show_lookup_failure":{"description":"Display to the user that a gem couldn't be found and reasons why\n--\nTODO: replace +domain+ with a parameter to suppress suggestions","name":"show_lookup_failure","namespace":"Gem::Command","path":"Gem::Command#show_lookup_failure","type":"instance_method","visibility":"public"},"Gem::Command#summary":{"description":"A short description of the command.","name":"summary","namespace":"Gem::Command","path":"Gem::Command#summary","type":"instance_method","visibility":"public"},"Gem::Command#summary=":{"description":"A short description of the command.","name":"summary=","namespace":"Gem::Command","path":"Gem::Command#summary=","type":"instance_method","visibility":"public"},"Gem::Command#usage":{"description":"Override to display the usage for an individual gem command.\n\nThe text \"[options]\" is automatically appended to the usage text.","name":"usage","namespace":"Gem::Command","path":"Gem::Command#usage","type":"instance_method","visibility":"public"},"Gem::Command#when_invoked":{"description":"Call the given block when invoked.\n\nNormal command invocations just executes the +execute+ method of the\ncommand.  Specifying an invocation block allows the test methods to\noverride the normal action of a command to determine that it has been\ninvoked correctly.","name":"when_invoked","namespace":"Gem::Command","path":"Gem::Command#when_invoked","type":"instance_method","visibility":"public"},"Gem::Command#wrap":{"description":"Wraps +text+ to +width+","name":"wrap","namespace":"Gem::Command","path":"Gem::Command#wrap","type":"instance_method","visibility":"private"},"Gem::Command.add_common_option":{"description":"","name":"add_common_option","namespace":"Gem::Command","path":"Gem::Command.add_common_option","type":"class_method","visibility":"public"},"Gem::Command.add_specific_extra_args":{"description":"Add a list of extra arguments for the given command.  +args+ may be an\narray or a string to be split on white space.","name":"add_specific_extra_args","namespace":"Gem::Command","path":"Gem::Command.add_specific_extra_args","type":"class_method","visibility":"public"},"Gem::Command.build_args":{"description":"Arguments used when building gems","name":"build_args","namespace":"Gem::Command","path":"Gem::Command.build_args","type":"class_method","visibility":"public"},"Gem::Command.build_args=":{"description":"","name":"build_args=","namespace":"Gem::Command","path":"Gem::Command.build_args=","type":"class_method","visibility":"public"},"Gem::Command.common_options":{"description":"","name":"common_options","namespace":"Gem::Command","path":"Gem::Command.common_options","type":"class_method","visibility":"public"},"Gem::Command.extra_args":{"description":"","name":"extra_args","namespace":"Gem::Command","path":"Gem::Command.extra_args","type":"class_method","visibility":"public"},"Gem::Command.extra_args=":{"description":"","name":"extra_args=","namespace":"Gem::Command","path":"Gem::Command.extra_args=","type":"class_method","visibility":"public"},"Gem::Command.specific_extra_args":{"description":"Return an array of extra arguments for the command.  The extra arguments\ncome from the gem configuration file read at program startup.","name":"specific_extra_args","namespace":"Gem::Command","path":"Gem::Command.specific_extra_args","type":"class_method","visibility":"public"},"Gem::Command.specific_extra_args_hash":{"description":"Accessor for the specific extra args hash (self initializing).","name":"specific_extra_args_hash","namespace":"Gem::Command","path":"Gem::Command.specific_extra_args_hash","type":"class_method","visibility":"public"},"Gem::Command::HELP":{"description":":stopdoc:","name":"HELP","namespace":"Gem::Command","path":"Gem::Command::HELP","type":"constant","return":null,"visibility":"private"},"Gem::CommandLineError":{"description":"","name":"CommandLineError","namespace":"Gem","path":"Gem::CommandLineError","type":"class","visibility":"public"},"Gem::CommandManager":{"description":"The command manager registers and installs all the individual sub-commands\nsupported by the gem command.\n\nExtra commands can be provided by writing a rubygems_plugin.rb\nfile in an installed gem.  You should register your command against the\nGem::CommandManager instance, like this:\n\n  # file rubygems_plugin.rb\n  require 'rubygems/command_manager'\n\n  Gem::CommandManager.instance.register_command :edit\n\nYou should put the implementation of your command in rubygems/commands.\n\n  # file rubygems/commands/edit_command.rb\n  class Gem::Commands::EditCommand < Gem::Command\n    # ...\n  end\n\nSee Gem::Command for instructions on writing gem commands.","name":"CommandManager","namespace":"Gem","path":"Gem::CommandManager","type":"class","visibility":"public"},"Gem::CommandManager#[]":{"description":"Returns a Command instance for +command_name+","name":"[]","namespace":"Gem::CommandManager","path":"Gem::CommandManager#[]","type":"instance_method","visibility":"public"},"Gem::CommandManager#command_names":{"description":"Return a sorted list of all command names as strings.","name":"command_names","namespace":"Gem::CommandManager","path":"Gem::CommandManager#command_names","type":"instance_method","visibility":"public"},"Gem::CommandManager#find_command":{"description":"","name":"find_command","namespace":"Gem::CommandManager","path":"Gem::CommandManager#find_command","type":"instance_method","visibility":"public"},"Gem::CommandManager#find_command_possibilities":{"description":"","name":"find_command_possibilities","namespace":"Gem::CommandManager","path":"Gem::CommandManager#find_command_possibilities","type":"instance_method","visibility":"public"},"Gem::CommandManager#initialize":{"description":"Register all the subcommands supported by the gem command.","name":"initialize","namespace":"Gem::CommandManager","path":"Gem::CommandManager#initialize","type":"instance_method","visibility":"public","return":[["CommandManager"],"a new instance of CommandManager"]},"Gem::CommandManager#instance":{"description":"Returns self. Allows a CommandManager instance to stand\nin for the class itself.","name":"instance","namespace":"Gem::CommandManager","path":"Gem::CommandManager#instance","type":"instance_method","visibility":"public"},"Gem::CommandManager#load_and_instantiate":{"description":"","name":"load_and_instantiate","namespace":"Gem::CommandManager","path":"Gem::CommandManager#load_and_instantiate","type":"instance_method","visibility":"private"},"Gem::CommandManager#process_args":{"description":"","name":"process_args","namespace":"Gem::CommandManager","path":"Gem::CommandManager#process_args","type":"instance_method","visibility":"public"},"Gem::CommandManager#register_command":{"description":"Register the Symbol +command+ as a gem command.","name":"register_command","namespace":"Gem::CommandManager","path":"Gem::CommandManager#register_command","type":"instance_method","visibility":"public"},"Gem::CommandManager#run":{"description":"Run the command specified by +args+.","name":"run","namespace":"Gem::CommandManager","path":"Gem::CommandManager#run","type":"instance_method","visibility":"public"},"Gem::CommandManager#unregister_command":{"description":"Unregister the Symbol +command+ as a gem command.","name":"unregister_command","namespace":"Gem::CommandManager","path":"Gem::CommandManager#unregister_command","type":"instance_method","visibility":"public"},"Gem::CommandManager.instance":{"description":"Return the authoritative instance of the command manager.","name":"instance","namespace":"Gem::CommandManager","path":"Gem::CommandManager.instance","type":"class_method","visibility":"public"},"Gem::CommandManager.reset":{"description":"Reset the authoritative instance of the command manager.","name":"reset","namespace":"Gem::CommandManager","path":"Gem::CommandManager.reset","type":"class_method","visibility":"public"},"Gem::CommandManager::BUILTIN_COMMANDS":{"description":":nodoc:","name":"BUILTIN_COMMANDS","namespace":"Gem::CommandManager","path":"Gem::CommandManager::BUILTIN_COMMANDS","type":"constant","return":null,"visibility":"public"},"Gem::Commands":{"description":"\\Commands will be placed in this namespace","name":"Commands","namespace":"Gem","path":"Gem::Commands","type":"module","visibility":"public"},"Gem::Commands::BuildCommand":{"description":"","name":"BuildCommand","namespace":"Gem::Commands","path":"Gem::Commands::BuildCommand","type":"class","visibility":"public"},"Gem::Commands::BuildCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::BuildCommand","path":"Gem::Commands::BuildCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::BuildCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::BuildCommand","path":"Gem::Commands::BuildCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::BuildCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::BuildCommand","path":"Gem::Commands::BuildCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::BuildCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::BuildCommand","path":"Gem::Commands::BuildCommand#initialize","type":"instance_method","visibility":"public","return":[["BuildCommand"],"a new instance of BuildCommand"]},"Gem::Commands::BuildCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::BuildCommand","path":"Gem::Commands::BuildCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand":{"description":"","name":"CertCommand","namespace":"Gem::Commands","path":"Gem::Commands::CertCommand","type":"class","visibility":"public"},"Gem::Commands::CertCommand#add_certificate":{"description":":nodoc:","name":"add_certificate","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#add_certificate","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#build":{"description":"","name":"build","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#build","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#build_cert":{"description":":nodoc:","name":"build_cert","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#build_cert","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#build_key":{"description":":nodoc:","name":"build_key","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#build_key","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#certificates_matching":{"description":"","name":"certificates_matching","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#certificates_matching","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#initialize","type":"instance_method","visibility":"public","return":[["CertCommand"],"a new instance of CertCommand"]},"Gem::Commands::CertCommand#list_certificates_matching":{"description":":nodoc:","name":"list_certificates_matching","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#list_certificates_matching","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#load_default_cert":{"description":"","name":"load_default_cert","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#load_default_cert","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#load_default_key":{"description":"","name":"load_default_key","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#load_default_key","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#load_defaults":{"description":":nodoc:","name":"load_defaults","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#load_defaults","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#remove_certificates_matching":{"description":":nodoc:","name":"remove_certificates_matching","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#remove_certificates_matching","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#sign":{"description":"","name":"sign","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#sign","type":"instance_method","visibility":"public"},"Gem::Commands::CertCommand#sign_certificates":{"description":":nodoc:","name":"sign_certificates","namespace":"Gem::Commands::CertCommand","path":"Gem::Commands::CertCommand#sign_certificates","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand":{"description":"","name":"CheckCommand","namespace":"Gem::Commands","path":"Gem::Commands::CheckCommand","type":"class","visibility":"public"},"Gem::Commands::CheckCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand#check_gems":{"description":"","name":"check_gems","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#check_gems","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand#doctor":{"description":"","name":"doctor","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#doctor","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::CheckCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#initialize","type":"instance_method","visibility":"public","return":[["CheckCommand"],"a new instance of CheckCommand"]},"Gem::Commands::CheckCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::CheckCommand","path":"Gem::Commands::CheckCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand":{"description":"","name":"CleanupCommand","namespace":"Gem::Commands","path":"Gem::Commands::CleanupCommand","type":"class","visibility":"public"},"Gem::Commands::CleanupCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#clean_gems":{"description":"","name":"clean_gems","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#clean_gems","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#get_candidate_gems":{"description":"","name":"get_candidate_gems","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#get_candidate_gems","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#get_gems_to_cleanup":{"description":"","name":"get_gems_to_cleanup","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#get_gems_to_cleanup","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#get_primary_gems":{"description":"","name":"get_primary_gems","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#get_primary_gems","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#initialize","type":"instance_method","visibility":"public","return":[["CleanupCommand"],"a new instance of CleanupCommand"]},"Gem::Commands::CleanupCommand#uninstall_dep":{"description":"","name":"uninstall_dep","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#uninstall_dep","type":"instance_method","visibility":"public"},"Gem::Commands::CleanupCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::CleanupCommand","path":"Gem::Commands::CleanupCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand":{"description":"","name":"ContentsCommand","namespace":"Gem::Commands","path":"Gem::Commands::ContentsCommand","type":"class","visibility":"public"},"Gem::Commands::ContentsCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#files_in":{"description":"","name":"files_in","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#files_in","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#files_in_default_gem":{"description":"","name":"files_in_default_gem","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#files_in_default_gem","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#files_in_gem":{"description":"","name":"files_in_gem","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#files_in_gem","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#gem_contents":{"description":"","name":"gem_contents","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#gem_contents","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#gem_install_dir":{"description":"","name":"gem_install_dir","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#gem_install_dir","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#gem_names":{"description":":nodoc:","name":"gem_names","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#gem_names","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#initialize","type":"instance_method","visibility":"public","return":[["ContentsCommand"],"a new instance of ContentsCommand"]},"Gem::Commands::ContentsCommand#path_description":{"description":":nodoc:","name":"path_description","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#path_description","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#show_files":{"description":"","name":"show_files","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#show_files","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#spec_for":{"description":"","name":"spec_for","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#spec_for","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#specification_directories":{"description":":nodoc:","name":"specification_directories","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#specification_directories","type":"instance_method","visibility":"public"},"Gem::Commands::ContentsCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::ContentsCommand","path":"Gem::Commands::ContentsCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand":{"description":"","name":"DependencyCommand","namespace":"Gem::Commands","path":"Gem::Commands::DependencyCommand","type":"class","visibility":"public"},"Gem::Commands::DependencyCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#display_pipe":{"description":":nodoc:","name":"display_pipe","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#display_pipe","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#display_readable":{"description":":nodoc:","name":"display_readable","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#display_readable","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#ensure_local_only_reverse_dependencies":{"description":":nodoc:","name":"ensure_local_only_reverse_dependencies","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#ensure_local_only_reverse_dependencies","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#ensure_specs":{"description":":nodoc:","name":"ensure_specs","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#ensure_specs","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#fetch_remote_specs":{"description":":nodoc:","name":"fetch_remote_specs","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#fetch_remote_specs","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#fetch_specs":{"description":":nodoc:","name":"fetch_specs","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#fetch_specs","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#find_reverse_dependencies":{"description":"Returns an Array of [specification, dep] that are satisfied by +spec+.","name":"find_reverse_dependencies","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#find_reverse_dependencies","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#gem_dependency":{"description":":nodoc:","name":"gem_dependency","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#gem_dependency","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#initialize","type":"instance_method","visibility":"public","return":[["DependencyCommand"],"a new instance of DependencyCommand"]},"Gem::Commands::DependencyCommand#print_dependencies":{"description":":nodoc:","name":"print_dependencies","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#print_dependencies","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#remote_specs":{"description":":nodoc:","name":"remote_specs","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#remote_specs","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#reverse_dependencies":{"description":":nodoc:","name":"reverse_dependencies","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#reverse_dependencies","type":"instance_method","visibility":"public"},"Gem::Commands::DependencyCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::DependencyCommand","path":"Gem::Commands::DependencyCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::EnvironmentCommand":{"description":"","name":"EnvironmentCommand","namespace":"Gem::Commands","path":"Gem::Commands::EnvironmentCommand","type":"class","visibility":"public"},"Gem::Commands::EnvironmentCommand#add_path":{"description":"","name":"add_path","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#add_path","type":"instance_method","visibility":"public"},"Gem::Commands::EnvironmentCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::EnvironmentCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::EnvironmentCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::EnvironmentCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#initialize","type":"instance_method","visibility":"public","return":[["EnvironmentCommand"],"a new instance of EnvironmentCommand"]},"Gem::Commands::EnvironmentCommand#show_environment":{"description":":nodoc:","name":"show_environment","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#show_environment","type":"instance_method","visibility":"public"},"Gem::Commands::EnvironmentCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::EnvironmentCommand","path":"Gem::Commands::EnvironmentCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::FetchCommand":{"description":"","name":"FetchCommand","namespace":"Gem::Commands","path":"Gem::Commands::FetchCommand","type":"class","visibility":"public"},"Gem::Commands::FetchCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::FetchCommand","path":"Gem::Commands::FetchCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::FetchCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::FetchCommand","path":"Gem::Commands::FetchCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::FetchCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::FetchCommand","path":"Gem::Commands::FetchCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::FetchCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::FetchCommand","path":"Gem::Commands::FetchCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::FetchCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::FetchCommand","path":"Gem::Commands::FetchCommand#initialize","type":"instance_method","visibility":"public","return":[["FetchCommand"],"a new instance of FetchCommand"]},"Gem::Commands::FetchCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::FetchCommand","path":"Gem::Commands::FetchCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::GenerateIndexCommand":{"description":"Generates a index files for use as a gem server.\n\nSee `gem help generate_index`","name":"GenerateIndexCommand","namespace":"Gem::Commands","path":"Gem::Commands::GenerateIndexCommand","type":"class","visibility":"public"},"Gem::Commands::GenerateIndexCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::GenerateIndexCommand","path":"Gem::Commands::GenerateIndexCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::GenerateIndexCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::GenerateIndexCommand","path":"Gem::Commands::GenerateIndexCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::GenerateIndexCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::GenerateIndexCommand","path":"Gem::Commands::GenerateIndexCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::GenerateIndexCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::GenerateIndexCommand","path":"Gem::Commands::GenerateIndexCommand#initialize","type":"instance_method","visibility":"public","return":[["GenerateIndexCommand"],"a new instance of GenerateIndexCommand"]},"Gem::Commands::HelpCommand":{"description":"","name":"HelpCommand","namespace":"Gem::Commands","path":"Gem::Commands::HelpCommand","type":"class","visibility":"public"},"Gem::Commands::HelpCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::HelpCommand#initialize":{"description":":startdoc:","name":"initialize","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand#initialize","type":"instance_method","visibility":"public","return":[["HelpCommand"],"a new instance of HelpCommand"]},"Gem::Commands::HelpCommand#show_command_help":{"description":":nodoc:","name":"show_command_help","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand#show_command_help","type":"instance_method","visibility":"public"},"Gem::Commands::HelpCommand#show_commands":{"description":":nodoc:","name":"show_commands","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand#show_commands","type":"instance_method","visibility":"public"},"Gem::Commands::HelpCommand#show_help":{"description":":nodoc:","name":"show_help","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand#show_help","type":"instance_method","visibility":"public"},"Gem::Commands::HelpCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::HelpCommand::EXAMPLES":{"description":":stopdoc:","name":"EXAMPLES","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand::EXAMPLES","type":"constant","return":null,"visibility":"public"},"Gem::Commands::HelpCommand::GEM_DEPENDENCIES":{"description":"","name":"GEM_DEPENDENCIES","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand::GEM_DEPENDENCIES","type":"constant","return":null,"visibility":"public"},"Gem::Commands::HelpCommand::PLATFORMS":{"description":"","name":"PLATFORMS","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand::PLATFORMS","type":"constant","return":null,"visibility":"public"},"Gem::Commands::HelpCommand::SUBCOMMANDS":{"description":"NOTE when updating also update Gem::Command::HELP","name":"SUBCOMMANDS","namespace":"Gem::Commands::HelpCommand","path":"Gem::Commands::HelpCommand::SUBCOMMANDS","type":"constant","return":null,"visibility":"public"},"Gem::Commands::InstallCommand":{"description":"Gem installer command line tool\n\nSee `gem help install`","name":"InstallCommand","namespace":"Gem::Commands","path":"Gem::Commands::InstallCommand","type":"class","visibility":"public"},"Gem::Commands::InstallCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#check_install_dir":{"description":":nodoc:","name":"check_install_dir","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#check_install_dir","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#check_version":{"description":":nodoc:","name":"check_version","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#check_version","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#initialize","type":"instance_method","visibility":"public","return":[["InstallCommand"],"a new instance of InstallCommand"]},"Gem::Commands::InstallCommand#install_from_gemdeps":{"description":":nodoc:","name":"install_from_gemdeps","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#install_from_gemdeps","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#install_gem":{"description":":nodoc:","name":"install_gem","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#install_gem","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#install_gem_without_dependencies":{"description":":nodoc:","name":"install_gem_without_dependencies","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#install_gem_without_dependencies","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#install_gems":{"description":":nodoc:","name":"install_gems","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#install_gems","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#installed_specs":{"description":":nodoc:","name":"installed_specs","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#installed_specs","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#load_hooks":{"description":"Loads post-install hooks","name":"load_hooks","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#load_hooks","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#show_install_errors":{"description":":nodoc:","name":"show_install_errors","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#show_install_errors","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#show_installed":{"description":":nodoc:","name":"show_installed","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#show_installed","type":"instance_method","visibility":"public"},"Gem::Commands::InstallCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::InstallCommand","path":"Gem::Commands::InstallCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::ListCommand":{"description":"An alternate to Gem::Commands::QueryCommand that searches for gems starting\nwith the the supplied argument.","name":"ListCommand","namespace":"Gem::Commands","path":"Gem::Commands::ListCommand","type":"class","visibility":"public"},"Gem::Commands::ListCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::ListCommand","path":"Gem::Commands::ListCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::ListCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::ListCommand","path":"Gem::Commands::ListCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::ListCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::ListCommand","path":"Gem::Commands::ListCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::ListCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::ListCommand","path":"Gem::Commands::ListCommand#initialize","type":"instance_method","visibility":"public","return":[["ListCommand"],"a new instance of ListCommand"]},"Gem::Commands::ListCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::ListCommand","path":"Gem::Commands::ListCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand":{"description":"","name":"LockCommand","namespace":"Gem::Commands","path":"Gem::Commands::LockCommand","type":"class","visibility":"public"},"Gem::Commands::LockCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand#complain":{"description":"","name":"complain","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#complain","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#initialize","type":"instance_method","visibility":"public","return":[["LockCommand"],"a new instance of LockCommand"]},"Gem::Commands::LockCommand#spec_path":{"description":"","name":"spec_path","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#spec_path","type":"instance_method","visibility":"public"},"Gem::Commands::LockCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::LockCommand","path":"Gem::Commands::LockCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::MirrorCommand":{"description":"","name":"MirrorCommand","namespace":"Gem::Commands","path":"Gem::Commands::MirrorCommand","type":"class","visibility":"public"},"Gem::Commands::MirrorCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::MirrorCommand","path":"Gem::Commands::MirrorCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::MirrorCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::MirrorCommand","path":"Gem::Commands::MirrorCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::MirrorCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::MirrorCommand","path":"Gem::Commands::MirrorCommand#initialize","type":"instance_method","visibility":"public","return":[["MirrorCommand"],"a new instance of MirrorCommand"]},"Gem::Commands::OpenCommand":{"description":"","name":"OpenCommand","namespace":"Gem::Commands","path":"Gem::Commands::OpenCommand","type":"class","visibility":"public"},"Gem::Commands::OpenCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#get_env_editor":{"description":"","name":"get_env_editor","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#get_env_editor","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#initialize","type":"instance_method","visibility":"public","return":[["OpenCommand"],"a new instance of OpenCommand"]},"Gem::Commands::OpenCommand#open_editor":{"description":"","name":"open_editor","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#open_editor","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#open_gem":{"description":"","name":"open_gem","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#open_gem","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#spec_for":{"description":"","name":"spec_for","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#spec_for","type":"instance_method","visibility":"public"},"Gem::Commands::OpenCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::OpenCommand","path":"Gem::Commands::OpenCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::OutdatedCommand":{"description":"","name":"OutdatedCommand","namespace":"Gem::Commands","path":"Gem::Commands::OutdatedCommand","type":"class","visibility":"public"},"Gem::Commands::OutdatedCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::OutdatedCommand","path":"Gem::Commands::OutdatedCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::OutdatedCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::OutdatedCommand","path":"Gem::Commands::OutdatedCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::OutdatedCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::OutdatedCommand","path":"Gem::Commands::OutdatedCommand#initialize","type":"instance_method","visibility":"public","return":[["OutdatedCommand"],"a new instance of OutdatedCommand"]},"Gem::Commands::OwnerCommand":{"description":"","name":"OwnerCommand","namespace":"Gem::Commands","path":"Gem::Commands::OwnerCommand","type":"class","visibility":"public"},"Gem::Commands::OwnerCommand#add_owners":{"description":"","name":"add_owners","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#add_owners","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#initialize","type":"instance_method","visibility":"public","return":[["OwnerCommand"],"a new instance of OwnerCommand"]},"Gem::Commands::OwnerCommand#manage_owners":{"description":"","name":"manage_owners","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#manage_owners","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#remove_owners":{"description":"","name":"remove_owners","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#remove_owners","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#show_owners":{"description":"","name":"show_owners","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#show_owners","type":"instance_method","visibility":"public"},"Gem::Commands::OwnerCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::OwnerCommand","path":"Gem::Commands::OwnerCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::PristineCommand":{"description":"","name":"PristineCommand","namespace":"Gem::Commands","path":"Gem::Commands::PristineCommand","type":"class","visibility":"public"},"Gem::Commands::PristineCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::PristineCommand","path":"Gem::Commands::PristineCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::PristineCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::PristineCommand","path":"Gem::Commands::PristineCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::PristineCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::PristineCommand","path":"Gem::Commands::PristineCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::PristineCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::PristineCommand","path":"Gem::Commands::PristineCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::PristineCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::PristineCommand","path":"Gem::Commands::PristineCommand#initialize","type":"instance_method","visibility":"public","return":[["PristineCommand"],"a new instance of PristineCommand"]},"Gem::Commands::PristineCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::PristineCommand","path":"Gem::Commands::PristineCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::PushCommand":{"description":"","name":"PushCommand","namespace":"Gem::Commands","path":"Gem::Commands::PushCommand","type":"class","visibility":"public"},"Gem::Commands::PushCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::PushCommand","path":"Gem::Commands::PushCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::PushCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::PushCommand","path":"Gem::Commands::PushCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::PushCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::PushCommand","path":"Gem::Commands::PushCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::PushCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::PushCommand","path":"Gem::Commands::PushCommand#initialize","type":"instance_method","visibility":"public","return":[["PushCommand"],"a new instance of PushCommand"]},"Gem::Commands::PushCommand#send_gem":{"description":"","name":"send_gem","namespace":"Gem::Commands::PushCommand","path":"Gem::Commands::PushCommand#send_gem","type":"instance_method","visibility":"public"},"Gem::Commands::PushCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::PushCommand","path":"Gem::Commands::PushCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::QueryCommand":{"description":"","name":"QueryCommand","namespace":"Gem::Commands","path":"Gem::Commands::QueryCommand","type":"class","visibility":"public"},"Gem::Commands::QueryCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::QueryCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::QueryCommand#display_header":{"description":"","name":"display_header","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#display_header","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#entry_details":{"description":"","name":"entry_details","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#entry_details","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#entry_versions":{"description":"","name":"entry_versions","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#entry_versions","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::QueryCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#initialize","type":"instance_method","visibility":"public","return":[["QueryCommand"],"a new instance of QueryCommand"]},"Gem::Commands::QueryCommand#installed?":{"description":"Check if gem +name+ version +version+ is installed.","name":"installed?","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#installed?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"Gem::Commands::QueryCommand#make_entry":{"description":"","name":"make_entry","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#make_entry","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#output_query_results":{"description":"","name":"output_query_results","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#output_query_results","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#output_versions":{"description":"","name":"output_versions","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#output_versions","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#show_gems":{"description":"Guts of original execute","name":"show_gems","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#show_gems","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#spec_authors":{"description":"","name":"spec_authors","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#spec_authors","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#spec_homepage":{"description":"","name":"spec_homepage","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#spec_homepage","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#spec_license":{"description":"","name":"spec_license","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#spec_license","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#spec_loaded_from":{"description":"","name":"spec_loaded_from","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#spec_loaded_from","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#spec_platforms":{"description":"","name":"spec_platforms","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#spec_platforms","type":"instance_method","visibility":"private"},"Gem::Commands::QueryCommand#spec_summary":{"description":"","name":"spec_summary","namespace":"Gem::Commands::QueryCommand","path":"Gem::Commands::QueryCommand#spec_summary","type":"instance_method","visibility":"private"},"Gem::Commands::RdocCommand":{"description":"","name":"RdocCommand","namespace":"Gem::Commands","path":"Gem::Commands::RdocCommand","type":"class","visibility":"public"},"Gem::Commands::RdocCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::RdocCommand","path":"Gem::Commands::RdocCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::RdocCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::RdocCommand","path":"Gem::Commands::RdocCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::RdocCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::RdocCommand","path":"Gem::Commands::RdocCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::RdocCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::RdocCommand","path":"Gem::Commands::RdocCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::RdocCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::RdocCommand","path":"Gem::Commands::RdocCommand#initialize","type":"instance_method","visibility":"public","return":[["RdocCommand"],"a new instance of RdocCommand"]},"Gem::Commands::RdocCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::RdocCommand","path":"Gem::Commands::RdocCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::SearchCommand":{"description":"","name":"SearchCommand","namespace":"Gem::Commands","path":"Gem::Commands::SearchCommand","type":"class","visibility":"public"},"Gem::Commands::SearchCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::SearchCommand","path":"Gem::Commands::SearchCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::SearchCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::SearchCommand","path":"Gem::Commands::SearchCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::SearchCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::SearchCommand","path":"Gem::Commands::SearchCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::SearchCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::SearchCommand","path":"Gem::Commands::SearchCommand#initialize","type":"instance_method","visibility":"public","return":[["SearchCommand"],"a new instance of SearchCommand"]},"Gem::Commands::SearchCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::SearchCommand","path":"Gem::Commands::SearchCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::ServerCommand":{"description":"","name":"ServerCommand","namespace":"Gem::Commands","path":"Gem::Commands::ServerCommand","type":"class","visibility":"public"},"Gem::Commands::ServerCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::ServerCommand","path":"Gem::Commands::ServerCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::ServerCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::ServerCommand","path":"Gem::Commands::ServerCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::ServerCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::ServerCommand","path":"Gem::Commands::ServerCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::ServerCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::ServerCommand","path":"Gem::Commands::ServerCommand#initialize","type":"instance_method","visibility":"public","return":[["ServerCommand"],"a new instance of ServerCommand"]},"Gem::Commands::SetupCommand":{"description":"Installs RubyGems itself.  This command is ordinarily only available from a\nRubyGems checkout or tarball.","name":"SetupCommand","namespace":"Gem::Commands","path":"Gem::Commands::SetupCommand","type":"class","visibility":"public"},"Gem::Commands::SetupCommand#check_ruby_version":{"description":"","name":"check_ruby_version","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#check_ruby_version","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#generate_default_dirs":{"description":"","name":"generate_default_dirs","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#generate_default_dirs","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#initialize","type":"instance_method","visibility":"public","return":[["SetupCommand"],"a new instance of SetupCommand"]},"Gem::Commands::SetupCommand#install_executables":{"description":"","name":"install_executables","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#install_executables","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#install_file":{"description":"","name":"install_file","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#install_file","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#install_lib":{"description":"","name":"install_lib","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#install_lib","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#install_rdoc":{"description":"","name":"install_rdoc","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#install_rdoc","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#make_destination_dirs":{"description":"","name":"make_destination_dirs","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#make_destination_dirs","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#pem_files_in":{"description":"","name":"pem_files_in","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#pem_files_in","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#rb_files_in":{"description":"","name":"rb_files_in","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#rb_files_in","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#remove_old_bin_files":{"description":"","name":"remove_old_bin_files","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#remove_old_bin_files","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#remove_old_lib_files":{"description":"","name":"remove_old_lib_files","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#remove_old_lib_files","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#show_release_notes":{"description":"","name":"show_release_notes","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#show_release_notes","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand#uninstall_old_gemcutter":{"description":"","name":"uninstall_old_gemcutter","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand#uninstall_old_gemcutter","type":"instance_method","visibility":"public"},"Gem::Commands::SetupCommand::HISTORY_HEADER":{"description":"","name":"HISTORY_HEADER","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand::HISTORY_HEADER","type":"constant","return":null,"visibility":"public"},"Gem::Commands::SetupCommand::VERSION_MATCHER":{"description":"","name":"VERSION_MATCHER","namespace":"Gem::Commands::SetupCommand","path":"Gem::Commands::SetupCommand::VERSION_MATCHER","type":"constant","return":null,"visibility":"public"},"Gem::Commands::SourcesCommand":{"description":"","name":"SourcesCommand","namespace":"Gem::Commands","path":"Gem::Commands::SourcesCommand","type":"class","visibility":"public"},"Gem::Commands::SourcesCommand#add_source":{"description":":nodoc:","name":"add_source","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#add_source","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#check_rubygems_https":{"description":":nodoc:","name":"check_rubygems_https","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#check_rubygems_https","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#clear_all":{"description":":nodoc:","name":"clear_all","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#clear_all","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#initialize","type":"instance_method","visibility":"public","return":[["SourcesCommand"],"a new instance of SourcesCommand"]},"Gem::Commands::SourcesCommand#list":{"description":":nodoc:","name":"list","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#list","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#list?":{"description":":nodoc:","name":"list?","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#list?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Commands::SourcesCommand#remove_cache_file":{"description":":nodoc:","name":"remove_cache_file","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#remove_cache_file","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#remove_source":{"description":":nodoc:","name":"remove_source","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#remove_source","type":"instance_method","visibility":"public"},"Gem::Commands::SourcesCommand#update":{"description":":nodoc:","name":"update","namespace":"Gem::Commands::SourcesCommand","path":"Gem::Commands::SourcesCommand#update","type":"instance_method","visibility":"public"},"Gem::Commands::SpecificationCommand":{"description":"","name":"SpecificationCommand","namespace":"Gem::Commands","path":"Gem::Commands::SpecificationCommand","type":"class","visibility":"public"},"Gem::Commands::SpecificationCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::SpecificationCommand","path":"Gem::Commands::SpecificationCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::SpecificationCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::SpecificationCommand","path":"Gem::Commands::SpecificationCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::SpecificationCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::SpecificationCommand","path":"Gem::Commands::SpecificationCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::SpecificationCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::SpecificationCommand","path":"Gem::Commands::SpecificationCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::SpecificationCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::SpecificationCommand","path":"Gem::Commands::SpecificationCommand#initialize","type":"instance_method","visibility":"public","return":[["SpecificationCommand"],"a new instance of SpecificationCommand"]},"Gem::Commands::SpecificationCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::SpecificationCommand","path":"Gem::Commands::SpecificationCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::StaleCommand":{"description":"","name":"StaleCommand","namespace":"Gem::Commands","path":"Gem::Commands::StaleCommand","type":"class","visibility":"public"},"Gem::Commands::StaleCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::StaleCommand","path":"Gem::Commands::StaleCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::StaleCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::StaleCommand","path":"Gem::Commands::StaleCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::StaleCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::StaleCommand","path":"Gem::Commands::StaleCommand#initialize","type":"instance_method","visibility":"public","return":[["StaleCommand"],"a new instance of StaleCommand"]},"Gem::Commands::StaleCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::StaleCommand","path":"Gem::Commands::StaleCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand":{"description":"Gem uninstaller command line tool\n\nSee `gem help uninstall`","name":"UninstallCommand","namespace":"Gem::Commands","path":"Gem::Commands::UninstallCommand","type":"class","visibility":"public"},"Gem::Commands::UninstallCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#initialize","type":"instance_method","visibility":"public","return":[["UninstallCommand"],"a new instance of UninstallCommand"]},"Gem::Commands::UninstallCommand#uninstall_all":{"description":"","name":"uninstall_all","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#uninstall_all","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand#uninstall_specific":{"description":"","name":"uninstall_specific","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#uninstall_specific","type":"instance_method","visibility":"public"},"Gem::Commands::UninstallCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::UninstallCommand","path":"Gem::Commands::UninstallCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand":{"description":"","name":"UnpackCommand","namespace":"Gem::Commands","path":"Gem::Commands::UnpackCommand","type":"class","visibility":"public"},"Gem::Commands::UnpackCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#description":{"description":"","name":"description","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#execute":{"description":"--\nTODO: allow, e.g., 'gem unpack rake-0.3.1'.  Find a general solution for\nthis, so that it works for uninstall as well.  (And check other commands\nat the same time.)","name":"execute","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#find_in_cache":{"description":"Find cached filename in Gem.path. Returns nil if the file cannot be found.\n\n--\nTODO: see comments in get_path() about general service.","name":"find_in_cache","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#find_in_cache","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#get_metadata":{"description":"Extracts the Gem::Specification and raw metadata from the .gem file at\n+path+.\n--\nTODO move to Gem::Package as #raw_spec or something","name":"get_metadata","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#get_metadata","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#get_path":{"description":"Return the full path to the cached gem file matching the given\nname and version requirement.  Returns 'nil' if no match.\n\nExample:\n\n  get_path 'rake', '> 0.4' # \"/usr/lib/ruby/gems/1.8/cache/rake-0.4.2.gem\"\n  get_path 'rake', '< 0.1' # nil\n  get_path 'rak'           # nil (exact name required)\n--\nTODO: This should be refactored so that it's a general service. I don't\nthink any of our existing classes are the right place though.  Just maybe\n'Cache'?\n\nTODO: It just uses Gem.dir for now.  What's an easy way to get the list of\nsource directories?","name":"get_path","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#get_path","type":"instance_method","visibility":"public"},"Gem::Commands::UnpackCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#initialize","type":"instance_method","visibility":"public","return":[["UnpackCommand"],"a new instance of UnpackCommand"]},"Gem::Commands::UnpackCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::UnpackCommand","path":"Gem::Commands::UnpackCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand":{"description":"","name":"UpdateCommand","namespace":"Gem::Commands","path":"Gem::Commands::UpdateCommand","type":"class","visibility":"public"},"Gem::Commands::UpdateCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#check_latest_rubygems":{"description":":nodoc:","name":"check_latest_rubygems","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#check_latest_rubygems","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#check_update_arguments":{"description":":nodoc:","name":"check_update_arguments","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#check_update_arguments","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#fetch_remote_gems":{"description":":nodoc:","name":"fetch_remote_gems","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#fetch_remote_gems","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#highest_installed_gems":{"description":":nodoc:","name":"highest_installed_gems","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#highest_installed_gems","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#highest_remote_version":{"description":":nodoc:","name":"highest_remote_version","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#highest_remote_version","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#initialize","type":"instance_method","visibility":"public","return":[["UpdateCommand"],"a new instance of UpdateCommand"]},"Gem::Commands::UpdateCommand#install_rubygems":{"description":":nodoc:","name":"install_rubygems","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#install_rubygems","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#installer":{"description":":nodoc:","name":"installer","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#installer","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#rubygems_target_version":{"description":"","name":"rubygems_target_version","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#rubygems_target_version","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#update_gem":{"description":"","name":"update_gem","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#update_gem","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#update_gems":{"description":"","name":"update_gems","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#update_gems","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#update_rubygems":{"description":"Update RubyGems software to the latest version.","name":"update_rubygems","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#update_rubygems","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#update_rubygems_arguments":{"description":":nodoc:","name":"update_rubygems_arguments","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#update_rubygems_arguments","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#updated":{"description":":nodoc:","name":"updated","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#updated","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::UpdateCommand#which_to_update":{"description":"","name":"which_to_update","namespace":"Gem::Commands::UpdateCommand","path":"Gem::Commands::UpdateCommand#which_to_update","type":"instance_method","visibility":"public"},"Gem::Commands::WhichCommand":{"description":"","name":"WhichCommand","namespace":"Gem::Commands","path":"Gem::Commands::WhichCommand","type":"class","visibility":"public"},"Gem::Commands::WhichCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::WhichCommand#defaults_str":{"description":":nodoc:","name":"defaults_str","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#defaults_str","type":"instance_method","visibility":"public"},"Gem::Commands::WhichCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::WhichCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::WhichCommand#find_paths":{"description":"","name":"find_paths","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#find_paths","type":"instance_method","visibility":"public"},"Gem::Commands::WhichCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#initialize","type":"instance_method","visibility":"public","return":[["WhichCommand"],"a new instance of WhichCommand"]},"Gem::Commands::WhichCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::WhichCommand","path":"Gem::Commands::WhichCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::YankCommand":{"description":"","name":"YankCommand","namespace":"Gem::Commands","path":"Gem::Commands::YankCommand","type":"class","visibility":"public"},"Gem::Commands::YankCommand#arguments":{"description":":nodoc:","name":"arguments","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#arguments","type":"instance_method","visibility":"public"},"Gem::Commands::YankCommand#description":{"description":":nodoc:","name":"description","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#description","type":"instance_method","visibility":"public"},"Gem::Commands::YankCommand#execute":{"description":"","name":"execute","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#execute","type":"instance_method","visibility":"public"},"Gem::Commands::YankCommand#get_platform_from_requirements":{"description":"","name":"get_platform_from_requirements","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#get_platform_from_requirements","type":"instance_method","visibility":"private"},"Gem::Commands::YankCommand#get_version_from_requirements":{"description":"","name":"get_version_from_requirements","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#get_version_from_requirements","type":"instance_method","visibility":"private"},"Gem::Commands::YankCommand#initialize":{"description":"","name":"initialize","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#initialize","type":"instance_method","visibility":"public","return":[["YankCommand"],"a new instance of YankCommand"]},"Gem::Commands::YankCommand#unyank_gem":{"description":"","name":"unyank_gem","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#unyank_gem","type":"instance_method","visibility":"public"},"Gem::Commands::YankCommand#usage":{"description":":nodoc:","name":"usage","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#usage","type":"instance_method","visibility":"public"},"Gem::Commands::YankCommand#yank_api_request":{"description":"","name":"yank_api_request","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#yank_api_request","type":"instance_method","visibility":"private"},"Gem::Commands::YankCommand#yank_gem":{"description":"","name":"yank_gem","namespace":"Gem::Commands::YankCommand","path":"Gem::Commands::YankCommand#yank_gem","type":"instance_method","visibility":"public"},"Gem::ConfigFile":{"description":"Gem::ConfigFile RubyGems options and gem command options from gemrc.\n\ngemrc is a YAML file that uses strings to match gem command arguments and\nsymbols to match RubyGems options.\n\nGem command arguments use a String key that matches the command name and\nallow you to specify default arguments:\n\n  install: --no-rdoc --no-ri\n  update: --no-rdoc --no-ri\n\nYou can use <tt>gem:</tt> to set default arguments for all commands.\n\nRubyGems options use symbol keys.  Valid options are:\n\n+:backtrace+:: See #backtrace\n+:sources+:: Sets Gem::sources\n+:verbose+:: See #verbose\n\ngemrc files may exist in various locations and are read and merged in\nthe following order:\n\n- system wide (/etc/gemrc)\n- per user (~/.gemrc)\n- per environment (gemrc files listed in the GEMRC environment variable)","name":"ConfigFile","namespace":"Gem","path":"Gem::ConfigFile","type":"class","visibility":"public"},"Gem::ConfigFile#==":{"description":":nodoc:","name":"==","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#==","type":"instance_method","visibility":"public"},"Gem::ConfigFile#[]":{"description":"Return the configuration information for +key+.","name":"[]","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#[]","type":"instance_method","visibility":"public"},"Gem::ConfigFile#[]=":{"description":"Set configuration option +key+ to +value+.","name":"[]=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#[]=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#api_keys":{"description":"Hash of RubyGems.org and alternate API keys","name":"api_keys","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#api_keys","type":"instance_method","visibility":"public"},"Gem::ConfigFile#args":{"description":"List of arguments supplied to the config file object.","name":"args","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#args","type":"instance_method","visibility":"public"},"Gem::ConfigFile#backtrace":{"description":"True if the backtrace option has been specified, or debug is on.","name":"backtrace","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#backtrace","type":"instance_method","visibility":"public"},"Gem::ConfigFile#backtrace=":{"description":"True if we print backtraces on errors.","name":"backtrace=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#backtrace=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#bulk_threshold":{"description":"Bulk threshold value.  If the number of missing gems are above this\nthreshold value, then a bulk download technique is used.  (deprecated)","name":"bulk_threshold","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#bulk_threshold","type":"instance_method","visibility":"public"},"Gem::ConfigFile#bulk_threshold=":{"description":"Bulk threshold value.  If the number of missing gems are above this\nthreshold value, then a bulk download technique is used.  (deprecated)","name":"bulk_threshold=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#bulk_threshold=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#check_credentials_permissions":{"description":"Checks the permissions of the credentials file.  If they are not 0600 an\nerror message is displayed and RubyGems aborts.","name":"check_credentials_permissions","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#check_credentials_permissions","type":"instance_method","visibility":"public"},"Gem::ConfigFile#config_file_name":{"description":"The name of the configuration file.","name":"config_file_name","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#config_file_name","type":"instance_method","visibility":"public"},"Gem::ConfigFile#credentials_path":{"description":"Location of RubyGems.org credentials","name":"credentials_path","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#credentials_path","type":"instance_method","visibility":"public"},"Gem::ConfigFile#disable_default_gem_server":{"description":"True if we want to force specification of gem server when pushing a gem","name":"disable_default_gem_server","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#disable_default_gem_server","type":"instance_method","visibility":"public"},"Gem::ConfigFile#disable_default_gem_server=":{"description":"True if we want to force specification of gem server when pushing a gem","name":"disable_default_gem_server=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#disable_default_gem_server=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#each":{"description":"Delegates to @hash","name":"each","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#each","type":"instance_method","visibility":"public"},"Gem::ConfigFile#handle_arguments":{"description":"Handle the command arguments.","name":"handle_arguments","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#handle_arguments","type":"instance_method","visibility":"public"},"Gem::ConfigFile#hash":{"description":"Returns the value of attribute hash","name":"hash","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#hash","type":"instance_method","visibility":"protected"},"Gem::ConfigFile#home":{"description":"Where to install gems (deprecated)","name":"home","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#home","type":"instance_method","visibility":"public"},"Gem::ConfigFile#home=":{"description":"Where to install gems (deprecated)","name":"home=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#home=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#initialize":{"description":"Create the config file object.  +args+ is the list of arguments\nfrom the command line.\n\nThe following command line options are handled early here rather\nthan later at the time most command options are processed.\n\n<tt>--config-file</tt>, <tt>--config-file==NAME</tt>::\n  Obviously these need to be handled by the ConfigFile object to ensure we\n  get the right config file.\n\n<tt>--backtrace</tt>::\n  Backtrace needs to be turned on early so that errors before normal\n  option parsing can be properly handled.\n\n<tt>--debug</tt>::\n  Enable Ruby level debug messages.  Handled early for the same reason as\n  --backtrace.\n--\nTODO: parse options upstream, pass in options directly","name":"initialize","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#initialize","type":"instance_method","visibility":"public","return":[["ConfigFile"],"a new instance of ConfigFile"]},"Gem::ConfigFile#load_api_keys":{"description":"","name":"load_api_keys","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#load_api_keys","type":"instance_method","visibility":"public"},"Gem::ConfigFile#load_file":{"description":"","name":"load_file","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#load_file","type":"instance_method","visibility":"public"},"Gem::ConfigFile#path":{"description":"Where to look for gems (deprecated)","name":"path","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#path","type":"instance_method","visibility":"public"},"Gem::ConfigFile#path=":{"description":"Where to look for gems (deprecated)","name":"path=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#path=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#really_verbose":{"description":"Really verbose mode gives you extra output.","name":"really_verbose","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#really_verbose","type":"instance_method","visibility":"public"},"Gem::ConfigFile#rubygems_api_key":{"description":"Returns the RubyGems.org API key","name":"rubygems_api_key","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#rubygems_api_key","type":"instance_method","visibility":"public"},"Gem::ConfigFile#rubygems_api_key=":{"description":"Sets the RubyGems.org API key to +api_key+","name":"rubygems_api_key=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#rubygems_api_key=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#ssl_ca_cert":{"description":"Path name of directory or file of openssl CA certificate, used for remote\nhttps connection","name":"ssl_ca_cert","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#ssl_ca_cert","type":"instance_method","visibility":"public"},"Gem::ConfigFile#ssl_ca_cert=":{"description":"Path name of directory or file of openssl CA certificate, used for remote\nhttps connection","name":"ssl_ca_cert=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#ssl_ca_cert=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#ssl_client_cert":{"description":"Path name of directory or file of openssl client certificate, used for remote https connection with client authentication","name":"ssl_client_cert","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#ssl_client_cert","type":"instance_method","visibility":"public"},"Gem::ConfigFile#ssl_verify_mode":{"description":"openssl verify mode value, used for remote https connection","name":"ssl_verify_mode","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#ssl_verify_mode","type":"instance_method","visibility":"public"},"Gem::ConfigFile#to_yaml":{"description":"to_yaml only overwrites things you can't override on the command line.","name":"to_yaml","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#to_yaml","type":"instance_method","visibility":"public"},"Gem::ConfigFile#update_sources":{"description":"True if we want to update the SourceInfoCache every time, false otherwise","name":"update_sources","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#update_sources","type":"instance_method","visibility":"public"},"Gem::ConfigFile#update_sources=":{"description":"True if we want to update the SourceInfoCache every time, false otherwise","name":"update_sources=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#update_sources=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#verbose":{"description":"Verbose level of output:\n* false -- No output\n* true -- Normal output\n* :loud -- Extra output","name":"verbose","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#verbose","type":"instance_method","visibility":"public"},"Gem::ConfigFile#verbose=":{"description":"Verbose level of output:\n* false -- No output\n* true -- Normal output\n* :loud -- Extra output","name":"verbose=","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#verbose=","type":"instance_method","visibility":"public"},"Gem::ConfigFile#write":{"description":"Writes out this config file, replacing its source.","name":"write","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile#write","type":"instance_method","visibility":"public"},"Gem::ConfigFile::DEFAULT_BACKTRACE":{"description":"","name":"DEFAULT_BACKTRACE","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::DEFAULT_BACKTRACE","type":"constant","return":["FalseClass",""],"visibility":"public"},"Gem::ConfigFile::DEFAULT_BULK_THRESHOLD":{"description":"","name":"DEFAULT_BULK_THRESHOLD","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::DEFAULT_BULK_THRESHOLD","type":"constant","return":["Fixnum",""],"visibility":"public"},"Gem::ConfigFile::DEFAULT_UPDATE_SOURCES":{"description":"","name":"DEFAULT_UPDATE_SOURCES","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::DEFAULT_UPDATE_SOURCES","type":"constant","return":["TrueClass",""],"visibility":"public"},"Gem::ConfigFile::DEFAULT_VERBOSITY":{"description":"","name":"DEFAULT_VERBOSITY","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::DEFAULT_VERBOSITY","type":"constant","return":["TrueClass",""],"visibility":"public"},"Gem::ConfigFile::OPERATING_SYSTEM_DEFAULTS":{"description":"For Ruby packagers to set configuration defaults.  Set in\nrubygems/defaults/operating_system.rb","name":"OPERATING_SYSTEM_DEFAULTS","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::OPERATING_SYSTEM_DEFAULTS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::ConfigFile::PLATFORM_DEFAULTS":{"description":"For Ruby implementers to set configuration defaults.  Set in\nrubygems/defaults/#{RUBY_ENGINE}.rb","name":"PLATFORM_DEFAULTS","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::PLATFORM_DEFAULTS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::ConfigFile::SYSTEM_CONFIG_PATH":{"description":":stopdoc:","name":"SYSTEM_CONFIG_PATH","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::SYSTEM_CONFIG_PATH","type":"constant","return":null,"visibility":"public"},"Gem::ConfigFile::SYSTEM_WIDE_CONFIG_FILE":{"description":":startdoc:","name":"SYSTEM_WIDE_CONFIG_FILE","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::SYSTEM_WIDE_CONFIG_FILE","type":"constant","return":["String",""],"visibility":"public"},"Gem::ConfigFile::YAMLErrors":{"description":"","name":"YAMLErrors","namespace":"Gem::ConfigFile","path":"Gem::ConfigFile::YAMLErrors","type":"constant","return":["Array",""],"visibility":"public"},"Gem::ConfigMap":{"description":"Configuration settings from ::RbConfig","name":"ConfigMap","namespace":"Gem","path":"Gem::ConfigMap","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::ConflictError":{"description":"Raised when there are conflicting gem specs loaded","name":"ConflictError","namespace":"Gem","path":"Gem::ConflictError","type":"class","visibility":"public"},"Gem::ConflictError#conflicts":{"description":"A Hash mapping conflicting specifications to the dependencies that\ncaused the conflict","name":"conflicts","namespace":"Gem::ConflictError","path":"Gem::ConflictError#conflicts","type":"instance_method","visibility":"public"},"Gem::ConflictError#initialize":{"description":"","name":"initialize","namespace":"Gem::ConflictError","path":"Gem::ConflictError#initialize","type":"instance_method","visibility":"public","return":[["ConflictError"],"a new instance of ConflictError"]},"Gem::ConflictError#target":{"description":"The specification that had the conflict","name":"target","namespace":"Gem::ConflictError","path":"Gem::ConflictError#target","type":"instance_method","visibility":"public"},"Gem::ConsoleUI":{"description":"Subclass of StreamUI that instantiates the user interaction using STDIN,\nSTDOUT, and STDERR.","name":"ConsoleUI","namespace":"Gem","path":"Gem::ConsoleUI","type":"class","visibility":"public"},"Gem::ConsoleUI#initialize":{"description":"The Console UI has no arguments as it defaults to reading input from\nstdin, output to stdout and warnings or errors to stderr.","name":"initialize","namespace":"Gem::ConsoleUI","path":"Gem::ConsoleUI#initialize","type":"instance_method","visibility":"public","return":[["ConsoleUI"],"a new instance of ConsoleUI"]},"Gem::DEFAULT_HOST":{"description":"","name":"DEFAULT_HOST","namespace":"Gem","path":"Gem::DEFAULT_HOST","type":"constant","return":["String",""],"visibility":"public"},"Gem::DefaultUserInteraction":{"description":"Module that defines the default UserInteraction.  Any class including this\nmodule will have access to the +ui+ method that returns the default UI.","name":"DefaultUserInteraction","namespace":"Gem","path":"Gem::DefaultUserInteraction","type":"module","visibility":"public"},"Gem::DefaultUserInteraction#ui":{"description":"See DefaultUserInteraction::ui","name":"ui","namespace":"Gem::DefaultUserInteraction","path":"Gem::DefaultUserInteraction#ui","type":"module_function","visibility":"public"},"Gem::DefaultUserInteraction#ui=":{"description":"See DefaultUserInteraction::ui=","name":"ui=","namespace":"Gem::DefaultUserInteraction","path":"Gem::DefaultUserInteraction#ui=","type":"module_function","visibility":"public"},"Gem::DefaultUserInteraction#use_ui":{"description":"See DefaultUserInteraction::use_ui","name":"use_ui","namespace":"Gem::DefaultUserInteraction","path":"Gem::DefaultUserInteraction#use_ui","type":"module_function","visibility":"public"},"Gem::DefaultUserInteraction.ui":{"description":"Return the default UI.","name":"ui","namespace":"Gem::DefaultUserInteraction","path":"Gem::DefaultUserInteraction.ui","type":"module_function","visibility":"public"},"Gem::DefaultUserInteraction.ui=":{"description":"Set the default UI.  If the default UI is never explicitly set, a simple\nconsole based UserInteraction will be used automatically.","name":"ui=","namespace":"Gem::DefaultUserInteraction","path":"Gem::DefaultUserInteraction.ui=","type":"module_function","visibility":"public"},"Gem::DefaultUserInteraction.use_ui":{"description":"Use +new_ui+ for the duration of +block+.","name":"use_ui","namespace":"Gem::DefaultUserInteraction","path":"Gem::DefaultUserInteraction.use_ui","type":"module_function","visibility":"public"},"Gem::Dependency":{"description":"","name":"Dependency","namespace":"Gem","path":"Gem::Dependency","type":"class","visibility":"public"},"Gem::Dependency#<=>":{"description":"Dependencies are ordered by name.","name":"<=>","namespace":"Gem::Dependency","path":"Gem::Dependency#<=>","type":"instance_method","visibility":"public"},"Gem::Dependency#==":{"description":":nodoc:","name":"==","namespace":"Gem::Dependency","path":"Gem::Dependency#==","type":"instance_method","visibility":"public"},"Gem::Dependency#===":{"description":"Uses this dependency as a pattern to compare to +other+. This\ndependency will match if the name matches the other's name, and\nother has only an equal version requirement that satisfies this\ndependency.","name":"===","namespace":"Gem::Dependency","path":"Gem::Dependency#===","type":"instance_method","visibility":"public"},"Gem::Dependency#=~":{"description":"Uses this dependency as a pattern to compare to +other+. This\ndependency will match if the name matches the other's name, and\nother has only an equal version requirement that satisfies this\ndependency.","name":"===","namespace":"Gem::Dependency","path":"Gem::Dependency#===","type":"instance_method","visibility":"public"},"Gem::Dependency#hash":{"description":"A dependency's hash is the XOR of the hashes of +name+, +type+,\nand +requirement+.","name":"hash","namespace":"Gem::Dependency","path":"Gem::Dependency#hash","type":"instance_method","visibility":"public"},"Gem::Dependency#initialize":{"description":"Constructs a dependency with +name+ and +requirements+. The last\nargument can optionally be the dependency type, which defaults to\n<tt>:runtime</tt>.","name":"initialize","namespace":"Gem::Dependency","path":"Gem::Dependency#initialize","type":"instance_method","visibility":"public","return":[["Dependency"],"a new instance of Dependency"]},"Gem::Dependency#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Dependency","path":"Gem::Dependency#inspect","type":"instance_method","visibility":"public"},"Gem::Dependency#latest_version?":{"description":"Is this dependency simply asking for the latest version\nof a gem?","name":"latest_version?","namespace":"Gem::Dependency","path":"Gem::Dependency#latest_version?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Dependency#match?":{"description":":call-seq:\n  dep.match? name          => true or false\n  dep.match? name, version => true or false\n  dep.match? spec          => true or false\n\nDoes this dependency match the specification described by +name+ and\n+version+ or match +spec+?\n\nNOTE:  Unlike #matches_spec? this method does not return true when the\nversion is a prerelease version unless this is a prerelease dependency.","name":"match?","namespace":"Gem::Dependency","path":"Gem::Dependency#match?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Dependency#matches_spec?":{"description":"Does this dependency match +spec+?\n\nNOTE:  This is not a convenience method.  Unlike #match? this method\nreturns true when +spec+ is a prerelease version even if this dependency\nis not a prerelease dependency.","name":"matches_spec?","namespace":"Gem::Dependency","path":"Gem::Dependency#matches_spec?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Dependency#matching_specs":{"description":"","name":"matching_specs","namespace":"Gem::Dependency","path":"Gem::Dependency#matching_specs","type":"instance_method","visibility":"public"},"Gem::Dependency#merge":{"description":"Merges the requirements of +other+ into this dependency","name":"merge","namespace":"Gem::Dependency","path":"Gem::Dependency#merge","type":"instance_method","visibility":"public"},"Gem::Dependency#name":{"description":"Dependency name or regular expression.","name":"name","namespace":"Gem::Dependency","path":"Gem::Dependency#name","type":"instance_method","visibility":"public"},"Gem::Dependency#name=":{"description":"Dependency name or regular expression.","name":"name=","namespace":"Gem::Dependency","path":"Gem::Dependency#name=","type":"instance_method","visibility":"public"},"Gem::Dependency#prerelease=":{"description":"Allows you to force this dependency to be a prerelease.","name":"prerelease=","namespace":"Gem::Dependency","path":"Gem::Dependency#prerelease=","type":"instance_method","visibility":"public"},"Gem::Dependency#prerelease?":{"description":"Does this dependency require a prerelease?","name":"prerelease?","namespace":"Gem::Dependency","path":"Gem::Dependency#prerelease?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Dependency#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Dependency","path":"Gem::Dependency#pretty_print","type":"instance_method","visibility":"public"},"Gem::Dependency#requirement":{"description":"What does this dependency require?","name":"requirement","namespace":"Gem::Dependency","path":"Gem::Dependency#requirement","type":"instance_method","visibility":"public"},"Gem::Dependency#requirements_list":{"description":"","name":"requirements_list","namespace":"Gem::Dependency","path":"Gem::Dependency#requirements_list","type":"instance_method","visibility":"public"},"Gem::Dependency#specific?":{"description":"True if the dependency will not always match the latest version.","name":"specific?","namespace":"Gem::Dependency","path":"Gem::Dependency#specific?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Dependency#to_s":{"description":":nodoc:","name":"to_s","namespace":"Gem::Dependency","path":"Gem::Dependency#to_s","type":"instance_method","visibility":"public"},"Gem::Dependency#to_spec":{"description":"","name":"to_spec","namespace":"Gem::Dependency","path":"Gem::Dependency#to_spec","type":"instance_method","visibility":"public"},"Gem::Dependency#to_specs":{"description":"","name":"to_specs","namespace":"Gem::Dependency","path":"Gem::Dependency#to_specs","type":"instance_method","visibility":"public"},"Gem::Dependency#type":{"description":"Dependency type.","name":"type","namespace":"Gem::Dependency","path":"Gem::Dependency#type","type":"instance_method","visibility":"public"},"Gem::Dependency::TYPES":{"description":"Valid dependency types.\n--\nWhen this list is updated, be sure to change\nGem::Specification::CURRENT_SPECIFICATION_VERSION as well.\n\nREFACTOR: This type of constant, TYPES, indicates we might want\ntwo classes, used via inheritance or duck typing.","name":"TYPES","namespace":"Gem::Dependency","path":"Gem::Dependency::TYPES","type":"constant","return":["Array",""],"visibility":"public"},"Gem::DependencyError":{"description":"","name":"DependencyError","namespace":"Gem","path":"Gem::DependencyError","type":"class","visibility":"public"},"Gem::DependencyInstaller":{"description":"Installs a gem along with all its dependencies from local and remote gems.","name":"DependencyInstaller","namespace":"Gem","path":"Gem::DependencyInstaller","type":"class","visibility":"public"},"Gem::DependencyInstaller#add_found_dependencies":{"description":"--\nTODO remove, no longer used","name":"add_found_dependencies","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#add_found_dependencies","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#available_set_for":{"description":"Creates an AvailableSet to install from based on +dep_or_name+ and\n+version+","name":"available_set_for","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#available_set_for","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#consider_local?":{"description":"Indicated, based on the requested domain, if local\ngems should be considered.","name":"consider_local?","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#consider_local?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::DependencyInstaller#consider_remote?":{"description":"Indicated, based on the requested domain, if remote\ngems should be considered.","name":"consider_remote?","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#consider_remote?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::DependencyInstaller#document":{"description":"Documentation types.  For use by the Gem.done_installing hook","name":"document","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#document","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#errors":{"description":"Errors from SpecFetcher while searching for remote specifications","name":"errors","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#errors","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#find_gems_with_sources":{"description":"Returns a list of pairs of gemspecs and source_uris that match\nGem::Dependency +dep+ from both local (Dir.pwd) and remote (Gem.sources)\nsources.  Gems are sorted with newer gems preferred over older gems, and\nlocal gems preferred over remote gems.","name":"find_gems_with_sources","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#find_gems_with_sources","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#find_spec_by_name_and_version":{"description":"Finds a spec and the source_uri it came from for gem +gem_name+ and\n+version+.  Returns an Array of specs and sources required for\ninstallation of the gem.","name":"find_spec_by_name_and_version","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#find_spec_by_name_and_version","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#gather_dependencies":{"description":"Gathers all dependencies necessary for the installation from local and\nremote sources unless the ignore_dependencies was given.\n--\nTODO remove at RubyGems 3","name":"gather_dependencies","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#gather_dependencies","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#gems_to_install":{"description":"--\nTODO remove, no longer used","name":"gems_to_install","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#gems_to_install","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#in_background":{"description":":nodoc:","name":"in_background","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#in_background","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#initialize":{"description":"Creates a new installer instance.\n\nOptions are:\n:cache_dir:: Alternate repository path to store .gem files in.\n:domain:: :local, :remote, or :both.  :local only searches gems in the\n          current directory.  :remote searches only gems in Gem::sources.\n          :both searches both.\n:env_shebang:: See Gem::Installer::new.\n:force:: See Gem::Installer#install.\n:format_executable:: See Gem::Installer#initialize.\n:ignore_dependencies:: Don't install any dependencies.\n:install_dir:: See Gem::Installer#install.\n:prerelease:: Allow prerelease versions.  See #install.\n:security_policy:: See Gem::Installer::new and Gem::Security.\n:user_install:: See Gem::Installer.new\n:wrappers:: See Gem::Installer::new\n:build_args:: See Gem::Installer::new","name":"initialize","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#initialize","type":"instance_method","visibility":"public","return":[["DependencyInstaller"],"a new instance of DependencyInstaller"]},"Gem::DependencyInstaller#install":{"description":"Installs the gem +dep_or_name+ and all its dependencies.  Returns an Array\nof installed gem specifications.\n\nIf the +:prerelease+ option is set and there is a prerelease for\n+dep_or_name+ the prerelease version will be installed.\n\nUnless explicitly specified as a prerelease dependency, prerelease gems\nthat +dep_or_name+ depend on will not be installed.\n\nIf c-1.a depends on b-1 and a-1.a and there is a gem b-1.a available then\nc-1.a, b-1 and a-1.a will be installed.  b-1.a will need to be installed\nseparately.","name":"install","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#install","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#install_development_deps":{"description":":nodoc:","name":"install_development_deps","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#install_development_deps","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#installed_gems":{"description":"List of gems installed by #install in alphabetic order","name":"installed_gems","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#installed_gems","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller#resolve_dependencies":{"description":":nodoc:","name":"resolve_dependencies","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller#resolve_dependencies","type":"instance_method","visibility":"public"},"Gem::DependencyInstaller::DEFAULT_OPTIONS":{"description":":nodoc:","name":"DEFAULT_OPTIONS","namespace":"Gem::DependencyInstaller","path":"Gem::DependencyInstaller::DEFAULT_OPTIONS","type":"constant","return":null,"visibility":"public"},"Gem::DependencyList":{"description":"Gem::DependencyList is used for installing and uninstalling gems in the\ncorrect order to avoid conflicts.\n--\nTODO: It appears that all but topo-sort functionality is being duplicated\n(or is planned to be duplicated) elsewhere in rubygems.  Is the majority of\nthis class necessary anymore?  Especially #ok?, #why_not_ok?","name":"DependencyList","namespace":"Gem","path":"Gem::DependencyList","type":"class","visibility":"public"},"Gem::DependencyList#active_count":{"description":"Count the number of gemspecs in the list +specs+ that are not in\n+ignored+.","name":"active_count","namespace":"Gem::DependencyList","path":"Gem::DependencyList#active_count","type":"instance_method","visibility":"private"},"Gem::DependencyList#add":{"description":"Adds +gemspecs+ to the dependency list.","name":"add","namespace":"Gem::DependencyList","path":"Gem::DependencyList#add","type":"instance_method","visibility":"public"},"Gem::DependencyList#clear":{"description":"","name":"clear","namespace":"Gem::DependencyList","path":"Gem::DependencyList#clear","type":"instance_method","visibility":"public"},"Gem::DependencyList#dependency_order":{"description":"Return a list of the gem specifications in the dependency list, sorted in\norder so that no gemspec in the list depends on a gemspec earlier in the\nlist.\n\nThis is useful when removing gems from a set of installed gems.  By\nremoving them in the returned order, you don't get into as many dependency\nissues.\n\nIf there are circular dependencies (yuck!), then gems will be returned in\norder until only the circular dependents and anything they reference are\nleft.  Then arbitrary gemspecs will be returned until the circular\ndependency is broken, after which gems will be returned in dependency\norder again.","name":"dependency_order","namespace":"Gem::DependencyList","path":"Gem::DependencyList#dependency_order","type":"instance_method","visibility":"public"},"Gem::DependencyList#development":{"description":"Allows enabling/disabling use of development dependencies","name":"development","namespace":"Gem::DependencyList","path":"Gem::DependencyList#development","type":"instance_method","visibility":"public"},"Gem::DependencyList#development=":{"description":"Allows enabling/disabling use of development dependencies","name":"development=","namespace":"Gem::DependencyList","path":"Gem::DependencyList#development=","type":"instance_method","visibility":"public"},"Gem::DependencyList#each":{"description":"Iterator over dependency_order","name":"each","namespace":"Gem::DependencyList","path":"Gem::DependencyList#each","type":"instance_method","visibility":"public"},"Gem::DependencyList#find_name":{"description":"","name":"find_name","namespace":"Gem::DependencyList","path":"Gem::DependencyList#find_name","type":"instance_method","visibility":"public"},"Gem::DependencyList#initialize":{"description":"Creates a new DependencyList.  If +development+ is true, development\ndependencies will be included.","name":"initialize","namespace":"Gem::DependencyList","path":"Gem::DependencyList#initialize","type":"instance_method","visibility":"public","return":[["DependencyList"],"a new instance of DependencyList"]},"Gem::DependencyList#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::DependencyList","path":"Gem::DependencyList#inspect","type":"instance_method","visibility":"public"},"Gem::DependencyList#ok?":{"description":"Are all the dependencies in the list satisfied?","name":"ok?","namespace":"Gem::DependencyList","path":"Gem::DependencyList#ok?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::DependencyList#ok_to_remove?":{"description":"Is is ok to remove a gemspec from the dependency list?\n\nIf removing the gemspec creates breaks a currently ok dependency, then it\nis NOT ok to remove the gemspec.","name":"ok_to_remove?","namespace":"Gem::DependencyList","path":"Gem::DependencyList#ok_to_remove?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::DependencyList#remove_by_name":{"description":"Removes the gemspec matching +full_name+ from the dependency list","name":"remove_by_name","namespace":"Gem::DependencyList","path":"Gem::DependencyList#remove_by_name","type":"instance_method","visibility":"public"},"Gem::DependencyList#remove_specs_unsatisfied_by":{"description":"Remove everything in the DependencyList that matches but doesn't\nsatisfy items in +dependencies+ (a hash of gem names to arrays of\ndependencies).","name":"remove_specs_unsatisfied_by","namespace":"Gem::DependencyList","path":"Gem::DependencyList#remove_specs_unsatisfied_by","type":"instance_method","visibility":"public"},"Gem::DependencyList#spec_predecessors":{"description":"Return a hash of predecessors.  <tt>result[spec]</tt> is an Array of\ngemspecs that have a dependency satisfied by the named gemspec.","name":"spec_predecessors","namespace":"Gem::DependencyList","path":"Gem::DependencyList#spec_predecessors","type":"instance_method","visibility":"public"},"Gem::DependencyList#specs":{"description":"Returns the value of attribute specs","name":"specs","namespace":"Gem::DependencyList","path":"Gem::DependencyList#specs","type":"instance_method","visibility":"public"},"Gem::DependencyList#tsort_each_child":{"description":"","name":"tsort_each_child","namespace":"Gem::DependencyList","path":"Gem::DependencyList#tsort_each_child","type":"instance_method","visibility":"public"},"Gem::DependencyList#tsort_each_node":{"description":"","name":"tsort_each_node","namespace":"Gem::DependencyList","path":"Gem::DependencyList#tsort_each_node","type":"instance_method","visibility":"public"},"Gem::DependencyList#why_not_ok?":{"description":"","name":"why_not_ok?","namespace":"Gem::DependencyList","path":"Gem::DependencyList#why_not_ok?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::DependencyList.from_specs":{"description":"Creates a DependencyList from the current specs.","name":"from_specs","namespace":"Gem::DependencyList","path":"Gem::DependencyList.from_specs","type":"class_method","visibility":"public"},"Gem::DependencyRemovalException":{"description":"","name":"DependencyRemovalException","namespace":"Gem","path":"Gem::DependencyRemovalException","type":"class","visibility":"public"},"Gem::DependencyResolutionError":{"description":"Raised by Gem::Resolver when a Gem::Dependency::Conflict reaches the\ntoplevel.  Indicates which dependencies were incompatible through #conflict\nand #conflicting_dependencies","name":"DependencyResolutionError","namespace":"Gem","path":"Gem::DependencyResolutionError","type":"class","visibility":"public"},"Gem::DependencyResolutionError#conflict":{"description":"Returns the value of attribute conflict","name":"conflict","namespace":"Gem::DependencyResolutionError","path":"Gem::DependencyResolutionError#conflict","type":"instance_method","visibility":"public"},"Gem::DependencyResolutionError#conflicting_dependencies":{"description":"","name":"conflicting_dependencies","namespace":"Gem::DependencyResolutionError","path":"Gem::DependencyResolutionError#conflicting_dependencies","type":"instance_method","visibility":"public"},"Gem::DependencyResolutionError#initialize":{"description":"","name":"initialize","namespace":"Gem::DependencyResolutionError","path":"Gem::DependencyResolutionError#initialize","type":"instance_method","visibility":"public","return":[["DependencyResolutionError"],"a new instance of DependencyResolutionError"]},"Gem::DependencyResolver":{"description":"TODO remove in RubyGems 3","name":"DependencyResolver","namespace":"Gem","path":"Gem::DependencyResolver","type":"constant","return":["Class",""],"visibility":"public"},"Gem::Deprecate":{"description":"Provides a single method +deprecate+ to be used to declare when\nsomething is going away.\n\n    class Legacy\n      def self.klass_method\n        # ...\n      end\n\n      def instance_method\n        # ...\n      end\n\n      extend Gem::Deprecate\n      deprecate :instance_method, \"X.z\", 2011, 4\n\n      class << self\n        extend Gem::Deprecate\n        deprecate :klass_method, :none, 2011, 4\n      end\n    end","name":"Deprecate","namespace":"Gem","path":"Gem::Deprecate","type":"module","visibility":"public"},"Gem::Deprecate#deprecate":{"description":"Simple deprecation method that deprecates +name+ by wrapping it up\nin a dummy method. It warns on each call to the dummy method\ntelling the user of +repl+ (unless +repl+ is :none) and the\nyear/month that it is planned to go away.","name":"deprecate","namespace":"Gem::Deprecate","path":"Gem::Deprecate#deprecate","type":"module_function","visibility":"private"},"Gem::Deprecate#skip_during":{"description":"Temporarily turn off warnings. Intended for tests only.","name":"skip_during","namespace":"Gem::Deprecate","path":"Gem::Deprecate#skip_during","type":"module_function","visibility":"private"},"Gem::Deprecate.deprecate":{"description":"Simple deprecation method that deprecates +name+ by wrapping it up\nin a dummy method. It warns on each call to the dummy method\ntelling the user of +repl+ (unless +repl+ is :none) and the\nyear/month that it is planned to go away.","name":"deprecate","namespace":"Gem::Deprecate","path":"Gem::Deprecate.deprecate","type":"module_function","visibility":"public"},"Gem::Deprecate.skip":{"description":":nodoc:","name":"skip","namespace":"Gem::Deprecate","path":"Gem::Deprecate.skip","type":"module_function","visibility":"public"},"Gem::Deprecate.skip=":{"description":":nodoc:","name":"skip=","namespace":"Gem::Deprecate","path":"Gem::Deprecate.skip=","type":"module_function","visibility":"public"},"Gem::Deprecate.skip_during":{"description":"Temporarily turn off warnings. Intended for tests only.","name":"skip_during","namespace":"Gem::Deprecate","path":"Gem::Deprecate.skip_during","type":"module_function","visibility":"public"},"Gem::Doctor":{"description":"Cleans up after a partially-failed uninstall or for an invalid\nGem::Specification.\n\nIf a specification was removed by hand this will remove any remaining files.\n\nIf a corrupt specification was installed this will clean up warnings by\nremoving the bogus specification.","name":"Doctor","namespace":"Gem","path":"Gem::Doctor","type":"class","visibility":"public"},"Gem::Doctor#doctor":{"description":"Cleans up uninstalled files and invalid gem specifications","name":"doctor","namespace":"Gem::Doctor","path":"Gem::Doctor#doctor","type":"instance_method","visibility":"public"},"Gem::Doctor#doctor_child":{"description":"Removes files in +sub_directory+ with +extension+","name":"doctor_child","namespace":"Gem::Doctor","path":"Gem::Doctor#doctor_child","type":"instance_method","visibility":"public"},"Gem::Doctor#doctor_children":{"description":"Cleans up children of this gem repository","name":"doctor_children","namespace":"Gem::Doctor","path":"Gem::Doctor#doctor_children","type":"instance_method","visibility":"public"},"Gem::Doctor#gem_repository?":{"description":"Are we doctoring a gem repository?","name":"gem_repository?","namespace":"Gem::Doctor","path":"Gem::Doctor#gem_repository?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Doctor#initialize":{"description":"Creates a new Gem::Doctor that will clean up +gem_repository+.  Only one\ngem repository may be cleaned at a time.\n\nIf +dry_run+ is true no files or directories will be removed.","name":"initialize","namespace":"Gem::Doctor","path":"Gem::Doctor#initialize","type":"instance_method","visibility":"public","return":[["Doctor"],"a new instance of Doctor"]},"Gem::Doctor#installed_specs":{"description":"Specs installed in this gem repository","name":"installed_specs","namespace":"Gem::Doctor","path":"Gem::Doctor#installed_specs","type":"instance_method","visibility":"public"},"Gem::Doctor::REPOSITORY_EXTENSION_MAP":{"description":"Maps a gem subdirectory to the files that are expected to exist in the\nsubdirectory.","name":"REPOSITORY_EXTENSION_MAP","namespace":"Gem::Doctor","path":"Gem::Doctor::REPOSITORY_EXTENSION_MAP","type":"constant","return":null,"visibility":"public"},"Gem::DocumentError":{"description":"","name":"DocumentError","namespace":"Gem","path":"Gem::DocumentError","type":"class","visibility":"public"},"Gem::EndOfYAMLException":{"description":"Potentially raised when a specification is validated.","name":"EndOfYAMLException","namespace":"Gem","path":"Gem::EndOfYAMLException","type":"class","visibility":"public"},"Gem::ErrorReason":{"description":"","name":"ErrorReason","namespace":"Gem","path":"Gem::ErrorReason","type":"class","visibility":"public"},"Gem::Exception":{"description":"Base exception class for RubyGems.  All exception raised by RubyGems are a\nsubclass of this one.","name":"Exception","namespace":"Gem","path":"Gem::Exception","type":"class","visibility":"public"},"Gem::Exception#source_exception":{"description":"--\nTODO: remove in RubyGems 3, nobody sets this","name":"source_exception","namespace":"Gem::Exception","path":"Gem::Exception#source_exception","type":"instance_method","visibility":"public"},"Gem::Exception#source_exception=":{"description":"--\nTODO: remove in RubyGems 3, nobody sets this","name":"source_exception=","namespace":"Gem::Exception","path":"Gem::Exception#source_exception=","type":"instance_method","visibility":"public"},"Gem::Ext":{"description":"Classes for building C extensions live here.","name":"Ext","namespace":"Gem","path":"Gem::Ext","type":"module","visibility":"public"},"Gem::Ext::BuildError":{"description":"Raised when there is an error while building extensions.","name":"BuildError","namespace":"Gem::Ext","path":"Gem::Ext::BuildError","type":"class","visibility":"public"},"Gem::Ext::Builder":{"description":"","name":"Builder","namespace":"Gem::Ext","path":"Gem::Ext::Builder","type":"class","visibility":"public"},"Gem::Ext::Builder#build_args":{"description":":nodoc:","name":"build_args","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#build_args","type":"instance_method","visibility":"public"},"Gem::Ext::Builder#build_args=":{"description":":nodoc:","name":"build_args=","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#build_args=","type":"instance_method","visibility":"public"},"Gem::Ext::Builder#build_error":{"description":"Logs the build +output+ in +build_dir+, then raises Gem::Ext::BuildError.","name":"build_error","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#build_error","type":"instance_method","visibility":"public"},"Gem::Ext::Builder#build_extension":{"description":":nodoc:","name":"build_extension","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#build_extension","type":"instance_method","visibility":"public"},"Gem::Ext::Builder#build_extensions":{"description":"Builds extensions.  Valid types of extensions are extconf.rb files,\nconfigure scripts and rakefiles or mkrf_conf files.","name":"build_extensions","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#build_extensions","type":"instance_method","visibility":"public"},"Gem::Ext::Builder#builder_for":{"description":"Chooses the extension builder class for +extension+","name":"builder_for","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#builder_for","type":"instance_method","visibility":"public"},"Gem::Ext::Builder#initialize":{"description":"Creates a new extension builder for +spec+.  If the +spec+ does not yet\nhave build arguments, saved, set +build_args+ which is an ARGV-style\narray.","name":"initialize","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#initialize","type":"instance_method","visibility":"public","return":[["Builder"],"a new instance of Builder"]},"Gem::Ext::Builder#write_gem_make_out":{"description":"Writes +output+ to gem_make.out in the extension install directory.","name":"write_gem_make_out","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder#write_gem_make_out","type":"instance_method","visibility":"public"},"Gem::Ext::Builder.class_name":{"description":"","name":"class_name","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder.class_name","type":"class_method","visibility":"public"},"Gem::Ext::Builder.make":{"description":"","name":"make","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder.make","type":"class_method","visibility":"public"},"Gem::Ext::Builder.redirector":{"description":"","name":"redirector","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder.redirector","type":"class_method","visibility":"public"},"Gem::Ext::Builder.run":{"description":"","name":"run","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder.run","type":"class_method","visibility":"public"},"Gem::Ext::Builder::CHDIR_MUTEX":{"description":"The builder shells-out to run various commands after changing the\ndirectory.  This means multiple installations cannot be allowed to build\nextensions in parallel as they may change each other's directories leading\nto broken extensions or failed installations.","name":"CHDIR_MUTEX","namespace":"Gem::Ext::Builder","path":"Gem::Ext::Builder::CHDIR_MUTEX","type":"constant","return":null,"visibility":"public"},"Gem::Ext::CmakeBuilder":{"description":"","name":"CmakeBuilder","namespace":"Gem::Ext","path":"Gem::Ext::CmakeBuilder","type":"class","visibility":"public"},"Gem::Ext::CmakeBuilder.build":{"description":"","name":"build","namespace":"Gem::Ext::CmakeBuilder","path":"Gem::Ext::CmakeBuilder.build","type":"class_method","visibility":"public"},"Gem::Ext::ConfigureBuilder":{"description":"--\nCopyright 2006 by Chad Fowler, Rich Kilmer, Jim Weirich and others.\nAll rights reserved.\nSee LICENSE.txt for permissions.\n++","name":"ConfigureBuilder","namespace":"Gem::Ext","path":"Gem::Ext::ConfigureBuilder","type":"class","visibility":"public"},"Gem::Ext::ConfigureBuilder.build":{"description":"","name":"build","namespace":"Gem::Ext::ConfigureBuilder","path":"Gem::Ext::ConfigureBuilder.build","type":"class_method","visibility":"public"},"Gem::Ext::ExtConfBuilder":{"description":"","name":"ExtConfBuilder","namespace":"Gem::Ext","path":"Gem::Ext::ExtConfBuilder","type":"class","visibility":"public"},"Gem::Ext::ExtConfBuilder.build":{"description":"","name":"build","namespace":"Gem::Ext::ExtConfBuilder","path":"Gem::Ext::ExtConfBuilder.build","type":"class_method","visibility":"public"},"Gem::Ext::ExtConfBuilder.get_relative_path":{"description":"","name":"get_relative_path","namespace":"Gem::Ext::ExtConfBuilder","path":"Gem::Ext::ExtConfBuilder.get_relative_path","type":"class_method","visibility":"private"},"Gem::Ext::ExtConfBuilder::FileEntry":{"description":":nodoc:","name":"FileEntry","namespace":"Gem::Ext::ExtConfBuilder","path":"Gem::Ext::ExtConfBuilder::FileEntry","type":"constant","return":null,"visibility":"public"},"Gem::Ext::RakeBuilder":{"description":"--\nCopyright 2006 by Chad Fowler, Rich Kilmer, Jim Weirich and others.\nAll rights reserved.\nSee LICENSE.txt for permissions.\n++","name":"RakeBuilder","namespace":"Gem::Ext","path":"Gem::Ext::RakeBuilder","type":"class","visibility":"public"},"Gem::Ext::RakeBuilder.build":{"description":"","name":"build","namespace":"Gem::Ext::RakeBuilder","path":"Gem::Ext::RakeBuilder.build","type":"class_method","visibility":"public"},"Gem::FakeFetcher":{"description":"A fake Gem::RemoteFetcher for use in tests or to avoid real live HTTP\nrequests when testing code that uses RubyGems.\n\nExample:\n\n  @fetcher = Gem::FakeFetcher.new\n  @fetcher.data['http://gems.example.com/yaml'] = source_index.to_yaml\n  Gem::RemoteFetcher.fetcher = @fetcher\n\n  # invoke RubyGems code\n\n  paths = @fetcher.paths\n  assert_equal 'http://gems.example.com/yaml', paths.shift\n  assert paths.empty?, paths.join(', ')\n\nSee RubyGems' tests for more examples of FakeFetcher.","name":"FakeFetcher","namespace":"Gem","path":"Gem::FakeFetcher","type":"class","visibility":"public"},"Gem::FakeFetcher#api_endpoint":{"description":"","name":"api_endpoint","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#api_endpoint","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#api_endpoints":{"description":"Returns the value of attribute api_endpoints","name":"api_endpoints","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#api_endpoints","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#cache_update_path":{"description":"","name":"cache_update_path","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#cache_update_path","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#data":{"description":"Returns the value of attribute data","name":"data","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#data","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#download":{"description":"","name":"download","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#download","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#download_to_cache":{"description":"","name":"download_to_cache","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#download_to_cache","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#fetch_path":{"description":"","name":"fetch_path","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#fetch_path","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#fetch_size":{"description":"","name":"fetch_size","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#fetch_size","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#find_data":{"description":"","name":"find_data","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#find_data","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#initialize":{"description":"","name":"initialize","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#initialize","type":"instance_method","visibility":"public","return":[["FakeFetcher"],"a new instance of FakeFetcher"]},"Gem::FakeFetcher#last_request":{"description":"Returns the value of attribute last_request","name":"last_request","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#last_request","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#open_uri_or_path":{"description":"Thanks, FakeWeb!","name":"open_uri_or_path","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#open_uri_or_path","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#paths":{"description":"Returns the value of attribute paths","name":"paths","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#paths","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#paths=":{"description":"Sets the attribute paths","name":"paths=","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#paths=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute paths to."]]},"Gem::FakeFetcher#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#pretty_print","type":"instance_method","visibility":"public"},"Gem::FakeFetcher#request":{"description":"","name":"request","namespace":"Gem::FakeFetcher","path":"Gem::FakeFetcher#request","type":"instance_method","visibility":"public"},"Gem::FilePermissionError":{"description":"Signals that a file permission error is preventing the user from\noperating on the given directory.","name":"FilePermissionError","namespace":"Gem","path":"Gem::FilePermissionError","type":"class","visibility":"public"},"Gem::FilePermissionError#directory":{"description":"Returns the value of attribute directory","name":"directory","namespace":"Gem::FilePermissionError","path":"Gem::FilePermissionError#directory","type":"instance_method","visibility":"public"},"Gem::FilePermissionError#initialize":{"description":"","name":"initialize","namespace":"Gem::FilePermissionError","path":"Gem::FilePermissionError#initialize","type":"instance_method","visibility":"public","return":[["FilePermissionError"],"a new instance of FilePermissionError"]},"Gem::FormatException":{"description":"Used to raise parsing and loading errors","name":"FormatException","namespace":"Gem","path":"Gem::FormatException","type":"class","visibility":"public"},"Gem::FormatException#file_path":{"description":"Returns the value of attribute file_path","name":"file_path","namespace":"Gem::FormatException","path":"Gem::FormatException#file_path","type":"instance_method","visibility":"public"},"Gem::FormatException#file_path=":{"description":"Sets the attribute file_path","name":"file_path=","namespace":"Gem::FormatException","path":"Gem::FormatException#file_path=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute file_path to."]]},"Gem::GEM_DEP_FILES":{"description":"","name":"GEM_DEP_FILES","namespace":"Gem","path":"Gem::GEM_DEP_FILES","type":"constant","return":["Array",""],"visibility":"public"},"Gem::GemNotFoundException":{"description":"","name":"GemNotFoundException","namespace":"Gem","path":"Gem::GemNotFoundException","type":"class","visibility":"public"},"Gem::GemNotInHomeException":{"description":"Raised when attempting to uninstall a gem that isn't in GEM_HOME.","name":"GemNotInHomeException","namespace":"Gem","path":"Gem::GemNotInHomeException","type":"class","visibility":"public"},"Gem::GemNotInHomeException#spec":{"description":"Returns the value of attribute spec","name":"spec","namespace":"Gem::GemNotInHomeException","path":"Gem::GemNotInHomeException#spec","type":"instance_method","visibility":"public"},"Gem::GemNotInHomeException#spec=":{"description":"Sets the attribute spec","name":"spec=","namespace":"Gem::GemNotInHomeException","path":"Gem::GemNotInHomeException#spec=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute spec to."]]},"Gem::GemRunner":{"description":"Run an instance of the gem program.\n\nGem::GemRunner is only intended for internal use by RubyGems itself.  It\ndoes not form any public API and may change at any time for any reason.\n\nIf you would like to duplicate functionality of `gem` commands, use the\nclasses they call directly.","name":"GemRunner","namespace":"Gem","path":"Gem::GemRunner","type":"class","visibility":"public"},"Gem::GemRunner#do_configuration":{"description":"","name":"do_configuration","namespace":"Gem::GemRunner","path":"Gem::GemRunner#do_configuration","type":"instance_method","visibility":"private"},"Gem::GemRunner#extract_build_args":{"description":"Separates the build arguments (those following <code>--</code>) from the\nother arguments in the list.","name":"extract_build_args","namespace":"Gem::GemRunner","path":"Gem::GemRunner#extract_build_args","type":"instance_method","visibility":"public"},"Gem::GemRunner#initialize":{"description":"","name":"initialize","namespace":"Gem::GemRunner","path":"Gem::GemRunner#initialize","type":"instance_method","visibility":"public","return":[["GemRunner"],"a new instance of GemRunner"]},"Gem::GemRunner#run":{"description":"Run the gem command with the following arguments.","name":"run","namespace":"Gem::GemRunner","path":"Gem::GemRunner#run","type":"instance_method","visibility":"public"},"Gem::GemcutterUtilities":{"description":"Utility methods for using the RubyGems API.","name":"GemcutterUtilities","namespace":"Gem","path":"Gem::GemcutterUtilities","type":"module","visibility":"public"},"Gem::GemcutterUtilities#add_key_option":{"description":"Add the --key option","name":"add_key_option","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#add_key_option","type":"module_function","visibility":"public"},"Gem::GemcutterUtilities#api_key":{"description":"The API key from the command options or from the user's configuration.","name":"api_key","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#api_key","type":"module_function","visibility":"public"},"Gem::GemcutterUtilities#host":{"description":"The host to connect to either from the RUBYGEMS_HOST environment variable\nor from the user's configuration","name":"host","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#host","type":"module_function","visibility":"public"},"Gem::GemcutterUtilities#host=":{"description":"Sets the attribute host","name":"host=","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#host=","type":"module_function","visibility":"public","parameters":[["value",null,"the value to set the attribute host to."]]},"Gem::GemcutterUtilities#rubygems_api_request":{"description":"Creates an RubyGems API to +host+ and +path+ with the given HTTP +method+.\n\nIf +allowed_push_host+ metadata is present, then it will only allow that host.","name":"rubygems_api_request","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#rubygems_api_request","type":"module_function","visibility":"public"},"Gem::GemcutterUtilities#sign_in":{"description":"Signs in with the RubyGems API at +sign_in_host+ and sets the rubygems API\nkey.","name":"sign_in","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#sign_in","type":"module_function","visibility":"public"},"Gem::GemcutterUtilities#verify_api_key":{"description":"Retrieves the pre-configured API key +key+ or terminates interaction with\nan error.","name":"verify_api_key","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#verify_api_key","type":"module_function","visibility":"public"},"Gem::GemcutterUtilities#with_response":{"description":"If +response+ is an HTTP Success (2XX) response, yields the response if a\nblock was given or shows the response body to the user.\n\nIf the response was not successful, shows an error to the user including\nthe +error_prefix+ and the response body.","name":"with_response","namespace":"Gem::GemcutterUtilities","path":"Gem::GemcutterUtilities#with_response","type":"module_function","visibility":"public"},"Gem::ImpossibleDependenciesError":{"description":"Raised by Gem::Resolver when dependencies conflict and create the\ninability to find a valid possible spec for a request.","name":"ImpossibleDependenciesError","namespace":"Gem","path":"Gem::ImpossibleDependenciesError","type":"class","visibility":"public"},"Gem::ImpossibleDependenciesError#build_message":{"description":":nodoc:","name":"build_message","namespace":"Gem::ImpossibleDependenciesError","path":"Gem::ImpossibleDependenciesError#build_message","type":"instance_method","visibility":"public"},"Gem::ImpossibleDependenciesError#conflicts":{"description":"Returns the value of attribute conflicts","name":"conflicts","namespace":"Gem::ImpossibleDependenciesError","path":"Gem::ImpossibleDependenciesError#conflicts","type":"instance_method","visibility":"public"},"Gem::ImpossibleDependenciesError#dependency":{"description":"","name":"dependency","namespace":"Gem::ImpossibleDependenciesError","path":"Gem::ImpossibleDependenciesError#dependency","type":"instance_method","visibility":"public"},"Gem::ImpossibleDependenciesError#initialize":{"description":"","name":"initialize","namespace":"Gem::ImpossibleDependenciesError","path":"Gem::ImpossibleDependenciesError#initialize","type":"instance_method","visibility":"public","return":[["ImpossibleDependenciesError"],"a new instance of ImpossibleDependenciesError"]},"Gem::ImpossibleDependenciesError#request":{"description":"Returns the value of attribute request","name":"request","namespace":"Gem::ImpossibleDependenciesError","path":"Gem::ImpossibleDependenciesError#request","type":"instance_method","visibility":"public"},"Gem::Indexer":{"description":"Top level class for building the gem repository index.","name":"Indexer","namespace":"Gem","path":"Gem::Indexer","type":"class","visibility":"public"},"Gem::Indexer#abbreviate":{"description":"Abbreviate the spec for downloading.  Abbreviated specs are only used for\nsearching, downloading and related activities and do not need deployment\nspecific information (e.g. list of files).  So we abbreviate the spec,\nmaking it much smaller for quicker downloads.\n--\nTODO move to Gem::Specification","name":"abbreviate","namespace":"Gem::Indexer","path":"Gem::Indexer#abbreviate","type":"instance_method","visibility":"public"},"Gem::Indexer#build_indicies":{"description":"Build various indicies","name":"build_indicies","namespace":"Gem::Indexer","path":"Gem::Indexer#build_indicies","type":"instance_method","visibility":"public"},"Gem::Indexer#build_marshal_gemspecs":{"description":"Builds Marshal quick index gemspecs.","name":"build_marshal_gemspecs","namespace":"Gem::Indexer","path":"Gem::Indexer#build_marshal_gemspecs","type":"instance_method","visibility":"public"},"Gem::Indexer#build_modern":{"description":"Build indexes for RubyGems 1.2.0 and newer when true","name":"build_modern","namespace":"Gem::Indexer","path":"Gem::Indexer#build_modern","type":"instance_method","visibility":"public"},"Gem::Indexer#build_modern=":{"description":"Build indexes for RubyGems 1.2.0 and newer when true","name":"build_modern=","namespace":"Gem::Indexer","path":"Gem::Indexer#build_modern=","type":"instance_method","visibility":"public"},"Gem::Indexer#build_modern_index":{"description":"Build a single index for RubyGems 1.2 and newer","name":"build_modern_index","namespace":"Gem::Indexer","path":"Gem::Indexer#build_modern_index","type":"instance_method","visibility":"public"},"Gem::Indexer#build_modern_indicies":{"description":"Builds indicies for RubyGems 1.2 and newer. Handles full, latest, prerelease","name":"build_modern_indicies","namespace":"Gem::Indexer","path":"Gem::Indexer#build_modern_indicies","type":"instance_method","visibility":"public"},"Gem::Indexer#compact_specs":{"description":"Compacts Marshal output for the specs index data source by using identical\nobjects as much as possible.","name":"compact_specs","namespace":"Gem::Indexer","path":"Gem::Indexer#compact_specs","type":"instance_method","visibility":"public"},"Gem::Indexer#compress":{"description":"Compress +filename+ with +extension+.","name":"compress","namespace":"Gem::Indexer","path":"Gem::Indexer#compress","type":"instance_method","visibility":"public"},"Gem::Indexer#compress_indicies":{"description":"Compresses indicies on disk\n--\nAll future files should be compressed using gzip, not deflate","name":"compress_indicies","namespace":"Gem::Indexer","path":"Gem::Indexer#compress_indicies","type":"instance_method","visibility":"public"},"Gem::Indexer#dest_directory":{"description":"Index install location","name":"dest_directory","namespace":"Gem::Indexer","path":"Gem::Indexer#dest_directory","type":"instance_method","visibility":"public"},"Gem::Indexer#dest_latest_specs_index":{"description":"Latest specs index install location","name":"dest_latest_specs_index","namespace":"Gem::Indexer","path":"Gem::Indexer#dest_latest_specs_index","type":"instance_method","visibility":"public"},"Gem::Indexer#dest_prerelease_specs_index":{"description":"Prerelease specs index install location","name":"dest_prerelease_specs_index","namespace":"Gem::Indexer","path":"Gem::Indexer#dest_prerelease_specs_index","type":"instance_method","visibility":"public"},"Gem::Indexer#dest_specs_index":{"description":"Specs index install location","name":"dest_specs_index","namespace":"Gem::Indexer","path":"Gem::Indexer#dest_specs_index","type":"instance_method","visibility":"public"},"Gem::Indexer#directory":{"description":"Index build directory","name":"directory","namespace":"Gem::Indexer","path":"Gem::Indexer#directory","type":"instance_method","visibility":"public"},"Gem::Indexer#gem_file_list":{"description":"List of gem file names to index.","name":"gem_file_list","namespace":"Gem::Indexer","path":"Gem::Indexer#gem_file_list","type":"instance_method","visibility":"public"},"Gem::Indexer#generate_index":{"description":"Builds and installs indicies.","name":"generate_index","namespace":"Gem::Indexer","path":"Gem::Indexer#generate_index","type":"instance_method","visibility":"public"},"Gem::Indexer#gzip":{"description":"Zlib::GzipWriter wrapper that gzips +filename+ on disk.","name":"gzip","namespace":"Gem::Indexer","path":"Gem::Indexer#gzip","type":"instance_method","visibility":"public"},"Gem::Indexer#initialize":{"description":"Create an indexer that will index the gems in +directory+.","name":"initialize","namespace":"Gem::Indexer","path":"Gem::Indexer#initialize","type":"instance_method","visibility":"public","return":[["Indexer"],"a new instance of Indexer"]},"Gem::Indexer#install_indicies":{"description":"Install generated indicies into the destination directory.","name":"install_indicies","namespace":"Gem::Indexer","path":"Gem::Indexer#install_indicies","type":"instance_method","visibility":"public"},"Gem::Indexer#make_temp_directories":{"description":"Make directories for index generation","name":"make_temp_directories","namespace":"Gem::Indexer","path":"Gem::Indexer#make_temp_directories","type":"instance_method","visibility":"public"},"Gem::Indexer#map_gems_to_specs":{"description":"","name":"map_gems_to_specs","namespace":"Gem::Indexer","path":"Gem::Indexer#map_gems_to_specs","type":"instance_method","visibility":"public"},"Gem::Indexer#paranoid":{"description":"Ensure +path+ and path with +extension+ are identical.","name":"paranoid","namespace":"Gem::Indexer","path":"Gem::Indexer#paranoid","type":"instance_method","visibility":"public"},"Gem::Indexer#sanitize":{"description":"Sanitize the descriptive fields in the spec.  Sometimes non-ASCII\ncharacters will garble the site index.  Non-ASCII characters will\nbe replaced by their XML entity equivalent.","name":"sanitize","namespace":"Gem::Indexer","path":"Gem::Indexer#sanitize","type":"instance_method","visibility":"public"},"Gem::Indexer#sanitize_string":{"description":"Sanitize a single string.","name":"sanitize_string","namespace":"Gem::Indexer","path":"Gem::Indexer#sanitize_string","type":"instance_method","visibility":"public"},"Gem::Indexer#update_index":{"description":"Perform an in-place update of the repository from newly added gems.","name":"update_index","namespace":"Gem::Indexer","path":"Gem::Indexer#update_index","type":"instance_method","visibility":"public"},"Gem::Indexer#update_specs_index":{"description":"Combines specs in +index+ and +source+ then writes out a new copy to\n+dest+.  For a latest index, does not ensure the new file is minimal.","name":"update_specs_index","namespace":"Gem::Indexer","path":"Gem::Indexer#update_specs_index","type":"instance_method","visibility":"public"},"Gem::InstallError":{"description":"","name":"InstallError","namespace":"Gem","path":"Gem::InstallError","type":"class","visibility":"public"},"Gem::InstallUpdateOptions":{"description":"Mixin methods for install and update options for Gem::Commands","name":"InstallUpdateOptions","namespace":"Gem","path":"Gem::InstallUpdateOptions","type":"module","visibility":"public"},"Gem::InstallUpdateOptions#add_install_update_options":{"description":"Add the install/update options to the option parser.","name":"add_install_update_options","namespace":"Gem::InstallUpdateOptions","path":"Gem::InstallUpdateOptions#add_install_update_options","type":"module_function","visibility":"public"},"Gem::InstallUpdateOptions#install_update_defaults_str":{"description":"Default options for the gem install command.","name":"install_update_defaults_str","namespace":"Gem::InstallUpdateOptions","path":"Gem::InstallUpdateOptions#install_update_defaults_str","type":"module_function","visibility":"public"},"Gem::Installer":{"description":"The installer installs the files contained in the .gem into the Gem.home.\n\nGem::Installer does the work of putting files in all the right places on the\nfilesystem including unpacking the gem into its gem dir, installing the\ngemspec in the specifications dir, storing the cached gem in the cache dir,\nand installing either wrappers or symlinks for executables.\n\nThe installer invokes pre and post install hooks.  Hooks can be added either\nthrough a rubygems_plugin.rb file in an installed gem or via a\nrubygems/defaults/#{RUBY_ENGINE}.rb or rubygems/defaults/operating_system.rb\nfile.  See Gem.pre_install and Gem.post_install for details.","name":"Installer","namespace":"Gem","path":"Gem::Installer","type":"class","visibility":"public"},"Gem::Installer#app_script_text":{"description":"Return the text for an application file.","name":"app_script_text","namespace":"Gem::Installer","path":"Gem::Installer#app_script_text","type":"instance_method","visibility":"public"},"Gem::Installer#bin_dir":{"description":"The directory a gem's executables will be installed into","name":"bin_dir","namespace":"Gem::Installer","path":"Gem::Installer#bin_dir","type":"instance_method","visibility":"public"},"Gem::Installer#bin_dir=":{"description":"Available through requiring rubygems/installer_test_case","name":"bin_dir=","namespace":"Gem::Installer","path":"Gem::Installer#bin_dir=","type":"instance_method","visibility":"public"},"Gem::Installer#build_args=":{"description":"Available through requiring rubygems/installer_test_case","name":"build_args=","namespace":"Gem::Installer","path":"Gem::Installer#build_args=","type":"instance_method","visibility":"public"},"Gem::Installer#build_extensions":{"description":"Builds extensions.  Valid types of extensions are extconf.rb files,\nconfigure scripts and rakefiles or mkrf_conf files.","name":"build_extensions","namespace":"Gem::Installer","path":"Gem::Installer#build_extensions","type":"instance_method","visibility":"public"},"Gem::Installer#build_root":{"description":":nodoc:","name":"build_root","namespace":"Gem::Installer","path":"Gem::Installer#build_root","type":"instance_method","visibility":"public"},"Gem::Installer#check_executable_overwrite":{"description":"Checks if +filename+ exists in +@bin_dir+.\n\nIf +@force+ is set +filename+ is overwritten.\n\nIf +filename+ exists and is a RubyGems wrapper for different gem the user\nis consulted.\n\nIf +filename+ exists and +@bin_dir+ is Gem.default_bindir (/usr/local) the\nuser is consulted.\n\nOtherwise +filename+ is overwritten.","name":"check_executable_overwrite","namespace":"Gem::Installer","path":"Gem::Installer#check_executable_overwrite","type":"instance_method","visibility":"public"},"Gem::Installer#check_that_user_bin_dir_is_in_path":{"description":":nodoc:","name":"check_that_user_bin_dir_is_in_path","namespace":"Gem::Installer","path":"Gem::Installer#check_that_user_bin_dir_is_in_path","type":"instance_method","visibility":"public"},"Gem::Installer#default_spec_file":{"description":"The location of of the default spec file for default gems.","name":"default_spec_file","namespace":"Gem::Installer","path":"Gem::Installer#default_spec_file","type":"instance_method","visibility":"public"},"Gem::Installer#dir":{"description":"Return the target directory where the gem is to be installed. This\ndirectory is not guaranteed to be populated.","name":"dir","namespace":"Gem::Installer","path":"Gem::Installer#dir","type":"instance_method","visibility":"public"},"Gem::Installer#ensure_dependencies_met":{"description":":nodoc:","name":"ensure_dependencies_met","namespace":"Gem::Installer","path":"Gem::Installer#ensure_dependencies_met","type":"instance_method","visibility":"public"},"Gem::Installer#ensure_dependency":{"description":"Ensure that the dependency is satisfied by the current installation of\ngem.  If it is not an exception is raised.\n\nspec       :: Gem::Specification\ndependency :: Gem::Dependency","name":"ensure_dependency","namespace":"Gem::Installer","path":"Gem::Installer#ensure_dependency","type":"instance_method","visibility":"public"},"Gem::Installer#ensure_loadable_spec":{"description":"Ensures the Gem::Specification written out for this gem is loadable upon\ninstallation.","name":"ensure_loadable_spec","namespace":"Gem::Installer","path":"Gem::Installer#ensure_loadable_spec","type":"instance_method","visibility":"public"},"Gem::Installer#ensure_required_ruby_version_met":{"description":":nodoc:","name":"ensure_required_ruby_version_met","namespace":"Gem::Installer","path":"Gem::Installer#ensure_required_ruby_version_met","type":"instance_method","visibility":"public"},"Gem::Installer#ensure_required_rubygems_version_met":{"description":":nodoc:","name":"ensure_required_rubygems_version_met","namespace":"Gem::Installer","path":"Gem::Installer#ensure_required_rubygems_version_met","type":"instance_method","visibility":"public"},"Gem::Installer#env_shebang=":{"description":"Available through requiring rubygems/installer_test_case","name":"env_shebang=","namespace":"Gem::Installer","path":"Gem::Installer#env_shebang=","type":"instance_method","visibility":"public"},"Gem::Installer#extension_build_error":{"description":"Logs the build +output+ in +build_dir+, then raises Gem::Ext::BuildError.\n\nTODO:  Delete this for RubyGems 3.  It remains for API compatibility","name":"extension_build_error","namespace":"Gem::Installer","path":"Gem::Installer#extension_build_error","type":"instance_method","visibility":"public"},"Gem::Installer#extract_bin":{"description":"Extracts only the bin/ files from the gem into the gem directory.\nThis is used by default gems to allow a gem-aware stub to function\nwithout the full gem installed.","name":"extract_bin","namespace":"Gem::Installer","path":"Gem::Installer#extract_bin","type":"instance_method","visibility":"public"},"Gem::Installer#extract_files":{"description":"Reads the file index and extracts each file into the gem directory.\n\nEnsures that files can't be installed outside the gem directory.","name":"extract_files","namespace":"Gem::Installer","path":"Gem::Installer#extract_files","type":"instance_method","visibility":"public"},"Gem::Installer#force=":{"description":"Available through requiring rubygems/installer_test_case","name":"force=","namespace":"Gem::Installer","path":"Gem::Installer#force=","type":"instance_method","visibility":"public"},"Gem::Installer#format=":{"description":"Available through requiring rubygems/installer_test_case","name":"format=","namespace":"Gem::Installer","path":"Gem::Installer#format=","type":"instance_method","visibility":"public"},"Gem::Installer#format_executable=":{"description":"Available through requiring rubygems/installer_test_case","name":"format_executable=","namespace":"Gem::Installer","path":"Gem::Installer#format_executable=","type":"instance_method","visibility":"public"},"Gem::Installer#formatted_program_filename":{"description":"Prefix and suffix the program filename the same as ruby.","name":"formatted_program_filename","namespace":"Gem::Installer","path":"Gem::Installer#formatted_program_filename","type":"instance_method","visibility":"public"},"Gem::Installer#gem":{"description":"Filename of the gem being installed.","name":"gem","namespace":"Gem::Installer","path":"Gem::Installer#gem","type":"instance_method","visibility":"public"},"Gem::Installer#gem_dir":{"description":"Lazy accessor for the spec's gem directory.","name":"gem_dir","namespace":"Gem::Installer","path":"Gem::Installer#gem_dir","type":"instance_method","visibility":"public"},"Gem::Installer#gem_dir=":{"description":"Available through requiring rubygems/installer_test_case","name":"gem_dir=","namespace":"Gem::Installer","path":"Gem::Installer#gem_dir=","type":"instance_method","visibility":"public"},"Gem::Installer#gem_home":{"description":"The gem repository the gem will be installed into","name":"gem_home","namespace":"Gem::Installer","path":"Gem::Installer#gem_home","type":"instance_method","visibility":"public"},"Gem::Installer#gem_home=":{"description":"Available through requiring rubygems/installer_test_case","name":"gem_home=","namespace":"Gem::Installer","path":"Gem::Installer#gem_home=","type":"instance_method","visibility":"public"},"Gem::Installer#generate_bin":{"description":":nodoc:","name":"generate_bin","namespace":"Gem::Installer","path":"Gem::Installer#generate_bin","type":"instance_method","visibility":"public"},"Gem::Installer#generate_bin_script":{"description":"Creates the scripts to run the applications in the gem.\n--\nThe Windows script is generated in addition to the regular one due to a\nbug or misfeature in the Windows shell's pipe.  See\nhttp://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-talk/193379","name":"generate_bin_script","namespace":"Gem::Installer","path":"Gem::Installer#generate_bin_script","type":"instance_method","visibility":"public"},"Gem::Installer#generate_bin_symlink":{"description":"Creates the symlinks to run the applications in the gem.  Moves\nthe symlink if the gem being installed has a newer version.","name":"generate_bin_symlink","namespace":"Gem::Installer","path":"Gem::Installer#generate_bin_symlink","type":"instance_method","visibility":"public"},"Gem::Installer#generate_windows_script":{"description":"Creates windows .bat files for easy running of commands","name":"generate_windows_script","namespace":"Gem::Installer","path":"Gem::Installer#generate_windows_script","type":"instance_method","visibility":"public"},"Gem::Installer#ignore_dependencies=":{"description":"Available through requiring rubygems/installer_test_case","name":"ignore_dependencies=","namespace":"Gem::Installer","path":"Gem::Installer#ignore_dependencies=","type":"instance_method","visibility":"public"},"Gem::Installer#initialize":{"description":"Constructs an Installer instance that will install the gem located at\n+gem+.  +options+ is a Hash with the following keys:\n\n:bin_dir:: Where to put a bin wrapper if needed.\n:development:: Whether or not development dependencies should be installed.\n:env_shebang:: Use /usr/bin/env in bin wrappers.\n:force:: Overrides all version checks and security policy checks, except\n         for a signed-gems-only policy.\n:format_executable:: Format the executable the same as the Ruby executable.\n                     If your Ruby is ruby18, foo_exec will be installed as\n                     foo_exec18.\n:ignore_dependencies:: Don't raise if a dependency is missing.\n:install_dir:: The directory to install the gem into.\n:security_policy:: Use the specified security policy.  See Gem::Security\n:user_install:: Indicate that the gem should be unpacked into the users\n                personal gem directory.\n:only_install_dir:: Only validate dependencies against what is in the\n                    install_dir\n:wrappers:: Install wrappers if true, symlinks if false.\n:build_args:: An Array of arguments to pass to the extension builder\n              process. If not set, then Gem::Command.build_args is used","name":"initialize","namespace":"Gem::Installer","path":"Gem::Installer#initialize","type":"instance_method","visibility":"public","return":[["Installer"],"a new instance of Installer"]},"Gem::Installer#install":{"description":"Installs the gem and returns a loaded Gem::Specification for the installed\ngem.\n\nThe gem will be installed with the following structure:\n\n  @gem_home/\n    cache/<gem-version>.gem #=> a cached copy of the installed gem\n    gems/<gem-version>/... #=> extracted files\n    specifications/<gem-version>.gemspec #=> the Gem::Specification","name":"install","namespace":"Gem::Installer","path":"Gem::Installer#install","type":"instance_method","visibility":"public"},"Gem::Installer#installation_satisfies_dependency?":{"description":"True if the gems in the system satisfy +dependency+.","name":"installation_satisfies_dependency?","namespace":"Gem::Installer","path":"Gem::Installer#installation_satisfies_dependency?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Installer#installed_specs":{"description":"Return an Array of Specifications contained within the gem_home\nwe'll be installing into.","name":"installed_specs","namespace":"Gem::Installer","path":"Gem::Installer#installed_specs","type":"instance_method","visibility":"public"},"Gem::Installer#options":{"description":"The options passed when the Gem::Installer was instantiated.","name":"options","namespace":"Gem::Installer","path":"Gem::Installer#options","type":"instance_method","visibility":"public"},"Gem::Installer#pre_install_checks":{"description":"Performs various checks before installing the gem such as the install\nrepository is writable and its directories exist, required Ruby and\nrubygems versions are met and that dependencies are installed.\n\nVersion and dependency checks are skipped if this install is forced.\n\nThe dependent check will be skipped this install is ignoring dependencies.","name":"pre_install_checks","namespace":"Gem::Installer","path":"Gem::Installer#pre_install_checks","type":"instance_method","visibility":"public"},"Gem::Installer#process_options":{"description":":nodoc:","name":"process_options","namespace":"Gem::Installer","path":"Gem::Installer#process_options","type":"instance_method","visibility":"public"},"Gem::Installer#run_post_build_hooks":{"description":":nodoc:","name":"run_post_build_hooks","namespace":"Gem::Installer","path":"Gem::Installer#run_post_build_hooks","type":"instance_method","visibility":"public"},"Gem::Installer#run_post_install_hooks":{"description":":nodoc:","name":"run_post_install_hooks","namespace":"Gem::Installer","path":"Gem::Installer#run_post_install_hooks","type":"instance_method","visibility":"public"},"Gem::Installer#run_pre_install_hooks":{"description":":nodoc:","name":"run_pre_install_hooks","namespace":"Gem::Installer","path":"Gem::Installer#run_pre_install_hooks","type":"instance_method","visibility":"public"},"Gem::Installer#security_policy=":{"description":"Available through requiring rubygems/installer_test_case","name":"security_policy=","namespace":"Gem::Installer","path":"Gem::Installer#security_policy=","type":"instance_method","visibility":"public"},"Gem::Installer#shebang":{"description":"Generates a #! line for +bin_file_name+'s wrapper copying arguments if\nnecessary.\n\nIf the :custom_shebang config is set, then it is used as a template\nfor how to create the shebang used for to run a gem's executables.\n\nThe template supports 4 expansions:\n\n $env    the path to the unix env utility\n $ruby   the path to the currently running ruby interpreter\n $exec   the path to the gem's executable\n $name   the name of the gem the executable is for","name":"shebang","namespace":"Gem::Installer","path":"Gem::Installer#shebang","type":"instance_method","visibility":"public"},"Gem::Installer#spec":{"description":"Lazy accessor for the installer's spec.","name":"spec","namespace":"Gem::Installer","path":"Gem::Installer#spec","type":"instance_method","visibility":"public"},"Gem::Installer#spec=":{"description":"Sets the specification for .gem-less installs.","name":"spec=","namespace":"Gem::Installer","path":"Gem::Installer#spec=","type":"instance_method","visibility":"public"},"Gem::Installer#spec_file":{"description":"The location of of the spec file that is installed.","name":"spec_file","namespace":"Gem::Installer","path":"Gem::Installer#spec_file","type":"instance_method","visibility":"public"},"Gem::Installer#unpack":{"description":"Unpacks the gem into the given directory.","name":"unpack","namespace":"Gem::Installer","path":"Gem::Installer#unpack","type":"instance_method","visibility":"public"},"Gem::Installer#verify_gem_home":{"description":":nodoc:","name":"verify_gem_home","namespace":"Gem::Installer","path":"Gem::Installer#verify_gem_home","type":"instance_method","visibility":"public"},"Gem::Installer#windows_stub_script":{"description":"return the stub script text used to launch the true Ruby script","name":"windows_stub_script","namespace":"Gem::Installer","path":"Gem::Installer#windows_stub_script","type":"instance_method","visibility":"public"},"Gem::Installer#wrappers=":{"description":"Available through requiring rubygems/installer_test_case","name":"wrappers=","namespace":"Gem::Installer","path":"Gem::Installer#wrappers=","type":"instance_method","visibility":"public"},"Gem::Installer#write_build_info_file":{"description":"Writes the file containing the arguments for building this gem's\nextensions.","name":"write_build_info_file","namespace":"Gem::Installer","path":"Gem::Installer#write_build_info_file","type":"instance_method","visibility":"public"},"Gem::Installer#write_cache_file":{"description":"Writes the .gem file to the cache directory","name":"write_cache_file","namespace":"Gem::Installer","path":"Gem::Installer#write_cache_file","type":"instance_method","visibility":"public"},"Gem::Installer#write_default_spec":{"description":"Writes the full .gemspec specification (in Ruby) to the gem home's\nspecifications/default directory.","name":"write_default_spec","namespace":"Gem::Installer","path":"Gem::Installer#write_default_spec","type":"instance_method","visibility":"public"},"Gem::Installer#write_spec":{"description":"Writes the .gemspec specification (in Ruby) to the gem home's\nspecifications directory.","name":"write_spec","namespace":"Gem::Installer","path":"Gem::Installer#write_spec","type":"instance_method","visibility":"public"},"Gem::Installer.exec_format":{"description":"Defaults to use Ruby's program prefix and suffix.","name":"exec_format","namespace":"Gem::Installer","path":"Gem::Installer.exec_format","type":"class_method","visibility":"public"},"Gem::Installer.exec_format=":{"description":"Overrides the executable format.\n\nThis is a sprintf format with a \"%s\" which will be replaced with the\nexecutable name.  It is based off the ruby executable name's difference\nfrom \"ruby\".","name":"exec_format=","namespace":"Gem::Installer","path":"Gem::Installer.exec_format=","type":"class_method","visibility":"public"},"Gem::Installer.install_lock":{"description":"Certain aspects of the install process are not thread-safe. This lock is\nused to allow multiple threads to install Gems at the same time.","name":"install_lock","namespace":"Gem::Installer","path":"Gem::Installer.install_lock","type":"class_method","visibility":"public"},"Gem::Installer.path_warning":{"description":"True if we've warned about PATH not including Gem.bindir","name":"path_warning","namespace":"Gem::Installer","path":"Gem::Installer.path_warning","type":"class_method","visibility":"public"},"Gem::Installer.path_warning=":{"description":"True if we've warned about PATH not including Gem.bindir","name":"path_warning=","namespace":"Gem::Installer","path":"Gem::Installer.path_warning=","type":"class_method","visibility":"public"},"Gem::Installer::ENV_PATHS":{"description":"Paths where env(1) might live.  Some systems are broken and have it in\n/bin","name":"ENV_PATHS","namespace":"Gem::Installer","path":"Gem::Installer::ENV_PATHS","type":"constant","return":["Array",""],"visibility":"public"},"Gem::Installer::ExtensionBuildError":{"description":"Deprecated in favor of Gem::Ext::BuildError","name":"ExtensionBuildError","namespace":"Gem::Installer","path":"Gem::Installer::ExtensionBuildError","type":"constant","return":["Class",""],"visibility":"public"},"Gem::InstallerTestCase":{"description":"A test case for Gem::Installer.","name":"InstallerTestCase","namespace":"Gem","path":"Gem::InstallerTestCase","type":"class","visibility":"public"},"Gem::InstallerTestCase#setup":{"description":"@gem::\n  the path to a built gem from @spec\n@user_spec::\n  the path to a built gem from @user_spec\n\n@installer::\n  a Gem::Installer for the @spec that installs into @gemhome\n@user_installer::\n  a Gem::Installer for the @user_spec that installs into Gem.user_dir","name":"setup","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#setup","type":"instance_method","visibility":"public"},"Gem::InstallerTestCase#util_gem_bindir":{"description":":nodoc:","name":"util_gem_bindir","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#util_gem_bindir","type":"instance_method","visibility":"public"},"Gem::InstallerTestCase#util_gem_dir":{"description":":nodoc:","name":"util_gem_dir","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#util_gem_dir","type":"instance_method","visibility":"public"},"Gem::InstallerTestCase#util_inst_bindir":{"description":"The path where installed executables live","name":"util_inst_bindir","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#util_inst_bindir","type":"instance_method","visibility":"public"},"Gem::InstallerTestCase#util_installer":{"description":"Creates an installer for +spec+ that will install into +gem_home+.  If\n+user+ is true a user-install will be performed.","name":"util_installer","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#util_installer","type":"instance_method","visibility":"public"},"Gem::InstallerTestCase#util_make_exec":{"description":"Adds an executable named \"executable\" to +spec+ with the given +shebang+.\n\nThe executable is also written to the bin dir in @tmpdir and the installed\ngem directory for +spec+.","name":"util_make_exec","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#util_make_exec","type":"instance_method","visibility":"public"},"Gem::InstallerTestCase#util_setup_gem":{"description":"Builds the @spec gem and returns an installer for it.  The built gem\nincludes:\n\n  bin/executable\n  lib/code.rb\n  ext/a/mkrf_conf.rb","name":"util_setup_gem","namespace":"Gem::InstallerTestCase","path":"Gem::InstallerTestCase#util_setup_gem","type":"instance_method","visibility":"public"},"Gem::InvalidSpecificationException":{"description":"Potentially raised when a specification is validated.","name":"InvalidSpecificationException","namespace":"Gem","path":"Gem::InvalidSpecificationException","type":"class","visibility":"public"},"Gem::LOADED_SPECS_MUTEX":{"description":"","name":"LOADED_SPECS_MUTEX","namespace":"Gem","path":"Gem::LOADED_SPECS_MUTEX","type":"constant","return":null,"visibility":"public"},"Gem::List":{"description":"","name":"List","namespace":"Gem","path":"Gem::List","type":"class","visibility":"public"},"Gem::List#each":{"description":"","name":"each","namespace":"Gem::List","path":"Gem::List#each","type":"instance_method","visibility":"public"},"Gem::List#find":{"description":"","name":"find","namespace":"Gem::List","path":"Gem::List#find","type":"instance_method","visibility":"public"},"Gem::List#prepend":{"description":"","name":"prepend","namespace":"Gem::List","path":"Gem::List#prepend","type":"instance_method","visibility":"public"},"Gem::List#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::List","path":"Gem::List#pretty_print","type":"instance_method","visibility":"public"},"Gem::List#tail":{"description":"Returns the value of attribute tail","name":"tail","namespace":"Gem::List","path":"Gem::List#tail","type":"instance_method","visibility":"public","return":[["Object"],"the current value of tail"]},"Gem::List#tail=":{"description":"Sets the attribute tail","name":"tail=","namespace":"Gem::List","path":"Gem::List#tail=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute tail to."]],"return":[["Object"],"the newly set value"]},"Gem::List#to_a":{"description":"","name":"to_a","namespace":"Gem::List","path":"Gem::List#to_a","type":"instance_method","visibility":"public"},"Gem::List#value":{"description":"Returns the value of attribute value","name":"value","namespace":"Gem::List","path":"Gem::List#value","type":"instance_method","visibility":"public","return":[["Object"],"the current value of value"]},"Gem::List#value=":{"description":"Sets the attribute value","name":"value=","namespace":"Gem::List","path":"Gem::List#value=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute value to."]],"return":[["Object"],"the newly set value"]},"Gem::List.prepend":{"description":"","name":"prepend","namespace":"Gem::List","path":"Gem::List.prepend","type":"class_method","visibility":"public"},"Gem::LoadError":{"description":"Raised when RubyGems is unable to load or activate a gem.  Contains the\nname and version requirements of the gem that either conflicts with\nalready activated gems or that RubyGems is otherwise unable to activate.","name":"LoadError","namespace":"Gem","path":"Gem::LoadError","type":"class","visibility":"public"},"Gem::LoadError#name":{"description":"Name of gem","name":"name","namespace":"Gem::LoadError","path":"Gem::LoadError#name","type":"instance_method","visibility":"public"},"Gem::LoadError#name=":{"description":"Name of gem","name":"name=","namespace":"Gem::LoadError","path":"Gem::LoadError#name=","type":"instance_method","visibility":"public"},"Gem::LoadError#requirement":{"description":"Version requirement of gem","name":"requirement","namespace":"Gem::LoadError","path":"Gem::LoadError#requirement","type":"instance_method","visibility":"public"},"Gem::LoadError#requirement=":{"description":"Version requirement of gem","name":"requirement=","namespace":"Gem::LoadError","path":"Gem::LoadError#requirement=","type":"instance_method","visibility":"public"},"Gem::LocalRemoteOptions":{"description":"Mixin methods for local and remote Gem::Command options.","name":"LocalRemoteOptions","namespace":"Gem","path":"Gem::LocalRemoteOptions","type":"module","visibility":"public"},"Gem::LocalRemoteOptions#accept_uri_http":{"description":"Allows OptionParser to handle HTTP URIs.","name":"accept_uri_http","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#accept_uri_http","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#add_bulk_threshold_option":{"description":"Add the --bulk-threshold option","name":"add_bulk_threshold_option","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#add_bulk_threshold_option","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#add_clear_sources_option":{"description":"Add the --clear-sources option","name":"add_clear_sources_option","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#add_clear_sources_option","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#add_local_remote_options":{"description":"Add local/remote options to the command line parser.","name":"add_local_remote_options","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#add_local_remote_options","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#add_proxy_option":{"description":"Add the --http-proxy option","name":"add_proxy_option","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#add_proxy_option","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#add_source_option":{"description":"Add the --source option","name":"add_source_option","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#add_source_option","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#add_update_sources_option":{"description":"Add the --update-sources option","name":"add_update_sources_option","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#add_update_sources_option","type":"module_function","visibility":"public"},"Gem::LocalRemoteOptions#both?":{"description":"Is fetching of local and remote information enabled?","name":"both?","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#both?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Gem::LocalRemoteOptions#local?":{"description":"Is local fetching enabled?","name":"local?","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#local?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Gem::LocalRemoteOptions#remote?":{"description":"Is remote fetching enabled?","name":"remote?","namespace":"Gem::LocalRemoteOptions","path":"Gem::LocalRemoteOptions#remote?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Gem::MARSHAL_SPEC_DIR":{"description":"Location of Marshal quick gemspecs on remote repositories","name":"MARSHAL_SPEC_DIR","namespace":"Gem","path":"Gem::MARSHAL_SPEC_DIR","type":"constant","return":["String",""],"visibility":"public"},"Gem::MockGemUi":{"description":"This Gem::StreamUI subclass records input and output to StringIO for\nretrieval during tests.","name":"MockGemUi","namespace":"Gem","path":"Gem::MockGemUi","type":"class","visibility":"public"},"Gem::MockGemUi#ask":{"description":"","name":"ask","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#ask","type":"instance_method","visibility":"public"},"Gem::MockGemUi#error":{"description":"","name":"error","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#error","type":"instance_method","visibility":"public"},"Gem::MockGemUi#initialize":{"description":"","name":"initialize","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#initialize","type":"instance_method","visibility":"public","return":[["MockGemUi"],"a new instance of MockGemUi"]},"Gem::MockGemUi#input":{"description":"","name":"input","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#input","type":"instance_method","visibility":"public"},"Gem::MockGemUi#output":{"description":"","name":"output","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#output","type":"instance_method","visibility":"public"},"Gem::MockGemUi#terminate_interaction":{"description":"","name":"terminate_interaction","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#terminate_interaction","type":"instance_method","visibility":"public"},"Gem::MockGemUi#terminated?":{"description":"","name":"terminated?","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi#terminated?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::MockGemUi::InputEOFError":{"description":"Raised when you haven't provided enough input to your MockGemUi","name":"InputEOFError","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi::InputEOFError","type":"class","visibility":"public"},"Gem::MockGemUi::InputEOFError#initialize":{"description":"","name":"initialize","namespace":"Gem::MockGemUi::InputEOFError","path":"Gem::MockGemUi::InputEOFError#initialize","type":"instance_method","visibility":"public","return":[["InputEOFError"],"a new instance of InputEOFError"]},"Gem::MockGemUi::SystemExitException":{"description":"","name":"SystemExitException","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi::SystemExitException","type":"class","visibility":"public"},"Gem::MockGemUi::TTY":{"description":"","name":"TTY","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi::TTY","type":"module","visibility":"public"},"Gem::MockGemUi::TTY#noecho":{"description":"","name":"noecho","namespace":"Gem::MockGemUi::TTY","path":"Gem::MockGemUi::TTY#noecho","type":"module_function","visibility":"public"},"Gem::MockGemUi::TTY#tty":{"description":"Returns the value of attribute tty","name":"tty","namespace":"Gem::MockGemUi::TTY","path":"Gem::MockGemUi::TTY#tty","type":"module_function","visibility":"public"},"Gem::MockGemUi::TTY#tty=":{"description":"Sets the attribute tty","name":"tty=","namespace":"Gem::MockGemUi::TTY","path":"Gem::MockGemUi::TTY#tty=","type":"module_function","visibility":"public","parameters":[["value",null,"the value to set the attribute tty to."]]},"Gem::MockGemUi::TTY#tty?":{"description":"","name":"tty?","namespace":"Gem::MockGemUi::TTY","path":"Gem::MockGemUi::TTY#tty?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Gem::MockGemUi::TermError":{"description":"","name":"TermError","namespace":"Gem::MockGemUi","path":"Gem::MockGemUi::TermError","type":"class","visibility":"public"},"Gem::MockGemUi::TermError#exit_code":{"description":"Returns the value of attribute exit_code","name":"exit_code","namespace":"Gem::MockGemUi::TermError","path":"Gem::MockGemUi::TermError#exit_code","type":"instance_method","visibility":"public"},"Gem::MockGemUi::TermError#initialize":{"description":"","name":"initialize","namespace":"Gem::MockGemUi::TermError","path":"Gem::MockGemUi::TermError#initialize","type":"instance_method","visibility":"public","return":[["TermError"],"a new instance of TermError"]},"Gem::NameTuple":{"description":"","name":"NameTuple","namespace":"Gem","path":"Gem::NameTuple","type":"class","visibility":"public"},"Gem::NameTuple#<=>":{"description":"","name":"<=>","namespace":"Gem::NameTuple","path":"Gem::NameTuple#<=>","type":"instance_method","visibility":"public"},"Gem::NameTuple#==":{"description":"Compare with +other+. Supports another NameTuple or an Array\nin the [name, version, platform] format.","name":"eql?","namespace":"Gem::NameTuple","path":"Gem::NameTuple#eql?","type":"instance_method","visibility":"public"},"Gem::NameTuple#eql?":{"description":"Compare with +other+. Supports another NameTuple or an Array\nin the [name, version, platform] format.","name":"eql?","namespace":"Gem::NameTuple","path":"Gem::NameTuple#eql?","type":"instance_method","visibility":"public"},"Gem::NameTuple#full_name":{"description":"Returns the full name (name-version) of this Gem.  Platform information is\nincluded if it is not the default Ruby platform.  This mimics the behavior\nof Gem::Specification#full_name.","name":"full_name","namespace":"Gem::NameTuple","path":"Gem::NameTuple#full_name","type":"instance_method","visibility":"public"},"Gem::NameTuple#hash":{"description":"","name":"hash","namespace":"Gem::NameTuple","path":"Gem::NameTuple#hash","type":"instance_method","visibility":"public"},"Gem::NameTuple#initialize":{"description":"","name":"initialize","namespace":"Gem::NameTuple","path":"Gem::NameTuple#initialize","type":"instance_method","visibility":"public","return":[["NameTuple"],"a new instance of NameTuple"]},"Gem::NameTuple#inspect":{"description":":nodoc:","name":"to_s","namespace":"Gem::NameTuple","path":"Gem::NameTuple#to_s","type":"instance_method","visibility":"public"},"Gem::NameTuple#to_s":{"description":":nodoc:\n:nodoc:","name":"to_s","namespace":"Gem::NameTuple","path":"Gem::NameTuple#to_s","type":"instance_method","visibility":"public"},"Gem::NameTuple#match_platform?":{"description":"Indicate if this NameTuple matches the current platform.","name":"match_platform?","namespace":"Gem::NameTuple","path":"Gem::NameTuple#match_platform?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::NameTuple#name":{"description":"Returns the value of attribute name","name":"name","namespace":"Gem::NameTuple","path":"Gem::NameTuple#name","type":"instance_method","visibility":"public"},"Gem::NameTuple#platform":{"description":"Returns the value of attribute platform","name":"platform","namespace":"Gem::NameTuple","path":"Gem::NameTuple#platform","type":"instance_method","visibility":"public"},"Gem::NameTuple#prerelease?":{"description":"Indicate if this NameTuple is for a prerelease version.","name":"prerelease?","namespace":"Gem::NameTuple","path":"Gem::NameTuple#prerelease?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::NameTuple#spec_name":{"description":"Return the name that the gemspec file would be","name":"spec_name","namespace":"Gem::NameTuple","path":"Gem::NameTuple#spec_name","type":"instance_method","visibility":"public"},"Gem::NameTuple#to_a":{"description":"Convert back to the [name, version, platform] tuple","name":"to_a","namespace":"Gem::NameTuple","path":"Gem::NameTuple#to_a","type":"instance_method","visibility":"public"},"Gem::NameTuple#version":{"description":"Returns the value of attribute version","name":"version","namespace":"Gem::NameTuple","path":"Gem::NameTuple#version","type":"instance_method","visibility":"public"},"Gem::NameTuple.from_list":{"description":"Turn an array of [name, version, platform] into an array of\nNameTuple objects.","name":"from_list","namespace":"Gem::NameTuple","path":"Gem::NameTuple.from_list","type":"class_method","visibility":"public"},"Gem::NameTuple.null":{"description":"A null NameTuple, ie name=nil, version=0","name":"null","namespace":"Gem::NameTuple","path":"Gem::NameTuple.null","type":"class_method","visibility":"public"},"Gem::NameTuple.to_basic":{"description":"Turn an array of NameTuple objects back into an array of\n[name, version, platform] tuples.","name":"to_basic","namespace":"Gem::NameTuple","path":"Gem::NameTuple.to_basic","type":"class_method","visibility":"public"},"Gem::NoAliasYAMLTree":{"description":"","name":"NoAliasYAMLTree","namespace":"Gem","path":"Gem::NoAliasYAMLTree","type":"class","visibility":"public"},"Gem::NoAliasYAMLTree#format_time":{"description":"This is ported over from the yaml_tree in 1.9.3","name":"format_time","namespace":"Gem::NoAliasYAMLTree","path":"Gem::NoAliasYAMLTree#format_time","type":"instance_method","visibility":"private"},"Gem::NoAliasYAMLTree#register":{"description":"Noop this out so there are no anchors","name":"register","namespace":"Gem::NoAliasYAMLTree","path":"Gem::NoAliasYAMLTree#register","type":"instance_method","visibility":"public"},"Gem::NoAliasYAMLTree#visit_String":{"description":"","name":"visit_String","namespace":"Gem::NoAliasYAMLTree","path":"Gem::NoAliasYAMLTree#visit_String","type":"instance_method","visibility":"public"},"Gem::NoAliasYAMLTree.create":{"description":"","name":"create","namespace":"Gem::NoAliasYAMLTree","path":"Gem::NoAliasYAMLTree.create","type":"class_method","visibility":"public"},"Gem::OperationNotSupportedError":{"description":"","name":"OperationNotSupportedError","namespace":"Gem","path":"Gem::OperationNotSupportedError","type":"class","visibility":"public"},"Gem::Package":{"description":"","name":"Package","namespace":"Gem","path":"Gem::Package","type":"class","visibility":"public"},"Gem::Package#add_checksums":{"description":"Adds a checksum for each entry in the gem to checksums.yaml.gz.","name":"add_checksums","namespace":"Gem::Package","path":"Gem::Package#add_checksums","type":"instance_method","visibility":"public"},"Gem::Package#add_contents":{"description":"Adds the files listed in the packages's Gem::Specification to data.tar.gz\nand adds this file to the +tar+.","name":"add_contents","namespace":"Gem::Package","path":"Gem::Package#add_contents","type":"instance_method","visibility":"public"},"Gem::Package#add_files":{"description":"Adds files included the package's Gem::Specification to the +tar+ file","name":"add_files","namespace":"Gem::Package","path":"Gem::Package#add_files","type":"instance_method","visibility":"public"},"Gem::Package#add_metadata":{"description":"Adds the package's Gem::Specification to the +tar+ file","name":"add_metadata","namespace":"Gem::Package","path":"Gem::Package#add_metadata","type":"instance_method","visibility":"public"},"Gem::Package#build":{"description":"Builds this package based on the specification set by #spec=","name":"build","namespace":"Gem::Package","path":"Gem::Package#build","type":"instance_method","visibility":"public"},"Gem::Package#build_time":{"description":":nodoc:","name":"build_time","namespace":"Gem::Package","path":"Gem::Package#build_time","type":"instance_method","visibility":"public"},"Gem::Package#build_time=":{"description":":nodoc:","name":"build_time=","namespace":"Gem::Package","path":"Gem::Package#build_time=","type":"instance_method","visibility":"public"},"Gem::Package#checksums":{"description":"Checksums for the contents of the package","name":"checksums","namespace":"Gem::Package","path":"Gem::Package#checksums","type":"instance_method","visibility":"public"},"Gem::Package#contents":{"description":"A list of file names contained in this gem","name":"contents","namespace":"Gem::Package","path":"Gem::Package#contents","type":"instance_method","visibility":"public"},"Gem::Package#digest":{"description":"Creates a digest of the TarEntry +entry+ from the digest algorithm set by\nthe security policy.","name":"digest","namespace":"Gem::Package","path":"Gem::Package#digest","type":"instance_method","visibility":"public"},"Gem::Package#extract_files":{"description":"Extracts the files in this package into +destination_dir+\n\nIf +pattern+ is specified, only entries matching that glob will be\nextracted.","name":"extract_files","namespace":"Gem::Package","path":"Gem::Package#extract_files","type":"instance_method","visibility":"public"},"Gem::Package#extract_tar_gz":{"description":"Extracts all the files in the gzipped tar archive +io+ into\n+destination_dir+.\n\nIf an entry in the archive contains a relative path above\n+destination_dir+ or an absolute path is encountered an exception is\nraised.\n\nIf +pattern+ is specified, only entries matching that glob will be\nextracted.","name":"extract_tar_gz","namespace":"Gem::Package","path":"Gem::Package#extract_tar_gz","type":"instance_method","visibility":"public"},"Gem::Package#files":{"description":"The files in this package.  This is not the contents of the gem, just the\nfiles in the top-level container.","name":"files","namespace":"Gem::Package","path":"Gem::Package#files","type":"instance_method","visibility":"public"},"Gem::Package#gzip_to":{"description":"Gzips content written to +gz_io+ to +io+.\n--\nAlso sets the gzip modification time to the package build time to ease\ntesting.","name":"gzip_to","namespace":"Gem::Package","path":"Gem::Package#gzip_to","type":"instance_method","visibility":"public"},"Gem::Package#initialize":{"description":"Creates a new package that will read or write to the file +gem+.","name":"initialize","namespace":"Gem::Package","path":"Gem::Package#initialize","type":"instance_method","visibility":"public","return":[["Package"],"a new instance of Package"]},"Gem::Package#install_location":{"description":"Returns the full path for installing +filename+.\n\nIf +filename+ is not inside +destination_dir+ an exception is raised.","name":"install_location","namespace":"Gem::Package","path":"Gem::Package#install_location","type":"instance_method","visibility":"public"},"Gem::Package#load_spec":{"description":"Loads a Gem::Specification from the TarEntry +entry+","name":"load_spec","namespace":"Gem::Package","path":"Gem::Package#load_spec","type":"instance_method","visibility":"public"},"Gem::Package#open_tar_gz":{"description":"Opens +io+ as a gzipped tar archive","name":"open_tar_gz","namespace":"Gem::Package","path":"Gem::Package#open_tar_gz","type":"instance_method","visibility":"public"},"Gem::Package#read_checksums":{"description":"Reads and loads checksums.yaml.gz from the tar file +gem+","name":"read_checksums","namespace":"Gem::Package","path":"Gem::Package#read_checksums","type":"instance_method","visibility":"public"},"Gem::Package#security_policy":{"description":"The security policy used for verifying the contents of this package.","name":"security_policy","namespace":"Gem::Package","path":"Gem::Package#security_policy","type":"instance_method","visibility":"public"},"Gem::Package#security_policy=":{"description":"The security policy used for verifying the contents of this package.","name":"security_policy=","namespace":"Gem::Package","path":"Gem::Package#security_policy=","type":"instance_method","visibility":"public"},"Gem::Package#setup_signer":{"description":"Prepares the gem for signing and checksum generation.  If a signing\ncertificate and key are not present only checksum generation is set up.","name":"setup_signer","namespace":"Gem::Package","path":"Gem::Package#setup_signer","type":"instance_method","visibility":"public"},"Gem::Package#spec":{"description":"The spec for this gem.\n\nIf this is a package for a built gem the spec is loaded from the\ngem and returned.  If this is a package for a gem being built the provided\nspec is returned.","name":"spec","namespace":"Gem::Package","path":"Gem::Package#spec","type":"instance_method","visibility":"public"},"Gem::Package#spec=":{"description":"Sets the Gem::Specification to use to build this package.","name":"spec=","namespace":"Gem::Package","path":"Gem::Package#spec=","type":"instance_method","visibility":"public"},"Gem::Package#verify":{"description":"Verifies that this gem:\n\n* Contains a valid gem specification\n* Contains a contents archive\n* The contents archive is not corrupt\n\nAfter verification the gem specification from the gem is available from\n#spec","name":"verify","namespace":"Gem::Package","path":"Gem::Package#verify","type":"instance_method","visibility":"public"},"Gem::Package#verify_checksums":{"description":"Verifies the +checksums+ against the +digests+.  This check is not\ncryptographically secure.  Missing checksums are ignored.","name":"verify_checksums","namespace":"Gem::Package","path":"Gem::Package#verify_checksums","type":"instance_method","visibility":"public"},"Gem::Package#verify_entry":{"description":"Verifies +entry+ in a .gem file.","name":"verify_entry","namespace":"Gem::Package","path":"Gem::Package#verify_entry","type":"instance_method","visibility":"public"},"Gem::Package#verify_files":{"description":"Verifies the files of the +gem+","name":"verify_files","namespace":"Gem::Package","path":"Gem::Package#verify_files","type":"instance_method","visibility":"public"},"Gem::Package#verify_gz":{"description":"Verifies that +entry+ is a valid gzipped file.","name":"verify_gz","namespace":"Gem::Package","path":"Gem::Package#verify_gz","type":"instance_method","visibility":"public"},"Gem::Package.build":{"description":"","name":"build","namespace":"Gem::Package","path":"Gem::Package.build","type":"class_method","visibility":"public"},"Gem::Package.new":{"description":"Creates a new Gem::Package for the file at +gem+. +gem+ can also be\nprovided as an IO object.\n\nIf +gem+ is an existing file in the old format a Gem::Package::Old will be\nreturned.","name":"new","namespace":"Gem::Package","path":"Gem::Package.new","type":"class_method","visibility":"public"},"Gem::Package::DigestIO":{"description":"IO wrapper that creates digests of contents written to the IO it wraps.","name":"DigestIO","namespace":"Gem::Package","path":"Gem::Package::DigestIO","type":"class","visibility":"public"},"Gem::Package::DigestIO#digests":{"description":"Collected digests for wrapped writes.\n\n  {\n    'SHA1'   => #<OpenSSL::Digest: [...]>,\n    'SHA512' => #<OpenSSL::Digest: [...]>,\n  }","name":"digests","namespace":"Gem::Package::DigestIO","path":"Gem::Package::DigestIO#digests","type":"instance_method","visibility":"public"},"Gem::Package::DigestIO#initialize":{"description":"Creates a new DigestIO instance.  Using ::wrap is recommended, see the\n::wrap documentation for documentation of +io+ and +digests+.","name":"initialize","namespace":"Gem::Package::DigestIO","path":"Gem::Package::DigestIO#initialize","type":"instance_method","visibility":"public","return":[["DigestIO"],"a new instance of DigestIO"]},"Gem::Package::DigestIO#write":{"description":"Writes +data+ to the underlying IO and updates the digests","name":"write","namespace":"Gem::Package::DigestIO","path":"Gem::Package::DigestIO#write","type":"instance_method","visibility":"public"},"Gem::Package::DigestIO.wrap":{"description":"Wraps +io+ and updates digest for each of the digest algorithms in\nthe +digests+ Hash.  Returns the digests hash.  Example:\n\n  io = StringIO.new\n  digests = {\n    'SHA1'   => OpenSSL::Digest.new('SHA1'),\n    'SHA512' => OpenSSL::Digest.new('SHA512'),\n  }\n\n  Gem::Package::DigestIO.wrap io, digests do |digest_io|\n    digest_io.write \"hello\"\n  end\n\n  digests['SHA1'].hexdigest   #=> \"aaf4c61d[...]\"\n  digests['SHA512'].hexdigest #=> \"9b71d224[...]\"","name":"wrap","namespace":"Gem::Package::DigestIO","path":"Gem::Package::DigestIO.wrap","type":"class_method","visibility":"public"},"Gem::Package::Error":{"description":"","name":"Error","namespace":"Gem::Package","path":"Gem::Package::Error","type":"class","visibility":"public"},"Gem::Package::FileSource":{"description":"The primary source of gems is a file on disk, including all usages\ninternal to rubygems.\n\nThis is a private class, do not depend on it directly. Instead, pass a path\nobject to `Gem::Package.new`.","name":"FileSource","namespace":"Gem::Package","path":"Gem::Package::FileSource","type":"class","visibility":"public"},"Gem::Package::FileSource#initialize":{"description":"","name":"initialize","namespace":"Gem::Package::FileSource","path":"Gem::Package::FileSource#initialize","type":"instance_method","visibility":"public","return":[["FileSource"],"a new instance of FileSource"]},"Gem::Package::FileSource#path":{"description":":nodoc: all","name":"path","namespace":"Gem::Package::FileSource","path":"Gem::Package::FileSource#path","type":"instance_method","visibility":"public"},"Gem::Package::FileSource#present?":{"description":"","name":"present?","namespace":"Gem::Package::FileSource","path":"Gem::Package::FileSource#present?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::FileSource#start":{"description":"","name":"start","namespace":"Gem::Package::FileSource","path":"Gem::Package::FileSource#start","type":"instance_method","visibility":"public"},"Gem::Package::FileSource#with_read_io":{"description":"","name":"with_read_io","namespace":"Gem::Package::FileSource","path":"Gem::Package::FileSource#with_read_io","type":"instance_method","visibility":"public"},"Gem::Package::FileSource#with_write_io":{"description":"","name":"with_write_io","namespace":"Gem::Package::FileSource","path":"Gem::Package::FileSource#with_write_io","type":"instance_method","visibility":"public"},"Gem::Package::FormatError":{"description":"","name":"FormatError","namespace":"Gem::Package","path":"Gem::Package::FormatError","type":"class","visibility":"public"},"Gem::Package::FormatError#initialize":{"description":"","name":"initialize","namespace":"Gem::Package::FormatError","path":"Gem::Package::FormatError#initialize","type":"instance_method","visibility":"public","return":[["FormatError"],"a new instance of FormatError"]},"Gem::Package::FormatError#path":{"description":"Returns the value of attribute path","name":"path","namespace":"Gem::Package::FormatError","path":"Gem::Package::FormatError#path","type":"instance_method","visibility":"public"},"Gem::Package::IOSource":{"description":"Supports reading and writing gems from/to a generic IO object.  This is\nuseful for other applications built on top of rubygems, such as\nrubygems.org.\n\nThis is a private class, do not depend on it directly. Instead, pass an IO\nobject to `Gem::Package.new`.","name":"IOSource","namespace":"Gem::Package","path":"Gem::Package::IOSource","type":"class","visibility":"public"},"Gem::Package::IOSource#initialize":{"description":"","name":"initialize","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#initialize","type":"instance_method","visibility":"public","return":[["IOSource"],"a new instance of IOSource"]},"Gem::Package::IOSource#io":{"description":":nodoc: all","name":"io","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#io","type":"instance_method","visibility":"public"},"Gem::Package::IOSource#path":{"description":"","name":"path","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#path","type":"instance_method","visibility":"public"},"Gem::Package::IOSource#present?":{"description":"","name":"present?","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#present?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::IOSource#start":{"description":"","name":"start","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#start","type":"instance_method","visibility":"public"},"Gem::Package::IOSource#with_read_io":{"description":"","name":"with_read_io","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#with_read_io","type":"instance_method","visibility":"public"},"Gem::Package::IOSource#with_write_io":{"description":"","name":"with_write_io","namespace":"Gem::Package::IOSource","path":"Gem::Package::IOSource#with_write_io","type":"instance_method","visibility":"public"},"Gem::Package::NonSeekableIO":{"description":"","name":"NonSeekableIO","namespace":"Gem::Package","path":"Gem::Package::NonSeekableIO","type":"class","visibility":"public"},"Gem::Package::Old":{"description":"The format class knows the guts of the ancient .gem file format and provides\nthe capability to read such ancient gems.\n\nPlease pretend this doesn't exist.","name":"Old","namespace":"Gem::Package","path":"Gem::Package::Old","type":"class","visibility":"public"},"Gem::Package::Old#contents":{"description":"A list of file names contained in this gem","name":"contents","namespace":"Gem::Package::Old","path":"Gem::Package::Old#contents","type":"instance_method","visibility":"public"},"Gem::Package::Old#extract_files":{"description":"Extracts the files in this package into +destination_dir+","name":"extract_files","namespace":"Gem::Package::Old","path":"Gem::Package::Old#extract_files","type":"instance_method","visibility":"public"},"Gem::Package::Old#file_list":{"description":"Reads the file list section from the old-format gem +io+","name":"file_list","namespace":"Gem::Package::Old","path":"Gem::Package::Old#file_list","type":"instance_method","visibility":"public"},"Gem::Package::Old#initialize":{"description":"Creates a new old-format package reader for +gem+.  Old-format packages\ncannot be written.","name":"initialize","namespace":"Gem::Package::Old","path":"Gem::Package::Old#initialize","type":"instance_method","visibility":"public","return":[["Old"],"a new instance of Old"]},"Gem::Package::Old#read_until_dashes":{"description":"Reads lines until a \"---\" separator is found","name":"read_until_dashes","namespace":"Gem::Package::Old","path":"Gem::Package::Old#read_until_dashes","type":"instance_method","visibility":"public"},"Gem::Package::Old#skip_ruby":{"description":"Skips the Ruby self-install header in +io+.","name":"skip_ruby","namespace":"Gem::Package::Old","path":"Gem::Package::Old#skip_ruby","type":"instance_method","visibility":"public"},"Gem::Package::Old#spec":{"description":"The specification for this gem","name":"spec","namespace":"Gem::Package::Old","path":"Gem::Package::Old#spec","type":"instance_method","visibility":"public"},"Gem::Package::Old#verify":{"description":"Raises an exception if a security policy that verifies data is active.\nOld format gems cannot be verified as signed.","name":"verify","namespace":"Gem::Package::Old","path":"Gem::Package::Old#verify","type":"instance_method","visibility":"public"},"Gem::Package::PathError":{"description":"","name":"PathError","namespace":"Gem::Package","path":"Gem::Package::PathError","type":"class","visibility":"public"},"Gem::Package::PathError#initialize":{"description":"","name":"initialize","namespace":"Gem::Package::PathError","path":"Gem::Package::PathError#initialize","type":"instance_method","visibility":"public","return":[["PathError"],"a new instance of PathError"]},"Gem::Package::Source":{"description":":nodoc:","name":"Source","namespace":"Gem::Package","path":"Gem::Package::Source","type":"class","visibility":"public"},"Gem::Package::TarHeader":{"description":"--\nstruct tarfile_entry_posix {\n  char name[100];     # ASCII + (Z unless filled)\n  char mode[8];       # 0 padded, octal, null\n  char uid[8];        # ditto\n  char gid[8];        # ditto\n  char size[12];      # 0 padded, octal, null\n  char mtime[12];     # 0 padded, octal, null\n  char checksum[8];   # 0 padded, octal, null, space\n  char typeflag[1];   # file: \"0\"  dir: \"5\"\n  char linkname[100]; # ASCII + (Z unless filled)\n  char magic[6];      # \"ustar\\0\"\n  char version[2];    # \"00\"\n  char uname[32];     # ASCIIZ\n  char gname[32];     # ASCIIZ\n  char devmajor[8];   # 0 padded, octal, null\n  char devminor[8];   # o padded, octal, null\n  char prefix[155];   # ASCII + (Z unless filled)\n};\n++\nA header for a tar file","name":"TarHeader","namespace":"Gem::Package","path":"Gem::Package::TarHeader","type":"class","visibility":"public"},"Gem::Package::TarHeader#==":{"description":":nodoc:","name":"==","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#==","type":"instance_method","visibility":"public"},"Gem::Package::TarHeader#calculate_checksum":{"description":"","name":"calculate_checksum","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#calculate_checksum","type":"instance_method","visibility":"private"},"Gem::Package::TarHeader#empty?":{"description":"Is the tar entry empty?","name":"empty?","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::TarHeader#header":{"description":"","name":"header","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#header","type":"instance_method","visibility":"private"},"Gem::Package::TarHeader#initialize":{"description":"Creates a new TarHeader using +vals+","name":"initialize","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#initialize","type":"instance_method","visibility":"public","return":[["TarHeader"],"a new instance of TarHeader"]},"Gem::Package::TarHeader#oct":{"description":"","name":"oct","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#oct","type":"instance_method","visibility":"private"},"Gem::Package::TarHeader#to_s":{"description":":nodoc:","name":"to_s","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#to_s","type":"instance_method","visibility":"public"},"Gem::Package::TarHeader#update_checksum":{"description":"Updates the TarHeader's checksum","name":"update_checksum","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader#update_checksum","type":"instance_method","visibility":"public"},"Gem::Package::TarHeader.from":{"description":"Creates a tar header from IO +stream+","name":"from","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader.from","type":"class_method","visibility":"public"},"Gem::Package::TarHeader::FIELDS":{"description":"Fields in the tar header","name":"FIELDS","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader::FIELDS","type":"constant","return":["Array",""],"visibility":"public"},"Gem::Package::TarHeader::PACK_FORMAT":{"description":"Pack format for a tar header","name":"PACK_FORMAT","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader::PACK_FORMAT","type":"constant","return":["String",""],"visibility":"public"},"Gem::Package::TarHeader::UNPACK_FORMAT":{"description":"Unpack format for a tar header","name":"UNPACK_FORMAT","namespace":"Gem::Package::TarHeader","path":"Gem::Package::TarHeader::UNPACK_FORMAT","type":"constant","return":["String",""],"visibility":"public"},"Gem::Package::TarInvalidError":{"description":"Raised when a tar file is corrupt","name":"TarInvalidError","namespace":"Gem::Package","path":"Gem::Package::TarInvalidError","type":"class","visibility":"public"},"Gem::Package::TarReader":{"description":"TarReader reads tar files and allows iteration over their items","name":"TarReader","namespace":"Gem::Package","path":"Gem::Package::TarReader","type":"class","visibility":"public"},"Gem::Package::TarReader#close":{"description":"Close the tar file","name":"close","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader#close","type":"instance_method","visibility":"public"},"Gem::Package::TarReader#each":{"description":"Iterates over files in the tarball yielding each entry","name":"each_entry","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader#each_entry","type":"instance_method","visibility":"public"},"Gem::Package::TarReader#each_entry":{"description":"Iterates over files in the tarball yielding each entry","name":"each_entry","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader#each_entry","type":"instance_method","visibility":"public"},"Gem::Package::TarReader#initialize":{"description":"Creates a new tar file reader on +io+ which needs to respond to #pos,\n#eof?, #read, #getc and #pos=","name":"initialize","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader#initialize","type":"instance_method","visibility":"public","return":[["TarReader"],"a new instance of TarReader"]},"Gem::Package::TarReader#rewind":{"description":"NOTE: Do not call #rewind during #each","name":"rewind","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader#rewind","type":"instance_method","visibility":"public"},"Gem::Package::TarReader#seek":{"description":"Seeks through the tar file until it finds the +entry+ with +name+ and\nyields it.  Rewinds the tar file to the beginning when the block\nterminates.","name":"seek","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader#seek","type":"instance_method","visibility":"public"},"Gem::Package::TarReader.new":{"description":"Creates a new TarReader on +io+ and yields it to the block, if given.","name":"new","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader.new","type":"class_method","visibility":"public"},"Gem::Package::TarReader::Entry":{"description":"Class for reading entries out of a tar file","name":"Entry","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader::Entry","type":"class","visibility":"public"},"Gem::Package::TarReader::Entry#bytes_read":{"description":"Number of bytes read out of the tar entry","name":"bytes_read","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#bytes_read","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#check_closed":{"description":":nodoc:","name":"check_closed","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#check_closed","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#close":{"description":"Closes the tar entry","name":"close","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#close","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#closed?":{"description":"Is the tar entry closed?","name":"closed?","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#closed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::TarReader::Entry#directory?":{"description":"Is this tar entry a directory?","name":"directory?","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#directory?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::TarReader::Entry#eof?":{"description":"Are we at the end of the tar entry?","name":"eof?","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#eof?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::TarReader::Entry#file?":{"description":"Is this tar entry a file?","name":"file?","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#file?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::TarReader::Entry#full_name":{"description":"Full name of the tar entry","name":"full_name","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#full_name","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#getc":{"description":"Read one byte from the tar entry","name":"getc","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#getc","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#header":{"description":"Header for this tar entry","name":"header","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#header","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#initialize":{"description":"Creates a new tar entry for +header+ that will be read from +io+","name":"initialize","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#initialize","type":"instance_method","visibility":"public","return":[["Entry"],"a new instance of Entry"]},"Gem::Package::TarReader::Entry#pos":{"description":"The position in the tar entry","name":"pos","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#pos","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#read":{"description":"Reads +len+ bytes from the tar file entry, or the rest of the entry if\nnil","name":"readpartial","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#readpartial","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#readpartial":{"description":"Reads +len+ bytes from the tar file entry, or the rest of the entry if\nnil\n:nodoc:","name":"readpartial","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#readpartial","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::Entry#rewind":{"description":"Rewinds to the beginning of the tar file entry","name":"rewind","namespace":"Gem::Package::TarReader::Entry","path":"Gem::Package::TarReader::Entry#rewind","type":"instance_method","visibility":"public"},"Gem::Package::TarReader::UnexpectedEOF":{"description":"Raised if the tar IO is not seekable","name":"UnexpectedEOF","namespace":"Gem::Package::TarReader","path":"Gem::Package::TarReader::UnexpectedEOF","type":"class","visibility":"public"},"Gem::Package::TarTestCase":{"description":"A test case for Gem::Package::Tar* classes","name":"TarTestCase","namespace":"Gem::Package","path":"Gem::Package::TarTestCase","type":"class","visibility":"public"},"Gem::Package::TarTestCase#ASCIIZ":{"description":"","name":"ASCIIZ","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#ASCIIZ","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#SP":{"description":"","name":"SP","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#SP","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#SP_Z":{"description":"","name":"SP_Z","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#SP_Z","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#Z":{"description":"","name":"Z","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#Z","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#assert_headers_equal":{"description":"","name":"assert_headers_equal","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#assert_headers_equal","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#calc_checksum":{"description":"","name":"calc_checksum","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#calc_checksum","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#header":{"description":"","name":"header","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#header","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#tar_dir_header":{"description":"","name":"tar_dir_header","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#tar_dir_header","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#tar_file_header":{"description":"","name":"tar_file_header","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#tar_file_header","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#to_oct":{"description":"","name":"to_oct","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#to_oct","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#util_dir_entry":{"description":"","name":"util_dir_entry","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#util_dir_entry","type":"instance_method","visibility":"public"},"Gem::Package::TarTestCase#util_entry":{"description":"","name":"util_entry","namespace":"Gem::Package::TarTestCase","path":"Gem::Package::TarTestCase#util_entry","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter":{"description":"Allows writing of tar files","name":"TarWriter","namespace":"Gem::Package","path":"Gem::Package::TarWriter","type":"class","visibility":"public"},"Gem::Package::TarWriter#add_file":{"description":"Adds file +name+ with permissions +mode+, and yields an IO for writing the\nfile to","name":"add_file","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#add_file","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#add_file_digest":{"description":"Adds +name+ with permissions +mode+ to the tar, yielding +io+ for writing\nthe file.  The +digest_algorithm+ is written to a read-only +name+.sum\nfile following the given file contents containing the digest name and\nhexdigest separated by a tab.\n\nThe created digest object is returned.","name":"add_file_digest","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#add_file_digest","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#add_file_signed":{"description":"Adds +name+ with permissions +mode+ to the tar, yielding +io+ for writing\nthe file.  The +signer+ is used to add a digest file using its\ndigest_algorithm per add_file_digest and a cryptographic signature in\n+name+.sig.  If the signer has no key only the checksum file is added.\n\nReturns the digest.","name":"add_file_signed","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#add_file_signed","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#add_file_simple":{"description":"Add file +name+ with permissions +mode+ +size+ bytes long.  Yields an IO\nto write the file to.","name":"add_file_simple","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#add_file_simple","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#check_closed":{"description":"Raises IOError if the TarWriter is closed","name":"check_closed","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#check_closed","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#close":{"description":"Closes the TarWriter","name":"close","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#close","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#closed?":{"description":"Is the TarWriter closed?","name":"closed?","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#closed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Package::TarWriter#flush":{"description":"Flushes the TarWriter's IO","name":"flush","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#flush","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#initialize":{"description":"Creates a new TarWriter that will write to +io+","name":"initialize","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#initialize","type":"instance_method","visibility":"public","return":[["TarWriter"],"a new instance of TarWriter"]},"Gem::Package::TarWriter#mkdir":{"description":"Creates a new directory in the tar file +name+ with +mode+","name":"mkdir","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#mkdir","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter#split_name":{"description":"Splits +name+ into a name and prefix that can fit in the TarHeader","name":"split_name","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter#split_name","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter.new":{"description":"Creates a new TarWriter, yielding it if a block is given","name":"new","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter.new","type":"class_method","visibility":"public"},"Gem::Package::TarWriter::BoundedStream":{"description":"IO wrapper that allows writing a limited amount of data","name":"BoundedStream","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter::BoundedStream","type":"class","visibility":"public"},"Gem::Package::TarWriter::BoundedStream#initialize":{"description":"Wraps +io+ and allows up to +limit+ bytes to be written","name":"initialize","namespace":"Gem::Package::TarWriter::BoundedStream","path":"Gem::Package::TarWriter::BoundedStream#initialize","type":"instance_method","visibility":"public","return":[["BoundedStream"],"a new instance of BoundedStream"]},"Gem::Package::TarWriter::BoundedStream#limit":{"description":"Maximum number of bytes that can be written","name":"limit","namespace":"Gem::Package::TarWriter::BoundedStream","path":"Gem::Package::TarWriter::BoundedStream#limit","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter::BoundedStream#write":{"description":"Writes +data+ onto the IO, raising a FileOverflow exception if the\nnumber of bytes will be more than #limit","name":"write","namespace":"Gem::Package::TarWriter::BoundedStream","path":"Gem::Package::TarWriter::BoundedStream#write","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter::BoundedStream#written":{"description":"Number of bytes written","name":"written","namespace":"Gem::Package::TarWriter::BoundedStream","path":"Gem::Package::TarWriter::BoundedStream#written","type":"instance_method","visibility":"public"},"Gem::Package::TarWriter::FileOverflow":{"description":"","name":"FileOverflow","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter::FileOverflow","type":"class","visibility":"public"},"Gem::Package::TarWriter::RestrictedStream":{"description":"IO wrapper that provides only #write","name":"RestrictedStream","namespace":"Gem::Package::TarWriter","path":"Gem::Package::TarWriter::RestrictedStream","type":"class","visibility":"public"},"Gem::Package::TarWriter::RestrictedStream#initialize":{"description":"Creates a new RestrictedStream wrapping +io+","name":"initialize","namespace":"Gem::Package::TarWriter::RestrictedStream","path":"Gem::Package::TarWriter::RestrictedStream#initialize","type":"instance_method","visibility":"public","return":[["RestrictedStream"],"a new instance of RestrictedStream"]},"Gem::Package::TarWriter::RestrictedStream#write":{"description":"Writes +data+ onto the IO","name":"write","namespace":"Gem::Package::TarWriter::RestrictedStream","path":"Gem::Package::TarWriter::RestrictedStream#write","type":"instance_method","visibility":"public"},"Gem::Package::TooLongFileName":{"description":"","name":"TooLongFileName","namespace":"Gem::Package","path":"Gem::Package::TooLongFileName","type":"class","visibility":"public"},"Gem::PackageTask":{"description":"Create a package based upon a Gem::Specification.  Gem packages, as well as\nzip files and tar/gzipped packages can be produced by this task.\n\nIn addition to the Rake targets generated by Rake::PackageTask, a\nGem::PackageTask will also generate the following tasks:\n\n[<b>\"<em>package_dir</em>/<em>name</em>-<em>version</em>.gem\"</b>]\n  Create a RubyGems package with the given name and version.\n\nExample using a Gem::Specification:\n\n  require 'rubygems'\n  require 'rubygems/package_task'\n\n  spec = Gem::Specification.new do |s|\n    s.summary = \"Ruby based make-like utility.\"\n    s.name = 'rake'\n    s.version = PKG_VERSION\n    s.requirements << 'none'\n    s.files = PKG_FILES\n    s.description = <<-EOF\n  Rake is a Make-like program implemented in Ruby. Tasks\n  and dependencies are specified in standard Ruby syntax.\n    EOF\n  end\n\n  Gem::PackageTask.new(spec) do |pkg|\n    pkg.need_zip = true\n    pkg.need_tar = true\n  end","name":"PackageTask","namespace":"Gem","path":"Gem::PackageTask","type":"class","visibility":"public"},"Gem::PackageTask#define":{"description":"Create the Rake tasks and actions specified by this Gem::PackageTask.\n(+define+ is automatically called if a block is given to +new+).","name":"define","namespace":"Gem::PackageTask","path":"Gem::PackageTask#define","type":"instance_method","visibility":"public"},"Gem::PackageTask#gem_spec":{"description":"Ruby Gem::Specification containing the metadata for this package.  The\nname, version and package_files are automatically determined from the\ngemspec and don't need to be explicitly provided.","name":"gem_spec","namespace":"Gem::PackageTask","path":"Gem::PackageTask#gem_spec","type":"instance_method","visibility":"public"},"Gem::PackageTask#gem_spec=":{"description":"Ruby Gem::Specification containing the metadata for this package.  The\nname, version and package_files are automatically determined from the\ngemspec and don't need to be explicitly provided.","name":"gem_spec=","namespace":"Gem::PackageTask","path":"Gem::PackageTask#gem_spec=","type":"instance_method","visibility":"public"},"Gem::PackageTask#init":{"description":"Initialization tasks without the \"yield self\" or define operations.","name":"init","namespace":"Gem::PackageTask","path":"Gem::PackageTask#init","type":"instance_method","visibility":"public"},"Gem::PackageTask#initialize":{"description":"Create a Gem Package task library.  Automatically define the gem if a\nblock is given.  If no block is supplied, then #define needs to be called\nto define the task.","name":"initialize","namespace":"Gem::PackageTask","path":"Gem::PackageTask#initialize","type":"instance_method","visibility":"public","return":[["PackageTask"],"a new instance of PackageTask"]},"Gem::PathSupport":{"description":"Gem::PathSupport facilitates the GEM_HOME and GEM_PATH environment settings\nto the rest of RubyGems.","name":"PathSupport","namespace":"Gem","path":"Gem::PathSupport","type":"class","visibility":"public"},"Gem::PathSupport#home":{"description":"The default system path for managing Gems.","name":"home","namespace":"Gem::PathSupport","path":"Gem::PathSupport#home","type":"instance_method","visibility":"public"},"Gem::PathSupport#home=":{"description":"Set the Gem home directory (as reported by Gem.dir).","name":"home=","namespace":"Gem::PathSupport","path":"Gem::PathSupport#home=","type":"instance_method","visibility":"private"},"Gem::PathSupport#initialize":{"description":"Constructor. Takes a single argument which is to be treated like a\nhashtable, or defaults to ENV, the system environment.","name":"initialize","namespace":"Gem::PathSupport","path":"Gem::PathSupport#initialize","type":"instance_method","visibility":"public","return":[["PathSupport"],"a new instance of PathSupport"]},"Gem::PathSupport#path":{"description":"Array of paths to search for Gems.","name":"path","namespace":"Gem::PathSupport","path":"Gem::PathSupport#path","type":"instance_method","visibility":"public"},"Gem::PathSupport#path=":{"description":"Set the Gem search path (as reported by Gem.path).","name":"path=","namespace":"Gem::PathSupport","path":"Gem::PathSupport#path=","type":"instance_method","visibility":"private"},"Gem::PathSupport#spec_cache_dir":{"description":"Directory with spec cache","name":"spec_cache_dir","namespace":"Gem::PathSupport","path":"Gem::PathSupport#spec_cache_dir","type":"instance_method","visibility":"public"},"Gem::Platform":{"description":"Available list of platforms for targeting Gem installations.\n\nSee `gem help platform` for information on platform matching.","name":"Platform","namespace":"Gem","path":"Gem::Platform","type":"class","visibility":"public"},"Gem::Platform#==":{"description":"Is +other+ equal to this platform?  Two platforms are equal if they have\nthe same CPU, OS and version.","name":"eql?","namespace":"Gem::Platform","path":"Gem::Platform#eql?","type":"instance_method","visibility":"public"},"Gem::Platform#eql?":{"description":"Is +other+ equal to this platform?  Two platforms are equal if they have\nthe same CPU, OS and version.","name":"eql?","namespace":"Gem::Platform","path":"Gem::Platform#eql?","type":"instance_method","visibility":"public"},"Gem::Platform#===":{"description":"Does +other+ match this platform?  Two platforms match if they have the\nsame CPU, or either has a CPU of 'universal', they have the same OS, and\nthey have the same version, or either has no version.\n\nAdditionally, the platform will match if the local CPU is 'arm' and the\nother CPU starts with \"arm\" (for generic ARM family support).","name":"===","namespace":"Gem::Platform","path":"Gem::Platform#===","type":"instance_method","visibility":"public"},"Gem::Platform#=~":{"description":"Does +other+ match this platform?  If +other+ is a String it will be\nconverted to a Gem::Platform first.  See #=== for matching rules.","name":"=~","namespace":"Gem::Platform","path":"Gem::Platform#=~","type":"instance_method","visibility":"public"},"Gem::Platform#cpu":{"description":"Returns the value of attribute cpu","name":"cpu","namespace":"Gem::Platform","path":"Gem::Platform#cpu","type":"instance_method","visibility":"public"},"Gem::Platform#cpu=":{"description":"Sets the attribute cpu","name":"cpu=","namespace":"Gem::Platform","path":"Gem::Platform#cpu=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute cpu to."]]},"Gem::Platform#hash":{"description":":nodoc:","name":"hash","namespace":"Gem::Platform","path":"Gem::Platform#hash","type":"instance_method","visibility":"public"},"Gem::Platform#initialize":{"description":"","name":"initialize","namespace":"Gem::Platform","path":"Gem::Platform#initialize","type":"instance_method","visibility":"public","return":[["Platform"],"a new instance of Platform"]},"Gem::Platform#inspect":{"description":"","name":"inspect","namespace":"Gem::Platform","path":"Gem::Platform#inspect","type":"instance_method","visibility":"public"},"Gem::Platform#os":{"description":"Returns the value of attribute os","name":"os","namespace":"Gem::Platform","path":"Gem::Platform#os","type":"instance_method","visibility":"public"},"Gem::Platform#os=":{"description":"Sets the attribute os","name":"os=","namespace":"Gem::Platform","path":"Gem::Platform#os=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute os to."]]},"Gem::Platform#to_a":{"description":"","name":"to_a","namespace":"Gem::Platform","path":"Gem::Platform#to_a","type":"instance_method","visibility":"public"},"Gem::Platform#to_s":{"description":"","name":"to_s","namespace":"Gem::Platform","path":"Gem::Platform#to_s","type":"instance_method","visibility":"public"},"Gem::Platform#version":{"description":"Returns the value of attribute version","name":"version","namespace":"Gem::Platform","path":"Gem::Platform#version","type":"instance_method","visibility":"public"},"Gem::Platform#version=":{"description":"Sets the attribute version","name":"version=","namespace":"Gem::Platform","path":"Gem::Platform#version=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute version to."]]},"Gem::Platform.installable?":{"description":"","name":"installable?","namespace":"Gem::Platform","path":"Gem::Platform.installable?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Gem::Platform.local":{"description":"","name":"local","namespace":"Gem::Platform","path":"Gem::Platform.local","type":"class_method","visibility":"public"},"Gem::Platform.match":{"description":"","name":"match","namespace":"Gem::Platform","path":"Gem::Platform.match","type":"class_method","visibility":"public"},"Gem::Platform.new":{"description":":nodoc:","name":"new","namespace":"Gem::Platform","path":"Gem::Platform.new","type":"class_method","visibility":"public"},"Gem::Platform::CURRENT":{"description":"A platform-specific gem that is built for the packaging Ruby's platform.\nThis will be replaced with Gem::Platform::local.","name":"CURRENT","namespace":"Gem::Platform","path":"Gem::Platform::CURRENT","type":"constant","return":["String",""],"visibility":"public"},"Gem::Platform::RUBY":{"description":"A pure-Ruby gem that may use Gem::Specification#extensions to build\nbinary files.","name":"RUBY","namespace":"Gem::Platform","path":"Gem::Platform::RUBY","type":"constant","return":["String",""],"visibility":"public"},"Gem::PlatformMismatch":{"description":"Generated when trying to lookup a gem to indicate that the gem\nwas found, but that it isn't usable on the current platform.\n\nfetch and install read these and report them to the user to aid\nin figuring out why a gem couldn't be installed.","name":"PlatformMismatch","namespace":"Gem","path":"Gem::PlatformMismatch","type":"class","visibility":"public"},"Gem::PlatformMismatch#add_platform":{"description":"append a platform to the list of mismatched platforms.\n\nPlatforms are added via this instead of injected via the constructor\nso that we can loop over a list of mismatches and just add them rather\nthan perform some kind of calculation mismatch summary before creation.","name":"add_platform","namespace":"Gem::PlatformMismatch","path":"Gem::PlatformMismatch#add_platform","type":"instance_method","visibility":"public"},"Gem::PlatformMismatch#initialize":{"description":"","name":"initialize","namespace":"Gem::PlatformMismatch","path":"Gem::PlatformMismatch#initialize","type":"instance_method","visibility":"public","return":[["PlatformMismatch"],"a new instance of PlatformMismatch"]},"Gem::PlatformMismatch#name":{"description":"the name of the gem","name":"name","namespace":"Gem::PlatformMismatch","path":"Gem::PlatformMismatch#name","type":"instance_method","visibility":"public"},"Gem::PlatformMismatch#platforms":{"description":"The platforms that are mismatched","name":"platforms","namespace":"Gem::PlatformMismatch","path":"Gem::PlatformMismatch#platforms","type":"instance_method","visibility":"public"},"Gem::PlatformMismatch#version":{"description":"the version","name":"version","namespace":"Gem::PlatformMismatch","path":"Gem::PlatformMismatch#version","type":"instance_method","visibility":"public"},"Gem::PlatformMismatch#wordy":{"description":"A wordy description of the error.","name":"wordy","namespace":"Gem::PlatformMismatch","path":"Gem::PlatformMismatch#wordy","type":"instance_method","visibility":"public"},"Gem::RDoc":{"description":"Gem::RDoc provides methods to generate RDoc and ri data for installed gems.\nIt works for RDoc 1.0.1 (in Ruby 1.8) up to RDoc 3.6.\n\nThis implementation is considered obsolete.  The RDoc project is the\nappropriate location to find this functionality.  This file provides the\nhooks to load RDoc generation code from the \"rdoc\" gem and a fallback in\ncase the installed version of RDoc does not have them.","name":"RDoc","namespace":"Gem","path":"Gem::RDoc","type":"class","visibility":"public"},"Gem::RDoc#delete_legacy_args":{"description":"Removes legacy rdoc arguments from +args+\n--\nTODO move to RDoc::Options","name":"delete_legacy_args","namespace":"Gem::RDoc","path":"Gem::RDoc#delete_legacy_args","type":"instance_method","visibility":"public"},"Gem::RDoc#document":{"description":"Generates documentation using the named +generator+ (\"darkfish\" or \"ri\")\nand following the given +options+.\n\nDocumentation will be generated into +destination+","name":"document","namespace":"Gem::RDoc","path":"Gem::RDoc#document","type":"instance_method","visibility":"public"},"Gem::RDoc#force":{"description":"Force installation of documentation?","name":"force","namespace":"Gem::RDoc","path":"Gem::RDoc#force","type":"instance_method","visibility":"public"},"Gem::RDoc#force=":{"description":"Force installation of documentation?","name":"force=","namespace":"Gem::RDoc","path":"Gem::RDoc#force=","type":"instance_method","visibility":"public"},"Gem::RDoc#generate":{"description":"Generates RDoc and ri data","name":"generate","namespace":"Gem::RDoc","path":"Gem::RDoc#generate","type":"instance_method","visibility":"public"},"Gem::RDoc#generate_legacy":{"description":"Generates RDoc and ri data for legacy RDoc versions.  This method will not\nexist in future versions.","name":"generate_legacy","namespace":"Gem::RDoc","path":"Gem::RDoc#generate_legacy","type":"instance_method","visibility":"public"},"Gem::RDoc#generate_rdoc":{"description":"Generate rdoc?","name":"generate_rdoc","namespace":"Gem::RDoc","path":"Gem::RDoc#generate_rdoc","type":"instance_method","visibility":"public"},"Gem::RDoc#generate_rdoc=":{"description":"Generate rdoc?","name":"generate_rdoc=","namespace":"Gem::RDoc","path":"Gem::RDoc#generate_rdoc=","type":"instance_method","visibility":"public"},"Gem::RDoc#generate_ri":{"description":"Generate ri data?","name":"generate_ri","namespace":"Gem::RDoc","path":"Gem::RDoc#generate_ri","type":"instance_method","visibility":"public"},"Gem::RDoc#generate_ri=":{"description":"Generate ri data?","name":"generate_ri=","namespace":"Gem::RDoc","path":"Gem::RDoc#generate_ri=","type":"instance_method","visibility":"public"},"Gem::RDoc#initialize":{"description":"Creates a new documentation generator for +spec+.  RDoc and ri data\ngeneration can be enabled or disabled through +generate_rdoc+ and\n+generate_ri+ respectively.\n\nOnly +generate_ri+ is enabled by default.","name":"initialize","namespace":"Gem::RDoc","path":"Gem::RDoc#initialize","type":"instance_method","visibility":"public","return":[["RDoc"],"a new instance of RDoc"]},"Gem::RDoc#legacy_rdoc":{"description":"Generates RDoc using a legacy version of RDoc from the ARGV-like +args+.\nThis method will not exist in future versions.","name":"legacy_rdoc","namespace":"Gem::RDoc","path":"Gem::RDoc#legacy_rdoc","type":"instance_method","visibility":"public"},"Gem::RDoc#new_rdoc":{"description":"#new_rdoc creates a new RDoc instance.  This method is provided only to\nmake testing easier.","name":"new_rdoc","namespace":"Gem::RDoc","path":"Gem::RDoc#new_rdoc","type":"instance_method","visibility":"public"},"Gem::RDoc#rdoc_installed?":{"description":"Is rdoc documentation installed?","name":"rdoc_installed?","namespace":"Gem::RDoc","path":"Gem::RDoc#rdoc_installed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::RDoc#remove":{"description":"Removes generated RDoc and ri data","name":"remove","namespace":"Gem::RDoc","path":"Gem::RDoc#remove","type":"instance_method","visibility":"public"},"Gem::RDoc#ri_installed?":{"description":"Is ri data installed?","name":"ri_installed?","namespace":"Gem::RDoc","path":"Gem::RDoc#ri_installed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::RDoc#setup":{"description":"Prepares the spec for documentation generation","name":"setup","namespace":"Gem::RDoc","path":"Gem::RDoc#setup","type":"instance_method","visibility":"public"},"Gem::RDoc.generation_hook":{"description":"Post installs hook that generates documentation for each specification in\n+specs+","name":"generation_hook","namespace":"Gem::RDoc","path":"Gem::RDoc.generation_hook","type":"class_method","visibility":"public"},"Gem::RDoc.load_rdoc":{"description":"Loads the RDoc generator","name":"load_rdoc","namespace":"Gem::RDoc","path":"Gem::RDoc.load_rdoc","type":"class_method","visibility":"public"},"Gem::RDoc.rdoc_version":{"description":"Loaded version of RDoc.  Set by ::load_rdoc","name":"rdoc_version","namespace":"Gem::RDoc","path":"Gem::RDoc.rdoc_version","type":"class_method","visibility":"public"},"Gem::REPOSITORY_DEFAULT_GEM_SUBDIRECTORIES":{"description":"Subdirectories in a gem repository for default gems","name":"REPOSITORY_DEFAULT_GEM_SUBDIRECTORIES","namespace":"Gem","path":"Gem::REPOSITORY_DEFAULT_GEM_SUBDIRECTORIES","type":"constant","return":["Array",""],"visibility":"public"},"Gem::REPOSITORY_SUBDIRECTORIES":{"description":"Subdirectories in a gem repository","name":"REPOSITORY_SUBDIRECTORIES","namespace":"Gem","path":"Gem::REPOSITORY_SUBDIRECTORIES","type":"constant","return":["Array",""],"visibility":"public"},"Gem::RUBYGEMS_DIR":{"description":"","name":"RUBYGEMS_DIR","namespace":"Gem","path":"Gem::RUBYGEMS_DIR","type":"constant","return":["String",""],"visibility":"public"},"Gem::RbConfigPriorities":{"description":"TODO remove at RubyGems 3","name":"RbConfigPriorities","namespace":"Gem","path":"Gem::RbConfigPriorities","type":"constant","return":["Array",""],"visibility":"public"},"Gem::RemoteError":{"description":"Signals that a remote operation cannot be conducted, probably due to not\nbeing connected (or just not finding host).\n--\nTODO: create a method that tests connection to the preferred gems server.\nAll code dealing with remote operations will want this.  Failure in that\nmethod should raise this error.","name":"RemoteError","namespace":"Gem","path":"Gem::RemoteError","type":"class","visibility":"public"},"Gem::RemoteFetcher":{"description":":stopdoc:","name":"RemoteFetcher","namespace":"Gem","path":"Gem::RemoteFetcher","type":"class","visibility":"public"},"Gem::RemoteFetcher#api_endpoint":{"description":"Given a source at +uri+, calculate what hostname to actually\nconnect to query the data for it.","name":"api_endpoint","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#api_endpoint","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#cache_update_path":{"description":"Downloads +uri+ to +path+ if necessary. If no path is given, it just\npasses the data.","name":"cache_update_path","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#cache_update_path","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#close_all":{"description":"","name":"close_all","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#close_all","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#correct_for_windows_path":{"description":"","name":"correct_for_windows_path","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#correct_for_windows_path","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#download":{"description":"Moves the gem +spec+ from +source_uri+ to the cache dir unless it is\nalready there.  If the source_uri is local the gem cache dir copy is\nalways replaced.","name":"download","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#download","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#download_to_cache":{"description":"Given a name and requirement, downloads this gem into cache and returns the\nfilename. Returns nil if the gem cannot be located.\n--\nShould probably be integrated with #download below, but that will be a\nlarger, more emcompassing effort. -erikh","name":"download_to_cache","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#download_to_cache","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#fetch_file":{"description":"File Fetcher. Dispatched by +fetch_path+. Use it instead.","name":"fetch_file","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#fetch_file","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#fetch_http":{"description":"HTTP Fetcher. Dispatched by +fetch_path+. Use it instead.","name":"fetch_https","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#fetch_https","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#fetch_https":{"description":"HTTP Fetcher. Dispatched by +fetch_path+. Use it instead.","name":"fetch_https","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#fetch_https","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#fetch_path":{"description":"Downloads +uri+ and returns it as a String.","name":"fetch_path","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#fetch_path","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#fetch_s3":{"description":"","name":"fetch_s3","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#fetch_s3","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#fetch_size":{"description":"Returns the size of +uri+ in bytes.","name":"fetch_size","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#fetch_size","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#https?":{"description":"","name":"https?","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#https?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::RemoteFetcher#initialize":{"description":"Initialize a remote fetcher using the source URI and possible proxy\ninformation.\n\n+proxy+\n* [String]: explicit specification of proxy; overrides any environment\n            variable setting\n* nil: respect environment variables (HTTP_PROXY, HTTP_PROXY_USER,\n       HTTP_PROXY_PASS)\n* <tt>:no_proxy</tt>: ignore environment variables and _don't_ use a proxy\n\n+dns+: An object to use for DNS resolution of the API endpoint.\n       By default, use Resolv::DNS.","name":"initialize","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#initialize","type":"instance_method","visibility":"public","return":[["RemoteFetcher"],"a new instance of RemoteFetcher"]},"Gem::RemoteFetcher#pools_for":{"description":"","name":"pools_for","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#pools_for","type":"instance_method","visibility":"private"},"Gem::RemoteFetcher#proxy_for":{"description":"","name":"proxy_for","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#proxy_for","type":"instance_method","visibility":"private"},"Gem::RemoteFetcher#request":{"description":"Performs a Net::HTTP request of type +request_class+ on +uri+ returning\na Net::HTTP response object.  request maintains a table of persistent\nconnections to reduce connect overhead.","name":"request","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#request","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher#s3_expiration":{"description":"","name":"s3_expiration","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#s3_expiration","type":"instance_method","visibility":"protected"},"Gem::RemoteFetcher#sign_s3_url":{"description":"we have our own signing code here to avoid a dependency on the aws-sdk gem\nfortunately, a simple GET request isn't too complex to sign properly","name":"sign_s3_url","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher#sign_s3_url","type":"instance_method","visibility":"protected"},"Gem::RemoteFetcher.fetcher":{"description":"Cached RemoteFetcher instance.","name":"fetcher","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher.fetcher","type":"class_method","visibility":"public"},"Gem::RemoteFetcher.fetcher=":{"description":"","name":"fetcher=","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher.fetcher=","type":"class_method","visibility":"public"},"Gem::RemoteFetcher::BASE64_URI_TRANSLATE":{"description":"","name":"BASE64_URI_TRANSLATE","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher::BASE64_URI_TRANSLATE","type":"constant","return":null,"visibility":"protected"},"Gem::RemoteFetcher::FetchError":{"description":"A FetchError exception wraps up the various possible IO and HTTP failures\nthat could happen while downloading from the internet.","name":"FetchError","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher::FetchError","type":"class","visibility":"public"},"Gem::RemoteFetcher::FetchError#initialize":{"description":"","name":"initialize","namespace":"Gem::RemoteFetcher::FetchError","path":"Gem::RemoteFetcher::FetchError#initialize","type":"instance_method","visibility":"public","return":[["FetchError"],"a new instance of FetchError"]},"Gem::RemoteFetcher::FetchError#to_s":{"description":":nodoc:","name":"to_s","namespace":"Gem::RemoteFetcher::FetchError","path":"Gem::RemoteFetcher::FetchError#to_s","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher::FetchError#uri":{"description":"The URI which was being accessed when the exception happened.","name":"uri","namespace":"Gem::RemoteFetcher::FetchError","path":"Gem::RemoteFetcher::FetchError#uri","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher::FetchError#uri=":{"description":"The URI which was being accessed when the exception happened.","name":"uri=","namespace":"Gem::RemoteFetcher::FetchError","path":"Gem::RemoteFetcher::FetchError#uri=","type":"instance_method","visibility":"public"},"Gem::RemoteFetcher::UnknownHostError":{"description":"A FetchError that indicates that the reason for not being\nable to fetch data was that the host could not be contacted","name":"UnknownHostError","namespace":"Gem::RemoteFetcher","path":"Gem::RemoteFetcher::UnknownHostError","type":"class","visibility":"public"},"Gem::RemoteInstallationCancelled":{"description":"","name":"RemoteInstallationCancelled","namespace":"Gem","path":"Gem::RemoteInstallationCancelled","type":"class","visibility":"public"},"Gem::RemoteInstallationSkipped":{"description":"","name":"RemoteInstallationSkipped","namespace":"Gem","path":"Gem::RemoteInstallationSkipped","type":"class","visibility":"public"},"Gem::RemoteSourceException":{"description":"Represents an error communicating via HTTP.","name":"RemoteSourceException","namespace":"Gem","path":"Gem::RemoteSourceException","type":"class","visibility":"public"},"Gem::Request":{"description":"","name":"Request","namespace":"Gem","path":"Gem::Request","type":"class","visibility":"public"},"Gem::Request#cert_files":{"description":"","name":"cert_files","namespace":"Gem::Request","path":"Gem::Request#cert_files","type":"instance_method","visibility":"public"},"Gem::Request#connection_for":{"description":"Creates or an HTTP connection based on +uri+, or retrieves an existing\nconnection, using a proxy if needed.","name":"connection_for","namespace":"Gem::Request","path":"Gem::Request#connection_for","type":"instance_method","visibility":"public"},"Gem::Request#fetch":{"description":"","name":"fetch","namespace":"Gem::Request","path":"Gem::Request#fetch","type":"instance_method","visibility":"public"},"Gem::Request#initialize":{"description":"","name":"initialize","namespace":"Gem::Request","path":"Gem::Request#initialize","type":"instance_method","visibility":"public","return":[["Request"],"a new instance of Request"]},"Gem::Request#perform_request":{"description":":nodoc:","name":"perform_request","namespace":"Gem::Request","path":"Gem::Request#perform_request","type":"instance_method","visibility":"public"},"Gem::Request#proxy_uri":{"description":"","name":"proxy_uri","namespace":"Gem::Request","path":"Gem::Request#proxy_uri","type":"instance_method","visibility":"public"},"Gem::Request#reset":{"description":"Resets HTTP connection +connection+.","name":"reset","namespace":"Gem::Request","path":"Gem::Request#reset","type":"instance_method","visibility":"public"},"Gem::Request#user_agent":{"description":"","name":"user_agent","namespace":"Gem::Request","path":"Gem::Request#user_agent","type":"instance_method","visibility":"public"},"Gem::Request.configure_connection_for_https":{"description":"","name":"configure_connection_for_https","namespace":"Gem::Request","path":"Gem::Request.configure_connection_for_https","type":"class_method","visibility":"public"},"Gem::Request.create_with_proxy":{"description":"Legacy.  This is used in tests.","name":"create_with_proxy","namespace":"Gem::Request","path":"Gem::Request.create_with_proxy","type":"class_method","visibility":"public"},"Gem::Request.get_cert_files":{"description":"","name":"get_cert_files","namespace":"Gem::Request","path":"Gem::Request.get_cert_files","type":"class_method","visibility":"public"},"Gem::Request.get_proxy_from_env":{"description":"Returns a proxy URI for the given +scheme+ if one is set in the\nenvironment variables.","name":"get_proxy_from_env","namespace":"Gem::Request","path":"Gem::Request.get_proxy_from_env","type":"class_method","visibility":"public"},"Gem::Request.proxy_uri":{"description":":nodoc:","name":"proxy_uri","namespace":"Gem::Request","path":"Gem::Request.proxy_uri","type":"class_method","visibility":"public"},"Gem::Request::ConnectionPools":{"description":":nodoc:","name":"ConnectionPools","namespace":"Gem::Request","path":"Gem::Request::ConnectionPools","type":"class","visibility":"public"},"Gem::Request::ConnectionPools#close_all":{"description":"","name":"close_all","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#close_all","type":"instance_method","visibility":"public"},"Gem::Request::ConnectionPools#get_no_proxy_from_env":{"description":"Returns list of no_proxy entries (if any) from the environment","name":"get_no_proxy_from_env","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#get_no_proxy_from_env","type":"instance_method","visibility":"private"},"Gem::Request::ConnectionPools#https?":{"description":"","name":"https?","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#https?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"Gem::Request::ConnectionPools#initialize":{"description":"","name":"initialize","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#initialize","type":"instance_method","visibility":"public","return":[["ConnectionPools"],"a new instance of ConnectionPools"]},"Gem::Request::ConnectionPools#net_http_args":{"description":"","name":"net_http_args","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#net_http_args","type":"instance_method","visibility":"private"},"Gem::Request::ConnectionPools#no_proxy?":{"description":"","name":"no_proxy?","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#no_proxy?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"Gem::Request::ConnectionPools#pool_for":{"description":"","name":"pool_for","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools#pool_for","type":"instance_method","visibility":"public"},"Gem::Request::ConnectionPools.client":{"description":"Returns the value of attribute client","name":"client","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools.client","type":"class_method","visibility":"public"},"Gem::Request::ConnectionPools.client=":{"description":"Sets the attribute client","name":"client=","namespace":"Gem::Request::ConnectionPools","path":"Gem::Request::ConnectionPools.client=","type":"class_method","visibility":"public","parameters":[["value",null,"the value to set the attribute client to."]]},"Gem::Request::HTTPPool":{"description":"A connection \"pool\" that only manages one connection for now.  Provides\nthread safe `checkout` and `checkin` methods.  The pool consists of one\nconnection that corresponds to `http_args`.  This class is private, do not\nuse it.","name":"HTTPPool","namespace":"Gem::Request","path":"Gem::Request::HTTPPool","type":"class","visibility":"public"},"Gem::Request::HTTPPool#cert_files":{"description":"Returns the value of attribute cert_files","name":"cert_files","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#cert_files","type":"instance_method","visibility":"public"},"Gem::Request::HTTPPool#checkin":{"description":"","name":"checkin","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#checkin","type":"instance_method","visibility":"public"},"Gem::Request::HTTPPool#checkout":{"description":"","name":"checkout","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#checkout","type":"instance_method","visibility":"public"},"Gem::Request::HTTPPool#close_all":{"description":"","name":"close_all","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#close_all","type":"instance_method","visibility":"public"},"Gem::Request::HTTPPool#initialize":{"description":"","name":"initialize","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#initialize","type":"instance_method","visibility":"public","return":[["HTTPPool"],"a new instance of HTTPPool"]},"Gem::Request::HTTPPool#make_connection":{"description":"","name":"make_connection","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#make_connection","type":"instance_method","visibility":"private"},"Gem::Request::HTTPPool#proxy_uri":{"description":"Returns the value of attribute proxy_uri","name":"proxy_uri","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#proxy_uri","type":"instance_method","visibility":"public"},"Gem::Request::HTTPPool#setup_connection":{"description":"","name":"setup_connection","namespace":"Gem::Request::HTTPPool","path":"Gem::Request::HTTPPool#setup_connection","type":"instance_method","visibility":"private"},"Gem::Request::HTTPSPool":{"description":":nodoc:","name":"HTTPSPool","namespace":"Gem::Request","path":"Gem::Request::HTTPSPool","type":"class","visibility":"public"},"Gem::Request::HTTPSPool#setup_connection":{"description":"","name":"setup_connection","namespace":"Gem::Request::HTTPSPool","path":"Gem::Request::HTTPSPool#setup_connection","type":"instance_method","visibility":"private"},"Gem::RequestSet":{"description":"A RequestSet groups a request to activate a set of dependencies.\n\n  nokogiri = Gem::Dependency.new 'nokogiri', '~> 1.6'\n  pg = Gem::Dependency.new 'pg', '~> 0.14'\n\n  set = Gem::RequestSet.new nokogiri, pg\n\n  requests = set.resolve\n\n  p requests.map { |r| r.full_name }\n  #=> [\"nokogiri-1.6.0\", \"mini_portile-0.5.1\", \"pg-0.17.0\"]","name":"RequestSet","namespace":"Gem","path":"Gem::RequestSet","type":"class","visibility":"public"},"Gem::RequestSet#always_install":{"description":"Array of gems to install even if already installed","name":"always_install","namespace":"Gem::RequestSet","path":"Gem::RequestSet#always_install","type":"instance_method","visibility":"public"},"Gem::RequestSet#always_install=":{"description":"Array of gems to install even if already installed","name":"always_install=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#always_install=","type":"instance_method","visibility":"public"},"Gem::RequestSet#dependencies":{"description":"Returns the value of attribute dependencies","name":"dependencies","namespace":"Gem::RequestSet","path":"Gem::RequestSet#dependencies","type":"instance_method","visibility":"public"},"Gem::RequestSet#development":{"description":"Returns the value of attribute development","name":"development","namespace":"Gem::RequestSet","path":"Gem::RequestSet#development","type":"instance_method","visibility":"public"},"Gem::RequestSet#development=":{"description":"Sets the attribute development","name":"development=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#development=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute development to."]]},"Gem::RequestSet#development_shallow":{"description":"Set to true if you want to install only direct development dependencies.","name":"development_shallow","namespace":"Gem::RequestSet","path":"Gem::RequestSet#development_shallow","type":"instance_method","visibility":"public"},"Gem::RequestSet#development_shallow=":{"description":"Set to true if you want to install only direct development dependencies.","name":"development_shallow=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#development_shallow=","type":"instance_method","visibility":"public"},"Gem::RequestSet#errors":{"description":"Errors fetching gems during resolution.","name":"errors","namespace":"Gem::RequestSet","path":"Gem::RequestSet#errors","type":"instance_method","visibility":"public"},"Gem::RequestSet#gem":{"description":"Declare that a gem of name +name+ with +reqs+ requirements is needed.","name":"gem","namespace":"Gem::RequestSet","path":"Gem::RequestSet#gem","type":"instance_method","visibility":"public"},"Gem::RequestSet#git_set":{"description":"The set of git gems imported via load_gemdeps.","name":"git_set","namespace":"Gem::RequestSet","path":"Gem::RequestSet#git_set","type":"instance_method","visibility":"public"},"Gem::RequestSet#ignore_dependencies":{"description":"When true, dependency resolution is not performed, only the requested gems\nare installed.","name":"ignore_dependencies","namespace":"Gem::RequestSet","path":"Gem::RequestSet#ignore_dependencies","type":"instance_method","visibility":"public"},"Gem::RequestSet#ignore_dependencies=":{"description":"When true, dependency resolution is not performed, only the requested gems\nare installed.","name":"ignore_dependencies=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#ignore_dependencies=","type":"instance_method","visibility":"public"},"Gem::RequestSet#import":{"description":"Add +deps+ Gem::Dependency objects to the set.","name":"import","namespace":"Gem::RequestSet","path":"Gem::RequestSet#import","type":"instance_method","visibility":"public"},"Gem::RequestSet#initialize":{"description":"Creates a RequestSet for a list of Gem::Dependency objects, +deps+.  You\ncan then #resolve and #install the resolved list of dependencies.\n\n  nokogiri = Gem::Dependency.new 'nokogiri', '~> 1.6'\n  pg = Gem::Dependency.new 'pg', '~> 0.14'\n\n  set = Gem::RequestSet.new nokogiri, pg","name":"initialize","namespace":"Gem::RequestSet","path":"Gem::RequestSet#initialize","type":"instance_method","visibility":"public","return":[["RequestSet"],"a new instance of RequestSet"]},"Gem::RequestSet#install":{"description":"Installs gems for this RequestSet using the Gem::Installer +options+.\n\nIf a +block+ is given an activation +request+ and +installer+ are yielded.\nThe +installer+ will be +nil+ if a gem matching the request was already\ninstalled.","name":"install","namespace":"Gem::RequestSet","path":"Gem::RequestSet#install","type":"instance_method","visibility":"public"},"Gem::RequestSet#install_dir":{"description":":nodoc:","name":"install_dir","namespace":"Gem::RequestSet","path":"Gem::RequestSet#install_dir","type":"instance_method","visibility":"public"},"Gem::RequestSet#install_from_gemdeps":{"description":"Installs from the gem dependencies files in the +:gemdeps+ option in\n+options+, yielding to the +block+ as in #install.\n\nIf +:without_groups+ is given in the +options+, those groups in the gem\ndependencies file are not used.  See Gem::Installer for other +options+.","name":"install_from_gemdeps","namespace":"Gem::RequestSet","path":"Gem::RequestSet#install_from_gemdeps","type":"instance_method","visibility":"public"},"Gem::RequestSet#install_into":{"description":"","name":"install_into","namespace":"Gem::RequestSet","path":"Gem::RequestSet#install_into","type":"instance_method","visibility":"public"},"Gem::RequestSet#load_gemdeps":{"description":"Load a dependency management file.","name":"load_gemdeps","namespace":"Gem::RequestSet","path":"Gem::RequestSet#load_gemdeps","type":"instance_method","visibility":"public"},"Gem::RequestSet#prerelease":{"description":"If true, allow dependencies to match prerelease gems.","name":"prerelease","namespace":"Gem::RequestSet","path":"Gem::RequestSet#prerelease","type":"instance_method","visibility":"public"},"Gem::RequestSet#prerelease=":{"description":"If true, allow dependencies to match prerelease gems.","name":"prerelease=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#prerelease=","type":"instance_method","visibility":"public"},"Gem::RequestSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::RequestSet","path":"Gem::RequestSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::RequestSet#remote":{"description":"When false no remote sets are used for resolving gems.","name":"remote","namespace":"Gem::RequestSet","path":"Gem::RequestSet#remote","type":"instance_method","visibility":"public"},"Gem::RequestSet#remote=":{"description":"When false no remote sets are used for resolving gems.","name":"remote=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#remote=","type":"instance_method","visibility":"public"},"Gem::RequestSet#resolve":{"description":"Resolve the requested dependencies and return an Array of Specification\nobjects to be activated.","name":"resolve","namespace":"Gem::RequestSet","path":"Gem::RequestSet#resolve","type":"instance_method","visibility":"public"},"Gem::RequestSet#resolve_current":{"description":"Resolve the requested dependencies against the gems available via Gem.path\nand return an Array of Specification objects to be activated.","name":"resolve_current","namespace":"Gem::RequestSet","path":"Gem::RequestSet#resolve_current","type":"instance_method","visibility":"public"},"Gem::RequestSet#resolver":{"description":":nodoc:","name":"resolver","namespace":"Gem::RequestSet","path":"Gem::RequestSet#resolver","type":"instance_method","visibility":"public"},"Gem::RequestSet#sets":{"description":"Sets used for resolution","name":"sets","namespace":"Gem::RequestSet","path":"Gem::RequestSet#sets","type":"instance_method","visibility":"public"},"Gem::RequestSet#soft_missing":{"description":"Treat missing dependencies as silent errors","name":"soft_missing","namespace":"Gem::RequestSet","path":"Gem::RequestSet#soft_missing","type":"instance_method","visibility":"public"},"Gem::RequestSet#soft_missing=":{"description":"Treat missing dependencies as silent errors","name":"soft_missing=","namespace":"Gem::RequestSet","path":"Gem::RequestSet#soft_missing=","type":"instance_method","visibility":"public"},"Gem::RequestSet#sorted_requests":{"description":"","name":"sorted_requests","namespace":"Gem::RequestSet","path":"Gem::RequestSet#sorted_requests","type":"instance_method","visibility":"public"},"Gem::RequestSet#specs":{"description":"","name":"specs","namespace":"Gem::RequestSet","path":"Gem::RequestSet#specs","type":"instance_method","visibility":"public"},"Gem::RequestSet#specs_in":{"description":"","name":"specs_in","namespace":"Gem::RequestSet","path":"Gem::RequestSet#specs_in","type":"instance_method","visibility":"public"},"Gem::RequestSet#tsort_each_child":{"description":":nodoc:","name":"tsort_each_child","namespace":"Gem::RequestSet","path":"Gem::RequestSet#tsort_each_child","type":"instance_method","visibility":"public"},"Gem::RequestSet#tsort_each_node":{"description":":nodoc:","name":"tsort_each_node","namespace":"Gem::RequestSet","path":"Gem::RequestSet#tsort_each_node","type":"instance_method","visibility":"public"},"Gem::RequestSet#vendor_set":{"description":"The set of vendor gems imported via load_gemdeps.","name":"vendor_set","namespace":"Gem::RequestSet","path":"Gem::RequestSet#vendor_set","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDepedencyAPI":{"description":"TODO: remove this typo name at RubyGems 3.0","name":"GemDepedencyAPI","namespace":"Gem::RequestSet","path":"Gem::RequestSet::GemDepedencyAPI","type":"constant","return":["Class",""],"visibility":"public"},"Gem::RequestSet::GemDependencyAPI":{"description":"A semi-compatible DSL for the Bundler Gemfile and Isolate gem dependencies\nfiles.\n\nTo work with both the Bundler Gemfile and Isolate formats this\nimplementation takes some liberties to allow compatibility with each, most\nnotably in #source.\n\nA basic gem dependencies file will look like the following:\n\n  source 'https://rubygems.org'\n\n  gem 'rails', '3.2.14a\n  gem 'devise', '~> 2.1', '>= 2.1.3'\n  gem 'cancan'\n  gem 'airbrake'\n  gem 'pg'\n\nRubyGems recommends saving this as gem.deps.rb over Gemfile or Isolate.\n\nTo install the gems in this Gemfile use `gem install -g` to install it and\ncreate a lockfile.  The lockfile will ensure that when you make changes to\nyour gem dependencies file a minimum amount of change is made to the\ndependencies of your gems.\n\nRubyGems can activate all the gems in your dependencies file at startup\nusing the RUBYGEMS_GEMDEPS environment variable or through Gem.use_gemdeps.\nSee Gem.use_gemdeps for details and warnings.\n\nSee `gem help install` and `gem help gem_dependencies` for further details.","name":"GemDependencyAPI","namespace":"Gem::RequestSet","path":"Gem::RequestSet::GemDependencyAPI","type":"class","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#add_dependencies":{"description":"Adds +dependencies+ to the request set if any of the +groups+ are allowed.\nThis is used for gemspec dependencies.","name":"add_dependencies","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#add_dependencies","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#dependencies":{"description":"The gems required by #gem statements in the gem.deps.rb file","name":"dependencies","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#dependencies","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#find_gemspec":{"description":"Finds a gemspec with the given +name+ that lives at +path+.","name":"find_gemspec","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#find_gemspec","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#gem":{"description":":category: Gem Dependencies DSL\n\n:call-seq:\n  gem(name)\n  gem(name, *requirements)\n  gem(name, *requirements, options)\n\nSpecifies a gem dependency with the given +name+ and +requirements+.  You\nmay also supply +options+ following the +requirements+\n\n+options+ include:\n\nrequire: ::\n  RubyGems does not provide any autorequire features so requires in a gem\n  dependencies file are recorded but ignored.\n\n  In bundler the require: option overrides the file to require during\n  Bundler.require.  By default the name of the dependency is required in\n  Bundler.  A single file or an Array of files may be given.\n\n  To disable requiring any file give +false+:\n\n    gem 'rake', require: false\n\ngroup: ::\n  Place the dependencies in the given dependency group.  A single group or\n  an Array of groups may be given.\n\n  See also #group\n\nplatform: ::\n  Only install the dependency on the given platform.  A single platform or\n  an Array of platforms may be given.\n\n  See #platform for a list of platforms available.\n\npath: ::\n  Install this dependency from an unpacked gem in the given directory.\n\n    gem 'modified_gem', path: 'vendor/modified_gem'\n\ngit: ::\n  Install this dependency from a git repository:\n\n    gem 'private_gem', git: git@my.company.example:private_gem.git'\n\ngist: ::\n  Install this dependency from the gist ID:\n\n    gem 'bang', gist: '1232884'\n\ngithub: ::\n  Install this dependency from a github git repository:\n\n    gem 'private_gem', github: 'my_company/private_gem'\n\nsubmodules: ::\n  Set to +true+ to include submodules when fetching the git repository for\n  git:, gist: and github: dependencies.\n\nref: ::\n  Use the given commit name or SHA for git:, gist: and github:\n  dependencies.\n\nbranch: ::\n  Use the given branch for git:, gist: and github: dependencies.\n\ntag: ::\n  Use the given tag for git:, gist: and github: dependencies.","name":"gem","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#gem_deps_file":{"description":"Returns the basename of the file the dependencies were loaded from","name":"gem_deps_file","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_deps_file","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#gem_git":{"description":"Handles the git: option from +options+ for gem +name+.\n\nReturns +true+ if the path option was handled.","name":"gem_git","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_git","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#gem_git_source":{"description":"Handles a git gem option from +options+ for gem +name+ for a git source\nregistered through git_source.\n\nReturns +true+ if the custom source option was handled.","name":"gem_git_source","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_git_source","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#gem_group":{"description":"Handles the :group and :groups +options+ for the gem with the given\n+name+.","name":"gem_group","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_group","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#gem_path":{"description":"Handles the path: option from +options+ for gem +name+.\n\nReturns +true+ if the path option was handled.","name":"gem_path","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_path","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#gem_platforms":{"description":"Handles the platforms: option from +options+.  Returns true if the\nplatform matches the current platform.","name":"gem_platforms","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_platforms","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#gem_requires":{"description":"Records the require: option from +options+ and adds those files, or the\ndefault file to the require list for +name+.","name":"gem_requires","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gem_requires","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#gemspec":{"description":":category: Gem Dependencies DSL\n\nLoads dependencies from a gemspec file.\n\n+options+ include:\n\nname: ::\n  The name portion of the gemspec file.  Defaults to searching for any\n  gemspec file in the current directory.\n\n    gemspec name: 'my_gem'\n\npath: ::\n  The path the gemspec lives in.  Defaults to the current directory:\n\n    gemspec 'my_gem', path: 'gemspecs', name: 'my_gem'\n\ndevelopment_group: ::\n  The group to add development dependencies to.  By default this is\n  :development.  Only one group may be specified.","name":"gemspec","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#gemspec","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#git":{"description":":category: Gem Dependencies DSL\n\nBlock form for specifying gems from a git +repository+.\n\n  git 'https://github.com/rails/rails.git' do\n    gem 'activesupport'\n    gem 'activerecord'\n  end","name":"git","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#git","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#git_set":{"description":"A set of gems that are loaded via the +:git+ option to #gem","name":"git_set","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#git_set","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#git_source":{"description":"Defines a custom git source that uses +name+ to expand git repositories\nfor use in gems built from git repositories.  You must provide a block\nthat accepts a git repository name for expansion.","name":"git_source","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#git_source","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#group":{"description":":category: Gem Dependencies DSL\n\nBlock form for placing a dependency in the given +groups+.\n\n  group :development do\n    gem 'debugger'\n  end\n\n  group :development, :test do\n    gem 'minitest'\n  end\n\nGroups can be excluded at install time using `gem install -g --without\ndevelopment`.  See `gem help install` and `gem help gem_dependencies` for\nfurther details.","name":"group","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#group","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#initialize":{"description":"Creates a new GemDependencyAPI that will add dependencies to the\nGem::RequestSet +set+ based on the dependency API description in +path+.","name":"initialize","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#initialize","type":"instance_method","visibility":"public","return":[["GemDependencyAPI"],"a new instance of GemDependencyAPI"]},"Gem::RequestSet::GemDependencyAPI#installing=":{"description":"Changes the behavior of gem dependency file loading to installing mode.\nIn installing mode certain restrictions are ignored such as ruby version\nmismatch checks.","name":"installing=","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#installing=","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#load":{"description":"Loads the gem dependency file and returns self.","name":"load","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#load","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#pin_gem_source":{"description":"Pins the gem +name+ to the given +source+.  Adding a gem with the same\nname from a different +source+ will raise an exception.","name":"pin_gem_source","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#pin_gem_source","type":"instance_method","visibility":"private"},"Gem::RequestSet::GemDependencyAPI#platform":{"description":":category: Gem Dependencies DSL\n\nBlock form for restricting gems to a set of platforms.\n\nThe gem dependencies platform is different from Gem::Platform.  A platform\ngem.deps.rb platform matches on the ruby engine, the ruby version and\nwhether or not windows is allowed.\n\n:ruby, :ruby_XY ::\n  Matches non-windows, non-jruby implementations where X and Y can be used\n  to match releases in the 1.8, 1.9, 2.0 or 2.1 series.\n\n:mri, :mri_XY ::\n  Matches non-windows C Ruby (Matz Ruby) or only the 1.8, 1.9, 2.0 or\n  2.1 series.\n\n:mingw, :mingw_XY ::\n  Matches 32 bit C Ruby on MinGW or only the 1.8, 1.9, 2.0 or 2.1 series.\n\n:x64_mingw, :x64_mingw_XY ::\n  Matches 64 bit C Ruby on MinGW or only the 1.8, 1.9, 2.0 or 2.1 series.\n\n:mswin, :mswin_XY ::\n  Matches 32 bit C Ruby on Microsoft Windows or only the 1.8, 1.9, 2.0 or\n  2.1 series.\n\n:mswin64, :mswin64_XY ::\n  Matches 64 bit C Ruby on Microsoft Windows or only the 1.8, 1.9, 2.0 or\n  2.1 series.\n\n:jruby, :jruby_XY ::\n  Matches JRuby or JRuby in 1.8 or 1.9 mode.\n\n:maglev ::\n  Matches Maglev\n\n:rbx ::\n  Matches non-windows Rubinius\n\nNOTE:  There is inconsistency in what environment a platform matches.  You\nmay need to read the source to know the exact details.","name":"platforms","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#platforms","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#platforms":{"description":":category: Gem Dependencies DSL\n\nBlock form for restricting gems to a set of platforms.\n\nThe gem dependencies platform is different from Gem::Platform.  A platform\ngem.deps.rb platform matches on the ruby engine, the ruby version and\nwhether or not windows is allowed.\n\n:ruby, :ruby_XY ::\n  Matches non-windows, non-jruby implementations where X and Y can be used\n  to match releases in the 1.8, 1.9, 2.0 or 2.1 series.\n\n:mri, :mri_XY ::\n  Matches non-windows C Ruby (Matz Ruby) or only the 1.8, 1.9, 2.0 or\n  2.1 series.\n\n:mingw, :mingw_XY ::\n  Matches 32 bit C Ruby on MinGW or only the 1.8, 1.9, 2.0 or 2.1 series.\n\n:x64_mingw, :x64_mingw_XY ::\n  Matches 64 bit C Ruby on MinGW or only the 1.8, 1.9, 2.0 or 2.1 series.\n\n:mswin, :mswin_XY ::\n  Matches 32 bit C Ruby on Microsoft Windows or only the 1.8, 1.9, 2.0 or\n  2.1 series.\n\n:mswin64, :mswin64_XY ::\n  Matches 64 bit C Ruby on Microsoft Windows or only the 1.8, 1.9, 2.0 or\n  2.1 series.\n\n:jruby, :jruby_XY ::\n  Matches JRuby or JRuby in 1.8 or 1.9 mode.\n\n:maglev ::\n  Matches Maglev\n\n:rbx ::\n  Matches non-windows Rubinius\n\nNOTE:  There is inconsistency in what environment a platform matches.  You\nmay need to read the source to know the exact details.\n\n:category: Gem Dependencies DSL\n\nBlock form for restricting gems to a particular set of platforms.  See\n#platform.","name":"platforms","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#platforms","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#requires":{"description":"A Hash containing gem names and files to require from those gems.","name":"requires","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#requires","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#ruby":{"description":":category: Gem Dependencies DSL\n\nRestricts this gem dependencies file to the given ruby +version+.\n\nYou may also provide +engine:+ and +engine_version:+ options to restrict\nthis gem dependencies file to a particular ruby engine and its engine\nversion.  This matching is performed by using the RUBY_ENGINE and\nengine_specific VERSION constants.  (For JRuby, JRUBY_VERSION).","name":"ruby","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#ruby","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#source":{"description":":category: Gem Dependencies DSL\n\nSets +url+ as a source for gems for this dependency API.  RubyGems uses\nthe default configured sources if no source was given.  If a source is set\nonly that source is used.\n\nThis method differs in behavior from Bundler:\n\n* The +:gemcutter+, # +:rubygems+ and +:rubyforge+ sources are not\n  supported as they are deprecated in bundler.\n* The +prepend:+ option is not supported.  If you wish to order sources\n  then list them in your preferred order.","name":"source","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#source","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#vendor_set":{"description":"A set of gems that are loaded via the +:path+ option to #gem","name":"vendor_set","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#vendor_set","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#without_groups":{"description":"The groups of gems to exclude from installation","name":"without_groups","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#without_groups","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI#without_groups=":{"description":"The groups of gems to exclude from installation","name":"without_groups=","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI#without_groups=","type":"instance_method","visibility":"public"},"Gem::RequestSet::GemDependencyAPI::ENGINE_MAP":{"description":":nodoc:","name":"ENGINE_MAP","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI::ENGINE_MAP","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::RequestSet::GemDependencyAPI::PLATFORM_MAP":{"description":":nodoc:","name":"PLATFORM_MAP","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI::PLATFORM_MAP","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::RequestSet::GemDependencyAPI::VERSION_MAP":{"description":":nodoc:","name":"VERSION_MAP","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI::VERSION_MAP","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::RequestSet::GemDependencyAPI::WINDOWS":{"description":":nodoc:","name":"WINDOWS","namespace":"Gem::RequestSet::GemDependencyAPI","path":"Gem::RequestSet::GemDependencyAPI::WINDOWS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::RequestSet::Lockfile":{"description":"Parses a gem.deps.rb.lock file and constructs a LockSet containing the\ndependencies found inside.  If the lock file is missing no LockSet is\nconstructed.","name":"Lockfile","namespace":"Gem::RequestSet","path":"Gem::RequestSet::Lockfile","type":"class","visibility":"public"},"Gem::RequestSet::Lockfile#add_DEPENDENCIES":{"description":":nodoc:","name":"add_DEPENDENCIES","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#add_DEPENDENCIES","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#add_GEM":{"description":":nodoc:","name":"add_GEM","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#add_GEM","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#add_GIT":{"description":"","name":"add_GIT","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#add_GIT","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#add_PATH":{"description":":nodoc:","name":"add_PATH","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#add_PATH","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#add_PLATFORMS":{"description":":nodoc:","name":"add_PLATFORMS","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#add_PLATFORMS","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#get":{"description":"Gets the next token for a Lockfile","name":"get","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#get","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#initialize":{"description":"Creates a new Lockfile for the given +request_set+ and +gem_deps_file+\nlocation.","name":"initialize","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#initialize","type":"instance_method","visibility":"public","return":[["Lockfile"],"a new instance of Lockfile"]},"Gem::RequestSet::Lockfile#parse":{"description":":nodoc:","name":"parse","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#parse_DEPENDENCIES":{"description":":nodoc:","name":"parse_DEPENDENCIES","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse_DEPENDENCIES","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#parse_GEM":{"description":":nodoc:","name":"parse_GEM","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse_GEM","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#parse_GIT":{"description":":nodoc:","name":"parse_GIT","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse_GIT","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#parse_PATH":{"description":":nodoc:","name":"parse_PATH","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse_PATH","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#parse_PLATFORMS":{"description":":nodoc:","name":"parse_PLATFORMS","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse_PLATFORMS","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#parse_dependency":{"description":"Parses the requirements following the dependency +name+ and the +op+ for\nthe first token of the requirements and returns a Gem::Dependency object.","name":"parse_dependency","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#parse_dependency","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#peek":{"description":"Peeks at the next token for Lockfile","name":"peek","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#peek","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#pinned_requirement":{"description":":nodoc:","name":"pinned_requirement","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#pinned_requirement","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#platforms":{"description":"The platforms for this Lockfile","name":"platforms","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#platforms","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#relative_path_from":{"description":":nodoc:","name":"relative_path_from","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#relative_path_from","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#skip":{"description":":nodoc:","name":"skip","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#skip","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#to_s":{"description":"The contents of the lock file.","name":"to_s","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#to_s","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#token_pos":{"description":"Calculates the column (by byte) and the line of the current token based on\n+byte_offset+.","name":"token_pos","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#token_pos","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#tokenize":{"description":"Converts a lock file into an Array of tokens.  If the lock file is missing\nan empty Array is returned.","name":"tokenize","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#tokenize","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#unget":{"description":"Ungets the last token retrieved by #get","name":"unget","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#unget","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile#write":{"description":"Writes the lock file alongside the gem dependencies file","name":"write","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile#write","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile::ParseError":{"description":"Raised when a lockfile cannot be parsed","name":"ParseError","namespace":"Gem::RequestSet::Lockfile","path":"Gem::RequestSet::Lockfile::ParseError","type":"class","visibility":"public"},"Gem::RequestSet::Lockfile::ParseError#column":{"description":"The column where the error was encountered","name":"column","namespace":"Gem::RequestSet::Lockfile::ParseError","path":"Gem::RequestSet::Lockfile::ParseError#column","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile::ParseError#initialize":{"description":"Raises a ParseError with the given +message+ which was encountered at a\n+line+ and +column+ while parsing.","name":"initialize","namespace":"Gem::RequestSet::Lockfile::ParseError","path":"Gem::RequestSet::Lockfile::ParseError#initialize","type":"instance_method","visibility":"public","return":[["ParseError"],"a new instance of ParseError"]},"Gem::RequestSet::Lockfile::ParseError#line":{"description":"The line where the error was encountered","name":"line","namespace":"Gem::RequestSet::Lockfile::ParseError","path":"Gem::RequestSet::Lockfile::ParseError#line","type":"instance_method","visibility":"public"},"Gem::RequestSet::Lockfile::ParseError#path":{"description":"The location of the lock file","name":"path","namespace":"Gem::RequestSet::Lockfile::ParseError","path":"Gem::RequestSet::Lockfile::ParseError#path","type":"instance_method","visibility":"public"},"Gem::Requirement":{"description":"A Requirement is a set of one or more version restrictions. It supports a\nfew (<tt>=, !=, >, <, >=, <=, ~></tt>) different restriction operators.\n\nSee Gem::Version for a description on how versions and requirements work\ntogether in RubyGems.","name":"Requirement","namespace":"Gem","path":"Gem::Requirement","type":"class","visibility":"public"},"Gem::Requirement#==":{"description":":nodoc:","name":"==","namespace":"Gem::Requirement","path":"Gem::Requirement#==","type":"instance_method","visibility":"public"},"Gem::Requirement#===":{"description":"True if +version+ satisfies this Requirement.","name":"=~","namespace":"Gem::Requirement","path":"Gem::Requirement#=~","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#=~":{"description":"True if +version+ satisfies this Requirement.","name":"=~","namespace":"Gem::Requirement","path":"Gem::Requirement#=~","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#as_list":{"description":":nodoc:","name":"as_list","namespace":"Gem::Requirement","path":"Gem::Requirement#as_list","type":"instance_method","visibility":"public"},"Gem::Requirement#concat":{"description":"Concatenates the +new+ requirements onto this requirement.","name":"concat","namespace":"Gem::Requirement","path":"Gem::Requirement#concat","type":"instance_method","visibility":"public"},"Gem::Requirement#encode_with":{"description":":nodoc:","name":"encode_with","namespace":"Gem::Requirement","path":"Gem::Requirement#encode_with","type":"instance_method","visibility":"public"},"Gem::Requirement#exact?":{"description":"true if the requirement is for only an exact version","name":"exact?","namespace":"Gem::Requirement","path":"Gem::Requirement#exact?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#fix_syck_default_key_in_requirements":{"description":":nodoc:","name":"fix_syck_default_key_in_requirements","namespace":"Gem::Requirement","path":"Gem::Requirement#fix_syck_default_key_in_requirements","type":"instance_method","visibility":"private"},"Gem::Requirement#for_lockfile":{"description":"Formats this requirement for use in a Gem::RequestSet::Lockfile.","name":"for_lockfile","namespace":"Gem::Requirement","path":"Gem::Requirement#for_lockfile","type":"instance_method","visibility":"public"},"Gem::Requirement#hash":{"description":":nodoc:","name":"hash","namespace":"Gem::Requirement","path":"Gem::Requirement#hash","type":"instance_method","visibility":"public"},"Gem::Requirement#init_with":{"description":":nodoc:","name":"init_with","namespace":"Gem::Requirement","path":"Gem::Requirement#init_with","type":"instance_method","visibility":"public"},"Gem::Requirement#initialize":{"description":"Constructs a requirement from +requirements+. Requirements can be\nStrings, Gem::Versions, or Arrays of those. +nil+ and duplicate\nrequirements are ignored. An empty set of +requirements+ is the\nsame as <tt>\">= 0\"</tt>.","name":"initialize","namespace":"Gem::Requirement","path":"Gem::Requirement#initialize","type":"instance_method","visibility":"public","return":[["Requirement"],"a new instance of Requirement"]},"Gem::Requirement#marshal_dump":{"description":":nodoc:","name":"marshal_dump","namespace":"Gem::Requirement","path":"Gem::Requirement#marshal_dump","type":"instance_method","visibility":"public"},"Gem::Requirement#marshal_load":{"description":":nodoc:","name":"marshal_load","namespace":"Gem::Requirement","path":"Gem::Requirement#marshal_load","type":"instance_method","visibility":"public"},"Gem::Requirement#none?":{"description":"true if this gem has no requirements.","name":"none?","namespace":"Gem::Requirement","path":"Gem::Requirement#none?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#prerelease?":{"description":"A requirement is a prerelease if any of the versions inside of it\nare prereleases","name":"prerelease?","namespace":"Gem::Requirement","path":"Gem::Requirement#prerelease?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Requirement","path":"Gem::Requirement#pretty_print","type":"instance_method","visibility":"public"},"Gem::Requirement#requirements":{"description":"An array of requirement pairs. The first element of the pair is\nthe op, and the second is the Gem::Version.","name":"requirements","namespace":"Gem::Requirement","path":"Gem::Requirement#requirements","type":"instance_method","visibility":"public"},"Gem::Requirement#satisfied_by?":{"description":"True if +version+ satisfies this Requirement.","name":"=~","namespace":"Gem::Requirement","path":"Gem::Requirement#=~","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#specific?":{"description":"True if the requirement will not always match the latest version.","name":"specific?","namespace":"Gem::Requirement","path":"Gem::Requirement#specific?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Requirement#to_s":{"description":":nodoc:","name":"to_s","namespace":"Gem::Requirement","path":"Gem::Requirement#to_s","type":"instance_method","visibility":"public"},"Gem::Requirement#to_yaml_properties":{"description":":nodoc:","name":"to_yaml_properties","namespace":"Gem::Requirement","path":"Gem::Requirement#to_yaml_properties","type":"instance_method","visibility":"public"},"Gem::Requirement#yaml_initialize":{"description":":nodoc:","name":"yaml_initialize","namespace":"Gem::Requirement","path":"Gem::Requirement#yaml_initialize","type":"instance_method","visibility":"public"},"Gem::Requirement.create":{"description":"Factory method to create a Gem::Requirement object.  Input may be\na Version, a String, or nil.  Intended to simplify client code.\n\nIf the input is \"weird\", the default version requirement is\nreturned.","name":"create","namespace":"Gem::Requirement","path":"Gem::Requirement.create","type":"class_method","visibility":"public"},"Gem::Requirement.default":{"description":"A default \"version requirement\" can surely _only_ be '>= 0'.","name":"default","namespace":"Gem::Requirement","path":"Gem::Requirement.default","type":"class_method","visibility":"public"},"Gem::Requirement.parse":{"description":"Parse +obj+, returning an <tt>[op, version]</tt> pair. +obj+ can\nbe a String or a Gem::Version.\n\nIf +obj+ is a String, it can be either a full requirement\nspecification, like <tt>\">= 1.2\"</tt>, or a simple version number,\nlike <tt>\"1.2\"</tt>.\n\n    parse(\"> 1.0\")                 # => [\">\", \"1.0\"]\n    parse(\"1.0\")                   # => [\"=\", \"1.0\"]\n    parse(Gem::Version.new(\"1.0\")) # => [\"=,  \"1.0\"]","name":"parse","namespace":"Gem::Requirement","path":"Gem::Requirement.parse","type":"class_method","visibility":"public"},"Gem::Requirement::BadRequirementError":{"description":"Raised when a bad requirement is encountered","name":"BadRequirementError","namespace":"Gem::Requirement","path":"Gem::Requirement::BadRequirementError","type":"class","visibility":"public"},"Gem::Requirement::DefaultRequirement":{"description":"The default requirement matches any version","name":"DefaultRequirement","namespace":"Gem::Requirement","path":"Gem::Requirement::DefaultRequirement","type":"constant","return":["Array",""],"visibility":"public"},"Gem::Requirement::OPS":{"description":":nodoc:","name":"OPS","namespace":"Gem::Requirement","path":"Gem::Requirement::OPS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Requirement::PATTERN":{"description":"A regular expression that matches a requirement","name":"PATTERN","namespace":"Gem::Requirement","path":"Gem::Requirement::PATTERN","type":"constant","return":["Regexp",""],"visibility":"public"},"Gem::Requirement::PATTERN_RAW":{"description":":nodoc:","name":"PATTERN_RAW","namespace":"Gem::Requirement","path":"Gem::Requirement::PATTERN_RAW","type":"constant","return":["String",""],"visibility":"public"},"Gem::Resolver":{"description":"Given a set of Gem::Dependency objects as +needed+ and a way to query the\nset of available specs via +set+, calculates a set of ActivationRequest\nobjects which indicate all the specs that should be activated to meet the\nall the requirements.","name":"Resolver","namespace":"Gem","path":"Gem::Resolver","type":"class","visibility":"public"},"Gem::Resolver#activation_request":{"description":"Creates an ActivationRequest for the given +dep+ and the last +possible+\nspecification.\n\nReturns the Specification and the ActivationRequest","name":"activation_request","namespace":"Gem::Resolver","path":"Gem::Resolver#activation_request","type":"instance_method","visibility":"public"},"Gem::Resolver#conflicts":{"description":"Contains all the conflicts encountered while doing resolution","name":"conflicts","namespace":"Gem::Resolver","path":"Gem::Resolver#conflicts","type":"instance_method","visibility":"public"},"Gem::Resolver#development":{"description":"Set to true if all development dependencies should be considered.","name":"development","namespace":"Gem::Resolver","path":"Gem::Resolver#development","type":"instance_method","visibility":"public"},"Gem::Resolver#development=":{"description":"Set to true if all development dependencies should be considered.","name":"development=","namespace":"Gem::Resolver","path":"Gem::Resolver#development=","type":"instance_method","visibility":"public"},"Gem::Resolver#development_shallow":{"description":"Set to true if immediate development dependencies should be considered.","name":"development_shallow","namespace":"Gem::Resolver","path":"Gem::Resolver#development_shallow","type":"instance_method","visibility":"public"},"Gem::Resolver#development_shallow=":{"description":"Set to true if immediate development dependencies should be considered.","name":"development_shallow=","namespace":"Gem::Resolver","path":"Gem::Resolver#development_shallow=","type":"instance_method","visibility":"public"},"Gem::Resolver#explain":{"description":":nodoc:","name":"explain","namespace":"Gem::Resolver","path":"Gem::Resolver#explain","type":"instance_method","visibility":"public"},"Gem::Resolver#explain_list":{"description":":nodoc:","name":"explain_list","namespace":"Gem::Resolver","path":"Gem::Resolver#explain_list","type":"instance_method","visibility":"public"},"Gem::Resolver#find_possible":{"description":"Extracts the specifications that may be able to fulfill +dependency+ and\nreturns those that match the local platform and all those that match.","name":"find_possible","namespace":"Gem::Resolver","path":"Gem::Resolver#find_possible","type":"instance_method","visibility":"public"},"Gem::Resolver#handle_conflict":{"description":":nodoc:","name":"handle_conflict","namespace":"Gem::Resolver","path":"Gem::Resolver#handle_conflict","type":"instance_method","visibility":"public"},"Gem::Resolver#ignore_dependencies":{"description":"When true, no dependencies are looked up for requested gems.","name":"ignore_dependencies","namespace":"Gem::Resolver","path":"Gem::Resolver#ignore_dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver#ignore_dependencies=":{"description":"When true, no dependencies are looked up for requested gems.","name":"ignore_dependencies=","namespace":"Gem::Resolver","path":"Gem::Resolver#ignore_dependencies=","type":"instance_method","visibility":"public"},"Gem::Resolver#initialize":{"description":"Create Resolver object which will resolve the tree starting\nwith +needed+ Dependency objects.\n\n+set+ is an object that provides where to look for specifications to\nsatisfy the Dependencies. This defaults to IndexSet, which will query\nrubygems.org.","name":"initialize","namespace":"Gem::Resolver","path":"Gem::Resolver#initialize","type":"instance_method","visibility":"public","return":[["Resolver"],"a new instance of Resolver"]},"Gem::Resolver#missing":{"description":"List of dependencies that could not be found in the configured sources.","name":"missing","namespace":"Gem::Resolver","path":"Gem::Resolver#missing","type":"instance_method","visibility":"public"},"Gem::Resolver#requests":{"description":":nodoc:","name":"requests","namespace":"Gem::Resolver","path":"Gem::Resolver#requests","type":"instance_method","visibility":"public"},"Gem::Resolver#resolve":{"description":"Proceed with resolution! Returns an array of ActivationRequest objects.","name":"resolve","namespace":"Gem::Resolver","path":"Gem::Resolver#resolve","type":"instance_method","visibility":"public"},"Gem::Resolver#resolve_for":{"description":"The meat of the algorithm. Given +needed+ DependencyRequest objects and\n+specs+ being a list to ActivationRequest, calculate a new list of\nActivationRequest objects.","name":"resolve_for","namespace":"Gem::Resolver","path":"Gem::Resolver#resolve_for","type":"instance_method","visibility":"public"},"Gem::Resolver#resolve_for_conflict":{"description":"Rewinds +needed+ and +specs+ to a previous state in +state+ for a conflict\nbetween +dep+ and +existing+.","name":"resolve_for_conflict","namespace":"Gem::Resolver","path":"Gem::Resolver#resolve_for_conflict","type":"instance_method","visibility":"public"},"Gem::Resolver#resolve_for_multiple":{"description":"There are multiple +possible+ specifications for this +dep+.  Updates\n+needed+, +specs+ and +states+ for further resolution of the +possible+\nchoices.","name":"resolve_for_multiple","namespace":"Gem::Resolver","path":"Gem::Resolver#resolve_for_multiple","type":"instance_method","visibility":"public"},"Gem::Resolver#resolve_for_single":{"description":"Add the spec from the +possible+ list to +specs+ and process the spec's\ndependencies by adding them to +needed+.","name":"resolve_for_single","namespace":"Gem::Resolver","path":"Gem::Resolver#resolve_for_single","type":"instance_method","visibility":"public"},"Gem::Resolver#resolve_for_zero":{"description":"When there are no possible specifications for +dep+ our work is done.","name":"resolve_for_zero","namespace":"Gem::Resolver","path":"Gem::Resolver#resolve_for_zero","type":"instance_method","visibility":"public"},"Gem::Resolver#select_local_platforms":{"description":"Returns the gems in +specs+ that match the local platform.","name":"select_local_platforms","namespace":"Gem::Resolver","path":"Gem::Resolver#select_local_platforms","type":"instance_method","visibility":"public"},"Gem::Resolver#skip_gems":{"description":"Hash of gems to skip resolution.  Keyed by gem name, with arrays of\ngem specifications as values.","name":"skip_gems","namespace":"Gem::Resolver","path":"Gem::Resolver#skip_gems","type":"instance_method","visibility":"public"},"Gem::Resolver#skip_gems=":{"description":"Hash of gems to skip resolution.  Keyed by gem name, with arrays of\ngem specifications as values.","name":"skip_gems=","namespace":"Gem::Resolver","path":"Gem::Resolver#skip_gems=","type":"instance_method","visibility":"public"},"Gem::Resolver#soft_missing":{"description":"When a missing dependency, don't stop. Just go on and record what was\nmissing.","name":"soft_missing","namespace":"Gem::Resolver","path":"Gem::Resolver#soft_missing","type":"instance_method","visibility":"public"},"Gem::Resolver#soft_missing=":{"description":"When a missing dependency, don't stop. Just go on and record what was\nmissing.","name":"soft_missing=","namespace":"Gem::Resolver","path":"Gem::Resolver#soft_missing=","type":"instance_method","visibility":"public"},"Gem::Resolver#stats":{"description":"Returns the value of attribute stats","name":"stats","namespace":"Gem::Resolver","path":"Gem::Resolver#stats","type":"instance_method","visibility":"public"},"Gem::Resolver.compose_sets":{"description":"Combines +sets+ into a ComposedSet that allows specification lookup in a\nuniform manner.  If one of the +sets+ is itself a ComposedSet its sets are\nflattened into the result ComposedSet.","name":"compose_sets","namespace":"Gem::Resolver","path":"Gem::Resolver.compose_sets","type":"class_method","visibility":"public"},"Gem::Resolver.for_current_gems":{"description":"Creates a Resolver that queries only against the already installed gems\nfor the +needed+ dependencies.","name":"for_current_gems","namespace":"Gem::Resolver","path":"Gem::Resolver.for_current_gems","type":"class_method","visibility":"public"},"Gem::Resolver::APISet":{"description":"The global rubygems pool, available via the rubygems.org API.\nReturns instances of APISpecification.","name":"APISet","namespace":"Gem::Resolver","path":"Gem::Resolver::APISet","type":"class","visibility":"public"},"Gem::Resolver::APISet#dep_uri":{"description":"The URI for the dependency API this APISet uses.","name":"dep_uri","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#dep_uri","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#find_all":{"description":"Return an array of APISpecification objects matching\nDependencyRequest +req+.","name":"find_all","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#initialize":{"description":"Creates a new APISet that will retrieve gems from +uri+ using the RubyGems\nAPI URL +dep_uri+ which is described at\nhttp://guides.rubygems.org/rubygems-org-api","name":"initialize","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#initialize","type":"instance_method","visibility":"public","return":[["APISet"],"a new instance of APISet"]},"Gem::Resolver::APISet#prefetch":{"description":"A hint run by the resolver to allow the Set to fetch\ndata for DependencyRequests +reqs+.","name":"prefetch","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#prefetch","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#prefetch_now":{"description":":nodoc:","name":"prefetch_now","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#prefetch_now","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#source":{"description":"The Gem::Source that gems are fetched from","name":"source","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#source","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#uri":{"description":"The corresponding place to fetch gems.","name":"uri","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#uri","type":"instance_method","visibility":"public"},"Gem::Resolver::APISet#versions":{"description":"Return data for all versions of the gem +name+.","name":"versions","namespace":"Gem::Resolver::APISet","path":"Gem::Resolver::APISet#versions","type":"instance_method","visibility":"public"},"Gem::Resolver::APISpecification":{"description":"Represents a specification retrieved via the rubygems.org API.\n\nThis is used to avoid loading the full Specification object when all we need\nis the name, version, and dependencies.","name":"APISpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::APISpecification","type":"class","visibility":"public"},"Gem::Resolver::APISpecification#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#==","type":"instance_method","visibility":"public"},"Gem::Resolver::APISpecification#fetch_development_dependencies":{"description":":nodoc:","name":"fetch_development_dependencies","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#fetch_development_dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::APISpecification#initialize":{"description":"Creates an APISpecification for the given +set+ from the rubygems.org\n+api_data+.\n\nSee http://guides.rubygems.org/rubygems-org-api/#misc_methods for the\nformat of the +api_data+.","name":"initialize","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#initialize","type":"instance_method","visibility":"public","return":[["APISpecification"],"a new instance of APISpecification"]},"Gem::Resolver::APISpecification#installable_platform?":{"description":":nodoc:","name":"installable_platform?","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#installable_platform?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::APISpecification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::APISpecification#source":{"description":":nodoc:","name":"source","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#source","type":"instance_method","visibility":"public"},"Gem::Resolver::APISpecification#spec":{"description":"Fetches a Gem::Specification for this APISpecification.","name":"spec","namespace":"Gem::Resolver::APISpecification","path":"Gem::Resolver::APISpecification#spec","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest":{"description":"Specifies a Specification object that should be activated.  Also contains a\ndependency that was used to introduce this activation.","name":"ActivationRequest","namespace":"Gem::Resolver","path":"Gem::Resolver::ActivationRequest","type":"class","visibility":"public"},"Gem::Resolver::ActivationRequest#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#==","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#development?":{"description":"Is this activation request for a development dependency?","name":"development?","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#development?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::ActivationRequest#download":{"description":"Downloads a gem at +path+ and returns the file path.","name":"download","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#download","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#full_name":{"description":"The full name of the specification to be activated.","name":"full_name","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#full_name","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#full_spec":{"description":"The Gem::Specification for this activation request.","name":"full_spec","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#full_spec","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#initialize":{"description":"Creates a new ActivationRequest that will activate +spec+.  The parent\n+request+ is used to provide diagnostics in case of conflicts.\n\n+others_possible+ indicates that other specifications may also match this\nactivation request.","name":"initialize","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#initialize","type":"instance_method","visibility":"public","return":[["ActivationRequest"],"a new instance of ActivationRequest"]},"Gem::Resolver::ActivationRequest#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#inspect","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#installed?":{"description":"True if the requested gem has already been installed.","name":"installed?","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#installed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::ActivationRequest#name":{"description":"The name of this activation request's specification","name":"name","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#name","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#others_possible?":{"description":"Indicate if this activation is one of a set of possible\nrequests for the same Dependency request.","name":"others_possible?","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#others_possible?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::ActivationRequest#parent":{"description":"Return the ActivationRequest that contained the dependency\nthat we were activated for.","name":"parent","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#parent","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#request":{"description":"The parent request for this activation request.","name":"request","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#request","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#spec":{"description":"The specification to be activated.","name":"spec","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#spec","type":"instance_method","visibility":"public"},"Gem::Resolver::ActivationRequest#version":{"description":"The version of this activation request's specification","name":"version","namespace":"Gem::Resolver::ActivationRequest","path":"Gem::Resolver::ActivationRequest#version","type":"instance_method","visibility":"public"},"Gem::Resolver::BestSet":{"description":"The BestSet chooses the best available method to query a remote index.\n\nIt combines IndexSet and APISet","name":"BestSet","namespace":"Gem::Resolver","path":"Gem::Resolver::BestSet","type":"class","visibility":"public"},"Gem::Resolver::BestSet#find_all":{"description":":nodoc:","name":"find_all","namespace":"Gem::Resolver::BestSet","path":"Gem::Resolver::BestSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::BestSet#initialize":{"description":"Creates a BestSet for the given +sources+ or Gem::sources if none are\nspecified.  +sources+ must be a Gem::SourceList.","name":"initialize","namespace":"Gem::Resolver::BestSet","path":"Gem::Resolver::BestSet#initialize","type":"instance_method","visibility":"public","return":[["BestSet"],"a new instance of BestSet"]},"Gem::Resolver::BestSet#pick_sets":{"description":"Picks which sets to use for the configured sources.","name":"pick_sets","namespace":"Gem::Resolver::BestSet","path":"Gem::Resolver::BestSet#pick_sets","type":"instance_method","visibility":"public"},"Gem::Resolver::BestSet#prefetch":{"description":":nodoc:","name":"prefetch","namespace":"Gem::Resolver::BestSet","path":"Gem::Resolver::BestSet#prefetch","type":"instance_method","visibility":"public"},"Gem::Resolver::BestSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::BestSet","path":"Gem::Resolver::BestSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::BestSet#replace_failed_api_set":{"description":"Replaces a failed APISet for the URI in +error+ with an IndexSet.\n\nIf no matching APISet can be found the original +error+ is raised.\n\nThe calling method must retry the exception to repeat the lookup.","name":"replace_failed_api_set","namespace":"Gem::Resolver::BestSet","path":"Gem::Resolver::BestSet#replace_failed_api_set","type":"instance_method","visibility":"public"},"Gem::Resolver::ComposedSet":{"description":"A ComposedSet allows multiple sets to be queried like a single set.\n\nTo create a composed set with any number of sets use:\n\n  Gem::Resolver.compose_sets set1, set2\n\nThis method will eliminate nesting of composed sets.","name":"ComposedSet","namespace":"Gem::Resolver","path":"Gem::Resolver::ComposedSet","type":"class","visibility":"public"},"Gem::Resolver::ComposedSet#errors":{"description":"","name":"errors","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#errors","type":"instance_method","visibility":"public"},"Gem::Resolver::ComposedSet#find_all":{"description":"Finds all specs matching +req+ in all sets.","name":"find_all","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::ComposedSet#initialize":{"description":"Creates a new ComposedSet containing +sets+.  Use\nGem::Resolver::compose_sets instead.","name":"initialize","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#initialize","type":"instance_method","visibility":"public","return":[["ComposedSet"],"a new instance of ComposedSet"]},"Gem::Resolver::ComposedSet#prefetch":{"description":"Prefetches +reqs+ in all sets.","name":"prefetch","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#prefetch","type":"instance_method","visibility":"public"},"Gem::Resolver::ComposedSet#prerelease=":{"description":"When +allow_prerelease+ is set to +true+ prereleases gems are allowed to\nmatch dependencies.","name":"prerelease=","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#prerelease=","type":"instance_method","visibility":"public"},"Gem::Resolver::ComposedSet#remote=":{"description":"Sets the remote network access for all composed sets.","name":"remote=","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#remote=","type":"instance_method","visibility":"public"},"Gem::Resolver::ComposedSet#sets":{"description":":nodoc:","name":"sets","namespace":"Gem::Resolver::ComposedSet","path":"Gem::Resolver::ComposedSet#sets","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict":{"description":"Used internally to indicate that a dependency conflicted\nwith a spec that would be activated.","name":"Conflict","namespace":"Gem::Resolver","path":"Gem::Resolver::Conflict","type":"class","visibility":"public"},"Gem::Resolver::Conflict#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#==","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#activated":{"description":"The specification that was activated prior to the conflict","name":"activated","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#activated","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#conflicting_dependencies":{"description":"Return the 2 dependency objects that conflicted","name":"conflicting_dependencies","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#conflicting_dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#dependency":{"description":"The dependency that is in conflict with the activated gem.","name":"dependency","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#dependency","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#explain":{"description":"A string explanation of the conflict.","name":"explain","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#explain","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#explanation":{"description":"Explanation of the conflict used by exceptions to print useful messages","name":"explanation","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#explanation","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#failed_dep":{"description":":nodoc:","name":"failed_dep","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#failed_dep","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#for_spec?":{"description":"Returns true if the conflicting dependency's name matches +spec+.","name":"for_spec?","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#for_spec?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::Conflict#initialize":{"description":"Creates a new resolver conflict when +dependency+ is in conflict with an\nalready +activated+ specification.","name":"initialize","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#initialize","type":"instance_method","visibility":"public","return":[["Conflict"],"a new instance of Conflict"]},"Gem::Resolver::Conflict#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#request_path":{"description":"Path of activations from the +current+ list.","name":"request_path","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#request_path","type":"instance_method","visibility":"public"},"Gem::Resolver::Conflict#requester":{"description":"Return the Specification that listed the dependency","name":"requester","namespace":"Gem::Resolver::Conflict","path":"Gem::Resolver::Conflict#requester","type":"instance_method","visibility":"public"},"Gem::Resolver::CurrentSet":{"description":"A set which represents the installed gems. Respects\nall the normal settings that control where to look\nfor installed gems.","name":"CurrentSet","namespace":"Gem::Resolver","path":"Gem::Resolver::CurrentSet","type":"class","visibility":"public"},"Gem::Resolver::CurrentSet#find_all":{"description":"","name":"find_all","namespace":"Gem::Resolver::CurrentSet","path":"Gem::Resolver::CurrentSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::DEBUG_RESOLVER":{"description":"If the DEBUG_RESOLVER environment variable is set then debugging mode is\nenabled for the resolver.  This will display information about the state\nof the resolver while a set of dependencies is being resolved.","name":"DEBUG_RESOLVER","namespace":"Gem::Resolver","path":"Gem::Resolver::DEBUG_RESOLVER","type":"constant","return":["FalseClass",""],"visibility":"public"},"Gem::Resolver::DependencyConflict":{"description":"TODO: Remove in RubyGems 3","name":"DependencyConflict","namespace":"Gem::Resolver","path":"Gem::Resolver::DependencyConflict","type":"constant","return":["Class",""],"visibility":"public"},"Gem::Resolver::DependencyRequest":{"description":"Used Internally. Wraps a Dependency object to also track which spec\ncontained the Dependency.","name":"DependencyRequest","namespace":"Gem::Resolver","path":"Gem::Resolver::DependencyRequest","type":"class","visibility":"public"},"Gem::Resolver::DependencyRequest#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#==","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#dependency":{"description":"The wrapped Gem::Dependency","name":"dependency","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#dependency","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#development?":{"description":"Is this dependency a development dependency?","name":"development?","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#development?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::DependencyRequest#explicit?":{"description":"Indicate that the request is for a gem explicitly requested by the user","name":"explicit?","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#explicit?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::DependencyRequest#implicit?":{"description":"Indicate that the request is for a gem requested as a dependency of\nanother gem","name":"implicit?","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#implicit?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::DependencyRequest#initialize":{"description":"Creates a new DependencyRequest for +dependency+ from +requester+.\n+requester may be nil if the request came from a user.","name":"initialize","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#initialize","type":"instance_method","visibility":"public","return":[["DependencyRequest"],"a new instance of DependencyRequest"]},"Gem::Resolver::DependencyRequest#match?":{"description":"Does this dependency request match +spec+?\n\nNOTE:  #match? only matches prerelease versions when #dependency is a\nprerelease dependency.","name":"match?","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#match?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::DependencyRequest#matches_spec?":{"description":"Does this dependency request match +spec+?\n\nNOTE:  #matches_spec? matches prerelease versions.  See also #match?","name":"matches_spec?","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#matches_spec?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::DependencyRequest#name":{"description":"The name of the gem this dependency request is requesting.","name":"name","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#name","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#request_context":{"description":"Return a String indicating who caused this request to be added (only\nvalid for implicit requests)","name":"request_context","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#request_context","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#requester":{"description":"The request for this dependency.","name":"requester","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#requester","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#requirement":{"description":"The version requirement for this dependency request","name":"requirement","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#requirement","type":"instance_method","visibility":"public"},"Gem::Resolver::DependencyRequest#to_s":{"description":":nodoc:","name":"to_s","namespace":"Gem::Resolver::DependencyRequest","path":"Gem::Resolver::DependencyRequest#to_s","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet":{"description":"A GitSet represents gems that are sourced from git repositories.\n\nThis is used for gem dependency file support.\n\nExample:\n\n  set = Gem::Resolver::GitSet.new\n  set.add_git_gem 'rake', 'git://example/rake.git', tag: 'rake-10.1.0'","name":"GitSet","namespace":"Gem::Resolver","path":"Gem::Resolver::GitSet","type":"class","visibility":"public"},"Gem::Resolver::GitSet#add_git_gem":{"description":":nodoc:","name":"add_git_gem","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#add_git_gem","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#add_git_spec":{"description":"Adds and returns a GitSpecification with the given +name+ and +version+\nwhich came from a +repository+ at the given +reference+.  If +submodules+\nis true they are checked out along with the repository.\n\nThis fills in the prefetch information as enough information about the gem\nis present in the arguments.","name":"add_git_spec","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#add_git_spec","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#find_all":{"description":"Finds all git gems matching +req+","name":"find_all","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#initialize","type":"instance_method","visibility":"public","return":[["GitSet"],"a new instance of GitSet"]},"Gem::Resolver::GitSet#need_submodules":{"description":"Contains repositories needing submodules","name":"need_submodules","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#need_submodules","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#prefetch":{"description":"Prefetches specifications from the git repositories in this set.","name":"prefetch","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#prefetch","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#repositories":{"description":"A Hash containing git gem names for keys and a Hash of repository and\ngit commit reference as values.","name":"repositories","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#repositories","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#root_dir":{"description":"The root directory for git gems in this set.  This is usually Gem.dir, the\ninstallation directory for regular gems.","name":"root_dir","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#root_dir","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#root_dir=":{"description":"The root directory for git gems in this set.  This is usually Gem.dir, the\ninstallation directory for regular gems.","name":"root_dir=","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#root_dir=","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSet#specs":{"description":"A hash of gem names to Gem::Resolver::GitSpecifications","name":"specs","namespace":"Gem::Resolver::GitSet","path":"Gem::Resolver::GitSet#specs","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSpecification":{"description":"A GitSpecification represents a gem that is sourced from a git repository\nand is being loaded through a gem dependencies file through the +git:+\noption.","name":"GitSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::GitSpecification","type":"class","visibility":"public"},"Gem::Resolver::GitSpecification#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::GitSpecification","path":"Gem::Resolver::GitSpecification#==","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSpecification#add_dependency":{"description":":nodoc:","name":"add_dependency","namespace":"Gem::Resolver::GitSpecification","path":"Gem::Resolver::GitSpecification#add_dependency","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSpecification#install":{"description":"Installing a git gem only involves building the extensions and generating\nthe executables.","name":"install","namespace":"Gem::Resolver::GitSpecification","path":"Gem::Resolver::GitSpecification#install","type":"instance_method","visibility":"public"},"Gem::Resolver::GitSpecification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::GitSpecification","path":"Gem::Resolver::GitSpecification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::IndexSet":{"description":"The global rubygems pool represented via the traditional\nsource index.","name":"IndexSet","namespace":"Gem::Resolver","path":"Gem::Resolver::IndexSet","type":"class","visibility":"public"},"Gem::Resolver::IndexSet#find_all":{"description":"Return an array of IndexSpecification objects matching\nDependencyRequest +req+.","name":"find_all","namespace":"Gem::Resolver::IndexSet","path":"Gem::Resolver::IndexSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::IndexSet#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Resolver::IndexSet","path":"Gem::Resolver::IndexSet#initialize","type":"instance_method","visibility":"public","return":[["IndexSet"],"a new instance of IndexSet"]},"Gem::Resolver::IndexSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::IndexSet","path":"Gem::Resolver::IndexSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::IndexSpecification":{"description":"Represents a possible Specification object returned from IndexSet.  Used to\ndelay needed to download full Specification objects when only the +name+\nand +version+ are needed.","name":"IndexSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::IndexSpecification","type":"class","visibility":"public"},"Gem::Resolver::IndexSpecification#dependencies":{"description":"The dependencies of the gem for this specification","name":"dependencies","namespace":"Gem::Resolver::IndexSpecification","path":"Gem::Resolver::IndexSpecification#dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::IndexSpecification#initialize":{"description":"An IndexSpecification is created from the index format described in `gem\nhelp generate_index`.\n\nThe +set+ contains other specifications for this (URL) +source+.\n\nThe +name+, +version+ and +platform+ are the name, version and platform of\nthe gem.","name":"initialize","namespace":"Gem::Resolver::IndexSpecification","path":"Gem::Resolver::IndexSpecification#initialize","type":"instance_method","visibility":"public","return":[["IndexSpecification"],"a new instance of IndexSpecification"]},"Gem::Resolver::IndexSpecification#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Resolver::IndexSpecification","path":"Gem::Resolver::IndexSpecification#inspect","type":"instance_method","visibility":"public"},"Gem::Resolver::IndexSpecification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::IndexSpecification","path":"Gem::Resolver::IndexSpecification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::IndexSpecification#spec":{"description":"Fetches a Gem::Specification for this IndexSpecification from the #source.","name":"spec","namespace":"Gem::Resolver::IndexSpecification","path":"Gem::Resolver::IndexSpecification#spec","type":"instance_method","visibility":"public"},"Gem::Resolver::InstalledSpecification":{"description":"An InstalledSpecification represents a gem that is already installed\nlocally.","name":"InstalledSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::InstalledSpecification","type":"class","visibility":"public"},"Gem::Resolver::InstalledSpecification#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::InstalledSpecification","path":"Gem::Resolver::InstalledSpecification#==","type":"instance_method","visibility":"public"},"Gem::Resolver::InstalledSpecification#install":{"description":"This is a null install as this specification is already installed.\n+options+ are ignored.","name":"install","namespace":"Gem::Resolver::InstalledSpecification","path":"Gem::Resolver::InstalledSpecification#install","type":"instance_method","visibility":"public"},"Gem::Resolver::InstalledSpecification#installable_platform?":{"description":"Returns +true+ if this gem is installable for the current platform.","name":"installable_platform?","namespace":"Gem::Resolver::InstalledSpecification","path":"Gem::Resolver::InstalledSpecification#installable_platform?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::InstalledSpecification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::InstalledSpecification","path":"Gem::Resolver::InstalledSpecification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::InstalledSpecification#source":{"description":"The source for this specification","name":"source","namespace":"Gem::Resolver::InstalledSpecification","path":"Gem::Resolver::InstalledSpecification#source","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet":{"description":"A set of gems for installation sourced from remote sources and local .gem\nfiles","name":"InstallerSet","namespace":"Gem::Resolver","path":"Gem::Resolver::InstallerSet","type":"class","visibility":"public"},"Gem::Resolver::InstallerSet#add_always_install":{"description":"Looks up the latest specification for +dependency+ and adds it to the\nalways_install list.","name":"add_always_install","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#add_always_install","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#add_local":{"description":"Adds a local gem requested using +dep_name+ with the given +spec+ that can\nbe loaded and installed using the +source+.","name":"add_local","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#add_local","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#always_install":{"description":"List of Gem::Specification objects that must always be installed.","name":"always_install","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#always_install","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#consider_local?":{"description":"Should local gems should be considered?","name":"consider_local?","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#consider_local?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::InstallerSet#consider_remote?":{"description":"Should remote gems should be considered?","name":"consider_remote?","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#consider_remote?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::InstallerSet#errors":{"description":"Errors encountered while resolving gems","name":"errors","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#errors","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#find_all":{"description":"Returns an array of IndexSpecification objects matching DependencyRequest\n+req+.","name":"find_all","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#ignore_dependencies":{"description":"Only install gems in the always_install list","name":"ignore_dependencies","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#ignore_dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#ignore_dependencies=":{"description":"Only install gems in the always_install list","name":"ignore_dependencies=","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#ignore_dependencies=","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#ignore_installed":{"description":"Do not look in the installed set when finding specifications.  This is\nused by the --install-dir option to `gem install`","name":"ignore_installed","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#ignore_installed","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#ignore_installed=":{"description":"Do not look in the installed set when finding specifications.  This is\nused by the --install-dir option to `gem install`","name":"ignore_installed=","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#ignore_installed=","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#initialize":{"description":"Creates a new InstallerSet that will look for gems in +domain+.","name":"initialize","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#initialize","type":"instance_method","visibility":"public","return":[["InstallerSet"],"a new instance of InstallerSet"]},"Gem::Resolver::InstallerSet#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#inspect","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#load_spec":{"description":"Called from IndexSpecification to get a true Specification\nobject.","name":"load_spec","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#load_spec","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#local?":{"description":"Has a local gem for +dep_name+ been added to this set?","name":"local?","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#local?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::InstallerSet#prefetch":{"description":"","name":"prefetch","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#prefetch","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#prerelease=":{"description":"","name":"prerelease=","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#prerelease=","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#remote=":{"description":":nodoc:","name":"remote=","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#remote=","type":"instance_method","visibility":"public"},"Gem::Resolver::InstallerSet#remote_set":{"description":"The remote_set looks up remote gems for installation.","name":"remote_set","namespace":"Gem::Resolver::InstallerSet","path":"Gem::Resolver::InstallerSet#remote_set","type":"instance_method","visibility":"public"},"Gem::Resolver::LocalSpecification":{"description":"A LocalSpecification comes from a .gem file on the local filesystem.","name":"LocalSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::LocalSpecification","type":"class","visibility":"public"},"Gem::Resolver::LocalSpecification#installable_platform?":{"description":"Returns +true+ if this gem is installable for the current platform.","name":"installable_platform?","namespace":"Gem::Resolver::LocalSpecification","path":"Gem::Resolver::LocalSpecification#installable_platform?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::LocalSpecification#local?":{"description":":nodoc:","name":"local?","namespace":"Gem::Resolver::LocalSpecification","path":"Gem::Resolver::LocalSpecification#local?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::LocalSpecification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::LocalSpecification","path":"Gem::Resolver::LocalSpecification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSet":{"description":"A set of gems from a gem dependencies lockfile.","name":"LockSet","namespace":"Gem::Resolver","path":"Gem::Resolver::LockSet","type":"class","visibility":"public"},"Gem::Resolver::LockSet#add":{"description":"Creates a new IndexSpecification in this set using the given +name+,\n+version+ and +platform+.\n\nThe specification's set will be the current set, and the source will be\nthe current set's source.","name":"add","namespace":"Gem::Resolver::LockSet","path":"Gem::Resolver::LockSet#add","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSet#find_all":{"description":"Returns an Array of IndexSpecification objects matching the\nDependencyRequest +req+.","name":"find_all","namespace":"Gem::Resolver::LockSet","path":"Gem::Resolver::LockSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSet#initialize":{"description":"Creates a new LockSet from the given +sources+","name":"initialize","namespace":"Gem::Resolver::LockSet","path":"Gem::Resolver::LockSet#initialize","type":"instance_method","visibility":"public","return":[["LockSet"],"a new instance of LockSet"]},"Gem::Resolver::LockSet#load_spec":{"description":"Loads a Gem::Specification with the given +name+, +version+ and\n+platform+.  +source+ is ignored.","name":"load_spec","namespace":"Gem::Resolver::LockSet","path":"Gem::Resolver::LockSet#load_spec","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::LockSet","path":"Gem::Resolver::LockSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSet#specs":{"description":":nodoc:","name":"specs","namespace":"Gem::Resolver::LockSet","path":"Gem::Resolver::LockSet#specs","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSpecification":{"description":"The LockSpecification comes from a lockfile (Gem::RequestSet::Lockfile).\n\nA LockSpecification's dependency information is pre-filled from the\nlockfile.","name":"LockSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::LockSpecification","type":"class","visibility":"public"},"Gem::Resolver::LockSpecification#add_dependency":{"description":"Adds +dependency+ from the lockfile to this specification","name":"add_dependency","namespace":"Gem::Resolver::LockSpecification","path":"Gem::Resolver::LockSpecification#add_dependency","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSpecification#initialize":{"description":"","name":"initialize","namespace":"Gem::Resolver::LockSpecification","path":"Gem::Resolver::LockSpecification#initialize","type":"instance_method","visibility":"public","return":[["LockSpecification"],"a new instance of LockSpecification"]},"Gem::Resolver::LockSpecification#install":{"description":"This is a null install as a locked specification is considered installed.\n+options+ are ignored.","name":"install","namespace":"Gem::Resolver::LockSpecification","path":"Gem::Resolver::LockSpecification#install","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSpecification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::LockSpecification","path":"Gem::Resolver::LockSpecification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::LockSpecification#spec":{"description":"A specification constructed from the lockfile is returned","name":"spec","namespace":"Gem::Resolver::LockSpecification","path":"Gem::Resolver::LockSpecification#spec","type":"instance_method","visibility":"public"},"Gem::Resolver::RequirementList":{"description":"The RequirementList is used to hold the requirements being considered\nwhile resolving a set of gems.\n\nThe RequirementList acts like a queue where the oldest items are removed\nfirst.","name":"RequirementList","namespace":"Gem::Resolver","path":"Gem::Resolver::RequirementList","type":"class","visibility":"public"},"Gem::Resolver::RequirementList#add":{"description":"Adds Resolver::DependencyRequest +req+ to this requirements list.","name":"add","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#add","type":"instance_method","visibility":"public"},"Gem::Resolver::RequirementList#each":{"description":"Enumerates requirements in the list","name":"each","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#each","type":"instance_method","visibility":"public"},"Gem::Resolver::RequirementList#empty?":{"description":"Is the list empty?","name":"empty?","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::RequirementList#initialize":{"description":"Creates a new RequirementList.","name":"initialize","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#initialize","type":"instance_method","visibility":"public","return":[["RequirementList"],"a new instance of RequirementList"]},"Gem::Resolver::RequirementList#initialize_copy":{"description":":nodoc:","name":"initialize_copy","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#initialize_copy","type":"instance_method","visibility":"public"},"Gem::Resolver::RequirementList#next5":{"description":"Returns the oldest five entries from the list.","name":"next5","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#next5","type":"instance_method","visibility":"public"},"Gem::Resolver::RequirementList#remove":{"description":"Remove the oldest DependencyRequest from the list.","name":"remove","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#remove","type":"instance_method","visibility":"public"},"Gem::Resolver::RequirementList#size":{"description":"How many elements are in the list","name":"size","namespace":"Gem::Resolver::RequirementList","path":"Gem::Resolver::RequirementList#size","type":"instance_method","visibility":"public"},"Gem::Resolver::Set":{"description":"Resolver sets are used to look up specifications (and their\ndependencies) used in resolution.  This set is abstract.","name":"Set","namespace":"Gem::Resolver","path":"Gem::Resolver::Set","type":"class","visibility":"public"},"Gem::Resolver::Set#errors":{"description":"Errors encountered when resolving gems","name":"errors","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#errors","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#errors=":{"description":"Errors encountered when resolving gems","name":"errors=","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#errors=","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#find_all":{"description":"The find_all method must be implemented.  It returns all Resolver\nSpecification objects matching the given DependencyRequest +req+.","name":"find_all","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#initialize","type":"instance_method","visibility":"public","return":[["Set"],"a new instance of Set"]},"Gem::Resolver::Set#prefetch":{"description":"The #prefetch method may be overridden, but this is not necessary.  This\ndefault implementation does nothing, which is suitable for sets where\nlooking up a specification is cheap (such as installed gems).\n\nWhen overridden, the #prefetch method should look up specifications\nmatching +reqs+.","name":"prefetch","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#prefetch","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#prerelease":{"description":"When true, allows matching of requests to prerelease gems.","name":"prerelease","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#prerelease","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#prerelease=":{"description":"When true, allows matching of requests to prerelease gems.","name":"prerelease=","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#prerelease=","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#remote":{"description":"Set to true to disable network access for this set","name":"remote","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#remote","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#remote=":{"description":"Set to true to disable network access for this set","name":"remote=","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#remote=","type":"instance_method","visibility":"public"},"Gem::Resolver::Set#remote?":{"description":"When true, this set is allowed to access the network when looking up\nspecifications or dependencies.","name":"remote?","namespace":"Gem::Resolver::Set","path":"Gem::Resolver::Set#remote?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::SpecSpecification":{"description":"The Resolver::SpecSpecification contains common functionality for\nResolver specifications that are backed by a Gem::Specification.","name":"SpecSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::SpecSpecification","type":"class","visibility":"public"},"Gem::Resolver::SpecSpecification#dependencies":{"description":"The dependencies of the gem for this specification","name":"dependencies","namespace":"Gem::Resolver::SpecSpecification","path":"Gem::Resolver::SpecSpecification#dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::SpecSpecification#full_name":{"description":"The name and version of the specification.\n\nUnlike Gem::Specification#full_name, the platform is not included.","name":"full_name","namespace":"Gem::Resolver::SpecSpecification","path":"Gem::Resolver::SpecSpecification#full_name","type":"instance_method","visibility":"public"},"Gem::Resolver::SpecSpecification#initialize":{"description":"A SpecSpecification is created for a +set+ for a Gem::Specification in\n+spec+.  The +source+ is either where the +spec+ came from, or should be\nloaded from.","name":"initialize","namespace":"Gem::Resolver::SpecSpecification","path":"Gem::Resolver::SpecSpecification#initialize","type":"instance_method","visibility":"public","return":[["SpecSpecification"],"a new instance of SpecSpecification"]},"Gem::Resolver::SpecSpecification#name":{"description":"The name of the gem for this specification","name":"name","namespace":"Gem::Resolver::SpecSpecification","path":"Gem::Resolver::SpecSpecification#name","type":"instance_method","visibility":"public"},"Gem::Resolver::SpecSpecification#platform":{"description":"The platform this gem works on.","name":"platform","namespace":"Gem::Resolver::SpecSpecification","path":"Gem::Resolver::SpecSpecification#platform","type":"instance_method","visibility":"public"},"Gem::Resolver::SpecSpecification#version":{"description":"The version of the gem for this specification.","name":"version","namespace":"Gem::Resolver::SpecSpecification","path":"Gem::Resolver::SpecSpecification#version","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification":{"description":"A Resolver::Specification contains a subset of the information\ncontained in a Gem::Specification.  Only the information necessary for\ndependency resolution in the resolver is included.","name":"Specification","namespace":"Gem::Resolver","path":"Gem::Resolver::Specification","type":"class","visibility":"public"},"Gem::Resolver::Specification#dependencies":{"description":"The dependencies of the gem for this specification","name":"dependencies","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#fetch_development_dependencies":{"description":"Fetches development dependencies if the source does not provide them by\ndefault (see APISpecification).","name":"fetch_development_dependencies","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#fetch_development_dependencies","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#full_name":{"description":"The name and version of the specification.\n\nUnlike Gem::Specification#full_name, the platform is not included.","name":"full_name","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#full_name","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#initialize":{"description":"Sets default instance variables for the specification.","name":"initialize","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#initialize","type":"instance_method","visibility":"public","return":[["Specification"],"a new instance of Specification"]},"Gem::Resolver::Specification#install":{"description":"Installs this specification using the Gem::Installer +options+.  The\ninstall method yields a Gem::Installer instance, which indicates the\ngem will be installed, or +nil+, which indicates the gem is already\ninstalled.\n\nAfter installation #spec is updated to point to the just-installed\nspecification.","name":"install","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#install","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#installable_platform?":{"description":"Returns true if this specification is installable on this platform.","name":"installable_platform?","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#installable_platform?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::Specification#local?":{"description":":nodoc:","name":"local?","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#local?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Resolver::Specification#name":{"description":"The name of the gem for this specification","name":"name","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#name","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#platform":{"description":"The platform this gem works on.","name":"platform","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#platform","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#set":{"description":"The set this specification came from.","name":"set","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#set","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#source":{"description":"The source for this specification","name":"source","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#source","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#spec":{"description":"The Gem::Specification for this Resolver::Specification.\n\nImplementers, note that #install updates @spec, so be sure to cache the\nGem::Specification in @spec when overriding.","name":"spec","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#spec","type":"instance_method","visibility":"public"},"Gem::Resolver::Specification#version":{"description":"The version of the gem for this specification.","name":"version","namespace":"Gem::Resolver::Specification","path":"Gem::Resolver::Specification#version","type":"instance_method","visibility":"public"},"Gem::Resolver::State":{"description":"Contains the state for attempting activation of a set of possible specs.\n+needed+ is a Gem::List of DependencyRequest objects that, well, need\nto be satisfied.\n+specs+ is the List of ActivationRequest that are being tested.\n+dep+ is the DependencyRequest that was used to generate this state.\n+spec+ is the Specification for this state.\n+possible+ is List of DependencyRequest objects that can be tried to\nfind a  complete set.\n+conflicts+ is a [DependencyRequest, Conflict] hit tried to\nactivate the state.","name":"State","namespace":"Gem::Resolver","path":"Gem::Resolver::State","type":"class","visibility":"public"},"Gem::Resolver::State#conflicts":{"description":"Returns the value of attribute conflicts","name":"conflicts","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#conflicts","type":"instance_method","visibility":"public","return":[["Object"],"the current value of conflicts"]},"Gem::Resolver::State#conflicts=":{"description":"Sets the attribute conflicts","name":"conflicts=","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#conflicts=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute conflicts to."]],"return":[["Object"],"the newly set value"]},"Gem::Resolver::State#dep":{"description":"Returns the value of attribute dep","name":"dep","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#dep","type":"instance_method","visibility":"public","return":[["Object"],"the current value of dep"]},"Gem::Resolver::State#dep=":{"description":"Sets the attribute dep","name":"dep=","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#dep=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute dep to."]],"return":[["Object"],"the newly set value"]},"Gem::Resolver::State#needed":{"description":"Returns the value of attribute needed","name":"needed","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#needed","type":"instance_method","visibility":"public","return":[["Object"],"the current value of needed"]},"Gem::Resolver::State#needed=":{"description":"Sets the attribute needed","name":"needed=","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#needed=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute needed to."]],"return":[["Object"],"the newly set value"]},"Gem::Resolver::State#possibles":{"description":"Returns the value of attribute possibles","name":"possibles","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#possibles","type":"instance_method","visibility":"public","return":[["Object"],"the current value of possibles"]},"Gem::Resolver::State#possibles=":{"description":"Sets the attribute possibles","name":"possibles=","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#possibles=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute possibles to."]],"return":[["Object"],"the newly set value"]},"Gem::Resolver::State#spec":{"description":"Returns the value of attribute spec","name":"spec","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#spec","type":"instance_method","visibility":"public","return":[["Object"],"the current value of spec"]},"Gem::Resolver::State#spec=":{"description":"Sets the attribute spec","name":"spec=","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#spec=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute spec to."]],"return":[["Object"],"the newly set value"]},"Gem::Resolver::State#specs":{"description":"Returns the value of attribute specs","name":"specs","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#specs","type":"instance_method","visibility":"public","return":[["Object"],"the current value of specs"]},"Gem::Resolver::State#specs=":{"description":"Sets the attribute specs","name":"specs=","namespace":"Gem::Resolver::State","path":"Gem::Resolver::State#specs=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute specs to."]],"return":[["Object"],"the newly set value"]},"Gem::Resolver::Stats":{"description":"","name":"Stats","namespace":"Gem::Resolver","path":"Gem::Resolver::Stats","type":"class","visibility":"public"},"Gem::Resolver::Stats#backtracking!":{"description":"","name":"backtracking!","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#backtracking!","type":"instance_method","visibility":"public"},"Gem::Resolver::Stats#display":{"description":"","name":"display","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#display","type":"instance_method","visibility":"public"},"Gem::Resolver::Stats#initialize":{"description":"","name":"initialize","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#initialize","type":"instance_method","visibility":"public","return":[["Stats"],"a new instance of Stats"]},"Gem::Resolver::Stats#iteration!":{"description":"","name":"iteration!","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#iteration!","type":"instance_method","visibility":"public"},"Gem::Resolver::Stats#record_depth":{"description":"","name":"record_depth","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#record_depth","type":"instance_method","visibility":"public"},"Gem::Resolver::Stats#record_requirements":{"description":"","name":"record_requirements","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#record_requirements","type":"instance_method","visibility":"public"},"Gem::Resolver::Stats#requirement!":{"description":"","name":"requirement!","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats#requirement!","type":"instance_method","visibility":"public"},"Gem::Resolver::Stats::PATTERN":{"description":"","name":"PATTERN","namespace":"Gem::Resolver::Stats","path":"Gem::Resolver::Stats::PATTERN","type":"constant","return":["String",""],"visibility":"public"},"Gem::Resolver::VendorSet":{"description":"A VendorSet represents gems that have been unpacked into a specific\ndirectory that contains a gemspec.\n\nThis is used for gem dependency file support.\n\nExample:\n\n  set = Gem::Resolver::VendorSet.new\n\n  set.add_vendor_gem 'rake', 'vendor/rake'\n\nThe directory vendor/rake must contain an unpacked rake gem along with a\nrake.gemspec (watching the given name).","name":"VendorSet","namespace":"Gem::Resolver","path":"Gem::Resolver::VendorSet","type":"class","visibility":"public"},"Gem::Resolver::VendorSet#add_vendor_gem":{"description":"Adds a specification to the set with the given +name+ which has been\nunpacked into the given +directory+.","name":"add_vendor_gem","namespace":"Gem::Resolver::VendorSet","path":"Gem::Resolver::VendorSet#add_vendor_gem","type":"instance_method","visibility":"public"},"Gem::Resolver::VendorSet#find_all":{"description":"Returns an Array of VendorSpecification objects matching the\nDependencyRequest +req+.","name":"find_all","namespace":"Gem::Resolver::VendorSet","path":"Gem::Resolver::VendorSet#find_all","type":"instance_method","visibility":"public"},"Gem::Resolver::VendorSet#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Resolver::VendorSet","path":"Gem::Resolver::VendorSet#initialize","type":"instance_method","visibility":"public","return":[["VendorSet"],"a new instance of VendorSet"]},"Gem::Resolver::VendorSet#load_spec":{"description":"Loads a spec with the given +name+. +version+, +platform+ and +source+ are\nignored.","name":"load_spec","namespace":"Gem::Resolver::VendorSet","path":"Gem::Resolver::VendorSet#load_spec","type":"instance_method","visibility":"public"},"Gem::Resolver::VendorSet#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Resolver::VendorSet","path":"Gem::Resolver::VendorSet#pretty_print","type":"instance_method","visibility":"public"},"Gem::Resolver::VendorSet#specs":{"description":"The specifications for this set.","name":"specs","namespace":"Gem::Resolver::VendorSet","path":"Gem::Resolver::VendorSet#specs","type":"instance_method","visibility":"public"},"Gem::Resolver::VendorSpecification":{"description":"A VendorSpecification represents a gem that has been unpacked into a project\nand is being loaded through a gem dependencies file through the +path:+\noption.","name":"VendorSpecification","namespace":"Gem::Resolver","path":"Gem::Resolver::VendorSpecification","type":"class","visibility":"public"},"Gem::Resolver::VendorSpecification#==":{"description":":nodoc:","name":"==","namespace":"Gem::Resolver::VendorSpecification","path":"Gem::Resolver::VendorSpecification#==","type":"instance_method","visibility":"public"},"Gem::Resolver::VendorSpecification#install":{"description":"This is a null install as this gem was unpacked into a directory.\n+options+ are ignored.","name":"install","namespace":"Gem::Resolver::VendorSpecification","path":"Gem::Resolver::VendorSpecification#install","type":"instance_method","visibility":"public"},"Gem::RubyGemsPackageVersion":{"description":"","name":"RubyGemsPackageVersion","namespace":"Gem","path":"Gem::RubyGemsPackageVersion","type":"constant","return":["String",""],"visibility":"public"},"Gem::RubyGemsVersion":{"description":"","name":"RubyGemsVersion","namespace":"Gem","path":"Gem::RubyGemsVersion","type":"constant","return":["String",""],"visibility":"public"},"Gem::RubyVersionMismatch":{"description":"Raised when a gem dependencies file specifies a ruby version that does not\nmatch the current version.","name":"RubyVersionMismatch","namespace":"Gem","path":"Gem::RubyVersionMismatch","type":"class","visibility":"public"},"Gem::Security":{"description":"forward-declare","name":"Security","namespace":"Gem","path":"Gem::Security","type":"module","visibility":"public"},"Gem::Security.alt_name_or_x509_entry":{"description":"","name":"alt_name_or_x509_entry","namespace":"Gem::Security","path":"Gem::Security.alt_name_or_x509_entry","type":"module_function","visibility":"public"},"Gem::Security.create_cert":{"description":"Creates an unsigned certificate for +subject+ and +key+.  The lifetime of\nthe key is from the current time to +age+ which defaults to one year.\n\nThe +extensions+ restrict the key to the indicated uses.","name":"create_cert","namespace":"Gem::Security","path":"Gem::Security.create_cert","type":"module_function","visibility":"public"},"Gem::Security.create_cert_email":{"description":"Creates a self-signed certificate with an issuer and subject from +email+,\na subject alternative name of +email+ and the given +extensions+ for the\n+key+.","name":"create_cert_email","namespace":"Gem::Security","path":"Gem::Security.create_cert_email","type":"module_function","visibility":"public"},"Gem::Security.create_cert_self_signed":{"description":"Creates a self-signed certificate with an issuer and subject of +subject+\nand the given +extensions+ for the +key+.","name":"create_cert_self_signed","namespace":"Gem::Security","path":"Gem::Security.create_cert_self_signed","type":"module_function","visibility":"public"},"Gem::Security.create_key":{"description":"Creates a new key pair of the specified +length+ and +algorithm+.  The\ndefault is a 2048 bit RSA key.","name":"create_key","namespace":"Gem::Security","path":"Gem::Security.create_key","type":"module_function","visibility":"public"},"Gem::Security.email_to_name":{"description":"Turns +email_address+ into an OpenSSL::X509::Name","name":"email_to_name","namespace":"Gem::Security","path":"Gem::Security.email_to_name","type":"module_function","visibility":"public"},"Gem::Security.re_sign":{"description":"Signs +expired_certificate+ with +private_key+ if the keys match and the\nexpired certificate was self-signed.\n--\nTODO increment serial","name":"re_sign","namespace":"Gem::Security","path":"Gem::Security.re_sign","type":"module_function","visibility":"public"},"Gem::Security.reset":{"description":"Resets the trust directory for verifying gems.","name":"reset","namespace":"Gem::Security","path":"Gem::Security.reset","type":"module_function","visibility":"public"},"Gem::Security.sign":{"description":"Sign the public key from +certificate+ with the +signing_key+ and\n+signing_cert+, using the Gem::Security::DIGEST_ALGORITHM.  Uses the\ndefault certificate validity range and extensions.\n\nReturns the newly signed certificate.","name":"sign","namespace":"Gem::Security","path":"Gem::Security.sign","type":"module_function","visibility":"public"},"Gem::Security.trust_dir":{"description":"Returns a Gem::Security::TrustDir which wraps the directory where trusted\ncertificates live.","name":"trust_dir","namespace":"Gem::Security","path":"Gem::Security.trust_dir","type":"module_function","visibility":"public"},"Gem::Security.trusted_certificates":{"description":"Enumerates the trusted certificates via Gem::Security::TrustDir.","name":"trusted_certificates","namespace":"Gem::Security","path":"Gem::Security.trusted_certificates","type":"module_function","visibility":"public"},"Gem::Security.write":{"description":"Writes +pemmable+, which must respond to +to_pem+ to +path+ with the given\n+permissions+. If passed +cipher+ and +passphrase+ those arguments will be\npassed to +to_pem+.","name":"write","namespace":"Gem::Security","path":"Gem::Security.write","type":"module_function","visibility":"public"},"Gem::Security::AlmostNoSecurity":{"description":"AlmostNo security policy: only verify that the signing certificate is the\none that actually signed the data.  Make no attempt to verify the signing\ncertificate chain.\n\nThis policy is basically useless. better than nothing, but can still be\neasily spoofed, and is not recommended.","name":"AlmostNoSecurity","namespace":"Gem::Security","path":"Gem::Security::AlmostNoSecurity","type":"constant","return":["Gem::Security::Policy",""],"visibility":"public"},"Gem::Security::DIGEST_ALGORITHM":{"description":"Digest algorithm used to sign gems","name":"DIGEST_ALGORITHM","namespace":"Gem::Security","path":"Gem::Security::DIGEST_ALGORITHM","type":"constant","return":["Class",""],"visibility":"public"},"Gem::Security::DIGEST_NAME":{"description":"Used internally to select the signing digest from all computed digests","name":"DIGEST_NAME","namespace":"Gem::Security","path":"Gem::Security::DIGEST_NAME","type":"constant","return":["String",""],"visibility":"public"},"Gem::Security::EXTENSIONS":{"description":"The default set of extensions are:\n\n* The certificate is not a certificate authority\n* The key for the certificate may be used for key and data encipherment\n  and digital signatures\n* The certificate contains a subject key identifier","name":"EXTENSIONS","namespace":"Gem::Security","path":"Gem::Security::EXTENSIONS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Security::Exception":{"description":"Gem::Security default exception type","name":"Exception","namespace":"Gem::Security","path":"Gem::Security::Exception","type":"class","visibility":"public"},"Gem::Security::HighSecurity":{"description":"High security policy: only allow signed gems to be installed, verify the\nsigning certificate, verify the signing certificate chain all the way to\nthe root certificate, and only trust root certificates that we have\nexplicitly allowed trust for.\n\nThis security policy is significantly more difficult to bypass, and offers\na reasonable guarantee that the contents of the gem have not been altered.","name":"HighSecurity","namespace":"Gem::Security","path":"Gem::Security::HighSecurity","type":"constant","return":["Gem::Security::Policy",""],"visibility":"public"},"Gem::Security::KEY_ALGORITHM":{"description":"Algorithm for creating the key pair used to sign gems","name":"KEY_ALGORITHM","namespace":"Gem::Security","path":"Gem::Security::KEY_ALGORITHM","type":"constant","return":["Class",""],"visibility":"public"},"Gem::Security::KEY_CIPHER":{"description":"Cipher used to encrypt the key pair used to sign gems.\nMust be in the list returned by OpenSSL::Cipher.ciphers","name":"KEY_CIPHER","namespace":"Gem::Security","path":"Gem::Security::KEY_CIPHER","type":"constant","return":["OpenSSL::Cipher",""],"visibility":"public"},"Gem::Security::KEY_LENGTH":{"description":"Length of keys created by KEY_ALGORITHM","name":"KEY_LENGTH","namespace":"Gem::Security","path":"Gem::Security::KEY_LENGTH","type":"constant","return":["Fixnum",""],"visibility":"public"},"Gem::Security::LowSecurity":{"description":"Low security policy: only verify that the signing certificate is actually\nthe gem signer, and that the signing certificate is valid.\n\nThis policy is better than nothing, but can still be easily spoofed, and\nis not recommended.","name":"LowSecurity","namespace":"Gem::Security","path":"Gem::Security::LowSecurity","type":"constant","return":["Gem::Security::Policy",""],"visibility":"public"},"Gem::Security::MediumSecurity":{"description":"Medium security policy: verify the signing certificate, verify the signing\ncertificate chain all the way to the root certificate, and only trust root\ncertificates that we have explicitly allowed trust for.\n\nThis security policy is reasonable, but it allows unsigned packages, so a\nmalicious person could simply delete the package signature and pass the\ngem off as unsigned.","name":"MediumSecurity","namespace":"Gem::Security","path":"Gem::Security::MediumSecurity","type":"constant","return":["Gem::Security::Policy",""],"visibility":"public"},"Gem::Security::NoSecurity":{"description":"No security policy: all package signature checks are disabled.","name":"NoSecurity","namespace":"Gem::Security","path":"Gem::Security::NoSecurity","type":"constant","return":["Gem::Security::Policy",""],"visibility":"public"},"Gem::Security::ONE_YEAR":{"description":"One year in seconds","name":"ONE_YEAR","namespace":"Gem::Security","path":"Gem::Security::ONE_YEAR","type":"constant","return":["Fixnum",""],"visibility":"public"},"Gem::Security::Policies":{"description":"Hash of configured security policies","name":"Policies","namespace":"Gem::Security","path":"Gem::Security::Policies","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Security::Policy":{"description":":nodoc:","name":"Policy","namespace":"Gem::Security","path":"Gem::Security::Policy","type":"class","visibility":"public"},"Gem::Security::Policy#check_cert":{"description":"Ensures that +signer+ is valid for +time+ and was signed by the +issuer+.\nIf the +issuer+ is +nil+ no verification is performed.","name":"check_cert","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#check_cert","type":"instance_method","visibility":"public"},"Gem::Security::Policy#check_chain":{"description":"Verifies each certificate in +chain+ has signed the following certificate\nand is valid for the given +time+.","name":"check_chain","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#check_chain","type":"instance_method","visibility":"public"},"Gem::Security::Policy#check_data":{"description":"Verifies that +data+ matches the +signature+ created by +public_key+ and\nthe +digest+ algorithm.","name":"check_data","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#check_data","type":"instance_method","visibility":"public"},"Gem::Security::Policy#check_key":{"description":"Ensures the public key of +key+ matches the public key in +signer+","name":"check_key","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#check_key","type":"instance_method","visibility":"public"},"Gem::Security::Policy#check_root":{"description":"Ensures the root certificate in +chain+ is self-signed and valid for\n+time+.","name":"check_root","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#check_root","type":"instance_method","visibility":"public"},"Gem::Security::Policy#check_trust":{"description":"Ensures the root of +chain+ has a trusted certificate in +trust_dir+ and\nthe digests of the two certificates match according to +digester+","name":"check_trust","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#check_trust","type":"instance_method","visibility":"public"},"Gem::Security::Policy#initialize":{"description":"Create a new Gem::Security::Policy object with the given mode and\noptions.","name":"initialize","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#initialize","type":"instance_method","visibility":"public","return":[["Policy"],"a new instance of Policy"]},"Gem::Security::Policy#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#inspect","type":"instance_method","visibility":"public"},"Gem::Security::Policy#name":{"description":"Returns the value of attribute name","name":"to_s","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#to_s","type":"instance_method","visibility":"public"},"Gem::Security::Policy#to_s":{"description":"Returns the value of attribute name\n:nodoc:","name":"to_s","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#to_s","type":"instance_method","visibility":"public"},"Gem::Security::Policy#only_signed":{"description":"Returns the value of attribute only_signed","name":"only_signed","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#only_signed","type":"instance_method","visibility":"public"},"Gem::Security::Policy#only_signed=":{"description":"Sets the attribute only_signed","name":"only_signed=","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#only_signed=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute only_signed to."]]},"Gem::Security::Policy#only_trusted":{"description":"Returns the value of attribute only_trusted","name":"only_trusted","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#only_trusted","type":"instance_method","visibility":"public"},"Gem::Security::Policy#only_trusted=":{"description":"Sets the attribute only_trusted","name":"only_trusted=","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#only_trusted=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute only_trusted to."]]},"Gem::Security::Policy#subject":{"description":"Extracts the email or subject from +certificate+","name":"subject","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#subject","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify":{"description":"For +full_name+, verifies the certificate +chain+ is valid, the +digests+\nmatch the signatures +signatures+ created by the signer depending on the\n+policy+ settings.\n\nIf +key+ is given it is used to validate the signing certificate.","name":"verify","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify_chain":{"description":"Returns the value of attribute verify_chain","name":"verify_chain","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_chain","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify_chain=":{"description":"Sets the attribute verify_chain","name":"verify_chain=","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_chain=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute verify_chain to."]]},"Gem::Security::Policy#verify_data":{"description":"Returns the value of attribute verify_data","name":"verify_data","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_data","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify_data=":{"description":"Sets the attribute verify_data","name":"verify_data=","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_data=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute verify_data to."]]},"Gem::Security::Policy#verify_root":{"description":"Returns the value of attribute verify_root","name":"verify_root","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_root","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify_root=":{"description":"Sets the attribute verify_root","name":"verify_root=","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_root=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute verify_root to."]]},"Gem::Security::Policy#verify_signatures":{"description":"Extracts the certificate chain from the +spec+ and calls #verify to ensure\nthe signatures and certificate chain is valid according to the policy..","name":"verify_signatures","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_signatures","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify_signer":{"description":"Returns the value of attribute verify_signer","name":"verify_signer","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_signer","type":"instance_method","visibility":"public"},"Gem::Security::Policy#verify_signer=":{"description":"Sets the attribute verify_signer","name":"verify_signer=","namespace":"Gem::Security::Policy","path":"Gem::Security::Policy#verify_signer=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute verify_signer to."]]},"Gem::Security::Signer":{"description":"Basic OpenSSL-based package signing class.","name":"Signer","namespace":"Gem::Security","path":"Gem::Security::Signer","type":"class","visibility":"public"},"Gem::Security::Signer#cert_chain":{"description":"The chain of certificates for signing including the signing certificate","name":"cert_chain","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#cert_chain","type":"instance_method","visibility":"public"},"Gem::Security::Signer#cert_chain=":{"description":"The chain of certificates for signing including the signing certificate","name":"cert_chain=","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#cert_chain=","type":"instance_method","visibility":"public"},"Gem::Security::Signer#digest_algorithm":{"description":"The digest algorithm used to create the signature","name":"digest_algorithm","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#digest_algorithm","type":"instance_method","visibility":"public"},"Gem::Security::Signer#digest_name":{"description":"The name of the digest algorithm, used to pull digests out of the hash by\nname.","name":"digest_name","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#digest_name","type":"instance_method","visibility":"public"},"Gem::Security::Signer#extract_name":{"description":"Extracts the full name of +cert+.  If the certificate has a subjectAltName\nthis value is preferred, otherwise the subject is used.","name":"extract_name","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#extract_name","type":"instance_method","visibility":"public"},"Gem::Security::Signer#initialize":{"description":"Creates a new signer with an RSA +key+ or path to a key, and a certificate\n+chain+ containing X509 certificates, encoding certificates or paths to\ncertificates.","name":"initialize","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#initialize","type":"instance_method","visibility":"public","return":[["Signer"],"a new instance of Signer"]},"Gem::Security::Signer#key":{"description":"The private key for the signing certificate","name":"key","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#key","type":"instance_method","visibility":"public"},"Gem::Security::Signer#key=":{"description":"The private key for the signing certificate","name":"key=","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#key=","type":"instance_method","visibility":"public"},"Gem::Security::Signer#load_cert_chain":{"description":"Loads any missing issuers in the cert chain from the trusted certificates.\n\nIf the issuer does not exist it is ignored as it will be checked later.","name":"load_cert_chain","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#load_cert_chain","type":"instance_method","visibility":"public"},"Gem::Security::Signer#re_sign_key":{"description":"Attempts to re-sign the private key if the signing certificate is expired.\n\nThe key will be re-signed if:\n* The expired certificate is self-signed\n* The expired certificate is saved at ~/.gem/gem-public_cert.pem\n* There is no file matching the expiry date at\n  ~/.gem/gem-public_cert.pem.expired.%Y%m%d%H%M%S\n\nIf the signing certificate can be re-signed the expired certificate will\nbe saved as ~/.gem/gem-pubilc_cert.pem.expired.%Y%m%d%H%M%S where the\nexpiry time (not after) is used for the timestamp.","name":"re_sign_key","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#re_sign_key","type":"instance_method","visibility":"public"},"Gem::Security::Signer#sign":{"description":"Sign data with given digest algorithm","name":"sign","namespace":"Gem::Security::Signer","path":"Gem::Security::Signer#sign","type":"instance_method","visibility":"public"},"Gem::Security::SigningPolicy":{"description":"Policy used to verify a certificate and key when signing a gem","name":"SigningPolicy","namespace":"Gem::Security","path":"Gem::Security::SigningPolicy","type":"constant","return":["Gem::Security::Policy",""],"visibility":"public"},"Gem::Security::TrustDir":{"description":"The TrustDir manages the trusted certificates for gem signature\nverification.","name":"TrustDir","namespace":"Gem::Security","path":"Gem::Security::TrustDir","type":"class","visibility":"public"},"Gem::Security::TrustDir#cert_path":{"description":"Returns the path to the trusted +certificate+","name":"cert_path","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#cert_path","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#dir":{"description":"The directory where trusted certificates will be stored.","name":"dir","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#dir","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#each_certificate":{"description":"Enumerates trusted certificates.","name":"each_certificate","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#each_certificate","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#initialize":{"description":"Creates a new TrustDir using +dir+ where the directory and file\npermissions will be checked according to +permissions+","name":"initialize","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#initialize","type":"instance_method","visibility":"public","return":[["TrustDir"],"a new instance of TrustDir"]},"Gem::Security::TrustDir#issuer_of":{"description":"Returns the issuer certificate of the given +certificate+ if it exists in\nthe trust directory.","name":"issuer_of","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#issuer_of","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#load_certificate":{"description":"Loads the given +certificate_file+","name":"load_certificate","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#load_certificate","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#name_path":{"description":"Returns the path to the trusted certificate with the given ASN.1 +name+","name":"name_path","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#name_path","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#trust_cert":{"description":"Add a certificate to trusted certificate list.","name":"trust_cert","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#trust_cert","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir#verify":{"description":"Make sure the trust directory exists.  If it does exist, make sure it's\nactually a directory.  If not, then create it with the appropriate\npermissions.","name":"verify","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir#verify","type":"instance_method","visibility":"public"},"Gem::Security::TrustDir::DEFAULT_PERMISSIONS":{"description":"Default permissions for the trust directory and its contents","name":"DEFAULT_PERMISSIONS","namespace":"Gem::Security::TrustDir","path":"Gem::Security::TrustDir::DEFAULT_PERMISSIONS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Server":{"description":"Gem::Server and allows users to serve gems for consumption by\n`gem --remote-install`.\n\ngem_server starts an HTTP server on the given port and serves the following:\n* \"/\" - Browsing of gem spec files for installed gems\n* \"/specs.#{Gem.marshal_version}.gz\" - specs name/version/platform index\n* \"/latest_specs.#{Gem.marshal_version}.gz\" - latest specs\n  name/version/platform index\n* \"/quick/\" - Individual gemspecs\n* \"/gems\" - Direct access to download the installable gems\n* \"/rdoc?q=\" - Search for installed rdoc documentation\n\n== Usage\n\n  gem_server = Gem::Server.new Gem.dir, 8089, false\n  gem_server.run\n\n--\nTODO Refactor into a real WEBrick servlet to remove code duplication.","name":"Server","namespace":"Gem","path":"Gem::Server","type":"class","visibility":"public"},"Gem::Server#add_date":{"description":"","name":"add_date","namespace":"Gem::Server","path":"Gem::Server#add_date","type":"instance_method","visibility":"public"},"Gem::Server#doc_root":{"description":"","name":"doc_root","namespace":"Gem::Server","path":"Gem::Server#doc_root","type":"instance_method","visibility":"public"},"Gem::Server#have_rdoc_4_plus?":{"description":"","name":"have_rdoc_4_plus?","namespace":"Gem::Server","path":"Gem::Server#have_rdoc_4_plus?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Server#initialize":{"description":"","name":"initialize","namespace":"Gem::Server","path":"Gem::Server#initialize","type":"instance_method","visibility":"public","return":[["Server"],"a new instance of Server"]},"Gem::Server#latest_specs":{"description":"","name":"latest_specs","namespace":"Gem::Server","path":"Gem::Server#latest_specs","type":"instance_method","visibility":"public"},"Gem::Server#launch":{"description":"","name":"launch","namespace":"Gem::Server","path":"Gem::Server#launch","type":"instance_method","visibility":"public"},"Gem::Server#listen":{"description":"Creates server sockets based on the addresses option.  If no addresses\nwere given a server socket for all interfaces is created.","name":"listen","namespace":"Gem::Server","path":"Gem::Server#listen","type":"instance_method","visibility":"public"},"Gem::Server#prerelease_specs":{"description":"","name":"prerelease_specs","namespace":"Gem::Server","path":"Gem::Server#prerelease_specs","type":"instance_method","visibility":"public"},"Gem::Server#quick":{"description":"","name":"quick","namespace":"Gem::Server","path":"Gem::Server#quick","type":"instance_method","visibility":"public"},"Gem::Server#rdoc":{"description":"Can be used for quick navigation to the rdoc documentation.  You can then\ndefine a search shortcut for your browser.  E.g. in Firefox connect\n'shortcut:rdoc' to http://localhost:8808/rdoc?q=%s template. Then you can\ndirectly open the ActionPack documentation by typing 'rdoc actionp'. If\nthere are multiple hits for the search term, they are presented as a list\nwith links.\n\nSearch algorithm aims for an intuitive search:\n1. first try to find the gems and documentation folders which name\n   starts with the search term\n2. search for entries, that *contain* the search term\n3. show all the gems\n\nIf there is only one search hit, user is immediately redirected to the\ndocumentation for the particular gem, otherwise a list with results is\nshown.\n\n=== Additional trick - install documentation for Ruby core\n\nNote: please adjust paths accordingly use for example 'locate yaml.rb' and\n'gem environment' to identify directories, that are specific for your\nlocal installation\n\n1. install Ruby sources\n     cd /usr/src\n     sudo apt-get source ruby\n\n2. generate documentation\n     rdoc -o /usr/lib/ruby/gems/1.8/doc/core/rdoc \\\n       /usr/lib/ruby/1.8 ruby1.8-1.8.7.72\n\nBy typing 'rdoc core' you can now access the core documentation","name":"rdoc","namespace":"Gem::Server","path":"Gem::Server#rdoc","type":"instance_method","visibility":"public"},"Gem::Server#reset_gems":{"description":"Updates the server to use the latest installed gems.","name":"reset_gems","namespace":"Gem::Server","path":"Gem::Server#reset_gems","type":"instance_method","visibility":"public"},"Gem::Server#root":{"description":"","name":"root","namespace":"Gem::Server","path":"Gem::Server#root","type":"instance_method","visibility":"public"},"Gem::Server#run":{"description":"","name":"run","namespace":"Gem::Server","path":"Gem::Server#run","type":"instance_method","visibility":"public"},"Gem::Server#show_rdoc_for_pattern":{"description":"Returns true and prepares http response, if rdoc for the requested gem\nname pattern was found.\n\nThe search is based on the file system content, not on the gems metadata.\nThis allows additional documentation folders like 'core' for the Ruby core\ndocumentation - just put it underneath the main doc folder.","name":"show_rdoc_for_pattern","namespace":"Gem::Server","path":"Gem::Server#show_rdoc_for_pattern","type":"instance_method","visibility":"public"},"Gem::Server#spec_dirs":{"description":"Returns the value of attribute spec_dirs","name":"spec_dirs","namespace":"Gem::Server","path":"Gem::Server#spec_dirs","type":"instance_method","visibility":"public"},"Gem::Server#specs":{"description":"","name":"specs","namespace":"Gem::Server","path":"Gem::Server#specs","type":"instance_method","visibility":"public"},"Gem::Server.run":{"description":"","name":"run","namespace":"Gem::Server","path":"Gem::Server.run","type":"class_method","visibility":"public"},"Gem::Server::DOC_TEMPLATE":{"description":"","name":"DOC_TEMPLATE","namespace":"Gem::Server","path":"Gem::Server::DOC_TEMPLATE","type":"constant","return":null,"visibility":"public"},"Gem::Server::RDOC_CSS":{"description":"CSS is copy & paste from rdoc-style.css, RDoc V1.0.1 - 20041108","name":"RDOC_CSS","namespace":"Gem::Server","path":"Gem::Server::RDOC_CSS","type":"constant","return":null,"visibility":"public"},"Gem::Server::RDOC_NO_DOCUMENTATION":{"description":"","name":"RDOC_NO_DOCUMENTATION","namespace":"Gem::Server","path":"Gem::Server::RDOC_NO_DOCUMENTATION","type":"constant","return":null,"visibility":"public"},"Gem::Server::RDOC_SEARCH_TEMPLATE":{"description":"","name":"RDOC_SEARCH_TEMPLATE","namespace":"Gem::Server","path":"Gem::Server::RDOC_SEARCH_TEMPLATE","type":"constant","return":null,"visibility":"public"},"Gem::Server::SEARCH":{"description":"","name":"SEARCH","namespace":"Gem::Server","path":"Gem::Server::SEARCH","type":"constant","return":null,"visibility":"public"},"Gem::SilentUI":{"description":"SilentUI is a UI choice that is absolutely silent.","name":"SilentUI","namespace":"Gem","path":"Gem::SilentUI","type":"class","visibility":"public"},"Gem::SilentUI#close":{"description":"","name":"close","namespace":"Gem::SilentUI","path":"Gem::SilentUI#close","type":"instance_method","visibility":"public"},"Gem::SilentUI#download_reporter":{"description":":nodoc:","name":"download_reporter","namespace":"Gem::SilentUI","path":"Gem::SilentUI#download_reporter","type":"instance_method","visibility":"public"},"Gem::SilentUI#initialize":{"description":"The SilentUI has no arguments as it does not use any stream.","name":"initialize","namespace":"Gem::SilentUI","path":"Gem::SilentUI#initialize","type":"instance_method","visibility":"public","return":[["SilentUI"],"a new instance of SilentUI"]},"Gem::SilentUI#progress_reporter":{"description":":nodoc:","name":"progress_reporter","namespace":"Gem::SilentUI","path":"Gem::SilentUI#progress_reporter","type":"instance_method","visibility":"public"},"Gem::Source":{"description":"A Source knows how to list and fetch gems from a RubyGems marshal index.\n\nThere are other Source subclasses for installed gems, local gems, the\nbundler dependency API and so-forth.","name":"Source","namespace":"Gem","path":"Gem::Source","type":"class","visibility":"public"},"Gem::Source#<=>":{"description":"Sources are ordered by installation preference.","name":"<=>","namespace":"Gem::Source","path":"Gem::Source#<=>","type":"instance_method","visibility":"public"},"Gem::Source#==":{"description":":nodoc:","name":"eql?","namespace":"Gem::Source","path":"Gem::Source#eql?","type":"instance_method","visibility":"public"},"Gem::Source#eql?":{"description":":nodoc:\n:nodoc:","name":"eql?","namespace":"Gem::Source","path":"Gem::Source#eql?","type":"instance_method","visibility":"public"},"Gem::Source#api_uri":{"description":"Use an SRV record on the host to look up the true endpoint for the index.","name":"api_uri","namespace":"Gem::Source","path":"Gem::Source#api_uri","type":"instance_method","visibility":"public"},"Gem::Source#cache_dir":{"description":"Returns the local directory to write +uri+ to.","name":"cache_dir","namespace":"Gem::Source","path":"Gem::Source#cache_dir","type":"instance_method","visibility":"public"},"Gem::Source#dependency_resolver_set":{"description":"Returns a Set that can fetch specifications from this source.","name":"dependency_resolver_set","namespace":"Gem::Source","path":"Gem::Source#dependency_resolver_set","type":"instance_method","visibility":"public"},"Gem::Source#download":{"description":"Downloads +spec+ and writes it to +dir+.  See also\nGem::RemoteFetcher#download.","name":"download","namespace":"Gem::Source","path":"Gem::Source#download","type":"instance_method","visibility":"public"},"Gem::Source#fetch_spec":{"description":"Fetches a specification for the given +name_tuple+.","name":"fetch_spec","namespace":"Gem::Source","path":"Gem::Source#fetch_spec","type":"instance_method","visibility":"public"},"Gem::Source#hash":{"description":":nodoc:","name":"hash","namespace":"Gem::Source","path":"Gem::Source#hash","type":"instance_method","visibility":"public"},"Gem::Source#initialize":{"description":"Creates a new Source which will use the index located at +uri+.","name":"initialize","namespace":"Gem::Source","path":"Gem::Source#initialize","type":"instance_method","visibility":"public","return":[["Source"],"a new instance of Source"]},"Gem::Source#load_specs":{"description":"Loads +type+ kind of specs fetching from +@uri+ if the on-disk cache is\nout of date.\n\n+type+ is one of the following:\n\n:released   => Return the list of all released specs\n:latest     => Return the list of only the highest version of each gem\n:prerelease => Return the list of all prerelease only specs","name":"load_specs","namespace":"Gem::Source","path":"Gem::Source#load_specs","type":"instance_method","visibility":"public"},"Gem::Source#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Source","path":"Gem::Source#pretty_print","type":"instance_method","visibility":"public"},"Gem::Source#update_cache?":{"description":"Returns true when it is possible and safe to update the cache directory.","name":"update_cache?","namespace":"Gem::Source","path":"Gem::Source#update_cache?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Source#uri":{"description":"The URI this source will fetch gems from.","name":"uri","namespace":"Gem::Source","path":"Gem::Source#uri","type":"instance_method","visibility":"public"},"Gem::Source::FILES":{"description":":nodoc:","name":"FILES","namespace":"Gem::Source","path":"Gem::Source::FILES","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Source::Git":{"description":"A git gem for use in a gem dependencies file.\n\nExample:\n\n  source =\n    Gem::Source::Git.new 'rake', 'git@example:rake.git', 'rake-10.1.0', false\n\n  source.specs","name":"Git","namespace":"Gem::Source","path":"Gem::Source::Git","type":"class","visibility":"public"},"Gem::Source::Git#<=>":{"description":"","name":"<=>","namespace":"Gem::Source::Git","path":"Gem::Source::Git#<=>","type":"instance_method","visibility":"public"},"Gem::Source::Git#==":{"description":":nodoc:","name":"==","namespace":"Gem::Source::Git","path":"Gem::Source::Git#==","type":"instance_method","visibility":"public"},"Gem::Source::Git#base_dir":{"description":"Directory where git gems get unpacked and so-forth.","name":"base_dir","namespace":"Gem::Source::Git","path":"Gem::Source::Git#base_dir","type":"instance_method","visibility":"public"},"Gem::Source::Git#cache":{"description":"Creates a local cache repository for the git gem.","name":"cache","namespace":"Gem::Source::Git","path":"Gem::Source::Git#cache","type":"instance_method","visibility":"public"},"Gem::Source::Git#checkout":{"description":"Checks out the files for the repository into the install_dir.","name":"checkout","namespace":"Gem::Source::Git","path":"Gem::Source::Git#checkout","type":"instance_method","visibility":"public"},"Gem::Source::Git#dir_shortref":{"description":"A short reference for use in git gem directories","name":"dir_shortref","namespace":"Gem::Source::Git","path":"Gem::Source::Git#dir_shortref","type":"instance_method","visibility":"public"},"Gem::Source::Git#download":{"description":"Nothing to download for git gems","name":"download","namespace":"Gem::Source::Git","path":"Gem::Source::Git#download","type":"instance_method","visibility":"public"},"Gem::Source::Git#initialize":{"description":"Creates a new git gem source for a gems from loaded from +repository+ at\nthe given +reference+.  The +name+ is only used to track the repository\nback to a gem dependencies file, it has no real significance as a git\nrepository may contain multiple gems.  If +submodules+ is true, submodules\nwill be checked out when the gem is installed.","name":"initialize","namespace":"Gem::Source::Git","path":"Gem::Source::Git#initialize","type":"instance_method","visibility":"public","return":[["Git"],"a new instance of Git"]},"Gem::Source::Git#install_dir":{"description":"The directory where the git gem will be installed.","name":"install_dir","namespace":"Gem::Source::Git","path":"Gem::Source::Git#install_dir","type":"instance_method","visibility":"public"},"Gem::Source::Git#name":{"description":"The name of the gem created by this git gem.","name":"name","namespace":"Gem::Source::Git","path":"Gem::Source::Git#name","type":"instance_method","visibility":"public"},"Gem::Source::Git#need_submodules":{"description":"Does this repository need submodules checked out too?","name":"need_submodules","namespace":"Gem::Source::Git","path":"Gem::Source::Git#need_submodules","type":"instance_method","visibility":"public"},"Gem::Source::Git#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Source::Git","path":"Gem::Source::Git#pretty_print","type":"instance_method","visibility":"public"},"Gem::Source::Git#reference":{"description":"The commit reference used for checking out this git gem.","name":"reference","namespace":"Gem::Source::Git","path":"Gem::Source::Git#reference","type":"instance_method","visibility":"public"},"Gem::Source::Git#remote":{"description":"When false the cache for this repository will not be updated.","name":"remote","namespace":"Gem::Source::Git","path":"Gem::Source::Git#remote","type":"instance_method","visibility":"public"},"Gem::Source::Git#remote=":{"description":"When false the cache for this repository will not be updated.","name":"remote=","namespace":"Gem::Source::Git","path":"Gem::Source::Git#remote=","type":"instance_method","visibility":"public"},"Gem::Source::Git#repo_cache_dir":{"description":"The directory where the git gem's repository will be cached.","name":"repo_cache_dir","namespace":"Gem::Source::Git","path":"Gem::Source::Git#repo_cache_dir","type":"instance_method","visibility":"public"},"Gem::Source::Git#repository":{"description":"The git repository this gem is sourced from.","name":"repository","namespace":"Gem::Source::Git","path":"Gem::Source::Git#repository","type":"instance_method","visibility":"public"},"Gem::Source::Git#rev_parse":{"description":"Converts the git reference for the repository into a commit hash.","name":"rev_parse","namespace":"Gem::Source::Git","path":"Gem::Source::Git#rev_parse","type":"instance_method","visibility":"public"},"Gem::Source::Git#root_dir":{"description":"The directory for cache and git gem installation","name":"root_dir","namespace":"Gem::Source::Git","path":"Gem::Source::Git#root_dir","type":"instance_method","visibility":"public"},"Gem::Source::Git#root_dir=":{"description":"The directory for cache and git gem installation","name":"root_dir=","namespace":"Gem::Source::Git","path":"Gem::Source::Git#root_dir=","type":"instance_method","visibility":"public"},"Gem::Source::Git#specs":{"description":"Loads all gemspecs in the repository","name":"specs","namespace":"Gem::Source::Git","path":"Gem::Source::Git#specs","type":"instance_method","visibility":"public"},"Gem::Source::Git#uri_hash":{"description":"A hash for the git gem based on the git repository URI.","name":"uri_hash","namespace":"Gem::Source::Git","path":"Gem::Source::Git#uri_hash","type":"instance_method","visibility":"public"},"Gem::Source::Installed":{"description":"Represents an installed gem.  This is used for dependency resolution.","name":"Installed","namespace":"Gem::Source","path":"Gem::Source::Installed","type":"class","visibility":"public"},"Gem::Source::Installed#<=>":{"description":"Installed sources sort before all other sources","name":"<=>","namespace":"Gem::Source::Installed","path":"Gem::Source::Installed#<=>","type":"instance_method","visibility":"public"},"Gem::Source::Installed#download":{"description":"We don't need to download an installed gem","name":"download","namespace":"Gem::Source::Installed","path":"Gem::Source::Installed#download","type":"instance_method","visibility":"public"},"Gem::Source::Installed#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Source::Installed","path":"Gem::Source::Installed#initialize","type":"instance_method","visibility":"public","return":[["Installed"],"a new instance of Installed"]},"Gem::Source::Installed#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Source::Installed","path":"Gem::Source::Installed#pretty_print","type":"instance_method","visibility":"public"},"Gem::Source::Local":{"description":"The local source finds gems in the current directory for fulfilling\ndependencies.","name":"Local","namespace":"Gem::Source","path":"Gem::Source::Local","type":"class","visibility":"public"},"Gem::Source::Local#<=>":{"description":"Local sorts before Gem::Source and after Gem::Source::Installed","name":"<=>","namespace":"Gem::Source::Local","path":"Gem::Source::Local#<=>","type":"instance_method","visibility":"public"},"Gem::Source::Local#download":{"description":":nodoc:","name":"download","namespace":"Gem::Source::Local","path":"Gem::Source::Local#download","type":"instance_method","visibility":"public"},"Gem::Source::Local#fetch_spec":{"description":":nodoc:","name":"fetch_spec","namespace":"Gem::Source::Local","path":"Gem::Source::Local#fetch_spec","type":"instance_method","visibility":"public"},"Gem::Source::Local#find_gem":{"description":":nodoc:","name":"find_gem","namespace":"Gem::Source::Local","path":"Gem::Source::Local#find_gem","type":"instance_method","visibility":"public"},"Gem::Source::Local#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Source::Local","path":"Gem::Source::Local#initialize","type":"instance_method","visibility":"public","return":[["Local"],"a new instance of Local"]},"Gem::Source::Local#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Source::Local","path":"Gem::Source::Local#inspect","type":"instance_method","visibility":"public"},"Gem::Source::Local#load_specs":{"description":":nodoc:","name":"load_specs","namespace":"Gem::Source::Local","path":"Gem::Source::Local#load_specs","type":"instance_method","visibility":"public"},"Gem::Source::Local#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Source::Local","path":"Gem::Source::Local#pretty_print","type":"instance_method","visibility":"public"},"Gem::Source::Lock":{"description":"A Lock source wraps an installed gem's source and sorts before other sources\nduring dependency resolution.  This allows RubyGems to prefer gems from\ndependency lock files.","name":"Lock","namespace":"Gem::Source","path":"Gem::Source::Lock","type":"class","visibility":"public"},"Gem::Source::Lock#<=>":{"description":":nodoc:","name":"<=>","namespace":"Gem::Source::Lock","path":"Gem::Source::Lock#<=>","type":"instance_method","visibility":"public"},"Gem::Source::Lock#==":{"description":":nodoc:","name":"==","namespace":"Gem::Source::Lock","path":"Gem::Source::Lock#==","type":"instance_method","visibility":"public"},"Gem::Source::Lock#fetch_spec":{"description":"Delegates to the wrapped source's fetch_spec method.","name":"fetch_spec","namespace":"Gem::Source::Lock","path":"Gem::Source::Lock#fetch_spec","type":"instance_method","visibility":"public"},"Gem::Source::Lock#initialize":{"description":"Creates a new Lock source that wraps +source+ and moves it earlier in the\nsort list.","name":"initialize","namespace":"Gem::Source::Lock","path":"Gem::Source::Lock#initialize","type":"instance_method","visibility":"public","return":[["Lock"],"a new instance of Lock"]},"Gem::Source::Lock#uri":{"description":":nodoc:","name":"uri","namespace":"Gem::Source::Lock","path":"Gem::Source::Lock#uri","type":"instance_method","visibility":"public"},"Gem::Source::Lock#wrapped":{"description":"The wrapped Gem::Source","name":"wrapped","namespace":"Gem::Source::Lock","path":"Gem::Source::Lock#wrapped","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile":{"description":"A source representing a single .gem file.  This is used for installation of\nlocal gems.","name":"SpecificFile","namespace":"Gem::Source","path":"Gem::Source::SpecificFile","type":"class","visibility":"public"},"Gem::Source::SpecificFile#<=>":{"description":"Orders this source against +other+.\n\nIf +other+ is a SpecificFile from a different gem name +nil+ is returned.\n\nIf +other+ is a SpecificFile from the same gem name the versions are\ncompared using Gem::Version#<=>\n\nOtherwise Gem::Source#<=> is used.","name":"<=>","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#<=>","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile#download":{"description":":nodoc:","name":"download","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#download","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile#fetch_spec":{"description":":nodoc:","name":"fetch_spec","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#fetch_spec","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile#initialize":{"description":"Creates a new SpecificFile for the gem in +file+","name":"initialize","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#initialize","type":"instance_method","visibility":"public","return":[["SpecificFile"],"a new instance of SpecificFile"]},"Gem::Source::SpecificFile#load_specs":{"description":":nodoc:","name":"load_specs","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#load_specs","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile#path":{"description":"The path to the gem for this specific file.","name":"path","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#path","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#pretty_print","type":"instance_method","visibility":"public"},"Gem::Source::SpecificFile#spec":{"description":"The Gem::Specification extracted from this .gem.","name":"spec","namespace":"Gem::Source::SpecificFile","path":"Gem::Source::SpecificFile#spec","type":"instance_method","visibility":"public"},"Gem::Source::Vendor":{"description":"This represents a vendored source that is similar to an installed gem.","name":"Vendor","namespace":"Gem::Source","path":"Gem::Source::Vendor","type":"class","visibility":"public"},"Gem::Source::Vendor#<=>":{"description":"","name":"<=>","namespace":"Gem::Source::Vendor","path":"Gem::Source::Vendor#<=>","type":"instance_method","visibility":"public"},"Gem::Source::Vendor#initialize":{"description":"Creates a new Vendor source for a gem that was unpacked at +path+.","name":"initialize","namespace":"Gem::Source::Vendor","path":"Gem::Source::Vendor#initialize","type":"instance_method","visibility":"public","return":[["Vendor"],"a new instance of Vendor"]},"Gem::SourceFetchProblem":{"description":"An error that indicates we weren't able to fetch some\ndata from a source","name":"SourceFetchProblem","namespace":"Gem","path":"Gem::SourceFetchProblem","type":"class","visibility":"public"},"Gem::SourceFetchProblem#error":{"description":"The fetch error which is an Exception subclass.","name":"exception","namespace":"Gem::SourceFetchProblem","path":"Gem::SourceFetchProblem#exception","type":"instance_method","visibility":"public"},"Gem::SourceFetchProblem#exception":{"description":"The fetch error which is an Exception subclass.\n\nThe \"exception\" alias allows you to call raise on a SourceFetchProblem.","name":"exception","namespace":"Gem::SourceFetchProblem","path":"Gem::SourceFetchProblem#exception","type":"instance_method","visibility":"public"},"Gem::SourceFetchProblem#initialize":{"description":"Creates a new SourceFetchProblem for the given +source+ and +error+.","name":"initialize","namespace":"Gem::SourceFetchProblem","path":"Gem::SourceFetchProblem#initialize","type":"instance_method","visibility":"public","return":[["SourceFetchProblem"],"a new instance of SourceFetchProblem"]},"Gem::SourceFetchProblem#source":{"description":"The source that had the fetch problem.","name":"source","namespace":"Gem::SourceFetchProblem","path":"Gem::SourceFetchProblem#source","type":"instance_method","visibility":"public"},"Gem::SourceFetchProblem#wordy":{"description":"An English description of the error.","name":"wordy","namespace":"Gem::SourceFetchProblem","path":"Gem::SourceFetchProblem#wordy","type":"instance_method","visibility":"public"},"Gem::SourceList":{"description":"The SourceList represents the sources rubygems has been configured to use.\nA source may be created from an array of sources:\n\n  Gem::SourceList.from %w[https://rubygems.example https://internal.example]\n\nOr by adding them:\n\n  sources = Gem::SourceList.new\n  sources.add 'https://rubygems.example'\n\nThe most common way to get a SourceList is Gem.sources.","name":"SourceList","namespace":"Gem","path":"Gem::SourceList","type":"class","visibility":"public"},"Gem::SourceList#<<":{"description":"Appends +obj+ to the source list which may be a Gem::Source, URI or URI\nString.","name":"<<","namespace":"Gem::SourceList","path":"Gem::SourceList#<<","type":"instance_method","visibility":"public"},"Gem::SourceList#==":{"description":":nodoc:","name":"==","namespace":"Gem::SourceList","path":"Gem::SourceList#==","type":"instance_method","visibility":"public"},"Gem::SourceList#clear":{"description":"Removes all sources from the SourceList.","name":"clear","namespace":"Gem::SourceList","path":"Gem::SourceList#clear","type":"instance_method","visibility":"public"},"Gem::SourceList#delete":{"description":"Deletes +source+ from the source list which may be a Gem::Source or a URI.","name":"delete","namespace":"Gem::SourceList","path":"Gem::SourceList#delete","type":"instance_method","visibility":"public"},"Gem::SourceList#each":{"description":"Yields each source URI in the list.","name":"each","namespace":"Gem::SourceList","path":"Gem::SourceList#each","type":"instance_method","visibility":"public"},"Gem::SourceList#each_source":{"description":"Yields each source in the list.","name":"each_source","namespace":"Gem::SourceList","path":"Gem::SourceList#each_source","type":"instance_method","visibility":"public"},"Gem::SourceList#empty?":{"description":"Returns true if there are no sources in this SourceList.","name":"empty?","namespace":"Gem::SourceList","path":"Gem::SourceList#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::SourceList#first":{"description":"Returns the first source in the list.","name":"first","namespace":"Gem::SourceList","path":"Gem::SourceList#first","type":"instance_method","visibility":"public"},"Gem::SourceList#include?":{"description":"Returns true if this source list includes +other+ which may be a\nGem::Source or a source URI.","name":"include?","namespace":"Gem::SourceList","path":"Gem::SourceList#include?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::SourceList#initialize":{"description":"Creates a new SourceList","name":"initialize","namespace":"Gem::SourceList","path":"Gem::SourceList#initialize","type":"instance_method","visibility":"public","return":[["SourceList"],"a new instance of SourceList"]},"Gem::SourceList#initialize_copy":{"description":":nodoc:","name":"initialize_copy","namespace":"Gem::SourceList","path":"Gem::SourceList#initialize_copy","type":"instance_method","visibility":"public"},"Gem::SourceList#replace":{"description":"Replaces this SourceList with the sources in +other+  See #<< for\nacceptable items in +other+.","name":"replace","namespace":"Gem::SourceList","path":"Gem::SourceList#replace","type":"instance_method","visibility":"public"},"Gem::SourceList#sources":{"description":"The sources in this list","name":"sources","namespace":"Gem::SourceList","path":"Gem::SourceList#sources","type":"instance_method","visibility":"public"},"Gem::SourceList#to_a":{"description":"Returns an Array of source URI Strings.","name":"to_ary","namespace":"Gem::SourceList","path":"Gem::SourceList#to_ary","type":"instance_method","visibility":"public"},"Gem::SourceList#to_ary":{"description":"Returns an Array of source URI Strings.","name":"to_ary","namespace":"Gem::SourceList","path":"Gem::SourceList#to_ary","type":"instance_method","visibility":"public"},"Gem::SourceList.from":{"description":"Creates a new SourceList from an array of sources.","name":"from","namespace":"Gem::SourceList","path":"Gem::SourceList.from","type":"class_method","visibility":"public"},"Gem::SpecFetcher":{"description":"SpecFetcher handles metadata updates from remote gem repositories.","name":"SpecFetcher","namespace":"Gem","path":"Gem::SpecFetcher","type":"class","visibility":"public"},"Gem::SpecFetcher#available_specs":{"description":"Returns a list of gems available for each source in Gem::sources.\n\n+type+ can be one of 3 values:\n:released   => Return the list of all released specs\n:complete   => Return the list of all specs\n:latest     => Return the list of only the highest version of each gem\n:prerelease => Return the list of all prerelease only specs","name":"available_specs","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#available_specs","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#detect":{"description":"Return all gem name tuples who's names match +obj+","name":"detect","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#detect","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#initialize":{"description":"Creates a new SpecFetcher.  Ordinarily you want to use the default fetcher\nfrom Gem::SpecFetcher::fetcher which uses the Gem.sources.\n\nIf you need to retrieve specifications from a different +source+, you can\nsend it as an argument.","name":"initialize","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#initialize","type":"instance_method","visibility":"public","return":[["SpecFetcher"],"a new instance of SpecFetcher"]},"Gem::SpecFetcher#latest_specs":{"description":"Cache of latest specs","name":"latest_specs","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#latest_specs","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#prerelease_specs":{"description":"Cache of prerelease specs","name":"prerelease_specs","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#prerelease_specs","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#search_for_dependency":{"description":"Find and fetch gem name tuples that match +dependency+.\n\nIf +matching_platform+ is false, gems for all platforms are returned.","name":"search_for_dependency","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#search_for_dependency","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#sources":{"description":"Sources for this SpecFetcher","name":"sources","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#sources","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#spec_for_dependency":{"description":"Find and fetch specs that match +dependency+.\n\nIf +matching_platform+ is false, gems for all platforms are returned.","name":"spec_for_dependency","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#spec_for_dependency","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#specs":{"description":"Cache of all released specs","name":"specs","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#specs","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#suggest_gems_from_name":{"description":"Suggests gems based on the supplied +gem_name+. Returns an array of\nalternative gem names.","name":"suggest_gems_from_name","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#suggest_gems_from_name","type":"instance_method","visibility":"public"},"Gem::SpecFetcher#tuples_for":{"description":"Retrieves NameTuples from +source+ of the given +type+ (:prerelease,\netc.).  If +gracefully_ignore+ is true, errors are ignored.","name":"tuples_for","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher#tuples_for","type":"instance_method","visibility":"public"},"Gem::SpecFetcher.fetcher":{"description":"Default fetcher instance.  Use this instead of ::new to reduce object\nallocation.","name":"fetcher","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher.fetcher","type":"class_method","visibility":"public"},"Gem::SpecFetcher.fetcher=":{"description":":nodoc:","name":"fetcher=","namespace":"Gem::SpecFetcher","path":"Gem::SpecFetcher.fetcher=","type":"class_method","visibility":"public"},"Gem::SpecificGemNotFoundException":{"description":"Raised by the DependencyInstaller when a specific gem cannot be found","name":"SpecificGemNotFoundException","namespace":"Gem","path":"Gem::SpecificGemNotFoundException","type":"class","visibility":"public"},"Gem::SpecificGemNotFoundException#errors":{"description":"Errors encountered attempting to find the gem.","name":"errors","namespace":"Gem::SpecificGemNotFoundException","path":"Gem::SpecificGemNotFoundException#errors","type":"instance_method","visibility":"public"},"Gem::SpecificGemNotFoundException#initialize":{"description":"Creates a new SpecificGemNotFoundException for a gem with the given +name+\nand +version+.  Any +errors+ encountered when attempting to find the gem\nare also stored.","name":"initialize","namespace":"Gem::SpecificGemNotFoundException","path":"Gem::SpecificGemNotFoundException#initialize","type":"instance_method","visibility":"public","return":[["SpecificGemNotFoundException"],"a new instance of SpecificGemNotFoundException"]},"Gem::SpecificGemNotFoundException#name":{"description":"The name of the gem that could not be found.","name":"name","namespace":"Gem::SpecificGemNotFoundException","path":"Gem::SpecificGemNotFoundException#name","type":"instance_method","visibility":"public"},"Gem::SpecificGemNotFoundException#version":{"description":"The version of the gem that could not be found.","name":"version","namespace":"Gem::SpecificGemNotFoundException","path":"Gem::SpecificGemNotFoundException#version","type":"instance_method","visibility":"public"},"Gem::Specification":{"description":"The Specification class contains the information for a Gem.  Typically\ndefined in a .gemspec file or a Rakefile, and looks like this:\n\n  Gem::Specification.new do |s|\n    s.name        = 'example'\n    s.version     = '0.1.0'\n    s.licenses    = ['MIT']\n    s.summary     = \"This is an example!\"\n    s.description = \"Much longer explanation of the example!\"\n    s.authors     = [\"Ruby Coder\"]\n    s.email       = 'rubycoder@example.com'\n    s.files       = [\"lib/example.rb\"]\n    s.homepage    = 'https://rubygems.org/gems/example'\n  end\n\nStarting in RubyGems 2.0, a Specification can hold arbitrary\nmetadata.  See #metadata for restrictions on the format and size of metadata\nitems you may add to a specification.","name":"Specification","namespace":"Gem","path":"Gem::Specification","type":"class","visibility":"public"},"Gem::Specification#<=>":{"description":":nodoc:","name":"<=>","namespace":"Gem::Specification","path":"Gem::Specification#<=>","type":"instance_method","visibility":"public"},"Gem::Specification#==":{"description":":nodoc:","name":"==","namespace":"Gem::Specification","path":"Gem::Specification#==","type":"instance_method","visibility":"public"},"Gem::Specification#_dump":{"description":"Dump only crucial instance variables.\n--\nMAINTAIN ORDER!\n(down with the man)","name":"_dump","namespace":"Gem::Specification","path":"Gem::Specification#_dump","type":"instance_method","visibility":"public"},"Gem::Specification#activate":{"description":"Activate this spec, registering it as a loaded spec and adding\nit's lib paths to $LOAD_PATH. Returns true if the spec was\nactivated, false if it was previously activated. Freaks out if\nthere are conflicts upon activation.","name":"activate","namespace":"Gem::Specification","path":"Gem::Specification#activate","type":"instance_method","visibility":"public"},"Gem::Specification#activate_dependencies":{"description":"Activate all unambiguously resolved runtime dependencies of this\nspec. Add any ambiguous dependencies to the unresolved list to be\nresolved later, as needed.","name":"activate_dependencies","namespace":"Gem::Specification","path":"Gem::Specification#activate_dependencies","type":"instance_method","visibility":"public"},"Gem::Specification#activated":{"description":"True when this gemspec has been activated. This attribute is not persisted.","name":"activated?","namespace":"Gem::Specification","path":"Gem::Specification#activated?","type":"instance_method","visibility":"public"},"Gem::Specification#activated?":{"description":"True when this gemspec has been activated. This attribute is not persisted.","name":"activated?","namespace":"Gem::Specification","path":"Gem::Specification#activated?","type":"instance_method","visibility":"public"},"Gem::Specification#activated=":{"description":"True when this gemspec has been activated. This attribute is not persisted.","name":"activated=","namespace":"Gem::Specification","path":"Gem::Specification#activated=","type":"instance_method","visibility":"public"},"Gem::Specification#add_bindir":{"description":"Returns an array with bindir attached to each executable in the\n+executables+ list","name":"add_bindir","namespace":"Gem::Specification","path":"Gem::Specification#add_bindir","type":"instance_method","visibility":"public"},"Gem::Specification#add_dependency":{"description":"Adds a runtime dependency named +gem+ with +requirements+ to this gem.\n\nUsage:\n\n  spec.add_runtime_dependency 'example', '~> 1.1', '>= 1.1.4'","name":"add_dependency","namespace":"Gem::Specification","path":"Gem::Specification#add_dependency","type":"instance_method","visibility":"public"},"Gem::Specification#add_dependency_with_type":{"description":"Adds a dependency on gem +dependency+ with type +type+ that requires\n+requirements+.  Valid types are currently <tt>:runtime</tt> and\n<tt>:development</tt>.","name":"add_dependency_with_type","namespace":"Gem::Specification","path":"Gem::Specification#add_dependency_with_type","type":"instance_method","visibility":"private"},"Gem::Specification#add_development_dependency":{"description":"Adds a development dependency named +gem+ with +requirements+ to this\ngem.\n\nUsage:\n\n  spec.add_development_dependency 'example', '~> 1.1', '>= 1.1.4'\n\nDevelopment dependencies aren't installed by default and aren't\nactivated when a gem is required.","name":"add_development_dependency","namespace":"Gem::Specification","path":"Gem::Specification#add_development_dependency","type":"instance_method","visibility":"public"},"Gem::Specification#add_runtime_dependency":{"description":"Adds a runtime dependency named +gem+ with +requirements+ to this gem.\n\nUsage:\n\n  spec.add_runtime_dependency 'example', '~> 1.1', '>= 1.1.4'","name":"add_dependency","namespace":"Gem::Specification","path":"Gem::Specification#add_dependency","type":"instance_method","visibility":"public"},"Gem::Specification#add_self_to_load_path":{"description":"Adds this spec's require paths to LOAD_PATH, in the proper location.","name":"add_self_to_load_path","namespace":"Gem::Specification","path":"Gem::Specification#add_self_to_load_path","type":"instance_method","visibility":"public"},"Gem::Specification#author":{"description":"Singular reader for #authors.  Returns the first author in the list","name":"author","namespace":"Gem::Specification","path":"Gem::Specification#author","type":"instance_method","visibility":"public"},"Gem::Specification#author=":{"description":"Singular writer for #authors\n\nUsage:\n\n  spec.author = 'John Jones'","name":"author=","namespace":"Gem::Specification","path":"Gem::Specification#author=","type":"instance_method","visibility":"public"},"Gem::Specification#authors":{"description":"The list of author names who wrote this gem.\n\n  spec.authors = ['Chad Fowler', 'Jim Weirich', 'Rich Kilmer']","name":"authors","namespace":"Gem::Specification","path":"Gem::Specification#authors","type":"instance_method","visibility":"public"},"Gem::Specification#authors=":{"description":"Sets the list of authors, ensuring it is an array.\n\nUsage:\n\n  spec.authors = ['John Jones', 'Mary Smith']","name":"authors=","namespace":"Gem::Specification","path":"Gem::Specification#authors=","type":"instance_method","visibility":"public"},"Gem::Specification#autorequire":{"description":"Autorequire was used by old RubyGems to automatically require a file.\n\nDeprecated: It is neither supported nor functional.","name":"autorequire","namespace":"Gem::Specification","path":"Gem::Specification#autorequire","type":"instance_method","visibility":"public"},"Gem::Specification#autorequire=":{"description":"Autorequire was used by old RubyGems to automatically require a file.\n\nDeprecated: It is neither supported nor functional.","name":"autorequire=","namespace":"Gem::Specification","path":"Gem::Specification#autorequire=","type":"instance_method","visibility":"public"},"Gem::Specification#bin_dir":{"description":"Returns the full path to installed gem's bin directory.\n\nNOTE: do not confuse this with +bindir+, which is just 'bin', not\na full path.","name":"bin_dir","namespace":"Gem::Specification","path":"Gem::Specification#bin_dir","type":"instance_method","visibility":"public"},"Gem::Specification#bin_file":{"description":"Returns the full path to an executable named +name+ in this gem.","name":"bin_file","namespace":"Gem::Specification","path":"Gem::Specification#bin_file","type":"instance_method","visibility":"public"},"Gem::Specification#bindir":{"description":"The path in the gem for executable scripts.  Usually 'bin'\n\nUsage:\n\n  spec.bindir = 'bin'","name":"bindir","namespace":"Gem::Specification","path":"Gem::Specification#bindir","type":"instance_method","visibility":"public"},"Gem::Specification#bindir=":{"description":"The path in the gem for executable scripts.  Usually 'bin'\n\nUsage:\n\n  spec.bindir = 'bin'","name":"bindir=","namespace":"Gem::Specification","path":"Gem::Specification#bindir=","type":"instance_method","visibility":"public"},"Gem::Specification#build_args":{"description":"Returns the build_args used to install the gem","name":"build_args","namespace":"Gem::Specification","path":"Gem::Specification#build_args","type":"instance_method","visibility":"public"},"Gem::Specification#build_extensions":{"description":"Builds extensions for this platform if the gem has extensions listed and\nthe gem.build_complete file is missing.","name":"build_extensions","namespace":"Gem::Specification","path":"Gem::Specification#build_extensions","type":"instance_method","visibility":"public"},"Gem::Specification#build_info_dir":{"description":"Returns the full path to the build info directory","name":"build_info_dir","namespace":"Gem::Specification","path":"Gem::Specification#build_info_dir","type":"instance_method","visibility":"public"},"Gem::Specification#build_info_file":{"description":"Returns the full path to the file containing the build\ninformation generated when the gem was installed","name":"build_info_file","namespace":"Gem::Specification","path":"Gem::Specification#build_info_file","type":"instance_method","visibility":"public"},"Gem::Specification#bundled_gem_in_old_ruby?":{"description":"Used to detect if the gem is bundled in older version of Ruby, but not\ndetectable as default gem (see BasicSpecification#default_gem?).","name":"bundled_gem_in_old_ruby?","namespace":"Gem::Specification","path":"Gem::Specification#bundled_gem_in_old_ruby?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#cache_dir":{"description":"Returns the full path to the cache directory containing this\nspec's cached gem.","name":"cache_dir","namespace":"Gem::Specification","path":"Gem::Specification#cache_dir","type":"instance_method","visibility":"public"},"Gem::Specification#cache_file":{"description":"Returns the full path to the cached gem for this spec.","name":"cache_file","namespace":"Gem::Specification","path":"Gem::Specification#cache_file","type":"instance_method","visibility":"public"},"Gem::Specification#cert_chain":{"description":"The certificate chain used to sign this gem.  See Gem::Security for\ndetails.","name":"cert_chain","namespace":"Gem::Specification","path":"Gem::Specification#cert_chain","type":"instance_method","visibility":"public"},"Gem::Specification#cert_chain=":{"description":"The certificate chain used to sign this gem.  See Gem::Security for\ndetails.","name":"cert_chain=","namespace":"Gem::Specification","path":"Gem::Specification#cert_chain=","type":"instance_method","visibility":"public"},"Gem::Specification#check_version_conflict":{"description":"Raise an exception if the version of this spec conflicts with the one\nthat is already loaded (+other+)","name":"check_version_conflict","namespace":"Gem::Specification","path":"Gem::Specification#check_version_conflict","type":"instance_method","visibility":"private"},"Gem::Specification#conflicts":{"description":"Return any possible conflicts against the currently loaded specs.","name":"conflicts","namespace":"Gem::Specification","path":"Gem::Specification#conflicts","type":"instance_method","visibility":"public"},"Gem::Specification#date":{"description":"The date this gem was created.  Lazily defaults to the current UTC date.\n\nThere is no need to set this in your gem specification.","name":"date","namespace":"Gem::Specification","path":"Gem::Specification#date","type":"instance_method","visibility":"public"},"Gem::Specification#date=":{"description":"The date this gem was created\n\nDO NOT set this, it is set automatically when the gem is packaged.","name":"date=","namespace":"Gem::Specification","path":"Gem::Specification#date=","type":"instance_method","visibility":"public"},"Gem::Specification#default_executable":{"description":"The default executable for this gem.\n\nDeprecated: The name of the gem is assumed to be the name of the\nexecutable now.  See Gem.bin_path.","name":"default_executable","namespace":"Gem::Specification","path":"Gem::Specification#default_executable","type":"instance_method","visibility":"public"},"Gem::Specification#default_executable=":{"description":"Sets the default executable for this gem.\n\nDeprecated: You must now specify the executable name to  Gem.bin_path.","name":"default_executable=","namespace":"Gem::Specification","path":"Gem::Specification#default_executable=","type":"instance_method","visibility":"public"},"Gem::Specification#default_value":{"description":"The default value for specification attribute +name+","name":"default_value","namespace":"Gem::Specification","path":"Gem::Specification#default_value","type":"instance_method","visibility":"public"},"Gem::Specification#dependencies":{"description":"A list of Gem::Dependency objects this gem depends on.\n\nUse #add_dependency or #add_development_dependency to add dependencies to\na gem.","name":"dependencies","namespace":"Gem::Specification","path":"Gem::Specification#dependencies","type":"instance_method","visibility":"public"},"Gem::Specification#dependent_gems":{"description":"Return a list of all gems that have a dependency on this gemspec.  The\nlist is structured with entries that conform to:\n\n  [depending_gem, dependency, [list_of_gems_that_satisfy_dependency]]","name":"dependent_gems","namespace":"Gem::Specification","path":"Gem::Specification#dependent_gems","type":"instance_method","visibility":"public"},"Gem::Specification#dependent_specs":{"description":"Returns all specs that matches this spec's runtime dependencies.","name":"dependent_specs","namespace":"Gem::Specification","path":"Gem::Specification#dependent_specs","type":"instance_method","visibility":"public"},"Gem::Specification#description":{"description":"A long description of this gem\n\nThe description should be more detailed than the summary but not\nexcessively long.  A few paragraphs is a recommended length with no\nexamples or formatting.\n\nUsage:\n\n  spec.description = <<-EOF\n    Rake is a Make-like program implemented in Ruby. Tasks and\n    dependencies are specified in standard Ruby syntax.\n  EOF","name":"description","namespace":"Gem::Specification","path":"Gem::Specification#description","type":"instance_method","visibility":"public"},"Gem::Specification#description=":{"description":"A detailed description of this gem.  See also #summary","name":"description=","namespace":"Gem::Specification","path":"Gem::Specification#description=","type":"instance_method","visibility":"public"},"Gem::Specification#development_dependencies":{"description":"List of dependencies that are used for development","name":"development_dependencies","namespace":"Gem::Specification","path":"Gem::Specification#development_dependencies","type":"instance_method","visibility":"public"},"Gem::Specification#doc_dir":{"description":"Returns the full path to this spec's documentation directory.  If +type+\nis given it will be appended to the end.  For example:\n\n  spec.doc_dir      # => \"/path/to/gem_repo/doc/a-1\"\n\n  spec.doc_dir 'ri' # => \"/path/to/gem_repo/doc/a-1/ri\"","name":"doc_dir","namespace":"Gem::Specification","path":"Gem::Specification#doc_dir","type":"instance_method","visibility":"public"},"Gem::Specification#email":{"description":"A contact email address (or addresses) for this gem\n\nUsage:\n\n  spec.email = 'john.jones@example.com'\n  spec.email = ['jack@example.com', 'jill@example.com']","name":"email","namespace":"Gem::Specification","path":"Gem::Specification#email","type":"instance_method","visibility":"public"},"Gem::Specification#email=":{"description":"A contact email address (or addresses) for this gem\n\nUsage:\n\n  spec.email = 'john.jones@example.com'\n  spec.email = ['jack@example.com', 'jill@example.com']","name":"email=","namespace":"Gem::Specification","path":"Gem::Specification#email=","type":"instance_method","visibility":"public"},"Gem::Specification#encode_with":{"description":":nodoc:","name":"encode_with","namespace":"Gem::Specification","path":"Gem::Specification#encode_with","type":"instance_method","visibility":"public"},"Gem::Specification#eql?":{"description":":nodoc:","name":"eql?","namespace":"Gem::Specification","path":"Gem::Specification#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#executable":{"description":"Singular accessor for #executables","name":"executable","namespace":"Gem::Specification","path":"Gem::Specification#executable","type":"instance_method","visibility":"public"},"Gem::Specification#executable=":{"description":"Singular accessor for #executables","name":"executable=","namespace":"Gem::Specification","path":"Gem::Specification#executable=","type":"instance_method","visibility":"public"},"Gem::Specification#executables":{"description":"Executables included in the gem.\n\nFor example, the rake gem has rake as an executable. You don’t specify the\nfull path (as in bin/rake); all application-style files are expected to be\nfound in bindir.  These files must be executable Ruby files.  Files that\nuse bash or other interpreters will not work.\n\nExecutables included may only be ruby scripts, not scripts for other\nlanguages or compiled binaries.\n\nUsage:\n\n  spec.executables << 'rake'","name":"executables","namespace":"Gem::Specification","path":"Gem::Specification#executables","type":"instance_method","visibility":"public"},"Gem::Specification#executables=":{"description":"Sets executables to +value+, ensuring it is an array. Don't\nuse this, push onto the array instead.","name":"executables=","namespace":"Gem::Specification","path":"Gem::Specification#executables=","type":"instance_method","visibility":"public"},"Gem::Specification#extensions":{"description":"Extensions to build when installing the gem, specifically the paths to\nextconf.rb-style files used to compile extensions.\n\nThese files will be run when the gem is installed, causing the C (or\nwhatever) code to be compiled on the user’s machine.\n\nUsage:\n\n spec.extensions << 'ext/rmagic/extconf.rb'\n\nSee Gem::Ext::Builder for information about writing extensions for gems.","name":"extensions","namespace":"Gem::Specification","path":"Gem::Specification#extensions","type":"instance_method","visibility":"public"},"Gem::Specification#extensions=":{"description":"Sets extensions to +extensions+, ensuring it is an array. Don't\nuse this, push onto the array instead.","name":"extensions=","namespace":"Gem::Specification","path":"Gem::Specification#extensions=","type":"instance_method","visibility":"public"},"Gem::Specification#extra_rdoc_files":{"description":"Extra files to add to RDoc such as README or doc/examples.txt\n\nWhen the user elects to generate the RDoc documentation for a gem (typically\nat install time), all the library files are sent to RDoc for processing.\nThis option allows you to have some non-code files included for a more\ncomplete set of documentation.\n\nUsage:\n\n spec.extra_rdoc_files = ['README', 'doc/user-guide.txt']","name":"extra_rdoc_files","namespace":"Gem::Specification","path":"Gem::Specification#extra_rdoc_files","type":"instance_method","visibility":"public"},"Gem::Specification#extra_rdoc_files=":{"description":"Sets extra_rdoc_files to +files+, ensuring it is an array. Don't\nuse this, push onto the array instead.","name":"extra_rdoc_files=","namespace":"Gem::Specification","path":"Gem::Specification#extra_rdoc_files=","type":"instance_method","visibility":"public"},"Gem::Specification#file_name":{"description":"The default (generated) file name of the gem.  See also #spec_name.\n\n  spec.file_name # => \"example-1.0.gem\"","name":"file_name","namespace":"Gem::Specification","path":"Gem::Specification#file_name","type":"instance_method","visibility":"public"},"Gem::Specification#files":{"description":"Files included in this gem.  You cannot append to this accessor, you must\nassign to it.\n\nOnly add files you can require to this list, not directories, etc.\n\nDirectories are automatically stripped from this list when building a gem,\nother non-files cause an error.\n\nUsage:\n\n  require 'rake'\n  spec.files = FileList['lib/**/*.rb',\n                        'bin/*',\n                        '[A-Z]*',\n                        'test/**/*'].to_a\n\n  # or without Rake...\n  spec.files = Dir['lib/**/*.rb'] + Dir['bin/*']\n  spec.files += Dir['[A-Z]*'] + Dir['test/**/*']\n  spec.files.reject! { |fn| fn.include? \"CVS\" }","name":"files","namespace":"Gem::Specification","path":"Gem::Specification#files","type":"instance_method","visibility":"public"},"Gem::Specification#files=":{"description":"Sets files to +files+, ensuring it is an array.","name":"files=","namespace":"Gem::Specification","path":"Gem::Specification#files=","type":"instance_method","visibility":"public"},"Gem::Specification#find_all_satisfiers":{"description":"Finds all gems that satisfy +dep+","name":"find_all_satisfiers","namespace":"Gem::Specification","path":"Gem::Specification#find_all_satisfiers","type":"instance_method","visibility":"private"},"Gem::Specification#find_full_gem_path":{"description":":nodoc:","name":"find_full_gem_path","namespace":"Gem::Specification","path":"Gem::Specification#find_full_gem_path","type":"instance_method","visibility":"private"},"Gem::Specification#for_cache":{"description":"Creates a duplicate spec without large blobs that aren't used at runtime.","name":"for_cache","namespace":"Gem::Specification","path":"Gem::Specification#for_cache","type":"instance_method","visibility":"public"},"Gem::Specification#full_name":{"description":"","name":"full_name","namespace":"Gem::Specification","path":"Gem::Specification#full_name","type":"instance_method","visibility":"public"},"Gem::Specification#gem_build_complete_path":{"description":"The path to the gem.build_complete file within the extension install\ndirectory.","name":"gem_build_complete_path","namespace":"Gem::Specification","path":"Gem::Specification#gem_build_complete_path","type":"instance_method","visibility":"public"},"Gem::Specification#gem_dir":{"description":"Work around bundler removing my methods","name":"gem_dir","namespace":"Gem::Specification","path":"Gem::Specification#gem_dir","type":"instance_method","visibility":"public"},"Gem::Specification#has_rdoc":{"description":"Deprecated and ignored, defaults to true.\n\nFormerly used to indicate this gem was RDoc-capable.","name":"has_rdoc?","namespace":"Gem::Specification","path":"Gem::Specification#has_rdoc?","type":"instance_method","visibility":"public"},"Gem::Specification#has_rdoc?":{"description":"Deprecated and ignored, defaults to true.\n\nFormerly used to indicate this gem was RDoc-capable.\n:nodoc:","name":"has_rdoc?","namespace":"Gem::Specification","path":"Gem::Specification#has_rdoc?","type":"instance_method","visibility":"public"},"Gem::Specification#has_rdoc=":{"description":"Deprecated and ignored.\n\nFormerly used to indicate this gem was RDoc-capable.","name":"has_rdoc=","namespace":"Gem::Specification","path":"Gem::Specification#has_rdoc=","type":"instance_method","visibility":"public"},"Gem::Specification#has_test_suite?":{"description":"True if this gem has files in test_files","name":"has_test_suite?","namespace":"Gem::Specification","path":"Gem::Specification#has_test_suite?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#has_unit_tests?":{"description":"True if this gem has files in test_files","name":"has_test_suite?","namespace":"Gem::Specification","path":"Gem::Specification#has_test_suite?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#hash":{"description":":startdoc:","name":"hash","namespace":"Gem::Specification","path":"Gem::Specification#hash","type":"instance_method","visibility":"public"},"Gem::Specification#homepage":{"description":"The URL of this gem's home page\n\nUsage:\n\n  spec.homepage = 'http://rake.rubyforge.org'","name":"homepage","namespace":"Gem::Specification","path":"Gem::Specification#homepage","type":"instance_method","visibility":"public"},"Gem::Specification#homepage=":{"description":"The URL of this gem's home page\n\nUsage:\n\n  spec.homepage = 'http://rake.rubyforge.org'","name":"homepage=","namespace":"Gem::Specification","path":"Gem::Specification#homepage=","type":"instance_method","visibility":"public"},"Gem::Specification#init_with":{"description":":nodoc:","name":"init_with","namespace":"Gem::Specification","path":"Gem::Specification#init_with","type":"instance_method","visibility":"public"},"Gem::Specification#initialize":{"description":"Specification constructor. Assigns the default values to the attributes\nand yields itself for further initialization.  Optionally takes +name+ and\n+version+.","name":"initialize","namespace":"Gem::Specification","path":"Gem::Specification#initialize","type":"instance_method","visibility":"public","return":[["Specification"],"a new instance of Specification"]},"Gem::Specification#initialize_copy":{"description":"Duplicates array_attributes from +other_spec+ so state isn't shared.","name":"initialize_copy","namespace":"Gem::Specification","path":"Gem::Specification#initialize_copy","type":"instance_method","visibility":"public"},"Gem::Specification#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Specification","path":"Gem::Specification#inspect","type":"instance_method","visibility":"public"},"Gem::Specification#installed_by_version":{"description":"The version of RubyGems that installed this gem.  Returns\n<code>Gem::Version.new(0)</code> for gems installed by versions earlier\nthan RubyGems 2.2.0.","name":"installed_by_version","namespace":"Gem::Specification","path":"Gem::Specification#installed_by_version","type":"instance_method","visibility":"public"},"Gem::Specification#installed_by_version=":{"description":"Sets the version of RubyGems that installed this gem.  See also\n#installed_by_version.","name":"installed_by_version=","namespace":"Gem::Specification","path":"Gem::Specification#installed_by_version=","type":"instance_method","visibility":"public"},"Gem::Specification#invalidate_memoized_attributes":{"description":"Expire memoized instance variables that can incorrectly generate, replace\nor miss files due changes in certain attributes used to compute them.","name":"invalidate_memoized_attributes","namespace":"Gem::Specification","path":"Gem::Specification#invalidate_memoized_attributes","type":"instance_method","visibility":"private"},"Gem::Specification#lib_dirs_glob":{"description":"Returns a string usable in Dir.glob to match all requirable paths\nfor this spec.","name":"lib_dirs_glob","namespace":"Gem::Specification","path":"Gem::Specification#lib_dirs_glob","type":"instance_method","visibility":"public"},"Gem::Specification#lib_files":{"description":"Files in the Gem under one of the require_paths","name":"lib_files","namespace":"Gem::Specification","path":"Gem::Specification#lib_files","type":"instance_method","visibility":"public"},"Gem::Specification#license":{"description":"Singular accessor for #licenses","name":"license","namespace":"Gem::Specification","path":"Gem::Specification#license","type":"instance_method","visibility":"public"},"Gem::Specification#license=":{"description":":category: Recommended gemspec attributes\n\nThe license for this gem.\n\nThe license must be no more than 64 characters.\n\nThis should just be the name of your license. The full text of the license\nshould be inside of the gem (at the top level) when you build it.\n\nThe simplest way, is to specify the standard SPDX ID\nhttps://spdx.org/licenses/ for the license.\nIdeally you should pick one that is OSI (Open Source Initiative)\nhttp://opensource.org/licenses/alphabetical approved.\n\nThe most commonly used OSI approved licenses are BSD-3-Clause and MIT.\nGitHub also provides a license picker at http://choosealicense.com/.\n\nYou should specify a license for your gem so that people know how they are\npermitted to use it, and any restrictions you're placing on it.  Not\nspecifying a license means all rights are reserved; others have no rights\nto use the code for any purpose.\n\nYou can set multiple licenses with #licenses=\n\nUsage:\n  spec.license = 'MIT'","name":"license=","namespace":"Gem::Specification","path":"Gem::Specification#license=","type":"instance_method","visibility":"public"},"Gem::Specification#licenses":{"description":"Plural accessor for setting licenses\n\nSee #license= for details","name":"licenses","namespace":"Gem::Specification","path":"Gem::Specification#licenses","type":"instance_method","visibility":"public"},"Gem::Specification#licenses=":{"description":":category: Recommended gemspec attributes\nThe license(s) for the library.\n\nEach license must be a short name, no more than 64 characters.\n\nThis should just be the name of your license. The full\ntext of the license should be inside of the gem when you build it.\n\nSee #license= for more discussion\n\nUsage:\n  spec.licenses = ['MIT', 'GPL-2']","name":"licenses=","namespace":"Gem::Specification","path":"Gem::Specification#licenses=","type":"instance_method","visibility":"public"},"Gem::Specification#loaded_from=":{"description":":nodoc:","name":"loaded_from=","namespace":"Gem::Specification","path":"Gem::Specification#loaded_from=","type":"instance_method","visibility":"public"},"Gem::Specification#mark_version":{"description":"Sets the rubygems_version to the current RubyGems version.","name":"mark_version","namespace":"Gem::Specification","path":"Gem::Specification#mark_version","type":"instance_method","visibility":"public"},"Gem::Specification#matches_for_glob":{"description":"Return all files in this gem that match for +glob+.","name":"matches_for_glob","namespace":"Gem::Specification","path":"Gem::Specification#matches_for_glob","type":"instance_method","visibility":"public"},"Gem::Specification#metadata":{"description":":attr_accessor: metadata\n\nThe metadata holds extra data for this gem that may be useful to other\nconsumers and is settable by gem authors without requiring an update to\nthe rubygems software.\n\nMetadata items have the following restrictions:\n\n* The metadata must be a Hash object\n* All keys and values must be Strings\n* Keys can be a maximum of 128 bytes and values can be a maximum of 1024\n  bytes\n* All strings must be UTF-8, no binary data is allowed\n\nTo add metadata for the location of a issue tracker:\n\n  s.metadata = { \"issue_tracker\" => \"https://example/issues\" }","name":"metadata","namespace":"Gem::Specification","path":"Gem::Specification#metadata","type":"instance_method","visibility":"public"},"Gem::Specification#metadata=":{"description":":attr_accessor: metadata\n\nThe metadata holds extra data for this gem that may be useful to other\nconsumers and is settable by gem authors without requiring an update to\nthe rubygems software.\n\nMetadata items have the following restrictions:\n\n* The metadata must be a Hash object\n* All keys and values must be Strings\n* Keys can be a maximum of 128 bytes and values can be a maximum of 1024\n  bytes\n* All strings must be UTF-8, no binary data is allowed\n\nTo add metadata for the location of a issue tracker:\n\n  s.metadata = { \"issue_tracker\" => \"https://example/issues\" }","name":"metadata=","namespace":"Gem::Specification","path":"Gem::Specification#metadata=","type":"instance_method","visibility":"public"},"Gem::Specification#method_missing":{"description":"Warn about unknown attributes while loading a spec.","name":"method_missing","namespace":"Gem::Specification","path":"Gem::Specification#method_missing","type":"instance_method","visibility":"public"},"Gem::Specification#missing_extensions?":{"description":"Is this specification missing its extensions?  When this returns true you\nprobably want to build_extensions","name":"missing_extensions?","namespace":"Gem::Specification","path":"Gem::Specification#missing_extensions?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#name":{"description":"This gem's name.\n\nUsage:\n\n  spec.name = 'rake'","name":"name","namespace":"Gem::Specification","path":"Gem::Specification#name","type":"instance_method","visibility":"public"},"Gem::Specification#name=":{"description":"This gem's name.\n\nUsage:\n\n  spec.name = 'rake'","name":"name=","namespace":"Gem::Specification","path":"Gem::Specification#name=","type":"instance_method","visibility":"public"},"Gem::Specification#name_tuple":{"description":"Return a NameTuple that represents this Specification","name":"name_tuple","namespace":"Gem::Specification","path":"Gem::Specification#name_tuple","type":"instance_method","visibility":"public"},"Gem::Specification#normalize":{"description":"Normalize the list of files so that:\n* All file lists have redundancies removed.\n* Files referenced in the extra_rdoc_files are included in the package\n  file list.","name":"normalize","namespace":"Gem::Specification","path":"Gem::Specification#normalize","type":"instance_method","visibility":"public"},"Gem::Specification#original_name":{"description":"Returns the full name (name-version) of this gemspec using the original\nplatform.  For use with legacy gems.","name":"original_name","namespace":"Gem::Specification","path":"Gem::Specification#original_name","type":"instance_method","visibility":"public"},"Gem::Specification#original_platform":{"description":"Cruft. Use +platform+.","name":"original_platform","namespace":"Gem::Specification","path":"Gem::Specification#original_platform","type":"instance_method","visibility":"public"},"Gem::Specification#original_platform=":{"description":"Allows deinstallation of gems with legacy platforms.","name":"original_platform=","namespace":"Gem::Specification","path":"Gem::Specification#original_platform=","type":"instance_method","visibility":"public"},"Gem::Specification#platform":{"description":"The platform this gem runs on.  See Gem::Platform for details.","name":"platform","namespace":"Gem::Specification","path":"Gem::Specification#platform","type":"instance_method","visibility":"public"},"Gem::Specification#platform=":{"description":"The platform this gem runs on.\n\nThis is usually Gem::Platform::RUBY or Gem::Platform::CURRENT.\n\nMost gems contain pure Ruby code; they should simply leave the default\nvalue in place.  Some gems contain C (or other) code to be compiled into a\nRuby \"extension\".  The gem should leave the default value in place unless\nthe code will only compile on a certain type of system.  Some gems consist\nof pre-compiled code (\"binary gems\").  It's especially important that they\nset the platform attribute appropriately.  A shortcut is to set the\nplatform to Gem::Platform::CURRENT, which will cause the gem builder to set\nthe platform to the appropriate value for the system on which the build is\nbeing performed.\n\nIf this attribute is set to a non-default value, it will be included in\nthe filename of the gem when it is built such as:\nnokogiri-1.6.0-x86-mingw32.gem\n\nUsage:\n\n  spec.platform = Gem::Platform.local","name":"platform=","namespace":"Gem::Specification","path":"Gem::Specification#platform=","type":"instance_method","visibility":"public"},"Gem::Specification#post_install_message":{"description":"A message that gets displayed after the gem is installed.\n\nUsage:\n\n  spec.post_install_message = \"Thanks for installing!\"","name":"post_install_message","namespace":"Gem::Specification","path":"Gem::Specification#post_install_message","type":"instance_method","visibility":"public"},"Gem::Specification#post_install_message=":{"description":"A message that gets displayed after the gem is installed.\n\nUsage:\n\n  spec.post_install_message = \"Thanks for installing!\"","name":"post_install_message=","namespace":"Gem::Specification","path":"Gem::Specification#post_install_message=","type":"instance_method","visibility":"public"},"Gem::Specification#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Specification","path":"Gem::Specification#pretty_print","type":"instance_method","visibility":"public"},"Gem::Specification#raise_if_conflicts":{"description":"Check the spec for possible conflicts and freak out if there are any.","name":"raise_if_conflicts","namespace":"Gem::Specification","path":"Gem::Specification#raise_if_conflicts","type":"instance_method","visibility":"public"},"Gem::Specification#rdoc_options":{"description":"Specifies the rdoc options to be used when generating API documentation.\n\nUsage:\n\n  spec.rdoc_options << '--title' << 'Rake -- Ruby Make' <<\n    '--main' << 'README' <<\n    '--line-numbers'","name":"rdoc_options","namespace":"Gem::Specification","path":"Gem::Specification#rdoc_options","type":"instance_method","visibility":"public"},"Gem::Specification#rdoc_options=":{"description":"Sets rdoc_options to +value+, ensuring it is an array. Don't\nuse this, push onto the array instead.","name":"rdoc_options=","namespace":"Gem::Specification","path":"Gem::Specification#rdoc_options=","type":"instance_method","visibility":"public"},"Gem::Specification#require_path":{"description":"Singular accessor for #require_paths","name":"require_path","namespace":"Gem::Specification","path":"Gem::Specification#require_path","type":"instance_method","visibility":"public"},"Gem::Specification#require_path=":{"description":"Singular accessor for #require_paths","name":"require_path=","namespace":"Gem::Specification","path":"Gem::Specification#require_path=","type":"instance_method","visibility":"public"},"Gem::Specification#require_paths=":{"description":"Paths in the gem to add to <code>$LOAD_PATH</code> when this gem is\nactivated.\n\nSee also #require_paths\n\nIf you have an extension you do not need to add <code>\"ext\"</code> to the\nrequire path, the extension build process will copy the extension files\ninto \"lib\" for you.\n\nThe default value is <code>\"lib\"</code>\n\nUsage:\n\n  # If all library files are in the root directory...\n  spec.require_paths = ['.']","name":"require_paths=","namespace":"Gem::Specification","path":"Gem::Specification#require_paths=","type":"instance_method","visibility":"public"},"Gem::Specification#required_ruby_version":{"description":"The version of Ruby required by this gem","name":"required_ruby_version","namespace":"Gem::Specification","path":"Gem::Specification#required_ruby_version","type":"instance_method","visibility":"public"},"Gem::Specification#required_ruby_version=":{"description":"The version of Ruby required by this gem.  The ruby version can be\nspecified to the patch-level:\n\n  $ ruby -v -e 'p Gem.ruby_version'\n  ruby 2.0.0p247 (2013-06-27 revision 41674) [x86_64-darwin12.4.0]\n  #<Gem::Version \"2.0.0.247\">\n\nUsage:\n\n # This gem will work with 1.8.6 or greater...\n spec.required_ruby_version = '>= 1.8.6'\n\n # Only with ruby 2.0.x\n spec.required_ruby_version = '~> 2.0'","name":"required_ruby_version=","namespace":"Gem::Specification","path":"Gem::Specification#required_ruby_version=","type":"instance_method","visibility":"public"},"Gem::Specification#required_rubygems_version":{"description":"The RubyGems version required by this gem","name":"required_rubygems_version","namespace":"Gem::Specification","path":"Gem::Specification#required_rubygems_version","type":"instance_method","visibility":"public"},"Gem::Specification#required_rubygems_version=":{"description":"The RubyGems version required by this gem","name":"required_rubygems_version=","namespace":"Gem::Specification","path":"Gem::Specification#required_rubygems_version=","type":"instance_method","visibility":"public"},"Gem::Specification#requirements":{"description":"Lists the external (to RubyGems) requirements that must be met for this gem\nto work.  It's simply information for the user.\n\nUsage:\n\n  spec.requirements << 'libmagick, v6.0'\n  spec.requirements << 'A good graphics card'","name":"requirements","namespace":"Gem::Specification","path":"Gem::Specification#requirements","type":"instance_method","visibility":"public"},"Gem::Specification#requirements=":{"description":"Set requirements to +req+, ensuring it is an array. Don't\nuse this, push onto the array instead.","name":"requirements=","namespace":"Gem::Specification","path":"Gem::Specification#requirements=","type":"instance_method","visibility":"public"},"Gem::Specification#reset_nil_attributes_to_default":{"description":"Reset nil attributes to their default values to make the spec valid","name":"reset_nil_attributes_to_default","namespace":"Gem::Specification","path":"Gem::Specification#reset_nil_attributes_to_default","type":"instance_method","visibility":"public"},"Gem::Specification#respond_to_missing?":{"description":":nodoc:","name":"respond_to_missing?","namespace":"Gem::Specification","path":"Gem::Specification#respond_to_missing?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#ri_dir":{"description":"Returns the full path to this spec's ri directory.","name":"ri_dir","namespace":"Gem::Specification","path":"Gem::Specification#ri_dir","type":"instance_method","visibility":"public"},"Gem::Specification#ruby_code":{"description":"Return a string containing a Ruby code representation of the given\nobject.","name":"ruby_code","namespace":"Gem::Specification","path":"Gem::Specification#ruby_code","type":"instance_method","visibility":"private"},"Gem::Specification#rubyforge_project":{"description":"The rubyforge project this gem lives under.  i.e. RubyGems'\nrubyforge_project is \"rubygems\".\n\nThis option is deprecated.","name":"rubyforge_project","namespace":"Gem::Specification","path":"Gem::Specification#rubyforge_project","type":"instance_method","visibility":"public"},"Gem::Specification#rubyforge_project=":{"description":"The rubyforge project this gem lives under.  i.e. RubyGems'\nrubyforge_project is \"rubygems\".\n\nThis option is deprecated.","name":"rubyforge_project=","namespace":"Gem::Specification","path":"Gem::Specification#rubyforge_project=","type":"instance_method","visibility":"public"},"Gem::Specification#rubygems_version":{"description":"The version of RubyGems used to create this gem.\n\nDo not set this, it is set automatically when the gem is packaged.","name":"rubygems_version","namespace":"Gem::Specification","path":"Gem::Specification#rubygems_version","type":"instance_method","visibility":"public"},"Gem::Specification#rubygems_version=":{"description":"The version of RubyGems used to create this gem.\n\nDo not set this, it is set automatically when the gem is packaged.","name":"rubygems_version=","namespace":"Gem::Specification","path":"Gem::Specification#rubygems_version=","type":"instance_method","visibility":"public"},"Gem::Specification#runtime_dependencies":{"description":"List of dependencies that will automatically be activated at runtime.","name":"runtime_dependencies","namespace":"Gem::Specification","path":"Gem::Specification#runtime_dependencies","type":"instance_method","visibility":"public"},"Gem::Specification#same_attributes?":{"description":"True if this gem has the same attributes as +other+.","name":"same_attributes?","namespace":"Gem::Specification","path":"Gem::Specification#same_attributes?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"Gem::Specification#satisfies_requirement?":{"description":"Checks if this specification meets the requirement of +dependency+.","name":"satisfies_requirement?","namespace":"Gem::Specification","path":"Gem::Specification#satisfies_requirement?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#signing_key":{"description":"The key used to sign this gem.  See Gem::Security for details.","name":"signing_key","namespace":"Gem::Specification","path":"Gem::Specification#signing_key","type":"instance_method","visibility":"public"},"Gem::Specification#signing_key=":{"description":"The key used to sign this gem.  See Gem::Security for details.","name":"signing_key=","namespace":"Gem::Specification","path":"Gem::Specification#signing_key=","type":"instance_method","visibility":"public"},"Gem::Specification#sort_obj":{"description":"Returns an object you can use to sort specifications in #sort_by.","name":"sort_obj","namespace":"Gem::Specification","path":"Gem::Specification#sort_obj","type":"instance_method","visibility":"public"},"Gem::Specification#source":{"description":"Used by Gem::Resolver to order Gem::Specification objects","name":"source","namespace":"Gem::Specification","path":"Gem::Specification#source","type":"instance_method","visibility":"public"},"Gem::Specification#spec_dir":{"description":"Returns the full path to the directory containing this spec's\ngemspec file. eg: /usr/local/lib/ruby/gems/1.8/specifications","name":"spec_dir","namespace":"Gem::Specification","path":"Gem::Specification#spec_dir","type":"instance_method","visibility":"public"},"Gem::Specification#spec_file":{"description":"Returns the full path to this spec's gemspec file.\neg: /usr/local/lib/ruby/gems/1.8/specifications/mygem-1.0.gemspec","name":"spec_file","namespace":"Gem::Specification","path":"Gem::Specification#spec_file","type":"instance_method","visibility":"public"},"Gem::Specification#spec_name":{"description":"The default name of the gemspec.  See also #file_name\n\n  spec.spec_name # => \"example-1.0.gemspec\"","name":"spec_name","namespace":"Gem::Specification","path":"Gem::Specification#spec_name","type":"instance_method","visibility":"public"},"Gem::Specification#specification_version":{"description":"The Gem::Specification version of this gemspec.\n\nDo not set this, it is set automatically when the gem is packaged.","name":"specification_version","namespace":"Gem::Specification","path":"Gem::Specification#specification_version","type":"instance_method","visibility":"public"},"Gem::Specification#specification_version=":{"description":"The Gem::Specification version of this gemspec.\n\nDo not set this, it is set automatically when the gem is packaged.","name":"specification_version=","namespace":"Gem::Specification","path":"Gem::Specification#specification_version=","type":"instance_method","visibility":"public"},"Gem::Specification#stubbed?":{"description":"","name":"stubbed?","namespace":"Gem::Specification","path":"Gem::Specification#stubbed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification#summary":{"description":"A short summary of this gem's description.  Displayed in `gem list -d`.\n\nThe #description should be more detailed than the summary.\n\nUsage:\n\n  spec.summary = \"This is a small summary of my gem\"","name":"summary","namespace":"Gem::Specification","path":"Gem::Specification#summary","type":"instance_method","visibility":"public"},"Gem::Specification#summary=":{"description":"A short summary of this gem's description.","name":"summary=","namespace":"Gem::Specification","path":"Gem::Specification#summary=","type":"instance_method","visibility":"public"},"Gem::Specification#test_file":{"description":"Singular accessor for #test_files","name":"test_file","namespace":"Gem::Specification","path":"Gem::Specification#test_file","type":"instance_method","visibility":"public"},"Gem::Specification#test_file=":{"description":"Singular mutator for #test_files","name":"test_file=","namespace":"Gem::Specification","path":"Gem::Specification#test_file=","type":"instance_method","visibility":"public"},"Gem::Specification#test_files":{"description":"Test files included in this gem.  You cannot append to this accessor, you\nmust assign to it.","name":"test_files","namespace":"Gem::Specification","path":"Gem::Specification#test_files","type":"instance_method","visibility":"public"},"Gem::Specification#test_files=":{"description":"A collection of unit test files.  They will be loaded as unit tests when\nthe user requests a gem to be unit tested.\n\nUsage:\n  spec.test_files = Dir.glob('test/tc_*.rb')\n  spec.test_files = ['tests/test-suite.rb']","name":"test_files=","namespace":"Gem::Specification","path":"Gem::Specification#test_files=","type":"instance_method","visibility":"public"},"Gem::Specification#to_ruby":{"description":"Returns a Ruby code representation of this specification, such that it can\nbe eval'ed and reconstruct the same specification later.  Attributes that\nstill have their default values are omitted.","name":"to_ruby","namespace":"Gem::Specification","path":"Gem::Specification#to_ruby","type":"instance_method","visibility":"public"},"Gem::Specification#to_ruby_for_cache":{"description":"Returns a Ruby lighter-weight code representation of this specification,\nused for indexing only.\n\nSee #to_ruby.","name":"to_ruby_for_cache","namespace":"Gem::Specification","path":"Gem::Specification#to_ruby_for_cache","type":"instance_method","visibility":"public"},"Gem::Specification#to_s":{"description":":nodoc:","name":"to_s","namespace":"Gem::Specification","path":"Gem::Specification#to_s","type":"instance_method","visibility":"public"},"Gem::Specification#to_spec":{"description":"Returns self","name":"to_spec","namespace":"Gem::Specification","path":"Gem::Specification#to_spec","type":"instance_method","visibility":"public"},"Gem::Specification#to_yaml":{"description":":nodoc:","name":"to_yaml","namespace":"Gem::Specification","path":"Gem::Specification#to_yaml","type":"instance_method","visibility":"public"},"Gem::Specification#traverse":{"description":"Recursively walk dependencies of this spec, executing the +block+ for each\nhop.","name":"traverse","namespace":"Gem::Specification","path":"Gem::Specification#traverse","type":"instance_method","visibility":"public"},"Gem::Specification#validate":{"description":"Checks that the specification contains all required fields, and does a\nvery basic sanity check.\n\nRaises InvalidSpecificationException if the spec does not pass the\nchecks..","name":"validate","namespace":"Gem::Specification","path":"Gem::Specification#validate","type":"instance_method","visibility":"public"},"Gem::Specification#validate_dependencies":{"description":"Checks that dependencies use requirements as we recommend.  Warnings are\nissued when dependencies are open-ended or overly strict for semantic\nversioning.","name":"validate_dependencies","namespace":"Gem::Specification","path":"Gem::Specification#validate_dependencies","type":"instance_method","visibility":"public"},"Gem::Specification#validate_permissions":{"description":"Checks to see if the files to be packaged are world-readable.","name":"validate_permissions","namespace":"Gem::Specification","path":"Gem::Specification#validate_permissions","type":"instance_method","visibility":"public"},"Gem::Specification#version":{"description":"This gem's version.\n\nThe version string can contain numbers and periods, such as +1.0.0+.\nA gem is a 'prerelease' gem if the version has a letter in it, such as\n+1.0.0.pre+.\n\nUsage:\n\n  spec.version = '0.4.1'","name":"version","namespace":"Gem::Specification","path":"Gem::Specification#version","type":"instance_method","visibility":"public"},"Gem::Specification#version=":{"description":"Set the version to +version+, potentially also setting\nrequired_rubygems_version if +version+ indicates it is a\nprerelease.","name":"version=","namespace":"Gem::Specification","path":"Gem::Specification#version=","type":"instance_method","visibility":"public"},"Gem::Specification#warning":{"description":":nodoc:","name":"warning","namespace":"Gem::Specification","path":"Gem::Specification#warning","type":"instance_method","visibility":"public"},"Gem::Specification#yaml_initialize":{"description":":nodoc:","name":"yaml_initialize","namespace":"Gem::Specification","path":"Gem::Specification#yaml_initialize","type":"instance_method","visibility":"public"},"Gem::Specification._all":{"description":":nodoc:","name":"_all","namespace":"Gem::Specification","path":"Gem::Specification._all","type":"class_method","visibility":"public"},"Gem::Specification._clear_load_cache":{"description":":nodoc:","name":"_clear_load_cache","namespace":"Gem::Specification","path":"Gem::Specification._clear_load_cache","type":"class_method","visibility":"public"},"Gem::Specification._load":{"description":"Load custom marshal format, re-initializing defaults as needed","name":"_load","namespace":"Gem::Specification","path":"Gem::Specification._load","type":"class_method","visibility":"public"},"Gem::Specification._resort!":{"description":":nodoc:","name":"_resort!","namespace":"Gem::Specification","path":"Gem::Specification._resort!","type":"class_method","visibility":"public"},"Gem::Specification.add_spec":{"description":"Adds +spec+ to the known specifications, keeping the collection\nproperly sorted.","name":"add_spec","namespace":"Gem::Specification","path":"Gem::Specification.add_spec","type":"class_method","visibility":"public"},"Gem::Specification.add_specs":{"description":"Adds multiple specs to the known specifications.","name":"add_specs","namespace":"Gem::Specification","path":"Gem::Specification.add_specs","type":"class_method","visibility":"public"},"Gem::Specification.all":{"description":"Returns all specifications. This method is discouraged from use.\nYou probably want to use one of the Enumerable methods instead.","name":"all","namespace":"Gem::Specification","path":"Gem::Specification.all","type":"class_method","visibility":"public"},"Gem::Specification.all=":{"description":"Sets the known specs to +specs+. Not guaranteed to work for you in\nthe future. Use at your own risk. Caveat emptor. Doomy doom doom.\nEtc etc.\n\n--\nMakes +specs+ the known specs\nListen, time is a river\nWinter comes, code breaks\n\n-- wilsonb","name":"all=","namespace":"Gem::Specification","path":"Gem::Specification.all=","type":"class_method","visibility":"public"},"Gem::Specification.all_names":{"description":"Return full names of all specs in sorted order.","name":"all_names","namespace":"Gem::Specification","path":"Gem::Specification.all_names","type":"class_method","visibility":"public"},"Gem::Specification.array_attributes":{"description":"Return the list of all array-oriented instance variables.\n--\nNot sure why we need to use so much stupid reflection in here...","name":"array_attributes","namespace":"Gem::Specification","path":"Gem::Specification.array_attributes","type":"class_method","visibility":"public"},"Gem::Specification.attribute_names":{"description":"Return the list of all instance variables.\n--\nNot sure why we need to use so much stupid reflection in here...","name":"attribute_names","namespace":"Gem::Specification","path":"Gem::Specification.attribute_names","type":"class_method","visibility":"public"},"Gem::Specification.dirs":{"description":"Return the directories that Specification uses to find specs.","name":"dirs","namespace":"Gem::Specification","path":"Gem::Specification.dirs","type":"class_method","visibility":"public"},"Gem::Specification.dirs=":{"description":"Set the directories that Specification uses to find specs. Setting\nthis resets the list of known specs.","name":"dirs=","namespace":"Gem::Specification","path":"Gem::Specification.dirs=","type":"class_method","visibility":"public"},"Gem::Specification.each":{"description":"Enumerate every known spec.  See ::dirs= and ::add_spec to set the list of\nspecs.","name":"each","namespace":"Gem::Specification","path":"Gem::Specification.each","type":"class_method","visibility":"public"},"Gem::Specification.each_gemspec":{"description":":nodoc:","name":"each_gemspec","namespace":"Gem::Specification","path":"Gem::Specification.each_gemspec","type":"class_method","visibility":"public"},"Gem::Specification.each_spec":{"description":":nodoc:","name":"each_spec","namespace":"Gem::Specification","path":"Gem::Specification.each_spec","type":"class_method","visibility":"public"},"Gem::Specification.each_stub":{"description":":nodoc:","name":"each_stub","namespace":"Gem::Specification","path":"Gem::Specification.each_stub","type":"class_method","visibility":"public"},"Gem::Specification.find_all_by_name":{"description":"Returns every spec that matches +name+ and optional +requirements+.","name":"find_all_by_name","namespace":"Gem::Specification","path":"Gem::Specification.find_all_by_name","type":"class_method","visibility":"public"},"Gem::Specification.find_by_name":{"description":"Find the best specification matching a +name+ and +requirements+. Raises\nif the dependency doesn't resolve to a valid specification.","name":"find_by_name","namespace":"Gem::Specification","path":"Gem::Specification.find_by_name","type":"class_method","visibility":"public"},"Gem::Specification.find_by_path":{"description":"Return the best specification that contains the file matching +path+.","name":"find_by_path","namespace":"Gem::Specification","path":"Gem::Specification.find_by_path","type":"class_method","visibility":"public"},"Gem::Specification.find_in_unresolved":{"description":"Return currently unresolved specs that contain the file matching +path+.","name":"find_in_unresolved","namespace":"Gem::Specification","path":"Gem::Specification.find_in_unresolved","type":"class_method","visibility":"public"},"Gem::Specification.find_in_unresolved_tree":{"description":"Search through all unresolved deps and sub-dependencies and return\nspecs that contain the file matching +path+.","name":"find_in_unresolved_tree","namespace":"Gem::Specification","path":"Gem::Specification.find_in_unresolved_tree","type":"class_method","visibility":"public"},"Gem::Specification.find_inactive_by_path":{"description":"Return the best specification that contains the file matching +path+\namongst the specs that are not activated.","name":"find_inactive_by_path","namespace":"Gem::Specification","path":"Gem::Specification.find_inactive_by_path","type":"class_method","visibility":"public"},"Gem::Specification.from_yaml":{"description":"Special loader for YAML files.  When a Specification object is loaded\nfrom a YAML file, it bypasses the normal Ruby object initialization\nroutine (#initialize).  This method makes up for that and deals with\ngems of different ages.\n\n+input+ can be anything that YAML.load() accepts: String or IO.","name":"from_yaml","namespace":"Gem::Specification","path":"Gem::Specification.from_yaml","type":"class_method","visibility":"public"},"Gem::Specification.latest_specs":{"description":"Return the latest specs, optionally including prerelease specs if\n+prerelease+ is true.","name":"latest_specs","namespace":"Gem::Specification","path":"Gem::Specification.latest_specs","type":"class_method","visibility":"public"},"Gem::Specification.load":{"description":"Loads Ruby format gemspec from +file+.","name":"load","namespace":"Gem::Specification","path":"Gem::Specification.load","type":"class_method","visibility":"public"},"Gem::Specification.load_defaults":{"description":"Loads the default specifications. It should be called only once.","name":"load_defaults","namespace":"Gem::Specification","path":"Gem::Specification.load_defaults","type":"class_method","visibility":"public"},"Gem::Specification.non_nil_attributes":{"description":"Specification attributes that must be non-nil","name":"non_nil_attributes","namespace":"Gem::Specification","path":"Gem::Specification.non_nil_attributes","type":"class_method","visibility":"public"},"Gem::Specification.normalize_yaml_input":{"description":"Make sure the YAML specification is properly formatted with dashes","name":"normalize_yaml_input","namespace":"Gem::Specification","path":"Gem::Specification.normalize_yaml_input","type":"class_method","visibility":"public"},"Gem::Specification.outdated":{"description":"Return a list of all outdated local gem names.  This method is HEAVY\nas it must go fetch specifications from the server.\n\nUse outdated_and_latest_version if you wish to retrieve the latest remote\nversion as well.","name":"outdated","namespace":"Gem::Specification","path":"Gem::Specification.outdated","type":"class_method","visibility":"public"},"Gem::Specification.outdated_and_latest_version":{"description":"Enumerates the outdated local gems yielding the local specification and\nthe latest remote version.\n\nThis method may take some time to return as it must check each local gem\nagainst the server's index.","name":"outdated_and_latest_version","namespace":"Gem::Specification","path":"Gem::Specification.outdated_and_latest_version","type":"class_method","visibility":"public"},"Gem::Specification.remove_spec":{"description":"Removes +spec+ from the known specs.","name":"remove_spec","namespace":"Gem::Specification","path":"Gem::Specification.remove_spec","type":"class_method","visibility":"public"},"Gem::Specification.required_attribute?":{"description":"Is +name+ a required attribute?","name":"required_attribute?","namespace":"Gem::Specification","path":"Gem::Specification.required_attribute?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Gem::Specification.required_attributes":{"description":"Required specification attributes","name":"required_attributes","namespace":"Gem::Specification","path":"Gem::Specification.required_attributes","type":"class_method","visibility":"public"},"Gem::Specification.reset":{"description":"Reset the list of known specs, running pre and post reset hooks\nregistered in Gem.","name":"reset","namespace":"Gem::Specification","path":"Gem::Specification.reset","type":"class_method","visibility":"public"},"Gem::Specification.stubs":{"description":"Returns a Gem::StubSpecification for every installed gem","name":"stubs","namespace":"Gem::Specification","path":"Gem::Specification.stubs","type":"class_method","visibility":"public"},"Gem::Specification.unresolved_deps":{"description":"DOC: This method needs documented or nodoc'd","name":"unresolved_deps","namespace":"Gem::Specification","path":"Gem::Specification.unresolved_deps","type":"class_method","visibility":"public"},"Gem::Specification::@@array_attributes":{"description":"","name":"@@array_attributes","namespace":"Gem::Specification","path":"Gem::Specification::@@array_attributes","type":"classvariable","visibility":"public"},"Gem::Specification::@@attributes":{"description":"","name":"@@attributes","namespace":"Gem::Specification","path":"Gem::Specification::@@attributes","type":"classvariable","visibility":"public"},"Gem::Specification::@@default_value":{"description":"Map of attribute names to default values.","name":"@@default_value","namespace":"Gem::Specification","path":"Gem::Specification::@@default_value","type":"classvariable","visibility":"public"},"Gem::Specification::@@required_attributes":{"description":"List of attribute names: [:name, :version, ...]","name":"@@required_attributes","namespace":"Gem::Specification","path":"Gem::Specification::@@required_attributes","type":"classvariable","visibility":"public"},"Gem::Specification::CURRENT_SPECIFICATION_VERSION":{"description":"The specification version applied to any new Specification instances\ncreated.  This should be bumped whenever something in the spec format\nchanges.\n\nSpecification Version History:\n\n  spec   ruby\n   ver    ver yyyy-mm-dd description\n    -1 <0.8.0            pre-spec-version-history\n     1  0.8.0 2004-08-01 Deprecated \"test_suite_file\" for \"test_files\"\n                         \"test_file=x\" is a shortcut for \"test_files=[x]\"\n     2  0.9.5 2007-10-01 Added \"required_rubygems_version\"\n                         Now forward-compatible with future versions\n     3  1.3.2 2009-01-03 Added Fixnum validation to specification_version\n     4  1.9.0 2011-06-07 Added metadata\n--\nWhen updating this number, be sure to also update #to_ruby.\n\nNOTE RubyGems < 1.2 cannot load specification versions > 2.","name":"CURRENT_SPECIFICATION_VERSION","namespace":"Gem::Specification","path":"Gem::Specification::CURRENT_SPECIFICATION_VERSION","type":"constant","return":["Fixnum",""],"visibility":"public"},"Gem::Specification::DateLike":{"description":":nodoc:","name":"DateLike","namespace":"Gem::Specification","path":"Gem::Specification::DateLike","type":"constant","return":null,"visibility":"public"},"Gem::Specification::DateTimeFormat":{"description":":nodoc:","name":"DateTimeFormat","namespace":"Gem::Specification","path":"Gem::Specification::DateTimeFormat","type":"constant","return":["Regexp",""],"visibility":"public"},"Gem::Specification::Dupable":{"description":":nodoc:","name":"Dupable","namespace":"Gem::Specification","path":"Gem::Specification::Dupable","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Specification::LOAD_CACHE":{"description":":nodoc:","name":"LOAD_CACHE","namespace":"Gem::Specification","path":"Gem::Specification::LOAD_CACHE","type":"constant","return":["Hash",""],"visibility":"private"},"Gem::Specification::MARSHAL_FIELDS":{"description":":nodoc:","name":"MARSHAL_FIELDS","namespace":"Gem::Specification","path":"Gem::Specification::MARSHAL_FIELDS","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Specification::NONEXISTENT_SPECIFICATION_VERSION":{"description":"The version number of a specification that does not specify one\n(i.e. RubyGems 0.7 or earlier).","name":"NONEXISTENT_SPECIFICATION_VERSION","namespace":"Gem::Specification","path":"Gem::Specification::NONEXISTENT_SPECIFICATION_VERSION","type":"constant","return":["Fixnum",""],"visibility":"public"},"Gem::Specification::SPECIFICATION_VERSION_HISTORY":{"description":"An informal list of changes to the specification.  The highest-valued\nkey should be equal to the CURRENT_SPECIFICATION_VERSION.","name":"SPECIFICATION_VERSION_HISTORY","namespace":"Gem::Specification","path":"Gem::Specification::SPECIFICATION_VERSION_HISTORY","type":"constant","return":["Hash",""],"visibility":"public"},"Gem::Specification::TODAY":{"description":":nodoc:","name":"TODAY","namespace":"Gem::Specification","path":"Gem::Specification::TODAY","type":"constant","return":["Time",""],"visibility":"public"},"Gem::StreamUI":{"description":"Gem::StreamUI implements a simple stream based user interface.","name":"StreamUI","namespace":"Gem","path":"Gem::StreamUI","type":"class","visibility":"public"},"Gem::StreamUI#_gets_noecho":{"description":"","name":"_gets_noecho","namespace":"Gem::StreamUI","path":"Gem::StreamUI#_gets_noecho","type":"instance_method","visibility":"public"},"Gem::StreamUI#alert":{"description":"Display an informational alert.  Will ask +question+ if it is not nil.","name":"alert","namespace":"Gem::StreamUI","path":"Gem::StreamUI#alert","type":"instance_method","visibility":"public"},"Gem::StreamUI#alert_error":{"description":"Display an error message in a location expected to get error messages.\nWill ask +question+ if it is not nil.","name":"alert_error","namespace":"Gem::StreamUI","path":"Gem::StreamUI#alert_error","type":"instance_method","visibility":"public"},"Gem::StreamUI#alert_warning":{"description":"Display a warning on stderr.  Will ask +question+ if it is not nil.","name":"alert_warning","namespace":"Gem::StreamUI","path":"Gem::StreamUI#alert_warning","type":"instance_method","visibility":"public"},"Gem::StreamUI#ask":{"description":"Ask a question.  Returns an answer if connected to a tty, nil otherwise.","name":"ask","namespace":"Gem::StreamUI","path":"Gem::StreamUI#ask","type":"instance_method","visibility":"public"},"Gem::StreamUI#ask_for_password":{"description":"Ask for a password. Does not echo response to terminal.","name":"ask_for_password","namespace":"Gem::StreamUI","path":"Gem::StreamUI#ask_for_password","type":"instance_method","visibility":"public"},"Gem::StreamUI#ask_yes_no":{"description":"Ask a question.  Returns a true for yes, false for no.  If not connected\nto a tty, raises an exception if default is nil, otherwise returns\ndefault.","name":"ask_yes_no","namespace":"Gem::StreamUI","path":"Gem::StreamUI#ask_yes_no","type":"instance_method","visibility":"public"},"Gem::StreamUI#backtrace":{"description":"Prints a formatted backtrace to the errors stream if backtraces are\nenabled.","name":"backtrace","namespace":"Gem::StreamUI","path":"Gem::StreamUI#backtrace","type":"instance_method","visibility":"public"},"Gem::StreamUI#choose_from_list":{"description":"Choose from a list of options.  +question+ is a prompt displayed above\nthe list.  +list+ is a list of option strings.  Returns the pair\n[option_name, option_index].","name":"choose_from_list","namespace":"Gem::StreamUI","path":"Gem::StreamUI#choose_from_list","type":"instance_method","visibility":"public"},"Gem::StreamUI#close":{"description":"","name":"close","namespace":"Gem::StreamUI","path":"Gem::StreamUI#close","type":"instance_method","visibility":"public"},"Gem::StreamUI#debug":{"description":"Display a debug message on the same location as error messages.","name":"debug","namespace":"Gem::StreamUI","path":"Gem::StreamUI#debug","type":"instance_method","visibility":"public"},"Gem::StreamUI#download_reporter":{"description":"Return a download reporter object chosen from the current verbosity","name":"download_reporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI#download_reporter","type":"instance_method","visibility":"public"},"Gem::StreamUI#errs":{"description":"The error stream","name":"errs","namespace":"Gem::StreamUI","path":"Gem::StreamUI#errs","type":"instance_method","visibility":"public"},"Gem::StreamUI#initialize":{"description":"Creates a new StreamUI wrapping +in_stream+ for user input, +out_stream+\nfor standard output, +err_stream+ for error output.  If +usetty+ is true\nthen special operations (like asking for passwords) will use the TTY\ncommands to disable character echo.","name":"initialize","namespace":"Gem::StreamUI","path":"Gem::StreamUI#initialize","type":"instance_method","visibility":"public","return":[["StreamUI"],"a new instance of StreamUI"]},"Gem::StreamUI#ins":{"description":"The input stream","name":"ins","namespace":"Gem::StreamUI","path":"Gem::StreamUI#ins","type":"instance_method","visibility":"public"},"Gem::StreamUI#outs":{"description":"The output stream","name":"outs","namespace":"Gem::StreamUI","path":"Gem::StreamUI#outs","type":"instance_method","visibility":"public"},"Gem::StreamUI#progress_reporter":{"description":"Return a progress reporter object chosen from the current verbosity.","name":"progress_reporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI#progress_reporter","type":"instance_method","visibility":"public"},"Gem::StreamUI#say":{"description":"Display a statement.","name":"say","namespace":"Gem::StreamUI","path":"Gem::StreamUI#say","type":"instance_method","visibility":"public"},"Gem::StreamUI#terminate_interaction":{"description":"Terminate the application with exit code +status+, running any exit\nhandlers that might have been defined.","name":"terminate_interaction","namespace":"Gem::StreamUI","path":"Gem::StreamUI#terminate_interaction","type":"instance_method","visibility":"public"},"Gem::StreamUI#tty?":{"description":"Returns true if TTY methods should be used on this StreamUI.","name":"tty?","namespace":"Gem::StreamUI","path":"Gem::StreamUI#tty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::StreamUI::SilentDownloadReporter":{"description":"An absolutely silent download reporter.","name":"SilentDownloadReporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI::SilentDownloadReporter","type":"class","visibility":"public"},"Gem::StreamUI::SilentDownloadReporter#done":{"description":"The silent download reporter won't tell you when the download is done.\nBecause it is silent.","name":"done","namespace":"Gem::StreamUI::SilentDownloadReporter","path":"Gem::StreamUI::SilentDownloadReporter#done","type":"instance_method","visibility":"public"},"Gem::StreamUI::SilentDownloadReporter#fetch":{"description":"The silent download reporter does not display +filename+ or care about\n+filesize+ because it is silent.","name":"fetch","namespace":"Gem::StreamUI::SilentDownloadReporter","path":"Gem::StreamUI::SilentDownloadReporter#fetch","type":"instance_method","visibility":"public"},"Gem::StreamUI::SilentDownloadReporter#initialize":{"description":"The silent download reporter ignores all arguments","name":"initialize","namespace":"Gem::StreamUI::SilentDownloadReporter","path":"Gem::StreamUI::SilentDownloadReporter#initialize","type":"instance_method","visibility":"public","return":[["SilentDownloadReporter"],"a new instance of SilentDownloadReporter"]},"Gem::StreamUI::SilentDownloadReporter#update":{"description":"Nothing can update the silent download reporter.","name":"update","namespace":"Gem::StreamUI::SilentDownloadReporter","path":"Gem::StreamUI::SilentDownloadReporter#update","type":"instance_method","visibility":"public"},"Gem::StreamUI::SilentProgressReporter":{"description":"An absolutely silent progress reporter.","name":"SilentProgressReporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI::SilentProgressReporter","type":"class","visibility":"public"},"Gem::StreamUI::SilentProgressReporter#count":{"description":"The count of items is never updated for the silent progress reporter.","name":"count","namespace":"Gem::StreamUI::SilentProgressReporter","path":"Gem::StreamUI::SilentProgressReporter#count","type":"instance_method","visibility":"public"},"Gem::StreamUI::SilentProgressReporter#done":{"description":"Does not print anything when complete as this object has taken a vow of\nsilence.","name":"done","namespace":"Gem::StreamUI::SilentProgressReporter","path":"Gem::StreamUI::SilentProgressReporter#done","type":"instance_method","visibility":"public"},"Gem::StreamUI::SilentProgressReporter#initialize":{"description":"Creates a silent progress reporter that ignores all input arguments.","name":"initialize","namespace":"Gem::StreamUI::SilentProgressReporter","path":"Gem::StreamUI::SilentProgressReporter#initialize","type":"instance_method","visibility":"public","return":[["SilentProgressReporter"],"a new instance of SilentProgressReporter"]},"Gem::StreamUI::SilentProgressReporter#updated":{"description":"Does not print +message+ when updated as this object has taken a vow of\nsilence.","name":"updated","namespace":"Gem::StreamUI::SilentProgressReporter","path":"Gem::StreamUI::SilentProgressReporter#updated","type":"instance_method","visibility":"public"},"Gem::StreamUI::SimpleProgressReporter":{"description":"A basic dotted progress reporter.","name":"SimpleProgressReporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI::SimpleProgressReporter","type":"class","visibility":"public"},"Gem::StreamUI::SimpleProgressReporter#count":{"description":"The number of progress items counted so far.","name":"count","namespace":"Gem::StreamUI::SimpleProgressReporter","path":"Gem::StreamUI::SimpleProgressReporter#count","type":"instance_method","visibility":"public"},"Gem::StreamUI::SimpleProgressReporter#done":{"description":"Prints out the terminal message.","name":"done","namespace":"Gem::StreamUI::SimpleProgressReporter","path":"Gem::StreamUI::SimpleProgressReporter#done","type":"instance_method","visibility":"public"},"Gem::StreamUI::SimpleProgressReporter#initialize":{"description":"Creates a new progress reporter that will write to +out_stream+ for\n+size+ items.  Shows the given +initial_message+ when progress starts\nand the +terminal_message+ when it is complete.","name":"initialize","namespace":"Gem::StreamUI::SimpleProgressReporter","path":"Gem::StreamUI::SimpleProgressReporter#initialize","type":"instance_method","visibility":"public","return":[["SimpleProgressReporter"],"a new instance of SimpleProgressReporter"]},"Gem::StreamUI::SimpleProgressReporter#updated":{"description":"Prints out a dot and ignores +message+.","name":"updated","namespace":"Gem::StreamUI::SimpleProgressReporter","path":"Gem::StreamUI::SimpleProgressReporter#updated","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter":{"description":"A progress reporter that prints out messages about the current progress.","name":"VerboseDownloadReporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI::VerboseDownloadReporter","type":"class","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#done":{"description":"Indicates the download is complete.","name":"done","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#done","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#fetch":{"description":"Tells the download reporter that the +file_name+ is being fetched and\ncontains +total_bytes+.","name":"fetch","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#fetch","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#file_name":{"description":"The current file name being displayed","name":"file_name","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#file_name","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#initialize":{"description":"Creates a new verbose download reporter that will display on\n+out_stream+.  The other arguments are ignored.","name":"initialize","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#initialize","type":"instance_method","visibility":"public","return":[["VerboseDownloadReporter"],"a new instance of VerboseDownloadReporter"]},"Gem::StreamUI::VerboseDownloadReporter#progress":{"description":"The current progress (0 to 100)","name":"progress","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#progress","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#total_bytes":{"description":"The total bytes in the file","name":"total_bytes","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#total_bytes","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#update":{"description":"Updates the verbose download reporter for the given number of +bytes+.","name":"update","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#update","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseDownloadReporter#update_display":{"description":":nodoc:","name":"update_display","namespace":"Gem::StreamUI::VerboseDownloadReporter","path":"Gem::StreamUI::VerboseDownloadReporter#update_display","type":"instance_method","visibility":"private"},"Gem::StreamUI::VerboseProgressReporter":{"description":"A progress reporter that prints out messages about the current progress.","name":"VerboseProgressReporter","namespace":"Gem::StreamUI","path":"Gem::StreamUI::VerboseProgressReporter","type":"class","visibility":"public"},"Gem::StreamUI::VerboseProgressReporter#count":{"description":"The number of progress items counted so far.","name":"count","namespace":"Gem::StreamUI::VerboseProgressReporter","path":"Gem::StreamUI::VerboseProgressReporter#count","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseProgressReporter#done":{"description":"Prints out the terminal message.","name":"done","namespace":"Gem::StreamUI::VerboseProgressReporter","path":"Gem::StreamUI::VerboseProgressReporter#done","type":"instance_method","visibility":"public"},"Gem::StreamUI::VerboseProgressReporter#initialize":{"description":"Creates a new progress reporter that will write to +out_stream+ for\n+size+ items.  Shows the given +initial_message+ when progress starts\nand the +terminal_message+ when it is complete.","name":"initialize","namespace":"Gem::StreamUI::VerboseProgressReporter","path":"Gem::StreamUI::VerboseProgressReporter#initialize","type":"instance_method","visibility":"public","return":[["VerboseProgressReporter"],"a new instance of VerboseProgressReporter"]},"Gem::StreamUI::VerboseProgressReporter#updated":{"description":"Prints out the position relative to the total and the +message+.","name":"updated","namespace":"Gem::StreamUI::VerboseProgressReporter","path":"Gem::StreamUI::VerboseProgressReporter#updated","type":"instance_method","visibility":"public"},"Gem::StringSink":{"description":"","name":"StringSink","namespace":"Gem","path":"Gem::StringSink","type":"class","visibility":"public"},"Gem::StringSink#initialize":{"description":"","name":"initialize","namespace":"Gem::StringSink","path":"Gem::StringSink#initialize","type":"instance_method","visibility":"public","return":[["StringSink"],"a new instance of StringSink"]},"Gem::StringSink#set_encoding":{"description":"","name":"set_encoding","namespace":"Gem::StringSink","path":"Gem::StringSink#set_encoding","type":"instance_method","visibility":"public"},"Gem::StringSink#string":{"description":"Returns the value of attribute string","name":"string","namespace":"Gem::StringSink","path":"Gem::StringSink#string","type":"instance_method","visibility":"public"},"Gem::StringSink#write":{"description":"","name":"write","namespace":"Gem::StringSink","path":"Gem::StringSink#write","type":"instance_method","visibility":"public"},"Gem::StringSource":{"description":"","name":"StringSource","namespace":"Gem","path":"Gem::StringSource","type":"class","visibility":"public"},"Gem::StringSource#initialize":{"description":"","name":"initialize","namespace":"Gem::StringSource","path":"Gem::StringSource#initialize","type":"instance_method","visibility":"public","return":[["StringSource"],"a new instance of StringSource"]},"Gem::StringSource#read":{"description":"","name":"readpartial","namespace":"Gem::StringSource","path":"Gem::StringSource#readpartial","type":"instance_method","visibility":"public"},"Gem::StringSource#readpartial":{"description":"","name":"readpartial","namespace":"Gem::StringSource","path":"Gem::StringSource#readpartial","type":"instance_method","visibility":"public"},"Gem::StubSpecification":{"description":"Gem::StubSpecification reads the stub: line from the gemspec.  This prevents\nus having to eval the entire gemspec in order to find out certain\ninformation.","name":"StubSpecification","namespace":"Gem","path":"Gem::StubSpecification","type":"class","visibility":"public"},"Gem::StubSpecification#activated?":{"description":"True when this gem has been activated","name":"activated?","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#activated?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::StubSpecification#build_extensions":{"description":":nodoc:","name":"build_extensions","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#build_extensions","type":"instance_method","visibility":"public"},"Gem::StubSpecification#data":{"description":"If the gemspec contains a stubline, returns a StubLine instance. Otherwise\nreturns the full Gem::Specification.","name":"data","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#data","type":"instance_method","visibility":"private"},"Gem::StubSpecification#extensions":{"description":"Extensions for this gem","name":"extensions","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#extensions","type":"instance_method","visibility":"public"},"Gem::StubSpecification#find_full_gem_path":{"description":"If a gem has a stub specification it doesn't need to bother with\ncompatibility with original_name gems.  It was installed with the\nnormalized name.","name":"find_full_gem_path","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#find_full_gem_path","type":"instance_method","visibility":"public"},"Gem::StubSpecification#full_require_paths":{"description":"Full paths in the gem to add to <code>$LOAD_PATH</code> when this gem is\nactivated.","name":"full_require_paths","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#full_require_paths","type":"instance_method","visibility":"public"},"Gem::StubSpecification#initialize":{"description":"","name":"initialize","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#initialize","type":"instance_method","visibility":"public","return":[["StubSpecification"],"a new instance of StubSpecification"]},"Gem::StubSpecification#missing_extensions?":{"description":"","name":"missing_extensions?","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#missing_extensions?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::StubSpecification#name":{"description":"Name of the gem","name":"name","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#name","type":"instance_method","visibility":"public"},"Gem::StubSpecification#platform":{"description":"Platform of the gem","name":"platform","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#platform","type":"instance_method","visibility":"public"},"Gem::StubSpecification#require_paths":{"description":"Require paths of the gem","name":"require_paths","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#require_paths","type":"instance_method","visibility":"public"},"Gem::StubSpecification#stubbed?":{"description":"Is there a stub line present for this StubSpecification?","name":"stubbed?","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#stubbed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::StubSpecification#to_spec":{"description":"The full Gem::Specification for this gem, loaded from evalling its gemspec","name":"to_spec","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#to_spec","type":"instance_method","visibility":"public"},"Gem::StubSpecification#valid?":{"description":"Is this StubSpecification valid? i.e. have we found a stub line, OR does\nthe filename contain a valid gemspec?","name":"valid?","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#valid?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::StubSpecification#version":{"description":"Version of the gem","name":"version","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification#version","type":"instance_method","visibility":"public"},"Gem::StubSpecification::OPEN_MODE":{"description":":nodoc:","name":"OPEN_MODE","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification::OPEN_MODE","type":"constant","return":["String",""],"visibility":"public"},"Gem::StubSpecification::PREFIX":{"description":":nodoc:","name":"PREFIX","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification::PREFIX","type":"constant","return":["String",""],"visibility":"public"},"Gem::StubSpecification::StubLine":{"description":":nodoc: all","name":"StubLine","namespace":"Gem::StubSpecification","path":"Gem::StubSpecification::StubLine","type":"class","visibility":"public"},"Gem::StubSpecification::StubLine#initialize":{"description":"","name":"initialize","namespace":"Gem::StubSpecification::StubLine","path":"Gem::StubSpecification::StubLine#initialize","type":"instance_method","visibility":"public","return":[["StubLine"],"a new instance of StubLine"]},"Gem::StubSpecification::StubLine#name":{"description":"","name":"name","namespace":"Gem::StubSpecification::StubLine","path":"Gem::StubSpecification::StubLine#name","type":"instance_method","visibility":"public"},"Gem::StubSpecification::StubLine#parts":{"description":"Returns the value of attribute parts","name":"parts","namespace":"Gem::StubSpecification::StubLine","path":"Gem::StubSpecification::StubLine#parts","type":"instance_method","visibility":"public"},"Gem::StubSpecification::StubLine#platform":{"description":"","name":"platform","namespace":"Gem::StubSpecification::StubLine","path":"Gem::StubSpecification::StubLine#platform","type":"instance_method","visibility":"public"},"Gem::StubSpecification::StubLine#require_paths":{"description":"","name":"require_paths","namespace":"Gem::StubSpecification::StubLine","path":"Gem::StubSpecification::StubLine#require_paths","type":"instance_method","visibility":"public"},"Gem::StubSpecification::StubLine#version":{"description":"","name":"version","namespace":"Gem::StubSpecification::StubLine","path":"Gem::StubSpecification::StubLine#version","type":"instance_method","visibility":"public"},"Gem::SyckDefaultKey":{"description":"","name":"SyckDefaultKey","namespace":"Gem","path":"Gem::SyckDefaultKey","type":"constant","return":null,"visibility":"public"},"Gem::SystemExitException":{"description":"Raised to indicate that a system exit should occur with the specified\nexit_code","name":"SystemExitException","namespace":"Gem","path":"Gem::SystemExitException","type":"class","visibility":"public"},"Gem::SystemExitException#exit_code":{"description":"The exit code for the process","name":"exit_code","namespace":"Gem::SystemExitException","path":"Gem::SystemExitException#exit_code","type":"instance_method","visibility":"public"},"Gem::SystemExitException#exit_code=":{"description":"The exit code for the process","name":"exit_code=","namespace":"Gem::SystemExitException","path":"Gem::SystemExitException#exit_code=","type":"instance_method","visibility":"public"},"Gem::SystemExitException#initialize":{"description":"Creates a new SystemExitException with the given +exit_code+","name":"initialize","namespace":"Gem::SystemExitException","path":"Gem::SystemExitException#initialize","type":"instance_method","visibility":"public","return":[["SystemExitException"],"a new instance of SystemExitException"]},"Gem::TestCase":{"description":"RubyGemTestCase provides a variety of methods for testing rubygems and\ngem-related behavior in a sandbox.  Through RubyGemTestCase you can install\nand uninstall gems, fetch remote gems through a stub fetcher and be assured\nyour normal set of gems is not affected.\n\nTests are always run at a safe level of 1.","name":"TestCase","namespace":"Gem","path":"Gem::TestCase","type":"class","visibility":"public"},"Gem::TestCase#add_to_fetcher":{"description":"Add +spec+ to +@fetcher+ serving the data in the file +path+.\n+repo+ indicates which repo to make +spec+ appear to be in.","name":"add_to_fetcher","namespace":"Gem::TestCase","path":"Gem::TestCase#add_to_fetcher","type":"instance_method","visibility":"public"},"Gem::TestCase#all_spec_names":{"description":"","name":"all_spec_names","namespace":"Gem::TestCase","path":"Gem::TestCase#all_spec_names","type":"instance_method","visibility":"public"},"Gem::TestCase#assert_activate":{"description":"","name":"assert_activate","namespace":"Gem::TestCase","path":"Gem::TestCase#assert_activate","type":"instance_method","visibility":"public"},"Gem::TestCase#assert_contains_make_command":{"description":"","name":"assert_contains_make_command","namespace":"Gem::TestCase","path":"Gem::TestCase#assert_contains_make_command","type":"instance_method","visibility":"public"},"Gem::TestCase#assert_path_exists":{"description":"TODO: move to minitest","name":"assert_path_exists","namespace":"Gem::TestCase","path":"Gem::TestCase#assert_path_exists","type":"instance_method","visibility":"public"},"Gem::TestCase#build_rake_in":{"description":"Allows the proper version of +rake+ to be used for the test.","name":"build_rake_in","namespace":"Gem::TestCase","path":"Gem::TestCase#build_rake_in","type":"instance_method","visibility":"public"},"Gem::TestCase#common_installer_setup":{"description":"","name":"common_installer_setup","namespace":"Gem::TestCase","path":"Gem::TestCase#common_installer_setup","type":"instance_method","visibility":"public"},"Gem::TestCase#common_installer_teardown":{"description":"","name":"common_installer_teardown","namespace":"Gem::TestCase","path":"Gem::TestCase#common_installer_teardown","type":"instance_method","visibility":"public"},"Gem::TestCase#create_tmpdir":{"description":"creates a temporary directory with hax\nTODO: deprecate and remove","name":"create_tmpdir","namespace":"Gem::TestCase","path":"Gem::TestCase#create_tmpdir","type":"instance_method","visibility":"public"},"Gem::TestCase#dep":{"description":"Construct a new Gem::Dependency.","name":"dep","namespace":"Gem::TestCase","path":"Gem::TestCase#dep","type":"instance_method","visibility":"public"},"Gem::TestCase#dependency_request":{"description":"Constructs a Gem::Resolver::DependencyRequest from a\nGem::Dependency +dep+, a +from_name+ and +from_version+ requesting the\ndependency and a +parent+ DependencyRequest","name":"dependency_request","namespace":"Gem::TestCase","path":"Gem::TestCase#dependency_request","type":"instance_method","visibility":"public"},"Gem::TestCase#enable_shared":{"description":"Sets the ENABLE_SHARED entry in RbConfig::CONFIG to +value+ and restores\nthe original value when the block ends","name":"enable_shared","namespace":"Gem::TestCase","path":"Gem::TestCase#enable_shared","type":"instance_method","visibility":"public"},"Gem::TestCase#fetcher":{"description":":nodoc:","name":"fetcher","namespace":"Gem::TestCase","path":"Gem::TestCase#fetcher","type":"instance_method","visibility":"public"},"Gem::TestCase#fetcher=":{"description":":nodoc:","name":"fetcher=","namespace":"Gem::TestCase","path":"Gem::TestCase#fetcher=","type":"instance_method","visibility":"public"},"Gem::TestCase#gem_repo":{"description":":nodoc:","name":"gem_repo","namespace":"Gem::TestCase","path":"Gem::TestCase#gem_repo","type":"instance_method","visibility":"public"},"Gem::TestCase#gem_repo=":{"description":":nodoc:","name":"gem_repo=","namespace":"Gem::TestCase","path":"Gem::TestCase#gem_repo=","type":"instance_method","visibility":"public"},"Gem::TestCase#git_gem":{"description":"A git_gem is used with a gem dependencies file.  The gem created here\nhas no files, just a gem specification for the given +name+ and +version+.\n\nYields the +specification+ to the block, if given","name":"git_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#git_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#have_git?":{"description":"Skips this test unless you have a git executable","name":"have_git?","namespace":"Gem::TestCase","path":"Gem::TestCase#have_git?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase#in_path?":{"description":":nodoc:","name":"in_path?","namespace":"Gem::TestCase","path":"Gem::TestCase#in_path?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase#install_default_gems":{"description":"Installs the provided default specs including writing the spec file","name":"install_default_gems","namespace":"Gem::TestCase","path":"Gem::TestCase#install_default_gems","type":"instance_method","visibility":"public"},"Gem::TestCase#install_default_specs":{"description":"Install the provided default specs","name":"install_default_specs","namespace":"Gem::TestCase","path":"Gem::TestCase#install_default_specs","type":"instance_method","visibility":"public"},"Gem::TestCase#install_gem":{"description":"Builds and installs the Gem::Specification +spec+","name":"install_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#install_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#install_gem_user":{"description":"Builds and installs the Gem::Specification +spec+ into the user dir","name":"install_gem_user","namespace":"Gem::TestCase","path":"Gem::TestCase#install_gem_user","type":"instance_method","visibility":"public"},"Gem::TestCase#install_specs":{"description":"Install the provided specs","name":"install_specs","namespace":"Gem::TestCase","path":"Gem::TestCase#install_specs","type":"instance_method","visibility":"public"},"Gem::TestCase#loaded_spec_names":{"description":"","name":"loaded_spec_names","namespace":"Gem::TestCase","path":"Gem::TestCase#loaded_spec_names","type":"instance_method","visibility":"public"},"Gem::TestCase#make_command":{"description":"Returns the make command for the current platform. For versions of Ruby\nbuilt on MS Windows with VC++ or Borland it will return 'nmake'. On all\nother platforms, including Cygwin, it will return 'make'.","name":"make_command","namespace":"Gem::TestCase","path":"Gem::TestCase#make_command","type":"instance_method","visibility":"public"},"Gem::TestCase#mu_pp":{"description":"Enables pretty-print for all tests","name":"mu_pp","namespace":"Gem::TestCase","path":"Gem::TestCase#mu_pp","type":"instance_method","visibility":"public"},"Gem::TestCase#new_default_spec":{"description":"","name":"new_default_spec","namespace":"Gem::TestCase","path":"Gem::TestCase#new_default_spec","type":"instance_method","visibility":"public"},"Gem::TestCase#new_spec":{"description":"new_spec is deprecated as it is never used.\n\nTODO:  remove in RubyGems 3.0","name":"new_spec","namespace":"Gem::TestCase","path":"Gem::TestCase#new_spec","type":"instance_method","visibility":"public"},"Gem::TestCase#nmake_found?":{"description":"Returns whether or not the nmake command could be found.","name":"nmake_found?","namespace":"Gem::TestCase","path":"Gem::TestCase#nmake_found?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase#parse_make_command_line":{"description":"","name":"parse_make_command_line","namespace":"Gem::TestCase","path":"Gem::TestCase#parse_make_command_line","type":"instance_method","visibility":"public"},"Gem::TestCase#process_based_port":{"description":"See ::process_based_port","name":"process_based_port","namespace":"Gem::TestCase","path":"Gem::TestCase#process_based_port","type":"instance_method","visibility":"public"},"Gem::TestCase#quick_gem":{"description":"Creates a Gem::Specification with a minimum of extra work.  +name+ and\n+version+ are the gem's name and version,  platform, author, email,\nhomepage, summary and description are defaulted.  The specification is\nyielded for customization.\n\nThe gem is added to the installed gems in +@gemhome+ and the runtime.\n\nUse this with #write_file to build an installed gem.","name":"quick_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#quick_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#quick_spec":{"description":"TODO:  remove in RubyGems 3.0","name":"quick_spec","namespace":"Gem::TestCase","path":"Gem::TestCase#quick_spec","type":"instance_method","visibility":"public"},"Gem::TestCase#read_binary":{"description":"Reads a binary file at +path+","name":"read_binary","namespace":"Gem::TestCase","path":"Gem::TestCase#read_binary","type":"instance_method","visibility":"public"},"Gem::TestCase#read_cache":{"description":"Reads a Marshal file at +path+","name":"read_cache","namespace":"Gem::TestCase","path":"Gem::TestCase#read_cache","type":"instance_method","visibility":"public"},"Gem::TestCase#refute_path_exists":{"description":"TODO: move to minitest","name":"refute_path_exists","namespace":"Gem::TestCase","path":"Gem::TestCase#refute_path_exists","type":"instance_method","visibility":"public"},"Gem::TestCase#req":{"description":"Constructs a new Gem::Requirement.","name":"req","namespace":"Gem::TestCase","path":"Gem::TestCase#req","type":"instance_method","visibility":"public"},"Gem::TestCase#save_loaded_features":{"description":"","name":"save_loaded_features","namespace":"Gem::TestCase","path":"Gem::TestCase#save_loaded_features","type":"instance_method","visibility":"public"},"Gem::TestCase#scan_make_command_lines":{"description":"","name":"scan_make_command_lines","namespace":"Gem::TestCase","path":"Gem::TestCase#scan_make_command_lines","type":"instance_method","visibility":"public"},"Gem::TestCase#setup":{"description":"#setup prepares a sandboxed location to install gems.  All installs are\ndirected to a temporary directory.  All install plugins are removed.\n\nIf the +RUBY+ environment variable is set the given path is used for\nGem::ruby.  The local platform is set to <tt>i386-mswin32</tt> for Windows\nor <tt>i686-darwin8.10.1</tt> otherwise.\n\nIf the +KEEP_FILES+ environment variable is set the files will not be\nremoved from <tt>/tmp/test_rubygems_#{$$}.#{Time.now.to_i}</tt>.","name":"setup","namespace":"Gem::TestCase","path":"Gem::TestCase#setup","type":"instance_method","visibility":"public"},"Gem::TestCase#spec":{"description":"Constructs a new Gem::Specification.","name":"spec","namespace":"Gem::TestCase","path":"Gem::TestCase#spec","type":"instance_method","visibility":"public"},"Gem::TestCase#spec_fetcher":{"description":"Creates a SpecFetcher pre-filled with the gems or specs defined in the\nblock.\n\nYields a +fetcher+ object that responds to +spec+ and +gem+.  +spec+ adds\na specification to the SpecFetcher while +gem+ adds both a specification\nand the gem data to the RemoteFetcher so the built gem can be downloaded.\n\nIf only the a-3 gem is supposed to be downloaded you can save setup\ntime by creating only specs for the other versions:\n\n  spec_fetcher do |fetcher|\n    fetcher.spec 'a', 1\n    fetcher.spec 'a', 2, 'b' => 3 # dependency on b = 3\n    fetcher.gem 'a', 3 do |spec|\n      # spec is a Gem::Specification\n      # ...\n    end\n  end","name":"spec_fetcher","namespace":"Gem::TestCase","path":"Gem::TestCase#spec_fetcher","type":"instance_method","visibility":"public"},"Gem::TestCase#teardown":{"description":"#teardown restores the process to its original state and removes the\ntempdir unless the +KEEP_FILES+ environment variable was set.","name":"teardown","namespace":"Gem::TestCase","path":"Gem::TestCase#teardown","type":"instance_method","visibility":"public"},"Gem::TestCase#uninstall_gem":{"description":"Uninstalls the Gem::Specification +spec+","name":"uninstall_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#uninstall_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#unresolved_names":{"description":"","name":"unresolved_names","namespace":"Gem::TestCase","path":"Gem::TestCase#unresolved_names","type":"instance_method","visibility":"public"},"Gem::TestCase#uri":{"description":":nodoc:","name":"uri","namespace":"Gem::TestCase","path":"Gem::TestCase#uri","type":"instance_method","visibility":"public"},"Gem::TestCase#uri=":{"description":":nodoc:","name":"uri=","namespace":"Gem::TestCase","path":"Gem::TestCase#uri=","type":"instance_method","visibility":"public"},"Gem::TestCase#util_build_gem":{"description":"Builds a gem from +spec+ and places it in <tt>File.join @gemhome,\n'cache'</tt>.  Automatically creates files based on +spec.files+","name":"util_build_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#util_build_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#util_clear_gems":{"description":"Removes all installed gems from +@gemhome+.","name":"util_clear_gems","namespace":"Gem::TestCase","path":"Gem::TestCase#util_clear_gems","type":"instance_method","visibility":"public"},"Gem::TestCase#util_gem":{"description":"Creates a gem with +name+, +version+ and +deps+.  The specification will\nbe yielded before gem creation for customization.  The gem will be placed\nin <tt>File.join @tempdir, 'gems'</tt>.  The specification and .gem file\nlocation are returned.","name":"util_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#util_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#util_gzip":{"description":"Gzips +data+.","name":"util_gzip","namespace":"Gem::TestCase","path":"Gem::TestCase#util_gzip","type":"instance_method","visibility":"public"},"Gem::TestCase#util_make_gems":{"description":"Creates several default gems which all have a lib/code.rb file.  The gems\nare not installed but are available in the cache dir.\n\n+@a1+:: gem a version 1, this is the best-described gem.\n+@a2+:: gem a version 2\n+@a3a:: gem a version 3.a\n+@a_evil9+:: gem a_evil version 9, use this to ensure similarly-named gems\n             don't collide with a.\n+@b2+:: gem b version 2\n+@c1_2+:: gem c version 1.2\n+@pl1+:: gem pl version 1, this gem has a legacy platform of i386-linux.\n\nAdditional +prerelease+ gems may also be created:\n\n+@a2_pre+:: gem a version 2.a\nTODO: nuke this and fix tests. this should speed up a lot","name":"util_make_gems","namespace":"Gem::TestCase","path":"Gem::TestCase#util_make_gems","type":"instance_method","visibility":"public"},"Gem::TestCase#util_remove_gem":{"description":"","name":"util_remove_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#util_remove_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#util_restore_RUBY_VERSION":{"description":"","name":"util_restore_RUBY_VERSION","namespace":"Gem::TestCase","path":"Gem::TestCase#util_restore_RUBY_VERSION","type":"instance_method","visibility":"public"},"Gem::TestCase#util_set_RUBY_VERSION":{"description":"","name":"util_set_RUBY_VERSION","namespace":"Gem::TestCase","path":"Gem::TestCase#util_set_RUBY_VERSION","type":"instance_method","visibility":"public"},"Gem::TestCase#util_set_arch":{"description":"Set the platform to +arch+","name":"util_set_arch","namespace":"Gem::TestCase","path":"Gem::TestCase#util_set_arch","type":"instance_method","visibility":"public"},"Gem::TestCase#util_setup_fake_fetcher":{"description":"Sets up a fake fetcher using the gems from #util_make_gems.  Optionally\nadditional +prerelease+ gems may be included.\n\nGems created by this method may be fetched using Gem::RemoteFetcher.","name":"util_setup_fake_fetcher","namespace":"Gem::TestCase","path":"Gem::TestCase#util_setup_fake_fetcher","type":"instance_method","visibility":"public"},"Gem::TestCase#util_setup_spec_fetcher":{"description":"Sets up Gem::SpecFetcher to return information from the gems in +specs+.\nBest used with +@all_gems+ from #util_setup_fake_fetcher.","name":"util_setup_spec_fetcher","namespace":"Gem::TestCase","path":"Gem::TestCase#util_setup_spec_fetcher","type":"instance_method","visibility":"public"},"Gem::TestCase#util_spec":{"description":"Creates a spec with +name+, +version+.  +deps+ can specify the dependency\nor a +block+ can be given for full customization of the specification.","name":"util_spec","namespace":"Gem::TestCase","path":"Gem::TestCase#util_spec","type":"instance_method","visibility":"public"},"Gem::TestCase#util_zip":{"description":"Deflates +data+","name":"util_zip","namespace":"Gem::TestCase","path":"Gem::TestCase#util_zip","type":"instance_method","visibility":"public"},"Gem::TestCase#v":{"description":"Construct a new Gem::Version.","name":"v","namespace":"Gem::TestCase","path":"Gem::TestCase#v","type":"instance_method","visibility":"public"},"Gem::TestCase#vc_windows?":{"description":"Returns whether or not we're on a version of Ruby built with VC++ (or\nBorland) versus Cygwin, Mingw, etc.","name":"vc_windows?","namespace":"Gem::TestCase","path":"Gem::TestCase#vc_windows?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase#vendor_gem":{"description":"A vendor_gem is used with a gem dependencies file.  The gem created here\nhas no files, just a gem specification for the given +name+ and +version+.\n\nYields the +specification+ to the block, if given","name":"vendor_gem","namespace":"Gem::TestCase","path":"Gem::TestCase#vendor_gem","type":"instance_method","visibility":"public"},"Gem::TestCase#wait_for_child_process_to_exit":{"description":"In case we're building docs in a background process, this method waits for\nthat process to exit (or if it's already been reaped, or never happened,\nswallows the Errno::ECHILD error).","name":"wait_for_child_process_to_exit","namespace":"Gem::TestCase","path":"Gem::TestCase#wait_for_child_process_to_exit","type":"instance_method","visibility":"public"},"Gem::TestCase#win_platform?":{"description":"Is this test being run on a Windows platform?","name":"win_platform?","namespace":"Gem::TestCase","path":"Gem::TestCase#win_platform?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase#write_file":{"description":"Writes a binary file to +path+ which is relative to +@gemhome+","name":"write_file","namespace":"Gem::TestCase","path":"Gem::TestCase#write_file","type":"instance_method","visibility":"public"},"Gem::TestCase.cert_path":{"description":"Returns the path to the certificate named +cert_name+ from\n<tt>test/rubygems/</tt>.","name":"cert_path","namespace":"Gem::TestCase","path":"Gem::TestCase.cert_path","type":"class_method","visibility":"public"},"Gem::TestCase.key_path":{"description":"Returns the path to the key named +key_name+ from <tt>test/rubygems</tt>","name":"key_path","namespace":"Gem::TestCase","path":"Gem::TestCase.key_path","type":"class_method","visibility":"public"},"Gem::TestCase.load_cert":{"description":"Loads certificate named +cert_name+ from <tt>test/rubygems/</tt>.","name":"load_cert","namespace":"Gem::TestCase","path":"Gem::TestCase.load_cert","type":"class_method","visibility":"public"},"Gem::TestCase.load_key":{"description":"Loads an RSA private key named +key_name+ with +passphrase+ in <tt>test/rubygems/</tt>","name":"load_key","namespace":"Gem::TestCase","path":"Gem::TestCase.load_key","type":"class_method","visibility":"public"},"Gem::TestCase.make_command":{"description":"Returns the make command for the current platform. For versions of Ruby\nbuilt on MS Windows with VC++ or Borland it will return 'nmake'. On all\nother platforms, including Cygwin, it will return 'make'.","name":"make_command","namespace":"Gem::TestCase","path":"Gem::TestCase.make_command","type":"class_method","visibility":"public"},"Gem::TestCase.process_based_port":{"description":"Allows tests to use a random (but controlled) port number instead of\na hardcoded one. This helps CI tools when running parallels builds on\nthe same builder slave.","name":"process_based_port","namespace":"Gem::TestCase","path":"Gem::TestCase.process_based_port","type":"class_method","visibility":"public"},"Gem::TestCase.rubybin":{"description":"Finds the path to the Ruby executable","name":"rubybin","namespace":"Gem::TestCase","path":"Gem::TestCase.rubybin","type":"class_method","visibility":"public"},"Gem::TestCase.vc_windows?":{"description":"Returns whether or not we're on a version of Ruby built with VC++ (or\nBorland) versus Cygwin, Mingw, etc.","name":"vc_windows?","namespace":"Gem::TestCase","path":"Gem::TestCase.vc_windows?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase.win_platform?":{"description":"Is this test being run on a Windows platform?","name":"win_platform?","namespace":"Gem::TestCase","path":"Gem::TestCase.win_platform?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Gem::TestCase::@@bad_rake":{"description":"","name":"@@bad_rake","namespace":"Gem::TestCase","path":"Gem::TestCase::@@bad_rake","type":"classvariable","visibility":"public"},"Gem::TestCase::@@good_rake":{"description":"","name":"@@good_rake","namespace":"Gem::TestCase","path":"Gem::TestCase::@@good_rake","type":"classvariable","visibility":"public"},"Gem::TestCase::@@initial_reset":{"description":"","name":"@@initial_reset","namespace":"Gem::TestCase","path":"Gem::TestCase::@@initial_reset","type":"classvariable","visibility":"public"},"Gem::TestCase::@@project_dir":{"description":"","name":"@@project_dir","namespace":"Gem::TestCase","path":"Gem::TestCase::@@project_dir","type":"classvariable","visibility":"public"},"Gem::TestCase::@@ruby":{"description":"","name":"@@ruby","namespace":"Gem::TestCase","path":"Gem::TestCase::@@ruby","type":"classvariable","visibility":"public"},"Gem::TestCase::PRIVATE_KEY_PASSPHRASE":{"description":":stopdoc:\nonly available in RubyGems tests","name":"PRIVATE_KEY_PASSPHRASE","namespace":"Gem::TestCase","path":"Gem::TestCase::PRIVATE_KEY_PASSPHRASE","type":"constant","return":null,"visibility":"public"},"Gem::TestCase::SpecFetcherSetup":{"description":"The SpecFetcherSetup allows easy setup of a remote source in RubyGems tests:\n\n  spec_fetcher do |f|\n    f.gem  'a', 1\n    f.spec 'a', 2\n    f.gem  'b', 1' 'a' => '~> 1.0'\n    f.clear\n  end\n\nThe above declaration creates two gems, a-1 and b-1, with a dependency from\nb to a.  The declaration creates an additional spec a-2, but no gem for it\n(so it cannot be installed).\n\nAfter the gems are created they are removed from Gem.dir.","name":"SpecFetcherSetup","namespace":"Gem::TestCase","path":"Gem::TestCase::SpecFetcherSetup","type":"class","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#clear":{"description":"Removes any created gems or specifications from Gem.dir (the default\ninstall location).","name":"clear","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#clear","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#created_specs":{"description":"Returns a Hash of created Specification full names and the corresponding\nSpecification.","name":"created_specs","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#created_specs","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#execute":{"description":"Creates any defined gems or specifications","name":"execute","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#execute","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#execute_operations":{"description":":nodoc:","name":"execute_operations","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#execute_operations","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#gem":{"description":"Creates a gem with +name+, +version+ and +deps+.  The created gem can be\ndownloaded and installed.\n\nThe specification will be yielded before gem creation for customization,\nbut only the block or the dependencies may be set, not both.","name":"gem","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#gem","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#initialize","type":"instance_method","visibility":"public","return":[["SpecFetcherSetup"],"a new instance of SpecFetcherSetup"]},"Gem::TestCase::SpecFetcherSetup#legacy_platform":{"description":"Creates a legacy platform spec with the name 'pl' and version 1","name":"legacy_platform","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#legacy_platform","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#setup_fetcher":{"description":":nodoc:","name":"setup_fetcher","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#setup_fetcher","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#spec":{"description":"Creates a spec with +name+, +version+ and +deps+.  The created gem can be\ndownloaded and installed.\n\nThe specification will be yielded before creation for customization,\nbut only the block or the dependencies may be set, not both.","name":"spec","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#spec","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup#write_spec":{"description":":nodoc:","name":"write_spec","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup#write_spec","type":"instance_method","visibility":"public"},"Gem::TestCase::SpecFetcherSetup.declare":{"description":"Executes a SpecFetcher setup block.  Yields an instance then creates the\ngems and specifications defined in the instance.","name":"declare","namespace":"Gem::TestCase::SpecFetcherSetup","path":"Gem::TestCase::SpecFetcherSetup.declare","type":"class_method","visibility":"public"},"Gem::TestCase::StaticSet":{"description":"The StaticSet is a static set of gem specifications used for testing only.\nIt is available by requiring Gem::TestCase.","name":"StaticSet","namespace":"Gem::TestCase","path":"Gem::TestCase::StaticSet","type":"class","visibility":"public"},"Gem::TestCase::StaticSet#add":{"description":"Adds +spec+ to this set.","name":"add","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#add","type":"instance_method","visibility":"public"},"Gem::TestCase::StaticSet#find_all":{"description":"Finds all gems matching +dep+ in this set.","name":"find_all","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#find_all","type":"instance_method","visibility":"public"},"Gem::TestCase::StaticSet#find_spec":{"description":"Finds +dep+ in this set.","name":"find_spec","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#find_spec","type":"instance_method","visibility":"public"},"Gem::TestCase::StaticSet#initialize":{"description":"Creates a new StaticSet for the given +specs+","name":"initialize","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#initialize","type":"instance_method","visibility":"public","return":[["StaticSet"],"a new instance of StaticSet"]},"Gem::TestCase::StaticSet#load_spec":{"description":"Loads a Gem::Specification from this set which has the given +name+,\nversion +ver+, +platform+.  The +source+ is ignored.","name":"load_spec","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#load_spec","type":"instance_method","visibility":"public"},"Gem::TestCase::StaticSet#prefetch":{"description":":nodoc:","name":"prefetch","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#prefetch","type":"instance_method","visibility":"public"},"Gem::TestCase::StaticSet#remote":{"description":"A StaticSet ignores remote because it has a fixed set of gems.","name":"remote","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#remote","type":"instance_method","visibility":"public"},"Gem::TestCase::StaticSet#remote=":{"description":"A StaticSet ignores remote because it has a fixed set of gems.","name":"remote=","namespace":"Gem::TestCase::StaticSet","path":"Gem::TestCase::StaticSet#remote=","type":"instance_method","visibility":"public"},"Gem::Text":{"description":"A collection of text-wrangling methods","name":"Text","namespace":"Gem","path":"Gem::Text","type":"module","visibility":"public"},"Gem::Text#format_text":{"description":"Wraps +text+ to +wrap+ characters and optionally indents by +indent+\ncharacters","name":"format_text","namespace":"Gem::Text","path":"Gem::Text#format_text","type":"module_function","visibility":"public"},"Gem::Text#levenshtein_distance":{"description":"This code is based directly on the Text gem implementation\nReturns a value representing the \"cost\" of transforming str1 into str2","name":"levenshtein_distance","namespace":"Gem::Text","path":"Gem::Text#levenshtein_distance","type":"module_function","visibility":"public"},"Gem::Text#min3":{"description":":nodoc:","name":"min3","namespace":"Gem::Text","path":"Gem::Text#min3","type":"module_function","visibility":"public"},"Gem::Uninstaller":{"description":"An Uninstaller.\n\nThe uninstaller fires pre and post uninstall hooks.  Hooks can be added\neither through a rubygems_plugin.rb file in an installed gem or via a\nrubygems/defaults/#{RUBY_ENGINE}.rb or rubygems/defaults/operating_system.rb\nfile.  See Gem.pre_uninstall and Gem.post_uninstall for details.","name":"Uninstaller","namespace":"Gem","path":"Gem::Uninstaller","type":"class","visibility":"public"},"Gem::Uninstaller#abort_on_dependent?":{"description":"Should the uninstallation abort if a dependency will go unsatisfied?\n\nSee ::new.","name":"abort_on_dependent?","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#abort_on_dependent?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Uninstaller#ask_if_ok":{"description":"Asks if it is OK to remove +spec+.  Returns true if it is OK.","name":"ask_if_ok","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#ask_if_ok","type":"instance_method","visibility":"public"},"Gem::Uninstaller#bin_dir":{"description":"The directory a gem's executables will be installed into","name":"bin_dir","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#bin_dir","type":"instance_method","visibility":"public"},"Gem::Uninstaller#dependencies_ok?":{"description":"Returns true if it is OK to remove +spec+ or this is a forced\nuninstallation.","name":"dependencies_ok?","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#dependencies_ok?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Uninstaller#formatted_program_filename":{"description":"Returns the formatted version of the executable +filename+","name":"formatted_program_filename","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#formatted_program_filename","type":"instance_method","visibility":"public"},"Gem::Uninstaller#gem_home":{"description":"The gem repository the gem will be installed into","name":"gem_home","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#gem_home","type":"instance_method","visibility":"public"},"Gem::Uninstaller#initialize":{"description":"Constructs an uninstaller that will uninstall +gem+","name":"initialize","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#initialize","type":"instance_method","visibility":"public","return":[["Uninstaller"],"a new instance of Uninstaller"]},"Gem::Uninstaller#path_ok?":{"description":"Is +spec+ in +gem_dir+?","name":"path_ok?","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#path_ok?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Uninstaller#remove":{"description":"spec:: the spec of the gem to be uninstalled\nlist:: the list of all such gems\n\nWarning: this method modifies the +list+ parameter.  Once it has\nuninstalled a gem, it is removed from that list.","name":"remove","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#remove","type":"instance_method","visibility":"public"},"Gem::Uninstaller#remove_all":{"description":"Removes all gems in +list+.\n\nNOTE: removes uninstalled gems from +list+.","name":"remove_all","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#remove_all","type":"instance_method","visibility":"public"},"Gem::Uninstaller#remove_executables":{"description":"Removes installed executables and batch files (windows only) for\n+gemspec+.","name":"remove_executables","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#remove_executables","type":"instance_method","visibility":"public"},"Gem::Uninstaller#spec":{"description":"The Gem::Specification for the gem being uninstalled, only set during\n#uninstall_gem","name":"spec","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#spec","type":"instance_method","visibility":"public"},"Gem::Uninstaller#uninstall":{"description":"Performs the uninstall of the gem.  This removes the spec, the Gem\ndirectory, and the cached .gem file.","name":"uninstall","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#uninstall","type":"instance_method","visibility":"public"},"Gem::Uninstaller#uninstall_gem":{"description":"Uninstalls gem +spec+","name":"uninstall_gem","namespace":"Gem::Uninstaller","path":"Gem::Uninstaller#uninstall_gem","type":"instance_method","visibility":"public"},"Gem::UnsatisfiableDepedencyError":{"description":"Backwards compatible typo'd exception class for early RubyGems 2.0.x","name":"UnsatisfiableDepedencyError","namespace":"Gem","path":"Gem::UnsatisfiableDepedencyError","type":"constant","return":["Class",""],"visibility":"public"},"Gem::UnsatisfiableDependencyError":{"description":"Raised by Resolver when a dependency requests a gem for which\nthere is no spec.","name":"UnsatisfiableDependencyError","namespace":"Gem","path":"Gem::UnsatisfiableDependencyError","type":"class","visibility":"public"},"Gem::UnsatisfiableDependencyError#dependency":{"description":"The unsatisfiable dependency.  This is a\nGem::Resolver::DependencyRequest, not a Gem::Dependency","name":"dependency","namespace":"Gem::UnsatisfiableDependencyError","path":"Gem::UnsatisfiableDependencyError#dependency","type":"instance_method","visibility":"public"},"Gem::UnsatisfiableDependencyError#errors":{"description":"Errors encountered which may have contributed to this exception","name":"errors","namespace":"Gem::UnsatisfiableDependencyError","path":"Gem::UnsatisfiableDependencyError#errors","type":"instance_method","visibility":"public"},"Gem::UnsatisfiableDependencyError#errors=":{"description":"Errors encountered which may have contributed to this exception","name":"errors=","namespace":"Gem::UnsatisfiableDependencyError","path":"Gem::UnsatisfiableDependencyError#errors=","type":"instance_method","visibility":"public"},"Gem::UnsatisfiableDependencyError#initialize":{"description":"Creates a new UnsatisfiableDependencyError for the unsatisfiable\nGem::Resolver::DependencyRequest +dep+","name":"initialize","namespace":"Gem::UnsatisfiableDependencyError","path":"Gem::UnsatisfiableDependencyError#initialize","type":"instance_method","visibility":"public","return":[["UnsatisfiableDependencyError"],"a new instance of UnsatisfiableDependencyError"]},"Gem::UnsatisfiableDependencyError#name":{"description":"The name of the unresolved dependency","name":"name","namespace":"Gem::UnsatisfiableDependencyError","path":"Gem::UnsatisfiableDependencyError#name","type":"instance_method","visibility":"public"},"Gem::UnsatisfiableDependencyError#version":{"description":"The Requirement of the unresolved dependency (not Version).","name":"version","namespace":"Gem::UnsatisfiableDependencyError","path":"Gem::UnsatisfiableDependencyError#version","type":"instance_method","visibility":"public"},"Gem::UriFormatter":{"description":"The UriFormatter handles URIs from user-input and escaping.\n\n  uf = Gem::UriFormatter.new 'example.com'\n\n  p uf.normalize #=> 'http://example.com'","name":"UriFormatter","namespace":"Gem","path":"Gem::UriFormatter","type":"class","visibility":"public"},"Gem::UriFormatter#escape":{"description":"Escapes the #uri for use as a CGI parameter","name":"escape","namespace":"Gem::UriFormatter","path":"Gem::UriFormatter#escape","type":"instance_method","visibility":"public"},"Gem::UriFormatter#initialize":{"description":"Creates a new URI formatter for +uri+.","name":"initialize","namespace":"Gem::UriFormatter","path":"Gem::UriFormatter#initialize","type":"instance_method","visibility":"public","return":[["UriFormatter"],"a new instance of UriFormatter"]},"Gem::UriFormatter#normalize":{"description":"Normalize the URI by adding \"http://\" if it is missing.","name":"normalize","namespace":"Gem::UriFormatter","path":"Gem::UriFormatter#normalize","type":"instance_method","visibility":"public"},"Gem::UriFormatter#unescape":{"description":"Unescapes the #uri which came from a CGI parameter","name":"unescape","namespace":"Gem::UriFormatter","path":"Gem::UriFormatter#unescape","type":"instance_method","visibility":"public"},"Gem::UriFormatter#uri":{"description":"The URI to be formatted.","name":"uri","namespace":"Gem::UriFormatter","path":"Gem::UriFormatter#uri","type":"instance_method","visibility":"public"},"Gem::UserInteraction":{"description":"UserInteraction allows RubyGems to interact with the user through standard\nmethods that can be replaced with more-specific UI methods for different\ndisplays.\n\nSince UserInteraction dispatches to a concrete UI class you may need to\nreference other classes for specific behavior such as Gem::ConsoleUI or\nGem::SilentUI.\n\nExample:\n\n  class X\n    include Gem::UserInteraction\n\n    def get_answer\n      n = ask(\"What is the meaning of life?\")\n    end\n  end","name":"UserInteraction","namespace":"Gem","path":"Gem::UserInteraction","type":"module","visibility":"public"},"Gem::UserInteraction#alert":{"description":"Displays an alert +statement+.  Asks a +question+ if given.","name":"alert","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#alert","type":"module_function","visibility":"public"},"Gem::UserInteraction#alert_error":{"description":"Displays an error +statement+ to the error output location.  Asks a\n+question+ if given.","name":"alert_error","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#alert_error","type":"module_function","visibility":"public"},"Gem::UserInteraction#alert_warning":{"description":"Displays a warning +statement+ to the warning output location.  Asks a\n+question+ if given.","name":"alert_warning","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#alert_warning","type":"module_function","visibility":"public"},"Gem::UserInteraction#ask":{"description":"Asks a +question+ and returns the answer.","name":"ask","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#ask","type":"module_function","visibility":"public"},"Gem::UserInteraction#ask_for_password":{"description":"Asks for a password with a +prompt+","name":"ask_for_password","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#ask_for_password","type":"module_function","visibility":"public"},"Gem::UserInteraction#ask_yes_no":{"description":"Asks a yes or no +question+.  Returns true for yes, false for no.","name":"ask_yes_no","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#ask_yes_no","type":"module_function","visibility":"public"},"Gem::UserInteraction#choose_from_list":{"description":"Asks the user to answer +question+ with an answer from the given +list+.","name":"choose_from_list","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#choose_from_list","type":"module_function","visibility":"public"},"Gem::UserInteraction#say":{"description":"Displays the given +statement+ on the standard output (or equivalent).","name":"say","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#say","type":"module_function","visibility":"public"},"Gem::UserInteraction#terminate_interaction":{"description":"Terminates the RubyGems process with the given +exit_code+","name":"terminate_interaction","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#terminate_interaction","type":"module_function","visibility":"public"},"Gem::UserInteraction#verbose":{"description":"Calls +say+ with +msg+ or the results of the block if really_verbose\nis true.","name":"verbose","namespace":"Gem::UserInteraction","path":"Gem::UserInteraction#verbose","type":"module_function","visibility":"public"},"Gem::Util":{"description":"This module contains various utility methods as module methods.","name":"Util","namespace":"Gem","path":"Gem::Util","type":"module","visibility":"public"},"Gem::Util.gunzip":{"description":"Zlib::GzipReader wrapper that unzips +data+.","name":"gunzip","namespace":"Gem::Util","path":"Gem::Util.gunzip","type":"module_function","visibility":"public"},"Gem::Util.gzip":{"description":"Zlib::GzipWriter wrapper that zips +data+.","name":"gzip","namespace":"Gem::Util","path":"Gem::Util.gzip","type":"module_function","visibility":"public"},"Gem::Util.inflate":{"description":"A Zlib::Inflate#inflate wrapper","name":"inflate","namespace":"Gem::Util","path":"Gem::Util.inflate","type":"module_function","visibility":"public"},"Gem::Util.popen":{"description":"This calls IO.popen where it accepts an array for a +command+ (Ruby 1.9+)\nand implements an IO.popen-like behavior where it does not accept an array\nfor a command.","name":"popen","namespace":"Gem::Util","path":"Gem::Util.popen","type":"module_function","visibility":"public"},"Gem::Util.silent_system":{"description":"Invokes system, but silences all output.","name":"silent_system","namespace":"Gem::Util","path":"Gem::Util.silent_system","type":"module_function","visibility":"public"},"Gem::Util.traverse_parents":{"description":"Enumerates the parents of +directory+.","name":"traverse_parents","namespace":"Gem::Util","path":"Gem::Util.traverse_parents","type":"module_function","visibility":"public"},"Gem::Util::NULL_DEVICE":{"description":"","name":"NULL_DEVICE","namespace":"Gem::Util","path":"Gem::Util::NULL_DEVICE","type":"constant","return":null,"visibility":"public"},"Gem::VERSION":{"description":"","name":"VERSION","namespace":"Gem","path":"Gem::VERSION","type":"constant","return":["String",""],"visibility":"public"},"Gem::Validator":{"description":"Validator performs various gem file and gem database validation","name":"Validator","namespace":"Gem","path":"Gem::Validator","type":"class","visibility":"public"},"Gem::Validator#alien":{"description":"Checks the gem directory for the following potential\ninconsistencies/problems:\n\n* Checksum gem itself\n* For each file in each gem, check consistency of installed versions\n* Check for files that aren't part of the gem but are in the gems directory\n* 1 cache - 1 spec - 1 directory.\n\nreturns a hash of ErrorData objects, keyed on the problem gem's name.\n--\nTODO needs further cleanup","name":"alien","namespace":"Gem::Validator","path":"Gem::Validator#alien","type":"instance_method","visibility":"public"},"Gem::Validator#find_files_for_gem":{"description":"","name":"find_files_for_gem","namespace":"Gem::Validator","path":"Gem::Validator#find_files_for_gem","type":"instance_method","visibility":"private"},"Gem::Validator#initialize":{"description":":nodoc:","name":"initialize","namespace":"Gem::Validator","path":"Gem::Validator#initialize","type":"instance_method","visibility":"public","return":[["Validator"],"a new instance of Validator"]},"Gem::Validator#verify_gem":{"description":"Given a gem file's contents, validates against its own MD5 checksum\ngem_data:: [String] Contents of the gem file","name":"verify_gem","namespace":"Gem::Validator","path":"Gem::Validator#verify_gem","type":"instance_method","visibility":"public"},"Gem::Validator#verify_gem_file":{"description":"Given the path to a gem file, validates against its own MD5 checksum\n\ngem_path:: [String] Path to gem file","name":"verify_gem_file","namespace":"Gem::Validator","path":"Gem::Validator#verify_gem_file","type":"instance_method","visibility":"public"},"Gem::Validator::ErrorData":{"description":"Describes a problem with a file in a gem.","name":"ErrorData","namespace":"Gem::Validator","path":"Gem::Validator::ErrorData","type":"class","visibility":"public"},"Gem::Validator::ErrorData#path":{"description":"Returns the value of attribute path","name":"path","namespace":"Gem::Validator::ErrorData","path":"Gem::Validator::ErrorData#path","type":"instance_method","visibility":"public","return":[["Object"],"the current value of path"]},"Gem::Validator::ErrorData#path=":{"description":"Sets the attribute path","name":"path=","namespace":"Gem::Validator::ErrorData","path":"Gem::Validator::ErrorData#path=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute path to."]],"return":[["Object"],"the newly set value"]},"Gem::Validator::ErrorData#problem":{"description":"Returns the value of attribute problem","name":"problem","namespace":"Gem::Validator::ErrorData","path":"Gem::Validator::ErrorData#problem","type":"instance_method","visibility":"public","return":[["Object"],"the current value of problem"]},"Gem::Validator::ErrorData#problem=":{"description":"Sets the attribute problem","name":"problem=","namespace":"Gem::Validator::ErrorData","path":"Gem::Validator::ErrorData#problem=","type":"instance_method","visibility":"public","parameters":[["value",["Object"],"the value to set the attribute problem to."]],"return":[["Object"],"the newly set value"]},"Gem::VerificationError":{"description":"Raised by Gem::Validator when something is not right in a gem.","name":"VerificationError","namespace":"Gem","path":"Gem::VerificationError","type":"class","visibility":"public"},"Gem::Version":{"description":"The Version class processes string versions into comparable\nvalues. A version string should normally be a series of numbers\nseparated by periods. Each part (digits separated by periods) is\nconsidered its own number, and these are used for sorting. So for\ninstance, 3.10 sorts higher than 3.2 because ten is greater than\ntwo.\n\nIf any part contains letters (currently only a-z are supported) then\nthat version is considered prerelease. Versions with a prerelease\npart in the Nth part sort less than versions with N-1\nparts. Prerelease parts are sorted alphabetically using the normal\nRuby string sorting rules. If a prerelease part contains both\nletters and numbers, it will be broken into multiple parts to\nprovide expected sort behavior (1.0.a10 becomes 1.0.a.10, and is\ngreater than 1.0.a9).\n\nPrereleases sort between real releases (newest to oldest):\n\n1. 1.0\n2. 1.0.b1\n3. 1.0.a.2\n4. 0.9\n\nIf you want to specify a version restriction that includes both prereleases\nand regular releases of the 1.x series this is the best way:\n\n  s.add_dependency 'example', '>= 1.0.0.a', '< 2.0.0'\n\n== How Software Changes\n\nUsers expect to be able to specify a version constraint that gives them\nsome reasonable expectation that new versions of a library will work with\ntheir software if the version constraint is true, and not work with their\nsoftware if the version constraint is false.  In other words, the perfect\nsystem will accept all compatible versions of the library and reject all\nincompatible versions.\n\nLibraries change in 3 ways (well, more than 3, but stay focused here!).\n\n1. The change may be an implementation detail only and have no effect on\n   the client software.\n2. The change may add new features, but do so in a way that client software\n   written to an earlier version is still compatible.\n3. The change may change the public interface of the library in such a way\n   that old software is no longer compatible.\n\nSome examples are appropriate at this point.  Suppose I have a Stack class\nthat supports a <tt>push</tt> and a <tt>pop</tt> method.\n\n=== Examples of Category 1 changes:\n\n* Switch from an array based implementation to a linked-list based\n  implementation.\n* Provide an automatic (and transparent) backing store for large stacks.\n\n=== Examples of Category 2 changes might be:\n\n* Add a <tt>depth</tt> method to return the current depth of the stack.\n* Add a <tt>top</tt> method that returns the current top of stack (without\n  changing the stack).\n* Change <tt>push</tt> so that it returns the item pushed (previously it\n  had no usable return value).\n\n=== Examples of Category 3 changes might be:\n\n* Changes <tt>pop</tt> so that it no longer returns a value (you must use\n  <tt>top</tt> to get the top of the stack).\n* Rename the methods to <tt>push_item</tt> and <tt>pop_item</tt>.\n\n== RubyGems Rational Versioning\n\n* Versions shall be represented by three non-negative integers, separated\n  by periods (e.g. 3.1.4).  The first integers is the \"major\" version\n  number, the second integer is the \"minor\" version number, and the third\n  integer is the \"build\" number.\n\n* A category 1 change (implementation detail) will increment the build\n  number.\n\n* A category 2 change (backwards compatible) will increment the minor\n  version number and reset the build number.\n\n* A category 3 change (incompatible) will increment the major build number\n  and reset the minor and build numbers.\n\n* Any \"public\" release of a gem should have a different version.  Normally\n  that means incrementing the build number.  This means a developer can\n  generate builds all day long, but as soon as they make a public release,\n  the version must be updated.\n\n=== Examples\n\nLet's work through a project lifecycle using our Stack example from above.\n\nVersion 0.0.1:: The initial Stack class is release.\nVersion 0.0.2:: Switched to a linked=list implementation because it is\n                cooler.\nVersion 0.1.0:: Added a <tt>depth</tt> method.\nVersion 1.0.0:: Added <tt>top</tt> and made <tt>pop</tt> return nil\n                (<tt>pop</tt> used to return the  old top item).\nVersion 1.1.0:: <tt>push</tt> now returns the value pushed (it used it\n                return nil).\nVersion 1.1.1:: Fixed a bug in the linked list implementation.\nVersion 1.1.2:: Fixed a bug introduced in the last fix.\n\nClient A needs a stack with basic push/pop capability.  They write to the\noriginal interface (no <tt>top</tt>), so their version constraint looks like:\n\n  gem 'stack', '~> 0.0'\n\nEssentially, any version is OK with Client A.  An incompatible change to\nthe library will cause them grief, but they are willing to take the chance\n(we call Client A optimistic).\n\nClient B is just like Client A except for two things: (1) They use the\n<tt>depth</tt> method and (2) they are worried about future\nincompatibilities, so they write their version constraint like this:\n\n  gem 'stack', '~> 0.1'\n\nThe <tt>depth</tt> method was introduced in version 0.1.0, so that version\nor anything later is fine, as long as the version stays below version 1.0\nwhere incompatibilities are introduced.  We call Client B pessimistic\nbecause they are worried about incompatible future changes (it is OK to be\npessimistic!).\n\n== Preventing Version Catastrophe:\n\nFrom: http://blog.zenspider.com/2008/10/rubygems-howto-preventing-cata.html\n\nLet's say you're depending on the fnord gem version 2.y.z. If you\nspecify your dependency as \">= 2.0.0\" then, you're good, right? What\nhappens if fnord 3.0 comes out and it isn't backwards compatible\nwith 2.y.z? Your stuff will break as a result of using \">=\". The\nbetter route is to specify your dependency with an \"approximate\" version\nspecifier (\"~>\"). They're a tad confusing, so here is how the dependency\nspecifiers work:\n\n  Specification From  ... To (exclusive)\n  \">= 3.0\"      3.0   ... &infin;\n  \"~> 3.0\"      3.0   ... 4.0\n  \"~> 3.0.0\"    3.0.0 ... 3.1\n  \"~> 3.5\"      3.5   ... 4.0\n  \"~> 3.5.0\"    3.5.0 ... 3.6\n  \"~> 3\"        3.0   ... 4.0\n\nFor the last example, single-digit versions are automatically extended with\na zero to give a sensible result.","name":"Version","namespace":"Gem","path":"Gem::Version","type":"class","visibility":"public"},"Gem::Version#<=>":{"description":"Compares this version with +other+ returning -1, 0, or 1 if the\nother version is larger, the same, or smaller than this\none. Attempts to compare to something that's not a\n<tt>Gem::Version</tt> return +nil+.","name":"<=>","namespace":"Gem::Version","path":"Gem::Version#<=>","type":"instance_method","visibility":"public"},"Gem::Version#approximate_recommendation":{"description":"A recommended version for use with a ~> Requirement.","name":"approximate_recommendation","namespace":"Gem::Version","path":"Gem::Version#approximate_recommendation","type":"instance_method","visibility":"public"},"Gem::Version#bump":{"description":"Return a new version object where the next to the last revision\nnumber is one greater (e.g., 5.3.1 => 5.4).\n\nPre-release (alpha) parts, e.g, 5.3.1.b.2 => 5.4, are ignored.","name":"bump","namespace":"Gem::Version","path":"Gem::Version#bump","type":"instance_method","visibility":"public"},"Gem::Version#encode_with":{"description":":nodoc:","name":"encode_with","namespace":"Gem::Version","path":"Gem::Version#encode_with","type":"instance_method","visibility":"public"},"Gem::Version#eql?":{"description":"A Version is only eql? to another version if it's specified to the\nsame precision. Version \"1.0\" is not the same as version \"1\".","name":"eql?","namespace":"Gem::Version","path":"Gem::Version#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Version#hash":{"description":":nodoc:","name":"hash","namespace":"Gem::Version","path":"Gem::Version#hash","type":"instance_method","visibility":"public"},"Gem::Version#init_with":{"description":":nodoc:","name":"init_with","namespace":"Gem::Version","path":"Gem::Version#init_with","type":"instance_method","visibility":"public"},"Gem::Version#initialize":{"description":"Constructs a Version from the +version+ string.  A version string is a\nseries of digits or ASCII letters separated by dots.","name":"initialize","namespace":"Gem::Version","path":"Gem::Version#initialize","type":"instance_method","visibility":"public","return":[["Version"],"a new instance of Version"]},"Gem::Version#inspect":{"description":":nodoc:","name":"inspect","namespace":"Gem::Version","path":"Gem::Version#inspect","type":"instance_method","visibility":"public"},"Gem::Version#marshal_dump":{"description":"Dump only the raw version string, not the complete object. It's a\nstring for backwards (RubyGems 1.3.5 and earlier) compatibility.","name":"marshal_dump","namespace":"Gem::Version","path":"Gem::Version#marshal_dump","type":"instance_method","visibility":"public"},"Gem::Version#marshal_load":{"description":"Load custom marshal format. It's a string for backwards (RubyGems\n1.3.5 and earlier) compatibility.","name":"marshal_load","namespace":"Gem::Version","path":"Gem::Version#marshal_load","type":"instance_method","visibility":"public"},"Gem::Version#prerelease?":{"description":"A version is considered a prerelease if it contains a letter.","name":"prerelease?","namespace":"Gem::Version","path":"Gem::Version#prerelease?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Gem::Version#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Gem::Version","path":"Gem::Version#pretty_print","type":"instance_method","visibility":"public"},"Gem::Version#release":{"description":"The release for this version (e.g. 1.2.0.a -> 1.2.0).\nNon-prerelease versions return themselves.","name":"release","namespace":"Gem::Version","path":"Gem::Version#release","type":"instance_method","visibility":"public"},"Gem::Version#segments":{"description":":nodoc:","name":"segments","namespace":"Gem::Version","path":"Gem::Version#segments","type":"instance_method","visibility":"public"},"Gem::Version#to_s":{"description":"A string representation of this Version.","name":"to_s","namespace":"Gem::Version","path":"Gem::Version#to_s","type":"instance_method","visibility":"public"},"Gem::Version#to_yaml_properties":{"description":":nodoc:","name":"to_yaml_properties","namespace":"Gem::Version","path":"Gem::Version#to_yaml_properties","type":"instance_method","visibility":"public"},"Gem::Version#version":{"description":"A string representation of this Version.","name":"to_s","namespace":"Gem::Version","path":"Gem::Version#to_s","type":"instance_method","visibility":"public"},"Gem::Version#yaml_initialize":{"description":":nodoc:","name":"yaml_initialize","namespace":"Gem::Version","path":"Gem::Version#yaml_initialize","type":"instance_method","visibility":"public"},"Gem::Version.correct?":{"description":"True if the +version+ string matches RubyGems' requirements.","name":"correct?","namespace":"Gem::Version","path":"Gem::Version.correct?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Gem::Version.create":{"description":"Factory method to create a Version object. Input may be a Version\nor a String. Intended to simplify client code.\n\n  ver1 = Version.create('1.3.17')   # -> (Version object)\n  ver2 = Version.create(ver1)       # -> (ver1)\n  ver3 = Version.create(nil)        # -> nil","name":"create","namespace":"Gem::Version","path":"Gem::Version.create","type":"class_method","visibility":"public"},"Gem::Version.new":{"description":":nodoc:","name":"new","namespace":"Gem::Version","path":"Gem::Version.new","type":"class_method","visibility":"public"},"Gem::Version::@@all":{"description":"","name":"@@all","namespace":"Gem::Version","path":"Gem::Version::@@all","type":"classvariable","visibility":"public"},"Gem::Version::ANCHORED_VERSION_PATTERN":{"description":":nodoc:","name":"ANCHORED_VERSION_PATTERN","namespace":"Gem::Version","path":"Gem::Version::ANCHORED_VERSION_PATTERN","type":"constant","return":["Regexp",""],"visibility":"public"},"Gem::Version::Requirement":{"description":"This is needed for compatibility with older yaml\ngemspecs.","name":"Requirement","namespace":"Gem::Version","path":"Gem::Version::Requirement","type":"constant","return":["Class",""],"visibility":"public"},"Gem::Version::VERSION_PATTERN":{"description":":nodoc:","name":"VERSION_PATTERN","namespace":"Gem::Version","path":"Gem::Version::VERSION_PATTERN","type":"constant","return":["String",""],"visibility":"public"},"Gem::VersionOption":{"description":"Mixin methods for --version and --platform Gem::Command options.","name":"VersionOption","namespace":"Gem","path":"Gem::VersionOption","type":"module","visibility":"public"},"Gem::VersionOption#add_platform_option":{"description":"Add the --platform option to the option parser.","name":"add_platform_option","namespace":"Gem::VersionOption","path":"Gem::VersionOption#add_platform_option","type":"module_function","visibility":"public"},"Gem::VersionOption#add_prerelease_option":{"description":"Add the --prerelease option to the option parser.","name":"add_prerelease_option","namespace":"Gem::VersionOption","path":"Gem::VersionOption#add_prerelease_option","type":"module_function","visibility":"public"},"Gem::VersionOption#add_version_option":{"description":"Add the --version option to the option parser.","name":"add_version_option","namespace":"Gem::VersionOption","path":"Gem::VersionOption#add_version_option","type":"module_function","visibility":"public"},"Gem::WIN_PATTERNS":{"description":"An Array of Regexps that match windows Ruby platforms.","name":"WIN_PATTERNS","namespace":"Gem","path":"Gem::WIN_PATTERNS","type":"constant","return":["Array",""],"visibility":"public"},"YAML":{"description":"YAML Ain't Markup Language\n\nThis module provides a Ruby interface for data serialization in YAML format.\n\nThe underlying implementation is the libyaml wrapper Psych.\n\n== Usage\n\nWorking with YAML can be very simple, for example:\n\n    require 'yaml'\n    # Parse a YAML string\n    YAML.load(\"--- foo\") #=> \"foo\"\n\n    # Emit some YAML\n    YAML.dump(\"foo\")     # => \"--- foo\\n...\\n\"\n    { :a => 'b'}.to_yaml  # => \"---\\n:a: b\\n\"\n\n== Security\n\nDo not use YAML to load untrusted data. Doing so is unsafe and could allow\nmalicious input to execute arbitrary code inside your application. Please see\ndoc/security.rdoc for more information.\n\n== History\n\nSyck was the original for YAML implementation in Ruby's standard library\ndeveloped by why the lucky stiff.\n\nYou can still use Syck, if you prefer, for parsing and emitting YAML, but you\nmust install the 'syck' gem now in order to use it.\n\nIn older Ruby versions, ie. <= 1.9, Syck is still provided, however it was\ncompletely removed with the release of Ruby 2.0.0.\n\n== More info\n\nFor more advanced details on the implementation see Psych, and also check out\nhttp://yaml.org for spec details and other helpful information.\n\nPysch is maintained by Aaron Patterson on github: https://github.com/tenderlove/psych\n\nSyck can also be found on github: https://github.com/tenderlove/syck","name":"YAML","namespace":"","path":"YAML","type":"module","visibility":"public"},"YAML::DBM":{"description":"YAML + DBM = YDBM\n\nYAML::DBM provides the same interface as ::DBM.\n\nHowever, while DBM only allows strings for both keys and values,\nthis library allows one to use most Ruby objects for values\nby first converting them to YAML. Keys must be strings.\n\nConversion to and from YAML is performed automatically.\n\nSee the documentation for ::DBM and ::YAML for more information.","name":"DBM","namespace":"YAML","path":"YAML::DBM","type":"class","visibility":"public"},"YAML::DBM#[]":{"description":":call-seq:\n  ydbm[key] -> value\n\nReturn value associated with +key+ from database.\n\nReturns +nil+ if there is no such +key+.\n\nSee #fetch for more information.","name":"[]","namespace":"YAML::DBM","path":"YAML::DBM#[]","type":"instance_method","visibility":"public"},"YAML::DBM#[]=":{"description":":call-seq:\n  ydbm[key] = value\n\nSet +key+ to +value+ in database.\n\n+value+ will be converted to YAML before storage.\n\nSee #store for more information.","name":"[]=","namespace":"YAML::DBM","path":"YAML::DBM#[]=","type":"instance_method","visibility":"public"},"YAML::DBM#delete":{"description":":call-seq:\n  ydbm.delete(key)\n\nDeletes value from database associated with +key+.\n\nReturns value or +nil+.","name":"delete","namespace":"YAML::DBM","path":"YAML::DBM#delete","type":"instance_method","visibility":"public"},"YAML::DBM#delete_if":{"description":":call-seq:\n  ydbm.delete_if { |key, value| ... }\n\nCalls the given block once for each +key+, +value+ pair in the database.\nDeletes all entries for which the block returns true.\n\nReturns +self+.","name":"delete_if","namespace":"YAML::DBM","path":"YAML::DBM#delete_if","type":"instance_method","visibility":"public"},"YAML::DBM#each":{"description":":call-seq:\n  ydbm.each_pair { |key, value| ... }\n\nCalls the given block once for each +key+, +value+ pair in the database.\n\nReturns +self+.","name":"each","namespace":"YAML::DBM","path":"YAML::DBM#each","type":"instance_method","visibility":"public"},"YAML::DBM#each_pair":{"description":":call-seq:\n  ydbm.each_pair { |key, value| ... }\n\nCalls the given block once for each +key+, +value+ pair in the database.\n\nReturns +self+.","name":"each","namespace":"YAML::DBM","path":"YAML::DBM#each","type":"instance_method","visibility":"public"},"YAML::DBM#each_value":{"description":":call-seq:\n  ydbm.each_value { |value| ... }\n\nCalls the given block for each value in database.\n\nReturns +self+.","name":"each_value","namespace":"YAML::DBM","path":"YAML::DBM#each_value","type":"instance_method","visibility":"public"},"YAML::DBM#fetch":{"description":":call-seq:\n  ydbm.fetch( key, ifnone = nil )\n  ydbm.fetch( key ) { |key| ... }\n\nReturn value associated with +key+.\n\nIf there is no value for +key+ and no block is given, returns +ifnone+.\n\nOtherwise, calls block passing in the given +key+.\n\nSee ::DBM#fetch for more information.","name":"fetch","namespace":"YAML::DBM","path":"YAML::DBM#fetch","type":"instance_method","visibility":"public"},"YAML::DBM#has_value?":{"description":":call-seq:\n  ydbm.has_value?(value)\n\nReturns true if specified +value+ is found in the database.","name":"has_value?","namespace":"YAML::DBM","path":"YAML::DBM#has_value?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"YAML::DBM#index":{"description":"Deprecated, used YAML::DBM#key instead.\n----\nNote:\nYAML::DBM#index makes warning from internal of ::DBM#index.\nIt says 'DBM#index is deprecated; use DBM#key', but DBM#key\nbehaves not same as DBM#index.","name":"index","namespace":"YAML::DBM","path":"YAML::DBM#index","type":"instance_method","visibility":"public"},"YAML::DBM#invert":{"description":":call-seq:\n  ydbm.invert -> hash\n\nReturns a Hash (not a DBM database) created by using each value in the\ndatabase as a key, with the corresponding key as its value.\n\nNote that all values in the hash will be Strings, but the keys will be\nactual objects.","name":"invert","namespace":"YAML::DBM","path":"YAML::DBM#invert","type":"instance_method","visibility":"public"},"YAML::DBM#key":{"description":":call-seq:\n  ydbm.key(value) -> string\n\nReturns the key for the specified value.","name":"key","namespace":"YAML::DBM","path":"YAML::DBM#key","type":"instance_method","visibility":"public"},"YAML::DBM#reject":{"description":":call-seq:\n  ydbm.reject { |key, value| ... }\n\nConverts the contents of the database to an in-memory Hash, then calls\nHash#reject with the specified code block, returning a new Hash.","name":"reject","namespace":"YAML::DBM","path":"YAML::DBM#reject","type":"instance_method","visibility":"public"},"YAML::DBM#replace":{"description":":call-seq:\n  ydbm.replace(hash) -> ydbm\n\nReplaces the contents of the database with the contents of the specified\nobject. Takes any object which implements the each_pair method, including\nHash and DBM objects.","name":"replace","namespace":"YAML::DBM","path":"YAML::DBM#replace","type":"instance_method","visibility":"public"},"YAML::DBM#select":{"description":":call-seq:\n  ydbm.select { |key, value| ... }\n  ydbm.select(*keys)\n\nIf a block is provided, returns a new array containing [key, value] pairs\nfor which the block returns true.\n\nOtherwise, same as #values_at","name":"select","namespace":"YAML::DBM","path":"YAML::DBM#select","type":"instance_method","visibility":"public"},"YAML::DBM#shift":{"description":":call-seq:\n  ydbm.shift -> [key, value]\n\nRemoves a [key, value] pair from the database, and returns it.\nIf the database is empty, returns +nil+.\n\nThe order in which values are removed/returned is not guaranteed.","name":"shift","namespace":"YAML::DBM","path":"YAML::DBM#shift","type":"instance_method","visibility":"public"},"YAML::DBM#store":{"description":":call-seq:\n  ydbm.store(key, value) -> value\n\nStores +value+ in database with +key+ as the index. +value+ is converted\nto YAML before being stored.\n\nReturns +value+","name":"store","namespace":"YAML::DBM","path":"YAML::DBM#store","type":"instance_method","visibility":"public"},"YAML::DBM#to_a":{"description":":call-seq:\n  ydbm.to_a -> array\n\nConverts the contents of the database to an array of [key, value] arrays,\nand returns it.","name":"to_a","namespace":"YAML::DBM","path":"YAML::DBM#to_a","type":"instance_method","visibility":"public"},"YAML::DBM#to_hash":{"description":":call-seq:\n  ydbm.to_hash -> hash\n\nConverts the contents of the database to an in-memory Hash object, and\nreturns it.","name":"to_hash","namespace":"YAML::DBM","path":"YAML::DBM#to_hash","type":"instance_method","visibility":"public"},"YAML::DBM#update":{"description":":call-seq:\n  ydbm.update(hash) -> ydbm\n\nUpdates the database with multiple values from the specified object.\nTakes any object which implements the each_pair method, including\nHash and DBM objects.\n\nReturns +self+.","name":"update","namespace":"YAML::DBM","path":"YAML::DBM#update","type":"instance_method","visibility":"public"},"YAML::DBM#values":{"description":":call-seq:\n  ydbm.values\n\nReturns an array of values from the database.","name":"values","namespace":"YAML::DBM","path":"YAML::DBM#values","type":"instance_method","visibility":"public"},"YAML::DBM#values_at":{"description":":call-seq:\n  ydbm.values_at(*keys)\n\nReturns an array containing the values associated with the given keys.","name":"values_at","namespace":"YAML::DBM","path":"YAML::DBM#values_at","type":"instance_method","visibility":"public"},"YAML::DBM::VERSION":{"description":":nodoc:","name":"VERSION","namespace":"YAML::DBM","path":"YAML::DBM::VERSION","type":"constant","return":null,"visibility":"public"},"YAML::Store":{"description":"YAML::Store provides the same functionality as PStore, except it uses YAML\nto dump objects instead of Marshal.\n\n== Example\n\n  require 'yaml/store'\n\n  Person = Struct.new :first_name, :last_name\n\n  people = [Person.new(\"Bob\", \"Smith\"), Person.new(\"Mary\", \"Johnson\")]\n\n  store = YAML::Store.new \"test.store\"\n\n  store.transaction do\n    store[\"people\"] = people\n    store[\"greeting\"] = { \"hello\" => \"world\" }\n  end\n\nAfter running the above code, the contents of \"test.store\" will be:\n\n  ---\n  people:\n  - !ruby/struct:Person\n    first_name: Bob\n    last_name: Smith\n  - !ruby/struct:Person\n    first_name: Mary\n    last_name: Johnson\n  greeting:\n    hello: world","name":"Store","namespace":"YAML","path":"YAML::Store","type":"class","visibility":"public"},"YAML::Store#dump":{"description":":stopdoc:","name":"dump","namespace":"YAML::Store","path":"YAML::Store#dump","type":"instance_method","visibility":"public"},"YAML::Store#empty_marshal_checksum":{"description":"","name":"empty_marshal_checksum","namespace":"YAML::Store","path":"YAML::Store#empty_marshal_checksum","type":"instance_method","visibility":"public"},"YAML::Store#empty_marshal_data":{"description":"","name":"empty_marshal_data","namespace":"YAML::Store","path":"YAML::Store#empty_marshal_data","type":"instance_method","visibility":"public"},"YAML::Store#initialize":{"description":":call-seq:\n  initialize( file_name, yaml_opts = {} )\n\nCreates a new YAML::Store object, which will store data in +file_name+.\nIf the file does not already exist, it will be created.\n\n\nOptions passed in through +yaml_opts+ will be used when converting the\nstore to YAML via Hash#to_yaml().","name":"initialize","namespace":"YAML::Store","path":"YAML::Store#initialize","type":"instance_method","visibility":"public","return":[["Store"],"a new instance of Store"]},"YAML::Store#load":{"description":"","name":"load","namespace":"YAML::Store","path":"YAML::Store#load","type":"instance_method","visibility":"public"},"YAML::Store#marshal_dump_supports_canonical_option?":{"description":"","name":"marshal_dump_supports_canonical_option?","namespace":"YAML::Store","path":"YAML::Store#marshal_dump_supports_canonical_option?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"YAML::Store::EMPTY_MARSHAL_CHECKSUM":{"description":"","name":"EMPTY_MARSHAL_CHECKSUM","namespace":"YAML::Store","path":"YAML::Store::EMPTY_MARSHAL_CHECKSUM","type":"constant","return":null,"visibility":"public"},"YAML::Store::EMPTY_MARSHAL_DATA":{"description":"","name":"EMPTY_MARSHAL_DATA","namespace":"YAML::Store","path":"YAML::Store::EMPTY_MARSHAL_DATA","type":"constant","return":null,"visibility":"public"},"YAML::Syck":{"description":"JRuby's \"Syck\" is called \"Yecht\"","name":"Syck","namespace":"YAML","path":"YAML::Syck","type":"constant","return":null,"visibility":"public"},"YAML::SyntaxError":{"description":"","name":"SyntaxError","namespace":"YAML","path":"YAML::SyntaxError","type":"constant","return":null,"visibility":"public"},"TempIO":{"description":"A StringIO duck-typed class that uses Tempfile instead of String as the\nbacking store.\n\nThis is available when rubygems/test_utilities is required.\n--\nThis class was added to flush out problems in Rubinius' IO implementation.","name":"TempIO","namespace":"","path":"TempIO","type":"class","visibility":"public"},"TempIO#initialize":{"description":"Creates a new TempIO that will be initialized to contain +string+.","name":"initialize","namespace":"TempIO","path":"TempIO#initialize","type":"instance_method","visibility":"public","return":[["TempIO"],"a new instance of TempIO"]},"TempIO#string":{"description":"The content of the TempIO as a String.","name":"string","namespace":"TempIO","path":"TempIO#string","type":"instance_method","visibility":"public"},"Psych":{"description":"This exists just to satify bugs in marshal'd gemspecs that\ncontain a reference to YAML::PrivateType. We prune these out\nin Specification._load, but if we don't have the constant, Marshal\nblows up.","name":"Psych","namespace":"","path":"Psych","type":"module","visibility":"public"},"Psych::PrivateType":{"description":":nodoc:","name":"PrivateType","namespace":"Psych","path":"Psych::PrivateType","type":"class","visibility":"public"},"Scanf":{"description":"scanf for Ruby\n\n--\n$Release Version: 1.1.2 $\n$Revision: 44961 $\n$Id: scanf.rb 44961 2014-02-15 01:33:03Z ryan $\n$Author: ryan $\n++\n\n== Description\n\nscanf is an implementation of the C function scanf(3), modified as necessary\nfor Ruby compatibility.\n\nthe methods provided are String#scanf, IO#scanf, and\nKernel#scanf. Kernel#scanf is a wrapper around STDIN.scanf.  IO#scanf\ncan be used on any IO stream, including file handles and sockets.\nscanf can be called either with or without a block.\n\nScanf scans an input string or stream according to a <b>format</b>, as\ndescribed below in Conversions, and returns an array of matches between\nthe format and the input.  The format is defined in a string, and is\nsimilar (though not identical) to the formats used in Kernel#printf and\nKernel#sprintf.\n\nThe format may contain <b>conversion specifiers</b>, which tell scanf\nwhat form (type) each particular matched substring should be converted\nto (e.g., decimal integer, floating point number, literal string,\netc.)  The matches and conversions take place from left to right, and\nthe conversions themselves are returned as an array.\n\nThe format string may also contain characters other than those in the\nconversion specifiers.  White space (blanks, tabs, or newlines) in the\nformat string matches any amount of white space, including none, in\nthe input.  Everything else matches only itself.\n\nScanning stops, and scanf returns, when any input character fails to\nmatch the specifications in the format string, or when input is\nexhausted, or when everything in the format string has been\nmatched. All matches found up to the stopping point are returned in\nthe return array (or yielded to the block, if a block was given).\n\n\n== Basic usage\n\n  require 'scanf'\n\n  # String#scanf and IO#scanf take a single argument, the format string\n  array = a_string.scanf(\"%d%s\")\n  array = an_io.scanf(\"%d%s\")\n\n  # Kernel#scanf reads from STDIN\n  array = scanf(\"%d%s\")\n\n== Block usage\n\nWhen called with a block, scanf keeps scanning the input, cycling back\nto the beginning of the format string, and yields a new array of\nconversions to the block every time the format string is matched\n(including partial matches, but not including complete failures).  The\nactual return value of scanf when called with a block is an array\ncontaining the results of all the executions of the block.\n\n  str = \"123 abc 456 def 789 ghi\"\n  str.scanf(\"%d%s\") { |num,str| [ num * 2, str.upcase ] }\n  # => [[246, \"ABC\"], [912, \"DEF\"], [1578, \"GHI\"]]\n\n== Conversions\n\nThe single argument to scanf is a format string, which generally\nincludes one or more conversion specifiers.  Conversion specifiers\nbegin with the percent character ('%') and include information about\nwhat scanf should next scan for (string, decimal number, single\ncharacter, etc.).\n\nThere may be an optional maximum field width, expressed as a decimal\ninteger, between the % and the conversion.  If no width is given, a\ndefault of `infinity' is used (with the exception of the %c specifier;\nsee below).  Otherwise, given a field width of <em>n</em> for a given\nconversion, at most <em>n</em> characters are scanned in processing\nthat conversion.  Before conversion begins, most conversions skip\nwhite space in the input string; this white space is not counted\nagainst the field width.\n\nThe following conversions are available.\n\n[%]\n  Matches a literal `%'. That is, `%%' in the format string matches a\n  single input `%' character. No conversion is done, and the resulting\n  '%' is not included in the return array.\n\n[d]\n  Matches an optionally signed decimal integer.\n\n[u]\n  Same as d.\n\n[i]\n  Matches an optionally signed integer. The integer is read in base\n  16 if it begins with `0x' or `0X', in base 8 if it begins with `0',\n  and in base 10 other- wise. Only characters that correspond to the\n  base are recognized.\n\n[o]\n  Matches an optionally signed octal integer.\n\n[x, X]\n  Matches an optionally signed hexadecimal integer,\n\n[a, e, f, g, A, E, F, G]\n  Matches an optionally signed floating-point number.\n\n[s]\n  Matches a sequence of non-white-space character. The input string stops at\n  white space or at the maximum field width, whichever occurs first.\n\n[c]\n  Matches a single character, or a sequence of <em>n</em> characters if a\n  field width of <em>n</em> is specified. The usual skip of leading white\n  space is suppressed. To skip white space first, use an explicit space in\n  the format.\n\n[[]\n  Matches a nonempty sequence of characters from the specified set\n  of accepted characters.  The usual skip of leading white space is\n  suppressed.  This bracketed sub-expression is interpreted exactly like a\n  character class in a Ruby regular expression.  (In fact, it is placed as-is\n  in a regular expression.)  The matching against the input string ends with\n  the appearance of a character not in (or, with a circumflex, in) the set,\n  or when the field width runs out, whichever comes first.\n\n=== Assignment suppression\n\nTo require that a particular match occur, but without including the result\nin the return array, place the <b>assignment suppression flag</b>, which is\nthe star character ('*'), immediately after the leading '%' of a format\nspecifier (just before the field width, if any).\n\n== scanf for Ruby compared with scanf in C\n\nscanf for Ruby is based on the C function scanf(3), but with modifications,\ndictated mainly by the underlying differences between the languages.\n\n=== Unimplemented flags and specifiers\n\n* The only flag implemented in scanf for Ruby is '<tt>*</tt>' (ignore\n  upcoming conversion).  Many of the flags available in C versions of\n  scanf(3) have to do with the type of upcoming pointer arguments, and are\n  meaningless in Ruby.\n\n* The <tt>n</tt> specifier (store number of characters consumed so far in\n  next pointer) is not implemented.\n\n* The <tt>p</tt> specifier (match a pointer value) is not implemented.\n\n=== Altered specifiers\n\n[o, u, x, X]\n  In scanf for Ruby, all of these specifiers scan for an optionally signed\n  integer, rather than for an unsigned integer like their C counterparts.\n\n=== Return values\n\nscanf for Ruby returns an array of successful conversions, whereas\nscanf(3) returns the number of conversions successfully\ncompleted. (See below for more details on scanf for Ruby's return\nvalues.)\n\n== Return values\n\nWithout a block, scanf returns an array containing all the conversions\nit has found.  If none are found, scanf will return an empty array. An\nunsuccessful match is never ignored, but rather always signals the end\nof the scanning operation.  If the first unsuccessful match takes place\nafter one or more successful matches have already taken place, the\nreturned array will contain the results of those successful matches.\n\nWith a block scanf returns a 'map'-like array of transformations from\nthe block -- that is, an array reflecting what the block did with each\nyielded result from the iterative scanf operation.  (See \"Block\nusage\", above.)\n\n== Current limitations and bugs\n\nWhen using IO#scanf under Windows, make sure you open your files in\nbinary mode:\n\n    File.open(\"filename\", \"rb\")\n\nso that scanf can keep track of characters correctly.\n\nSupport for character classes is reasonably complete (since it\nessentially piggy-backs on Ruby's regular expression handling of\ncharacter classes), but users are advised that character class testing\nhas not been exhaustive, and that they should exercise some caution\nin using any of the more complex and/or arcane character class\nidioms.\n\n== License and copyright\n\nCopyright:: (c) 2002-2003 David Alan Black\nLicense:: Distributed on the same licensing terms as Ruby itself\n\n== Warranty disclaimer\n\nThis software is provided \"as is\" and without any express or implied\nwarranties, including, without limitation, the implied warranties of\nmerchantability and fitness for a particular purpose.\n\n== Credits and acknowledgements\n\nscanf was developed as the major activity of the Austin Ruby Codefest\n(Austin, Texas, August 2002).\n\nPrincipal author:: David Alan Black (mailto:dblack@superlink.net)\nCo-author:: Hal Fulton (mailto:hal9000@hypermetrics.com)\nProject contributors:: Nolan Darilek, Jason Johnston\n\nThanks to Hal Fulton for hosting the Codefest.\n\nThanks to Matz for suggestions about the class design.\n\nThanks to Gavin Sinclair for some feedback on the documentation.\n\nThe text for parts of this document, especially the Description and\nConversions sections, above, were adapted from the Linux Programmer's\nManual manpage for scanf(3), dated 1995-11-01.\n\n== Bugs and bug reports\n\nscanf for Ruby is based on something of an amalgam of C scanf\nimplementations and documentation, rather than on a single canonical\ndescription.  Suggestions for features and behaviors which appear in\nother scanfs, and would be meaningful in Ruby, are welcome, as are\nreports of suspicious behaviors and/or bugs.  (Please see \"Credits and\nacknowledgements\", above, for email addresses.)","name":"Scanf","namespace":"","path":"Scanf","type":"module","visibility":"public"},"Scanf::FormatSpecifier":{"description":"==Technical notes\n\n===Rationale behind scanf for Ruby\n\nThe impetus for a scanf implementation in Ruby comes chiefly from the fact\nthat existing pattern matching operations, such as Regexp#match and\nString#scan, return all results as strings, which have to be converted to\nintegers or floats explicitly in cases where what's ultimately wanted are\ninteger or float values.\n\n===Design of scanf for Ruby\n\nscanf for Ruby is essentially a <format string>-to-<regular\nexpression> converter.\n\nWhen scanf is called, a FormatString object is generated from the\nformat string (\"%d%s...\") argument. The FormatString object breaks the\nformat string down into atoms (\"%d\", \"%5f\", \"blah\", etc.), and from\neach atom it creates a FormatSpecifier object, which it\nsaves.\n\nEach FormatSpecifier has a regular expression fragment and a \"handler\"\nassociated with it. For example, the regular expression fragment\nassociated with the format \"%d\" is \"([-+]?\\d+)\", and the handler\nassociated with it is a wrapper around String#to_i. scanf itself calls\nFormatString#match, passing in the input string. FormatString#match\niterates through its FormatSpecifiers; for each one, it matches the\ncorresponding regular expression fragment against the string. If\nthere's a match, it sends the matched string to the handler associated\nwith the FormatSpecifier.\n\nThus, to follow up the \"%d\" example: if \"123\" occurs in the input\nstring when a FormatSpecifier consisting of \"%d\" is reached, the \"123\"\nwill be matched against \"([-+]?\\d+)\", and the matched string will be\nrendered into an integer by a call to to_i.\n\nThe rendered match is then saved to an accumulator array, and the\ninput string is reduced to the post-match substring. Thus the string\nis \"eaten\" from the left as the FormatSpecifiers are applied in\nsequence.  (This is done to a duplicate string; the original string is\nnot altered.)\n\nAs soon as a regular expression fragment fails to match the string, or\nwhen the FormatString object runs out of FormatSpecifiers, scanning\nstops and results accumulated so far are returned in an array.","name":"FormatSpecifier","namespace":"Scanf","path":"Scanf::FormatSpecifier","type":"class","visibility":"public"},"Scanf::FormatSpecifier#conversion":{"description":"Returns the value of attribute conversion","name":"conversion","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#conversion","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#count_space?":{"description":"","name":"count_space?","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#count_space?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Scanf::FormatSpecifier#extract_decimal":{"description":"","name":"extract_decimal","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#extract_decimal","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#extract_float":{"description":"","name":"extract_float","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#extract_float","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#extract_hex":{"description":"","name":"extract_hex","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#extract_hex","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#extract_integer":{"description":"","name":"extract_integer","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#extract_integer","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#extract_octal":{"description":"","name":"extract_octal","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#extract_octal","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#extract_plain":{"description":"","name":"extract_plain","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#extract_plain","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#initialize":{"description":"","name":"initialize","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#initialize","type":"instance_method","visibility":"public","return":[["FormatSpecifier"],"a new instance of FormatSpecifier"]},"Scanf::FormatSpecifier#letter":{"description":"","name":"letter","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#letter","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#match":{"description":"","name":"match","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#match","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#matched":{"description":"Returns the value of attribute matched","name":"matched","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#matched","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#matched_string":{"description":"Returns the value of attribute matched_string","name":"matched_string","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#matched_string","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#mid_match?":{"description":"","name":"mid_match?","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#mid_match?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Scanf::FormatSpecifier#nil_proc":{"description":"","name":"nil_proc","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#nil_proc","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#re_string":{"description":"Returns the value of attribute re_string","name":"re_string","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#re_string","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#skip":{"description":"","name":"skip","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#skip","type":"instance_method","visibility":"private"},"Scanf::FormatSpecifier#to_re":{"description":"","name":"to_re","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#to_re","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#to_s":{"description":"","name":"to_s","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#to_s","type":"instance_method","visibility":"public"},"Scanf::FormatSpecifier#width":{"description":"","name":"width","namespace":"Scanf::FormatSpecifier","path":"Scanf::FormatSpecifier#width","type":"instance_method","visibility":"public"},"Scanf::FormatString":{"description":"","name":"FormatString","namespace":"Scanf","path":"Scanf::FormatString","type":"class","visibility":"public"},"Scanf::FormatString#initialize":{"description":"","name":"initialize","namespace":"Scanf::FormatString","path":"Scanf::FormatString#initialize","type":"instance_method","visibility":"public","return":[["FormatString"],"a new instance of FormatString"]},"Scanf::FormatString#last_match_tried":{"description":"Returns the value of attribute last_match_tried","name":"last_match_tried","namespace":"Scanf::FormatString","path":"Scanf::FormatString#last_match_tried","type":"instance_method","visibility":"public"},"Scanf::FormatString#last_spec":{"description":"","name":"last_spec","namespace":"Scanf::FormatString","path":"Scanf::FormatString#last_spec","type":"instance_method","visibility":"public"},"Scanf::FormatString#last_spec_tried":{"description":"Returns the value of attribute last_spec_tried","name":"last_spec_tried","namespace":"Scanf::FormatString","path":"Scanf::FormatString#last_spec_tried","type":"instance_method","visibility":"public"},"Scanf::FormatString#match":{"description":"","name":"match","namespace":"Scanf::FormatString","path":"Scanf::FormatString#match","type":"instance_method","visibility":"public"},"Scanf::FormatString#matched_count":{"description":"Returns the value of attribute matched_count","name":"matched_count","namespace":"Scanf::FormatString","path":"Scanf::FormatString#matched_count","type":"instance_method","visibility":"public"},"Scanf::FormatString#prune":{"description":"","name":"prune","namespace":"Scanf::FormatString","path":"Scanf::FormatString#prune","type":"instance_method","visibility":"public"},"Scanf::FormatString#space":{"description":"Returns the value of attribute space","name":"space","namespace":"Scanf::FormatString","path":"Scanf::FormatString#space","type":"instance_method","visibility":"public"},"Scanf::FormatString#spec_count":{"description":"","name":"spec_count","namespace":"Scanf::FormatString","path":"Scanf::FormatString#spec_count","type":"instance_method","visibility":"public"},"Scanf::FormatString#string_left":{"description":"Returns the value of attribute string_left","name":"string_left","namespace":"Scanf::FormatString","path":"Scanf::FormatString#string_left","type":"instance_method","visibility":"public"},"Scanf::FormatString#to_s":{"description":"","name":"to_s","namespace":"Scanf::FormatString","path":"Scanf::FormatString#to_s","type":"instance_method","visibility":"public"},"Scanf::FormatString::REGEX":{"description":"","name":"REGEX","namespace":"Scanf::FormatString","path":"Scanf::FormatString::REGEX","type":"constant","return":null,"visibility":"public"},"Scanf::FormatString::SPECIFIERS":{"description":"","name":"SPECIFIERS","namespace":"Scanf::FormatString","path":"Scanf::FormatString::SPECIFIERS","type":"constant","return":null,"visibility":"public"},"IO":{"description":"","name":"IO","namespace":"","path":"IO","type":"class","visibility":"public"},"IO#block_scanf":{"description":"","name":"block_scanf","namespace":"IO","path":"IO#block_scanf","type":"instance_method","visibility":"private"},"IO#cooked":{"description":"Yields +self+ within cooked mode.\n\n  STDIN.cooked(&:gets)\n\nwill read and return a line with echo back and line editing.\n\nYou must require 'io/console' to use this method.","name":"cooked","namespace":"IO","path":"IO#cooked","type":"instance_method","visibility":"public"},"IO#cooked!":{"description":"Enables cooked mode.\n\nIf the terminal mode needs to be back, use io.cooked { ... }.\n\nYou must require 'io/console' to use this method.","name":"cooked!","namespace":"IO","path":"IO#cooked!","type":"instance_method","visibility":"public"},"IO#echo=":{"description":"Enables/disables echo back.\nOn some platforms, all combinations of this flags and raw/cooked\nmode may not be valid.\n\nYou must require 'io/console' to use this method.","name":"echo=","namespace":"IO","path":"IO#echo=","type":"instance_method","visibility":"public"},"IO#echo?":{"description":"Returns +true+ if echo back is enabled.\n\nYou must require 'io/console' to use this method.","name":"echo?","namespace":"IO","path":"IO#echo?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IO#getch":{"description":"Reads and returns a character in raw mode.\n\nYou must require 'io/console' to use this method.","name":"getch","namespace":"IO","path":"IO#getch","type":"instance_method","visibility":"public"},"IO#iflush":{"description":"Flushes input buffer in kernel.\n\nYou must require 'io/console' to use this method.","name":"iflush","namespace":"IO","path":"IO#iflush","type":"instance_method","visibility":"public"},"IO#ioflush":{"description":"Flushes input and output buffers in kernel.\n\nYou must require 'io/console' to use this method.","name":"ioflush","namespace":"IO","path":"IO#ioflush","type":"instance_method","visibility":"public"},"IO#noecho":{"description":"Yields +self+ with disabling echo back.\n\n  STDIN.noecho(&:gets)\n\nwill read and return a line without echo back.\n\nYou must require 'io/console' to use this method.","name":"noecho","namespace":"IO","path":"IO#noecho","type":"instance_method","visibility":"public"},"IO#nonblock":{"description":"Yields +self+ in non-blocking mode.\n\nWhen +false+ is given as an argument, +self+ is yielded in blocking mode.\nThe original mode is restored after the block is executed.","name":"nonblock","namespace":"IO","path":"IO#nonblock","type":"instance_method","visibility":"public"},"IO#nonblock=":{"description":"Enables non-blocking mode on a stream when set to\n+true+, and blocking mode when set to +false+.","name":"nonblock=","namespace":"IO","path":"IO#nonblock=","type":"instance_method","visibility":"public"},"IO#nonblock?":{"description":"Returns +true+ if an IO object is in non-blocking mode.","name":"nonblock?","namespace":"IO","path":"IO#nonblock?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IO#nread":{"description":"Returns number of bytes that can be read without blocking.\nReturns zero if no information available.","name":"nread","namespace":"IO","path":"IO#nread","type":"instance_method","visibility":"public"},"IO#oflush":{"description":"Flushes output buffer in kernel.\n\nYou must require 'io/console' to use this method.","name":"oflush","namespace":"IO","path":"IO#oflush","type":"instance_method","visibility":"public"},"IO#raw":{"description":"Yields +self+ within raw mode.\n\n  STDIN.raw(&:gets)\n\nwill read and return a line without echo back and line editing.\n\nYou must require 'io/console' to use this method.","name":"raw","namespace":"IO","path":"IO#raw","type":"instance_method","visibility":"public"},"IO#raw!":{"description":"Enables raw mode.\n\nIf the terminal mode needs to be back, use io.raw { ... }.\n\nYou must require 'io/console' to use this method.","name":"raw!","namespace":"IO","path":"IO#raw!","type":"instance_method","visibility":"public"},"IO#ready?":{"description":"Returns true if input available without blocking, or false.\nReturns nil if no information available.","name":"ready?","namespace":"IO","path":"IO#ready?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IO#scanf":{"description":"Scans the current string until the match is exhausted,\nyielding each match as it is encountered in the string.\nA block is not necessary though, as the results will simply\nbe aggregated into the final array.\n\n  \"123 456\".block_scanf(\"%d\")\n  # => [123, 456]\n\nIf a block is given, the value from that is returned from\nthe yield is added to an output array.\n\n  \"123 456\".block_scanf(\"%d\") do |digit,| # the ',' unpacks the Array\n    digit + 100\n  end\n  # => [223, 556]\n\nSee Scanf for details on creating a format string.\n\nYou will need to require 'scanf' to use use IO#scanf.","name":"scanf","namespace":"IO","path":"IO#scanf","type":"instance_method","visibility":"public"},"IO#soak_up_spaces":{"description":"","name":"soak_up_spaces","namespace":"IO","path":"IO#soak_up_spaces","type":"instance_method","visibility":"private"},"IO#wait":{"description":"Waits until input is available or times out and returns self or nil when\nEOF is reached.","name":"wait","namespace":"IO","path":"IO#wait","type":"instance_method","visibility":"public"},"IO#wait_readable":{"description":"Waits until input is available or times out and returns self or nil when\nEOF is reached.","name":"wait_readable","namespace":"IO","path":"IO#wait_readable","type":"instance_method","visibility":"public"},"IO#wait_writable":{"description":"Waits until IO writable is available or times out and returns self or\nnil when EOF is reached.","name":"wait_writable","namespace":"IO","path":"IO#wait_writable","type":"instance_method","visibility":"public"},"IO#winsize":{"description":"Returns console size.\n\nYou must require 'io/console' to use this method.","name":"winsize","namespace":"IO","path":"IO#winsize","type":"instance_method","visibility":"public"},"IO#winsize=":{"description":"Tries to set console size.  The effect depends on the platform and\nthe running environment.\n\nYou must require 'io/console' to use this method.","name":"winsize=","namespace":"IO","path":"IO#winsize=","type":"instance_method","visibility":"public"},"IO.console":{"description":"Returns an File instance opened console.\n\nIf +sym+ is given, it will be sent to the opened console with\n+args+ and the result will be returned instead of the console IO\nitself.\n\nYou must require 'io/console' to use this method.","name":"console","namespace":"IO","path":"IO.console","type":"class_method","visibility":"public"},"IO.default_console_size":{"description":"fallback to console window size","name":"default_console_size","namespace":"IO","path":"IO.default_console_size","type":"class_method","visibility":"public"},"IO::generic_readable":{"description":"","name":"generic_readable","namespace":"IO","path":"IO::generic_readable","type":"module","visibility":"public"},"IO::generic_readable#getch":{"description":"See IO#getch.","name":"getch","namespace":"IO::generic_readable","path":"IO::generic_readable#getch","type":"module_function","visibility":"public"},"IO::generic_readable#read_nonblock":{"description":"Similar to #read, but raises +EOFError+ at end of string unless the\n+exception: false+ option is passed in.","name":"read_nonblock","namespace":"IO::generic_readable","path":"IO::generic_readable#read_nonblock","type":"module_function","visibility":"public"},"IO::generic_readable#readbyte":{"description":"See IO#readbyte.","name":"readbyte","namespace":"IO::generic_readable","path":"IO::generic_readable#readbyte","type":"module_function","visibility":"public"},"IO::generic_readable#readchar":{"description":"See IO#readchar.","name":"readchar","namespace":"IO::generic_readable","path":"IO::generic_readable#readchar","type":"module_function","visibility":"public"},"IO::generic_readable#readline":{"description":"See IO#readline.","name":"readline","namespace":"IO::generic_readable","path":"IO::generic_readable#readline","type":"module_function","visibility":"public"},"IO::generic_readable#readpartial":{"description":"Similar to #read, but raises +EOFError+ at end of string instead of\nreturning +nil+, as well as IO#sysread does.","name":"readpartial","namespace":"IO::generic_readable","path":"IO::generic_readable#readpartial","type":"module_function","visibility":"public"},"IO::generic_readable#sysread":{"description":"Similar to #read, but raises +EOFError+ at end of string instead of\nreturning +nil+, as well as IO#sysread does.","name":"sysread","namespace":"IO::generic_readable","path":"IO::generic_readable#sysread","type":"module_function","visibility":"public"},"IO::generic_writable":{"description":"","name":"generic_writable","namespace":"IO","path":"IO::generic_writable","type":"module","visibility":"public"},"IO::generic_writable#<<":{"description":"","name":"<<","namespace":"IO::generic_writable","path":"IO::generic_writable#<<","type":"module_function","visibility":"public"},"IO::generic_writable#print":{"description":"","name":"print","namespace":"IO::generic_writable","path":"IO::generic_writable#print","type":"module_function","visibility":"public"},"IO::generic_writable#printf":{"description":"","name":"printf","namespace":"IO::generic_writable","path":"IO::generic_writable#printf","type":"module_function","visibility":"public"},"IO::generic_writable#puts":{"description":"","name":"puts","namespace":"IO::generic_writable","path":"IO::generic_writable#puts","type":"module_function","visibility":"public"},"IO::generic_writable#syswrite":{"description":"","name":"syswrite","namespace":"IO::generic_writable","path":"IO::generic_writable#syswrite","type":"module_function","visibility":"public"},"IO::generic_writable#write_nonblock":{"description":"","name":"write_nonblock","namespace":"IO::generic_writable","path":"IO::generic_writable#write_nonblock","type":"module_function","visibility":"public"},"Set":{"description":"Set implements a collection of unordered values with no duplicates.\nThis is a hybrid of Array's intuitive inter-operation facilities and\nHash's fast lookup.\n\nSet is easy to use with Enumerable objects (implementing +each+).\nMost of the initializer methods and binary operators accept generic\nEnumerable objects besides sets and arrays.  An Enumerable object\ncan be converted to Set using the +to_set+ method.\n\nSet uses Hash as storage, so you must note the following points:\n\n* Equality of elements is determined according to Object#eql? and\n  Object#hash.\n* Set assumes that the identity of each element does not change\n  while it is stored.  Modifying an element of a set will render the\n  set to an unreliable state.\n* When a string is to be stored, a frozen copy of the string is\n  stored instead unless the original string is already frozen.\n\n== Comparison\n\nThe comparison operators <, >, <= and >= are implemented as\nshorthand for the {proper_,}{subset?,superset?} methods.  However,\nthe <=> operator is intentionally left out because not every pair of\nsets is comparable. ({x,y} vs. {x,z} for example)\n\n== Example\n\n  require 'set'\n  s1 = Set.new [1, 2]                   # -> #<Set: {1, 2}>\n  s2 = [1, 2].to_set                    # -> #<Set: {1, 2}>\n  s1 == s2                              # -> true\n  s1.add(\"foo\")                         # -> #<Set: {1, 2, \"foo\"}>\n  s1.merge([2, 6])                      # -> #<Set: {1, 2, \"foo\", 6}>\n  s1.subset? s2                         # -> false\n  s2.subset? s1                         # -> true\n\n== Contact\n\n  - Akinori MUSHA <knu@iDaemons.org> (current maintainer)","name":"Set","namespace":"","path":"Set","type":"class","visibility":"public"},"Set#&":{"description":"Returns a new set containing elements common to the set and the\ngiven enumerable object.","name":"intersection","namespace":"Set","path":"Set#intersection","type":"instance_method","visibility":"public"},"Set#intersection":{"description":"Returns a new set containing elements common to the set and the\ngiven enumerable object.","name":"intersection","namespace":"Set","path":"Set#intersection","type":"instance_method","visibility":"public"},"Set#+":{"description":"Returns a new set built by merging the set and the elements of the\ngiven enumerable object.","name":"union","namespace":"Set","path":"Set#union","type":"instance_method","visibility":"public"},"Set#-":{"description":"Returns a new set built by duplicating the set, removing every\nelement that appears in the given enumerable object.","name":"difference","namespace":"Set","path":"Set#difference","type":"instance_method","visibility":"public"},"Set#difference":{"description":"Returns a new set built by duplicating the set, removing every\nelement that appears in the given enumerable object.","name":"difference","namespace":"Set","path":"Set#difference","type":"instance_method","visibility":"public"},"Set#<":{"description":"Returns true if the set is a proper subset of the given set.","name":"<","namespace":"Set","path":"Set#<","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#<<":{"description":"Adds the given object to the set and returns self.  Use +merge+ to\nadd many elements at once.","name":"<<","namespace":"Set","path":"Set#<<","type":"instance_method","visibility":"public"},"Set#<=":{"description":"Returns true if the set is a subset of the given set.","name":"<=","namespace":"Set","path":"Set#<=","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#==":{"description":"Returns true if two sets are equal.  The equality of each couple\nof elements is defined according to Object#eql?.","name":"==","namespace":"Set","path":"Set#==","type":"instance_method","visibility":"public"},"Set#>":{"description":"Returns true if the set is a proper superset of the given set.","name":">","namespace":"Set","path":"Set#>","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#>=":{"description":"Returns true if the set is a superset of the given set.","name":">=","namespace":"Set","path":"Set#>=","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#^":{"description":"Returns a new set containing elements exclusive between the set\nand the given enumerable object.  (set ^ enum) is equivalent to\n((set | enum) - (set & enum)).","name":"^","namespace":"Set","path":"Set#^","type":"instance_method","visibility":"public"},"Set#add":{"description":"Adds the given object to the set and returns self.  Use +merge+ to\nadd many elements at once.","name":"<<","namespace":"Set","path":"Set#<<","type":"instance_method","visibility":"public"},"Set#add?":{"description":"Adds the given object to the set and returns self.  If the\nobject is already in the set, returns nil.","name":"add?","namespace":"Set","path":"Set#add?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#classify":{"description":"Classifies the set by the return value of the given block and\nreturns a hash of {value => set of elements} pairs.  The block is\ncalled once for each element of the set, passing the element as\nparameter.\n\ne.g.:\n\n  require 'set'\n  files = Set.new(Dir.glob(\"*.rb\"))\n  hash = files.classify { |f| File.mtime(f).year }\n  p hash    # => {2000=>#<Set: {\"a.rb\", \"b.rb\"}>,\n            #     2001=>#<Set: {\"c.rb\", \"d.rb\", \"e.rb\"}>,\n            #     2002=>#<Set: {\"f.rb\"}>}","name":"classify","namespace":"Set","path":"Set#classify","type":"instance_method","visibility":"public"},"Set#clear":{"description":"Removes all elements and returns self.","name":"clear","namespace":"Set","path":"Set#clear","type":"instance_method","visibility":"public"},"Set#collect!":{"description":"Replaces the elements with ones returned by collect().","name":"map!","namespace":"Set","path":"Set#map!","type":"instance_method","visibility":"public"},"Set#map!":{"description":"Replaces the elements with ones returned by collect().","name":"map!","namespace":"Set","path":"Set#map!","type":"instance_method","visibility":"public"},"Set#delete":{"description":"Deletes the given object from the set and returns self.  Use +subtract+ to\ndelete many items at once.","name":"delete","namespace":"Set","path":"Set#delete","type":"instance_method","visibility":"public"},"Set#delete?":{"description":"Deletes the given object from the set and returns self.  If the\nobject is not in the set, returns nil.","name":"delete?","namespace":"Set","path":"Set#delete?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#delete_if":{"description":"Deletes every element of the set for which block evaluates to\ntrue, and returns self.","name":"delete_if","namespace":"Set","path":"Set#delete_if","type":"instance_method","visibility":"public"},"Set#disjoint?":{"description":"Returns true if the set and the given set have no element in\ncommon.  This method is the opposite of +intersect?+.\n\ne.g.:\n\n  require 'set'\n  Set[1, 2, 3].disjoint? Set[3, 4] # => false\n  Set[1, 2, 3].disjoint? Set[4, 5] # => true","name":"disjoint?","namespace":"Set","path":"Set#disjoint?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#divide":{"description":"Divides the set into a set of subsets according to the commonality\ndefined by the given block.\n\nIf the arity of the block is 2, elements o1 and o2 are in common\nif block.call(o1, o2) is true.  Otherwise, elements o1 and o2 are\nin common if block.call(o1) == block.call(o2).\n\ne.g.:\n\n  require 'set'\n  numbers = Set[1, 3, 4, 6, 9, 10, 11]\n  set = numbers.divide { |i,j| (i - j).abs == 1 }\n  p set     # => #<Set: {#<Set: {1}>,\n            #            #<Set: {11, 9, 10}>,\n            #            #<Set: {3, 4}>,\n            #            #<Set: {6}>}>","name":"divide","namespace":"Set","path":"Set#divide","type":"instance_method","visibility":"public"},"Set#do_with_enum":{"description":":nodoc:","name":"do_with_enum","namespace":"Set","path":"Set#do_with_enum","type":"instance_method","visibility":"private"},"Set#each":{"description":"Calls the given block once for each element in the set, passing\nthe element as parameter.  Returns an enumerator if no block is\ngiven.","name":"each","namespace":"Set","path":"Set#each","type":"instance_method","visibility":"public"},"Set#empty?":{"description":"Returns true if the set contains no elements.","name":"empty?","namespace":"Set","path":"Set#empty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#eql?":{"description":":nodoc:","name":"eql?","namespace":"Set","path":"Set#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#flatten":{"description":"Returns a new set that is a copy of the set, flattening each\ncontaining set recursively.","name":"flatten","namespace":"Set","path":"Set#flatten","type":"instance_method","visibility":"public"},"Set#flatten!":{"description":"Equivalent to Set#flatten, but replaces the receiver with the\nresult in place.  Returns nil if no modifications were made.","name":"flatten!","namespace":"Set","path":"Set#flatten!","type":"instance_method","visibility":"public"},"Set#flatten_merge":{"description":":nodoc:","name":"flatten_merge","namespace":"Set","path":"Set#flatten_merge","type":"instance_method","visibility":"protected"},"Set#freeze":{"description":":nodoc:","name":"freeze","namespace":"Set","path":"Set#freeze","type":"instance_method","visibility":"public"},"Set#hash":{"description":":nodoc:","name":"hash","namespace":"Set","path":"Set#hash","type":"instance_method","visibility":"public"},"Set#include?":{"description":"Returns true if the set contains the given object.","name":"member?","namespace":"Set","path":"Set#member?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#member?":{"description":"Returns true if the set contains the given object.","name":"member?","namespace":"Set","path":"Set#member?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#initialize":{"description":"Creates a new set containing the elements of the given enumerable\nobject.\n\nIf a block is given, the elements of enum are preprocessed by the\ngiven block.","name":"initialize","namespace":"Set","path":"Set#initialize","type":"instance_method","visibility":"public","return":[["Set"],"a new instance of Set"]},"Set#initialize_clone":{"description":"Clone internal hash.","name":"initialize_clone","namespace":"Set","path":"Set#initialize_clone","type":"instance_method","visibility":"public"},"Set#initialize_dup":{"description":"Dup internal hash.","name":"initialize_dup","namespace":"Set","path":"Set#initialize_dup","type":"instance_method","visibility":"public"},"Set#inspect":{"description":"Returns a string containing a human-readable representation of the\nset. (\"#<Set: {element1, element2, ...}>\")","name":"inspect","namespace":"Set","path":"Set#inspect","type":"instance_method","visibility":"public"},"Set#intersect?":{"description":"Returns true if the set and the given set have at least one\nelement in common.\n\ne.g.:\n\n  require 'set'\n  Set[1, 2, 3].intersect? Set[4, 5] # => false\n  Set[1, 2, 3].intersect? Set[3, 4] # => true","name":"intersect?","namespace":"Set","path":"Set#intersect?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#keep_if":{"description":"Deletes every element of the set for which block evaluates to\nfalse, and returns self.","name":"keep_if","namespace":"Set","path":"Set#keep_if","type":"instance_method","visibility":"public"},"Set#length":{"description":"Returns the number of elements.","name":"length","namespace":"Set","path":"Set#length","type":"instance_method","visibility":"public"},"Set#merge":{"description":"Merges the elements of the given enumerable object to the set and\nreturns self.","name":"merge","namespace":"Set","path":"Set#merge","type":"instance_method","visibility":"public"},"Set#pretty_print":{"description":":nodoc:","name":"pretty_print","namespace":"Set","path":"Set#pretty_print","type":"instance_method","visibility":"public"},"Set#pretty_print_cycle":{"description":":nodoc:","name":"pretty_print_cycle","namespace":"Set","path":"Set#pretty_print_cycle","type":"instance_method","visibility":"public"},"Set#proper_subset?":{"description":"Returns true if the set is a proper subset of the given set.","name":"<","namespace":"Set","path":"Set#<","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#proper_superset?":{"description":"Returns true if the set is a proper superset of the given set.","name":">","namespace":"Set","path":"Set#>","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#reject!":{"description":"Equivalent to Set#delete_if, but returns nil if no changes were\nmade.","name":"reject!","namespace":"Set","path":"Set#reject!","type":"instance_method","visibility":"public"},"Set#replace":{"description":"Replaces the contents of the set with the contents of the given\nenumerable object and returns self.","name":"replace","namespace":"Set","path":"Set#replace","type":"instance_method","visibility":"public"},"Set#select!":{"description":"Equivalent to Set#keep_if, but returns nil if no changes were\nmade.","name":"select!","namespace":"Set","path":"Set#select!","type":"instance_method","visibility":"public"},"Set#size":{"description":"Returns the number of elements.","name":"length","namespace":"Set","path":"Set#length","type":"instance_method","visibility":"public"},"Set#subset?":{"description":"Returns true if the set is a subset of the given set.","name":"<=","namespace":"Set","path":"Set#<=","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#subtract":{"description":"Deletes every element that appears in the given enumerable object\nand returns self.","name":"subtract","namespace":"Set","path":"Set#subtract","type":"instance_method","visibility":"public"},"Set#superset?":{"description":"Returns true if the set is a superset of the given set.","name":">=","namespace":"Set","path":"Set#>=","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Set#taint":{"description":":nodoc:","name":"taint","namespace":"Set","path":"Set#taint","type":"instance_method","visibility":"public"},"Set#to_a":{"description":"Converts the set to an array.  The order of elements is uncertain.","name":"to_a","namespace":"Set","path":"Set#to_a","type":"instance_method","visibility":"public"},"Set#to_set":{"description":"Returns self if no arguments are given.  Otherwise, converts the\nset to another with klass.new(self, *args, &block).\n\nIn subclasses, returns klass.new(self, *args, &block) unless\noverridden.","name":"to_set","namespace":"Set","path":"Set#to_set","type":"instance_method","visibility":"public"},"Set#union":{"description":"Returns a new set built by merging the set and the elements of the\ngiven enumerable object.","name":"union","namespace":"Set","path":"Set#union","type":"instance_method","visibility":"public"},"Set#untaint":{"description":":nodoc:","name":"untaint","namespace":"Set","path":"Set#untaint","type":"instance_method","visibility":"public"},"Set#|":{"description":"Returns a new set built by merging the set and the elements of the\ngiven enumerable object.","name":"union","namespace":"Set","path":"Set#union","type":"instance_method","visibility":"public"},"Set.[]":{"description":"Creates a new set containing the given objects.","name":"[]","namespace":"Set","path":"Set.[]","type":"class_method","visibility":"public"},"Set::InspectKey":{"description":":nodoc:","name":"InspectKey","namespace":"Set","path":"Set::InspectKey","type":"constant","return":null,"visibility":"public"},"SortedSet":{"description":"SortedSet implements a Set that guarantees that its elements are\nyielded in sorted order (according to the return values of their\n#<=> methods) when iterating over them.\n\nAll elements that are added to a SortedSet must respond to the <=>\nmethod for comparison.\n\nAlso, all elements must be <em>mutually comparable</em>: <tt>el1 <=>\nel2</tt> must not return <tt>nil</tt> for any elements <tt>el1</tt>\nand <tt>el2</tt>, else an ArgumentError will be raised when\niterating over the SortedSet.\n\n== Example\n\n  require \"set\"\n\n  set = SortedSet.new([2, 1, 5, 6, 4, 5, 3, 3, 3])\n  ary = []\n\n  set.each do |obj|\n    ary << obj\n  end\n\n  p ary # => [1, 2, 3, 4, 5, 6]\n\n  set2 = SortedSet.new([1, 2, \"3\"])\n  set2.each { |obj| } # => raises ArgumentError: comparison of Fixnum with String failed","name":"SortedSet","namespace":"","path":"SortedSet","type":"class","visibility":"public"},"SortedSet#initialize":{"description":":nodoc:","name":"initialize","namespace":"SortedSet","path":"SortedSet#initialize","type":"instance_method","visibility":"public","return":[["SortedSet"],"a new instance of SortedSet"]},"SortedSet.[]":{"description":":nodoc:","name":"[]","namespace":"SortedSet","path":"SortedSet.[]","type":"class_method","visibility":"public"},"SortedSet.setup":{"description":":nodoc:","name":"setup","namespace":"SortedSet","path":"SortedSet.setup","type":"class_method","visibility":"public"},"SortedSet::@@setup":{"description":"","name":"@@setup","namespace":"SortedSet","path":"SortedSet::@@setup","type":"classvariable","visibility":"public"},"Enumerable":{"description":"","name":"Enumerable","namespace":"","path":"Enumerable","type":"module","visibility":"public"},"Enumerable#to_set":{"description":"Makes a set from the enumerable object with given arguments.\nNeeds to +require \"set\"+ to use this method.","name":"to_set","namespace":"Enumerable","path":"Enumerable#to_set","type":"module_function","visibility":"public"},"Singleton":{"description":"The Singleton module implements the Singleton pattern.\n\n== Usage\n\nTo use Singleton, include the module in your class.\n\n   class Klass\n      include Singleton\n      # ...\n   end\n\nThis ensures that only one instance of Klass can be created.\n\n     a,b  = Klass.instance, Klass.instance\n\n     a == b\n     # => true\n\n     Klass.new\n     # => NoMethodError - new is private ...\n\nThe instance is created at upon the first call of Klass.instance().\n\n     class OtherKlass\n       include Singleton\n       # ...\n     end\n\n     ObjectSpace.each_object(OtherKlass){}\n     # => 0\n\n     OtherKlass.instance\n     ObjectSpace.each_object(OtherKlass){}\n     # => 1\n\n\nThis behavior is preserved under inheritance and cloning.\n\n== Implementation\n\nThis above is achieved by:\n\n*  Making Klass.new and Klass.allocate private.\n\n*  Overriding Klass.inherited(sub_klass) and Klass.clone() to ensure that the\n   Singleton properties are kept when inherited and cloned.\n\n*  Providing the Klass.instance() method that returns the same object each\n   time it is called.\n\n*  Overriding Klass._load(str) to call Klass.instance().\n\n*  Overriding Klass#clone and Klass#dup to raise TypeErrors to prevent\n   cloning or duping.\n\n== Singleton and Marshal\n\nBy default Singleton's #_dump(depth) returns the empty string. Marshalling by\ndefault will strip state information, e.g. instance variables and taint\nstate, from the instance. Classes using Singleton can provide custom\n_load(str) and _dump(depth) methods to retain some of the previous state of\nthe instance.\n\n   require 'singleton'\n\n   class Example\n     include Singleton\n     attr_accessor :keep, :strip\n     def _dump(depth)\n       # this strips the @strip information from the instance\n       Marshal.dump(@keep, depth)\n     end\n\n     def self._load(str)\n       instance.keep = Marshal.load(str)\n       instance\n     end\n   end\n\n   a = Example.instance\n   a.keep = \"keep this\"\n   a.strip = \"get rid of this\"\n   a.taint\n\n   stored_state = Marshal.dump(a)\n\n   a.keep = nil\n   a.strip = nil\n   b = Marshal.load(stored_state)\n   p a == b  #  => true\n   p a.keep  #  => \"keep this\"\n   p a.strip #  => nil","name":"Singleton","namespace":"","path":"Singleton","type":"module","visibility":"public"},"Singleton#_dump":{"description":"By default, do not retain any state when marshalling.","name":"_dump","namespace":"Singleton","path":"Singleton#_dump","type":"module_function","visibility":"public"},"Singleton#clone":{"description":"Raises a TypeError to prevent cloning.","name":"clone","namespace":"Singleton","path":"Singleton#clone","type":"module_function","visibility":"public"},"Singleton#dup":{"description":"Raises a TypeError to prevent duping.","name":"dup","namespace":"Singleton","path":"Singleton#dup","type":"module_function","visibility":"public"},"Singleton.__init__":{"description":":nodoc:","name":"__init__","namespace":"Singleton","path":"Singleton.__init__","type":"module_function","visibility":"public"},"Singleton.append_features":{"description":"","name":"append_features","namespace":"Singleton","path":"Singleton.append_features","type":"module_function","visibility":"private"},"Singleton.included":{"description":"","name":"included","namespace":"Singleton","path":"Singleton.included","type":"module_function","visibility":"private"},"Singleton::SingletonClassMethods":{"description":":nodoc:","name":"SingletonClassMethods","namespace":"Singleton","path":"Singleton::SingletonClassMethods","type":"module","visibility":"public"},"Singleton::SingletonClassMethods#_load":{"description":"By default calls instance(). Override to retain singleton state.","name":"_load","namespace":"Singleton::SingletonClassMethods","path":"Singleton::SingletonClassMethods#_load","type":"module_function","visibility":"public"},"Singleton::SingletonClassMethods#clone":{"description":":nodoc:","name":"clone","namespace":"Singleton::SingletonClassMethods","path":"Singleton::SingletonClassMethods#clone","type":"module_function","visibility":"public"},"Singleton::SingletonClassMethods#inherited":{"description":"","name":"inherited","namespace":"Singleton::SingletonClassMethods","path":"Singleton::SingletonClassMethods#inherited","type":"module_function","visibility":"private"},"Dir":{"description":"","name":"Dir","namespace":"","path":"Dir","type":"class","visibility":"public"},"Dir.mktmpdir":{"description":"Dir.mktmpdir creates a temporary directory.\n\nThe directory is created with 0700 permission.\nApplication should not change the permission to make the temporary directory accessible from other users.\n\nThe prefix and suffix of the name of the directory is specified by\nthe optional first argument, <i>prefix_suffix</i>.\n- If it is not specified or nil, \"d\" is used as the prefix and no suffix is used.\n- If it is a string, it is used as the prefix and no suffix is used.\n- If it is an array, first element is used as the prefix and second element is used as a suffix.\n\n Dir.mktmpdir {|dir| dir is \".../d...\" }\n Dir.mktmpdir(\"foo\") {|dir| dir is \".../foo...\" }\n Dir.mktmpdir([\"foo\", \"bar\"]) {|dir| dir is \".../foo...bar\" }\n\nThe directory is created under Dir.tmpdir or\nthe optional second argument <i>tmpdir</i> if non-nil value is given.\n\n Dir.mktmpdir {|dir| dir is \"#{Dir.tmpdir}/d...\" }\n Dir.mktmpdir(nil, \"/var/tmp\") {|dir| dir is \"/var/tmp/d...\" }\n\nIf a block is given,\nit is yielded with the path of the directory.\nThe directory and its contents are removed\nusing FileUtils.remove_entry before Dir.mktmpdir returns.\nThe value of the block is returned.\n\n Dir.mktmpdir {|dir|\n   # use the directory...\n   open(\"#{dir}/foo\", \"w\") { ... }\n }\n\nIf a block is not given,\nThe path of the directory is returned.\nIn this case, Dir.mktmpdir doesn't remove the directory.\n\n dir = Dir.mktmpdir\n begin\n   # use the directory...\n   open(\"#{dir}/foo\", \"w\") { ... }\n ensure\n   # remove the directory.\n   FileUtils.remove_entry dir\n end","name":"mktmpdir","namespace":"Dir","path":"Dir.mktmpdir","type":"class_method","visibility":"public"},"Dir.tmpdir":{"description":"Returns the operating system's temporary file path.","name":"tmpdir","namespace":"Dir","path":"Dir.tmpdir","type":"class_method","visibility":"public"},"Dir::Tmpname":{"description":":nodoc:","name":"Tmpname","namespace":"Dir","path":"Dir::Tmpname","type":"module","visibility":"public"},"Dir::Tmpname#create":{"description":"","name":"create","namespace":"Dir::Tmpname","path":"Dir::Tmpname#create","type":"module_function","visibility":"private"},"Dir::Tmpname#make_tmpname":{"description":"","name":"make_tmpname","namespace":"Dir::Tmpname","path":"Dir::Tmpname#make_tmpname","type":"module_function","visibility":"private"},"Dir::Tmpname#tmpdir":{"description":"","name":"tmpdir","namespace":"Dir::Tmpname","path":"Dir::Tmpname#tmpdir","type":"module_function","visibility":"private"},"Dir::Tmpname.create":{"description":"","name":"create","namespace":"Dir::Tmpname","path":"Dir::Tmpname.create","type":"module_function","visibility":"public"},"Dir::Tmpname.make_tmpname":{"description":"","name":"make_tmpname","namespace":"Dir::Tmpname","path":"Dir::Tmpname.make_tmpname","type":"module_function","visibility":"public"},"Dir::Tmpname.tmpdir":{"description":"","name":"tmpdir","namespace":"Dir::Tmpname","path":"Dir::Tmpname.tmpdir","type":"module_function","visibility":"public"},"UnicodeNormalize":{"description":"automatically generated by template/unicode_norm_gen.tmpl","name":"UnicodeNormalize","namespace":"","path":"UnicodeNormalize","type":"module","visibility":"public"},"UnicodeNormalize.canonical_ordering_one":{"description":"Canonical Ordering","name":"canonical_ordering_one","namespace":"UnicodeNormalize","path":"UnicodeNormalize.canonical_ordering_one","type":"module_function","visibility":"public"},"UnicodeNormalize.hangul_comp_one":{"description":"","name":"hangul_comp_one","namespace":"UnicodeNormalize","path":"UnicodeNormalize.hangul_comp_one","type":"module_function","visibility":"public"},"UnicodeNormalize.hangul_decomp_one":{"description":"Hangul Algorithm","name":"hangul_decomp_one","namespace":"UnicodeNormalize","path":"UnicodeNormalize.hangul_decomp_one","type":"module_function","visibility":"public"},"UnicodeNormalize.nfc_one":{"description":"","name":"nfc_one","namespace":"UnicodeNormalize","path":"UnicodeNormalize.nfc_one","type":"module_function","visibility":"public"},"UnicodeNormalize.nfd_one":{"description":"Normalization Forms for Patterns (not whole Strings)","name":"nfd_one","namespace":"UnicodeNormalize","path":"UnicodeNormalize.nfd_one","type":"module_function","visibility":"public"},"UnicodeNormalize.nfkd_one":{"description":"","name":"nfkd_one","namespace":"UnicodeNormalize","path":"UnicodeNormalize.nfkd_one","type":"module_function","visibility":"public"},"UnicodeNormalize.normalize":{"description":"","name":"normalize","namespace":"UnicodeNormalize","path":"UnicodeNormalize.normalize","type":"module_function","visibility":"public"},"UnicodeNormalize.normalized?":{"description":"","name":"normalized?","namespace":"UnicodeNormalize","path":"UnicodeNormalize.normalized?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"UnicodeNormalize::ACCENTS":{"description":"","name":"ACCENTS","namespace":"UnicodeNormalize","path":"UnicodeNormalize::ACCENTS","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::CLASS_TABLE":{"description":"","name":"CLASS_TABLE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::CLASS_TABLE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::COMPOSITION_TABLE":{"description":"","name":"COMPOSITION_TABLE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::COMPOSITION_TABLE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::DECOMPOSITION_TABLE":{"description":"","name":"DECOMPOSITION_TABLE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::DECOMPOSITION_TABLE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::KOMPATIBLE_TABLE":{"description":"","name":"KOMPATIBLE_TABLE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::KOMPATIBLE_TABLE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::LBASE":{"description":"","name":"LBASE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::LBASE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::LCOUNT":{"description":"","name":"LCOUNT","namespace":"UnicodeNormalize","path":"UnicodeNormalize::LCOUNT","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::MAX_HASH_LENGTH":{"description":"Constant for max hash capacity to avoid DoS attack","name":"MAX_HASH_LENGTH","namespace":"UnicodeNormalize","path":"UnicodeNormalize::MAX_HASH_LENGTH","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::NCOUNT":{"description":"","name":"NCOUNT","namespace":"UnicodeNormalize","path":"UnicodeNormalize::NCOUNT","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::NF_HASH_C":{"description":"","name":"NF_HASH_C","namespace":"UnicodeNormalize","path":"UnicodeNormalize::NF_HASH_C","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::NF_HASH_D":{"description":"","name":"NF_HASH_D","namespace":"UnicodeNormalize","path":"UnicodeNormalize::NF_HASH_D","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::NF_HASH_K":{"description":"","name":"NF_HASH_K","namespace":"UnicodeNormalize","path":"UnicodeNormalize::NF_HASH_K","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::REGEXP_C":{"description":"","name":"REGEXP_C","namespace":"UnicodeNormalize","path":"UnicodeNormalize::REGEXP_C","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::REGEXP_C_STRING":{"description":"composition exclusions","name":"REGEXP_C_STRING","namespace":"UnicodeNormalize","path":"UnicodeNormalize::REGEXP_C_STRING","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::REGEXP_D":{"description":"Regular Expressions and Hash Constants","name":"REGEXP_D","namespace":"UnicodeNormalize","path":"UnicodeNormalize::REGEXP_D","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::REGEXP_D_STRING":{"description":"composition starters and composition exclusions","name":"REGEXP_D_STRING","namespace":"UnicodeNormalize","path":"UnicodeNormalize::REGEXP_D_STRING","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::REGEXP_K":{"description":"","name":"REGEXP_K","namespace":"UnicodeNormalize","path":"UnicodeNormalize::REGEXP_K","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::REGEXP_K_STRING":{"description":"","name":"REGEXP_K_STRING","namespace":"UnicodeNormalize","path":"UnicodeNormalize::REGEXP_K_STRING","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::SBASE":{"description":"Constants For Hangul\nfor details such as the meaning of the identifiers below, please see\nhttp://www.unicode.org/versions/Unicode7.0.0/ch03.pdf, pp. 144/145","name":"SBASE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::SBASE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::SCOUNT":{"description":"","name":"SCOUNT","namespace":"UnicodeNormalize","path":"UnicodeNormalize::SCOUNT","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::TBASE":{"description":"","name":"TBASE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::TBASE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::TCOUNT":{"description":"","name":"TCOUNT","namespace":"UnicodeNormalize","path":"UnicodeNormalize::TCOUNT","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::UNICODE_ENCODINGS":{"description":"Unicode-based encodings (except UTF-8)","name":"UNICODE_ENCODINGS","namespace":"UnicodeNormalize","path":"UnicodeNormalize::UNICODE_ENCODINGS","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::UNICODE_VERSION":{"description":"","name":"UNICODE_VERSION","namespace":"UnicodeNormalize","path":"UnicodeNormalize::UNICODE_VERSION","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::VBASE":{"description":"","name":"VBASE","namespace":"UnicodeNormalize","path":"UnicodeNormalize::VBASE","type":"constant","return":null,"visibility":"public"},"UnicodeNormalize::VCOUNT":{"description":"","name":"VCOUNT","namespace":"UnicodeNormalize","path":"UnicodeNormalize::VCOUNT","type":"constant","return":null,"visibility":"public"},"Date":{"description":"Date serialization/deserialization","name":"Date","namespace":"","path":"Date","type":"class","visibility":"public"},"Date#+":{"description":"Returns a date object pointing other days after self.  The other\nshould be a numeric value.  If the other is flonum, assumes its\nprecision is at most nanosecond.\n\n   Date.new(2001,2,3) + 1\t#=> #<Date: 2001-02-04 ...>\n   DateTime.new(2001,2,3) + Rational(1,2)\n\t\t\t#=> #<DateTime: 2001-02-03T12:00:00+00:00 ...>\n   DateTime.new(2001,2,3) + Rational(-1,2)\n\t\t\t#=> #<DateTime: 2001-02-02T12:00:00+00:00 ...>\n   DateTime.jd(0,12) + DateTime.new(2001,2,3).ajd\n\t\t\t#=> #<DateTime: 2001-02-03T00:00:00+00:00 ...>","name":"+","namespace":"Date","path":"Date#+","type":"instance_method","visibility":"public"},"Date#-":{"description":"Returns the difference between the two dates if the other is a date\nobject.  If the other is a numeric value, returns a date object\npointing other days before self.  If the other is flonum, assumes\nits precision is at most nanosecond.\n\n    Date.new(2001,2,3) - 1\t#=> #<Date: 2001-02-02 ...>\n    DateTime.new(2001,2,3) - Rational(1,2)\n\t\t\t#=> #<DateTime: 2001-02-02T12:00:00+00:00 ...>\n    Date.new(2001,2,3) - Date.new(2001)\n\t\t\t#=> (33/1)\n    DateTime.new(2001,2,3) - DateTime.new(2001,2,2,12)\n\t\t\t#=> (1/2)","name":"-","namespace":"Date","path":"Date#-","type":"instance_method","visibility":"public"},"Date#<<":{"description":"Returns a date object pointing n months before self.  The n should\nbe a numeric value.\n\n   Date.new(2001,2,3) << 1\t#=> #<Date: 2001-01-03 ...>\n   Date.new(2001,1,31) << 11\t#=> #<Date: 2000-02-29 ...>\n   Date.new(2001,2,3) << -1\t#=> #<Date: 2001-03-03 ...>","name":"<<","namespace":"Date","path":"Date#<<","type":"instance_method","visibility":"public"},"Date#<=>":{"description":"Compares the two dates and returns -1, zero, 1 or nil.  The other\nshould be a date object or a numeric value as an astronomical\nJulian day number.\n\n   Date.new(2001,2,3) <=> Date.new(2001,2,4)\t#=> -1\n   Date.new(2001,2,3) <=> Date.new(2001,2,3)\t#=> 0\n   Date.new(2001,2,3) <=> Date.new(2001,2,2)\t#=> 1\n   Date.new(2001,2,3) <=> Object.new\t\t#=> nil\n   Date.new(2001,2,3) <=> Rational(4903887,2)#=> 0\n\nSee also Comparable.","name":"<=>","namespace":"Date","path":"Date#<=>","type":"instance_method","visibility":"public"},"Date#===":{"description":"Returns true if they are the same day.\n\n   Date.new(2001,2,3) === Date.new(2001,2,3)\n\t\t\t\t\t#=> true\n   Date.new(2001,2,3) === Date.new(2001,2,4)\n\t\t\t\t#=> false\n   DateTime.new(2001,2,3) === DateTime.new(2001,2,3,12)\n\t\t\t\t#=> true\n   DateTime.new(2001,2,3) === DateTime.new(2001,2,3,0,0,0,'+24:00')\n\t\t\t\t#=> true\n   DateTime.new(2001,2,3) === DateTime.new(2001,2,4,0,0,0,'+24:00')\n\t\t\t\t#=> false","name":"===","namespace":"Date","path":"Date#===","type":"instance_method","visibility":"public"},"Date#>>":{"description":"Returns a date object pointing n months after self.  The n should\nbe a numeric value.\n\n   Date.new(2001,2,3) >> 1\t#=> #<Date: 2001-03-03 ...>\n   Date.new(2001,1,31) >> 1\t#=> #<Date: 2001-02-28 ...>\n   Date.new(2001,2,3) >> -2\t#=> #<Date: 2000-12-03 ...>","name":">>","namespace":"Date","path":"Date#>>","type":"instance_method","visibility":"public"},"Date#ajd":{"description":"Returns the astronomical Julian day number.  This is a fractional\nnumber, which is not adjusted by the offset.\n\n   DateTime.new(2001,2,3,4,5,6,'+7').ajd\t#=> (11769328217/4800)\n   DateTime.new(2001,2,2,14,5,6,'-7').ajd\t#=> (11769328217/4800)","name":"ajd","namespace":"Date","path":"Date#ajd","type":"instance_method","visibility":"public"},"Date#amjd":{"description":"Returns the astronomical modified Julian day number.  This is\na fractional number, which is not adjusted by the offset.\n\n   DateTime.new(2001,2,3,4,5,6,'+7').amjd\t#=> (249325817/4800)\n   DateTime.new(2001,2,2,14,5,6,'-7').amjd\t#=> (249325817/4800)","name":"amjd","namespace":"Date","path":"Date#amjd","type":"instance_method","visibility":"public"},"Date#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Date","path":"Date#as_json","type":"instance_method","visibility":"public"},"Date#asctime":{"description":"Returns a string in asctime(3) format (but without \"\\n\\0\" at the\nend).  This method is equivalent to strftime('%c').\n\nSee also asctime(3) or ctime(3).","name":"asctime","namespace":"Date","path":"Date#asctime","type":"instance_method","visibility":"public"},"Date#ctime":{"description":"Returns a string in asctime(3) format (but without \"\\n\\0\" at the\nend).  This method is equivalent to strftime('%c').\n\nSee also asctime(3) or ctime(3).","name":"ctime","namespace":"Date","path":"Date#ctime","type":"instance_method","visibility":"public"},"Date#cwday":{"description":"Returns the day of calendar week (1-7, Monday is 1).\n\n   Date.new(2001,2,3).cwday\t\t#=> 6","name":"cwday","namespace":"Date","path":"Date#cwday","type":"instance_method","visibility":"public"},"Date#cweek":{"description":"Returns the calendar week number (1-53).\n\n   Date.new(2001,2,3).cweek\t\t#=> 5","name":"cweek","namespace":"Date","path":"Date#cweek","type":"instance_method","visibility":"public"},"Date#cwyear":{"description":"Returns the calendar week based year.\n\n   Date.new(2001,2,3).cwyear\t\t#=> 2001\n   Date.new(2000,1,1).cwyear\t\t#=> 1999","name":"cwyear","namespace":"Date","path":"Date#cwyear","type":"instance_method","visibility":"public"},"Date#day":{"description":"Returns the day of the month (1-31).\n\n   Date.new(2001,2,3).mday\t\t#=> 3","name":"day","namespace":"Date","path":"Date#day","type":"instance_method","visibility":"public"},"Date#day_fraction":{"description":"Returns the fractional part of the day.\n\n   DateTime.new(2001,2,3,12).day_fraction\t#=> (1/2)","name":"day_fraction","namespace":"Date","path":"Date#day_fraction","type":"instance_method","visibility":"public"},"Date#downto":{"description":"This method is equivalent to step(min, -1){|date| ...}.","name":"downto","namespace":"Date","path":"Date#downto","type":"instance_method","visibility":"public"},"Date#england":{"description":"This method is equivalent to new_start(Date::ENGLAND).","name":"england","namespace":"Date","path":"Date#england","type":"instance_method","visibility":"public"},"Date#eql?":{"description":":nodoc:","name":"eql?","namespace":"Date","path":"Date#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#friday?":{"description":"Returns true if the date is Friday.","name":"friday?","namespace":"Date","path":"Date#friday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#gregorian":{"description":"This method is equivalent to new_start(Date::GREGORIAN).","name":"gregorian","namespace":"Date","path":"Date#gregorian","type":"instance_method","visibility":"public"},"Date#gregorian?":{"description":"Retunrs true if the date is on or after the day of calendar reform.\n\n    Date.new(1582,10,15).gregorian?\t\t#=> true\n    (Date.new(1582,10,15) - 1).gregorian?\t#=> false","name":"gregorian?","namespace":"Date","path":"Date#gregorian?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#hash":{"description":":nodoc:","name":"hash","namespace":"Date","path":"Date#hash","type":"instance_method","visibility":"public"},"Date#hour":{"description":"Returns the hour (0-23).\n\n   DateTime.new(2001,2,3,4,5,6).hour\t\t#=> 4","name":"hour","namespace":"Date","path":"Date#hour","type":"instance_method","visibility":"private"},"Date#httpdate":{"description":"This method is equivalent to strftime('%a, %d %b %Y %T GMT').\nSee also RFC 2616.","name":"httpdate","namespace":"Date","path":"Date#httpdate","type":"instance_method","visibility":"public"},"Date#initialize_copy":{"description":":nodoc:","name":"initialize_copy","namespace":"Date","path":"Date#initialize_copy","type":"instance_method","visibility":"public"},"Date#inspect":{"description":"Returns the value as a string for inspection.\n\n   Date.new(2001,2,3).inspect\n\t#=> \"#<Date: 2001-02-03 ((2451944j,0s,0n),+0s,2299161j)>\"\n   DateTime.new(2001,2,3,4,5,6,'-7').inspect\n\t#=> \"#<DateTime: 2001-02-03T04:05:06-07:00 ((2451944j,39906s,0n),-25200s,2299161j)>\"","name":"inspect","namespace":"Date","path":"Date#inspect","type":"instance_method","visibility":"public"},"Date#iso8601":{"description":"This method is equivalent to strftime('%F').","name":"iso8601","namespace":"Date","path":"Date#iso8601","type":"instance_method","visibility":"public"},"Date#italy":{"description":"This method is equivalent to new_start(Date::ITALY).","name":"italy","namespace":"Date","path":"Date#italy","type":"instance_method","visibility":"public"},"Date#jd":{"description":"Returns the Julian day number.  This is a whole number, which is\nadjusted by the offset as the local time.\n\n   DateTime.new(2001,2,3,4,5,6,'+7').jd\t#=> 2451944\n   DateTime.new(2001,2,3,4,5,6,'-7').jd\t#=> 2451944","name":"jd","namespace":"Date","path":"Date#jd","type":"instance_method","visibility":"public"},"Date#jisx0301":{"description":"Returns a string in a JIS X 0301 format.\n\n   Date.new(2001,2,3).jisx0301\t#=> \"H13.02.03\"","name":"jisx0301","namespace":"Date","path":"Date#jisx0301","type":"instance_method","visibility":"public"},"Date#julian":{"description":"This method is equivalent to new_start(Date::JULIAN).","name":"julian","namespace":"Date","path":"Date#julian","type":"instance_method","visibility":"public"},"Date#julian?":{"description":"Retruns true if the date is before the day of calendar reform.\n\n    Date.new(1582,10,15).julian?\t\t#=> false\n    (Date.new(1582,10,15) - 1).julian?\t#=> true","name":"julian?","namespace":"Date","path":"Date#julian?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#ld":{"description":"Returns the Lilian day number.  This is a whole number, which is\nadjusted by the offset as the local time.\n\n    Date.new(2001,2,3).ld\t\t#=> 152784","name":"ld","namespace":"Date","path":"Date#ld","type":"instance_method","visibility":"public"},"Date#leap?":{"description":"Returns true if the year is a leap year.\n\n   Date.new(2000).leap?\t#=> true\n   Date.new(2001).leap?\t#=> false","name":"leap?","namespace":"Date","path":"Date#leap?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#marshal_dump":{"description":":nodoc:","name":"marshal_dump","namespace":"Date","path":"Date#marshal_dump","type":"instance_method","visibility":"public"},"Date#marshal_load":{"description":":nodoc:","name":"marshal_load","namespace":"Date","path":"Date#marshal_load","type":"instance_method","visibility":"public"},"Date#mday":{"description":"Returns the day of the month (1-31).\n\n   Date.new(2001,2,3).mday\t\t#=> 3","name":"mday","namespace":"Date","path":"Date#mday","type":"instance_method","visibility":"public"},"Date#min":{"description":"Returns the minute (0-59).\n\n   DateTime.new(2001,2,3,4,5,6).min\t\t#=> 5","name":"min","namespace":"Date","path":"Date#min","type":"instance_method","visibility":"private"},"Date#minute":{"description":"Returns the minute (0-59).\n\n   DateTime.new(2001,2,3,4,5,6).min\t\t#=> 5","name":"minute","namespace":"Date","path":"Date#minute","type":"instance_method","visibility":"private"},"Date#mjd":{"description":"Returns the modified Julian day number.  This is a whole number,\nwhich is adjusted by the offset as the local time.\n\n   DateTime.new(2001,2,3,4,5,6,'+7').mjd\t#=> 51943\n   DateTime.new(2001,2,3,4,5,6,'-7').mjd\t#=> 51943","name":"mjd","namespace":"Date","path":"Date#mjd","type":"instance_method","visibility":"public"},"Date#mon":{"description":"Returns the month (1-12).\n\n   Date.new(2001,2,3).mon\t\t#=> 2","name":"mon","namespace":"Date","path":"Date#mon","type":"instance_method","visibility":"public"},"Date#monday?":{"description":"Returns true if the date is Monday.","name":"monday?","namespace":"Date","path":"Date#monday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#month":{"description":"Returns the month (1-12).\n\n   Date.new(2001,2,3).mon\t\t#=> 2","name":"month","namespace":"Date","path":"Date#month","type":"instance_method","visibility":"public"},"Date#new_offset":{"description":"Duplicates self and resets its offset.\n\n   d = DateTime.new(2001,2,3,4,5,6,'-02:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06-02:00 ...>\n   d.new_offset('+09:00')\t#=> #<DateTime: 2001-02-03T15:05:06+09:00 ...>","name":"new_offset","namespace":"Date","path":"Date#new_offset","type":"instance_method","visibility":"private"},"Date#new_start":{"description":"Duplicates self and resets its the day of calendar reform.\n\n   d = Date.new(1582,10,15)\n   d.new_start(Date::JULIAN)\t\t#=> #<Date: 1582-10-05 ...>","name":"new_start","namespace":"Date","path":"Date#new_start","type":"instance_method","visibility":"public"},"Date#next":{"description":"Returns a date object denoting the following day.","name":"next","namespace":"Date","path":"Date#next","type":"instance_method","visibility":"public"},"Date#next_day":{"description":"This method is equivalent to d + n.","name":"next_day","namespace":"Date","path":"Date#next_day","type":"instance_method","visibility":"public"},"Date#next_month":{"description":"This method is equivalent to d >> n","name":"next_month","namespace":"Date","path":"Date#next_month","type":"instance_method","visibility":"public"},"Date#next_year":{"description":"This method is equivalent to d >> (n * 12)","name":"next_year","namespace":"Date","path":"Date#next_year","type":"instance_method","visibility":"public"},"Date#offset":{"description":"Returns the offset.\n\n   DateTime.parse('04pm+0730').offset\t#=> (5/16)","name":"offset","namespace":"Date","path":"Date#offset","type":"instance_method","visibility":"private"},"Date#prev_day":{"description":"This method is equivalent to d - n.","name":"prev_day","namespace":"Date","path":"Date#prev_day","type":"instance_method","visibility":"public"},"Date#prev_month":{"description":"This method is equivalent to d << n","name":"prev_month","namespace":"Date","path":"Date#prev_month","type":"instance_method","visibility":"public"},"Date#prev_year":{"description":"This method is equivalent to d << (n * 12)","name":"prev_year","namespace":"Date","path":"Date#prev_year","type":"instance_method","visibility":"public"},"Date#rfc2822":{"description":"This method is equivalent to strftime('%a, %-d %b %Y %T %z').","name":"rfc2822","namespace":"Date","path":"Date#rfc2822","type":"instance_method","visibility":"public"},"Date#rfc3339":{"description":"This method is equivalent to strftime('%FT%T%:z').","name":"rfc3339","namespace":"Date","path":"Date#rfc3339","type":"instance_method","visibility":"public"},"Date#rfc822":{"description":"This method is equivalent to strftime('%a, %-d %b %Y %T %z').","name":"rfc822","namespace":"Date","path":"Date#rfc822","type":"instance_method","visibility":"public"},"Date#saturday?":{"description":"Returns true if the date is Saturday.","name":"saturday?","namespace":"Date","path":"Date#saturday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#sec":{"description":"Returns the second (0-59).\n\n   DateTime.new(2001,2,3,4,5,6).sec\t\t#=> 6","name":"sec","namespace":"Date","path":"Date#sec","type":"instance_method","visibility":"private"},"Date#sec_fraction":{"description":"Returns the fractional part of the second.\n\n   DateTime.new(2001,2,3,4,5,6.5).sec_fraction\t#=> (1/2)","name":"sec_fraction","namespace":"Date","path":"Date#sec_fraction","type":"instance_method","visibility":"private"},"Date#second":{"description":"Returns the second (0-59).\n\n   DateTime.new(2001,2,3,4,5,6).sec\t\t#=> 6","name":"second","namespace":"Date","path":"Date#second","type":"instance_method","visibility":"private"},"Date#second_fraction":{"description":"Returns the fractional part of the second.\n\n   DateTime.new(2001,2,3,4,5,6.5).sec_fraction\t#=> (1/2)","name":"second_fraction","namespace":"Date","path":"Date#second_fraction","type":"instance_method","visibility":"private"},"Date#start":{"description":"Returns the Julian day number denoting the day of calendar reform.\n\n   Date.new(2001,2,3).start\t\t\t#=> 2299161.0\n   Date.new(2001,2,3,Date::GREGORIAN).start\t#=> -Infinity","name":"start","namespace":"Date","path":"Date#start","type":"instance_method","visibility":"public"},"Date#step":{"description":"Iterates evaluation of the given block, which takes a date object.\nThe limit should be a date object.\n\n   Date.new(2001).step(Date.new(2001,-1,-1)).select{|d| d.sunday?}.size\n\t\t\t#=> 52","name":"step","namespace":"Date","path":"Date#step","type":"instance_method","visibility":"public"},"Date#strftime":{"description":"Formats date according to the directives in the given format\n string.\n The directives begins with a percent (%) character.\n Any text not listed as a directive will be passed through to the\n output string.\n\n The directive consists of a percent (%) character,\n zero or more flags, optional minimum field width,\n optional modifier and a conversion specifier\n as follows.\n\n   %<flags><width><modifier><conversion>\n\n Flags:\n   -  don't pad a numerical output.\n   _  use spaces for padding.\n   0  use zeros for padding.\n   ^  upcase the result string.\n   #  change case.\n\n The minimum field width specifies the minimum width.\n\n The modifiers are \"E\", \"O\", \":\", \"::\" and \":::\".\n \"E\" and \"O\" are ignored.  No effect to result currently.\n\n Format directives:\n\n   Date (Year, Month, Day):\n     %Y - Year with century (can be negative, 4 digits at least)\n             -0001, 0000, 1995, 2009, 14292, etc.\n     %C - year / 100 (round down.  20 in 2009)\n     %y - year % 100 (00..99)\n\n     %m - Month of the year, zero-padded (01..12)\n             %_m  blank-padded ( 1..12)\n             %-m  no-padded (1..12)\n     %B - The full month name (``January'')\n             %^B  uppercased (``JANUARY'')\n     %b - The abbreviated month name (``Jan'')\n             %^b  uppercased (``JAN'')\n     %h - Equivalent to %b\n\n     %d - Day of the month, zero-padded (01..31)\n             %-d  no-padded (1..31)\n     %e - Day of the month, blank-padded ( 1..31)\n\n     %j - Day of the year (001..366)\n\n   Time (Hour, Minute, Second, Subsecond):\n     %H - Hour of the day, 24-hour clock, zero-padded (00..23)\n     %k - Hour of the day, 24-hour clock, blank-padded ( 0..23)\n     %I - Hour of the day, 12-hour clock, zero-padded (01..12)\n     %l - Hour of the day, 12-hour clock, blank-padded ( 1..12)\n     %P - Meridian indicator, lowercase (``am'' or ``pm'')\n     %p - Meridian indicator, uppercase (``AM'' or ``PM'')\n\n     %M - Minute of the hour (00..59)\n\n     %S - Second of the minute (00..59)\n\n     %L - Millisecond of the second (000..999)\n     %N - Fractional seconds digits, default is 9 digits (nanosecond)\n             %3N  millisecond (3 digits)   %15N femtosecond (15 digits)\n             %6N  microsecond (6 digits)   %18N attosecond  (18 digits)\n             %9N  nanosecond  (9 digits)   %21N zeptosecond (21 digits)\n             %12N picosecond (12 digits)   %24N yoctosecond (24 digits)\n\n   Time zone:\n     %z - Time zone as hour and minute offset from UTC (e.g. +0900)\n             %:z - hour and minute offset from UTC with a colon (e.g. +09:00)\n             %::z - hour, minute and second offset from UTC (e.g. +09:00:00)\n             %:::z - hour, minute and second offset from UTC\n                                               (e.g. +09, +09:30, +09:30:30)\n     %Z - Time zone abbreviation name or something similar information.\n\n   Weekday:\n     %A - The full weekday name (``Sunday'')\n             %^A  uppercased (``SUNDAY'')\n     %a - The abbreviated name (``Sun'')\n             %^a  uppercased (``SUN'')\n     %u - Day of the week (Monday is 1, 1..7)\n     %w - Day of the week (Sunday is 0, 0..6)\n\n   ISO 8601 week-based year and week number:\n   The week 1 of YYYY starts with a Monday and includes YYYY-01-04.\n   The days in the year before the first week are in the last week of\n   the previous year.\n     %G - The week-based year\n     %g - The last 2 digits of the week-based year (00..99)\n     %V - Week number of the week-based year (01..53)\n\n   Week number:\n   The week 1 of YYYY starts with a Sunday or Monday (according to %U\n   or %W).  The days in the year before the first week are in week 0.\n     %U - Week number of the year.  The week starts with Sunday.  (00..53)\n     %W - Week number of the year.  The week starts with Monday.  (00..53)\n\n   Seconds since the Unix Epoch:\n     %s - Number of seconds since 1970-01-01 00:00:00 UTC.\n     %Q - Number of milliseconds since 1970-01-01 00:00:00 UTC.\n\n   Literal string:\n     %n - Newline character (\\n)\n     %t - Tab character (\\t)\n     %% - Literal ``%'' character\n\n   Combination:\n     %c - date and time (%a %b %e %T %Y)\n     %D - Date (%m/%d/%y)\n     %F - The ISO 8601 date format (%Y-%m-%d)\n     %v - VMS date (%e-%b-%Y)\n     %x - Same as %D\n     %X - Same as %T\n     %r - 12-hour time (%I:%M:%S %p)\n     %R - 24-hour time (%H:%M)\n     %T - 24-hour time (%H:%M:%S)\n     %+ - date(1) (%a %b %e %H:%M:%S %Z %Y)\n\n This method is similar to strftime() function defined in ISO C and POSIX.\n Several directives (%a, %A, %b, %B, %c, %p, %r, %x, %X, %E*, %O* and %Z)\n are locale dependent in the function.\n However this method is locale independent.\n So, the result may differ even if a same format string is used in other\n systems such as C.\n It is good practice to avoid %x and %X because there are corresponding\n locale independent representations, %D and %T.\n\n Examples:\n\n   d = DateTime.new(2007,11,19,8,37,48,\"-06:00\")\n\t\t\t#=> #<DateTime: 2007-11-19T08:37:48-0600 ...>\n   d.strftime(\"Printed on %m/%d/%Y\")   #=> \"Printed on 11/19/2007\"\n   d.strftime(\"at %I:%M%p\")            #=> \"at 08:37AM\"\n\n Various ISO 8601 formats:\n   %Y%m%d           => 20071119                  Calendar date (basic)\n   %F               => 2007-11-19                Calendar date (extended)\n   %Y-%m            => 2007-11                   Calendar date, reduced accuracy, specific month\n   %Y               => 2007                      Calendar date, reduced accuracy, specific year\n   %C               => 20                        Calendar date, reduced accuracy, specific century\n   %Y%j             => 2007323                   Ordinal date (basic)\n   %Y-%j            => 2007-323                  Ordinal date (extended)\n   %GW%V%u          => 2007W471                  Week date (basic)\n   %G-W%V-%u        => 2007-W47-1                Week date (extended)\n   %GW%V            => 2007W47                   Week date, reduced accuracy, specific week (basic)\n   %G-W%V           => 2007-W47                  Week date, reduced accuracy, specific week (extended)\n   %H%M%S           => 083748                    Local time (basic)\n   %T               => 08:37:48                  Local time (extended)\n   %H%M             => 0837                      Local time, reduced accuracy, specific minute (basic)\n   %H:%M            => 08:37                     Local time, reduced accuracy, specific minute (extended)\n   %H               => 08                        Local time, reduced accuracy, specific hour\n   %H%M%S,%L        => 083748,000                Local time with decimal fraction, comma as decimal sign (basic)\n   %T,%L            => 08:37:48,000              Local time with decimal fraction, comma as decimal sign (extended)\n   %H%M%S.%L        => 083748.000                Local time with decimal fraction, full stop as decimal sign (basic)\n   %T.%L            => 08:37:48.000              Local time with decimal fraction, full stop as decimal sign (extended)\n   %H%M%S%z         => 083748-0600               Local time and the difference from UTC (basic)\n   %T%:z            => 08:37:48-06:00            Local time and the difference from UTC (extended)\n   %Y%m%dT%H%M%S%z  => 20071119T083748-0600      Date and time of day for calendar date (basic)\n   %FT%T%:z         => 2007-11-19T08:37:48-06:00 Date and time of day for calendar date (extended)\n   %Y%jT%H%M%S%z    => 2007323T083748-0600       Date and time of day for ordinal date (basic)\n   %Y-%jT%T%:z      => 2007-323T08:37:48-06:00   Date and time of day for ordinal date (extended)\n   %GW%V%uT%H%M%S%z => 2007W471T083748-0600      Date and time of day for week date (basic)\n   %G-W%V-%uT%T%:z  => 2007-W47-1T08:37:48-06:00 Date and time of day for week date (extended)\n   %Y%m%dT%H%M      => 20071119T0837             Calendar date and local time (basic)\n   %FT%R            => 2007-11-19T08:37          Calendar date and local time (extended)\n   %Y%jT%H%MZ       => 2007323T0837Z             Ordinal date and UTC of day (basic)\n   %Y-%jT%RZ        => 2007-323T08:37Z           Ordinal date and UTC of day (extended)\n   %GW%V%uT%H%M%z   => 2007W471T0837-0600        Week date and local time and difference from UTC (basic)\n   %G-W%V-%uT%R%:z  => 2007-W47-1T08:37-06:00    Week date and local time and difference from UTC (extended)\n\nSee also strftime(3) and strptime.","name":"strftime","namespace":"Date","path":"Date#strftime","type":"instance_method","visibility":"public"},"Date#succ":{"description":"Returns a date object denoting the following day.","name":"succ","namespace":"Date","path":"Date#succ","type":"instance_method","visibility":"public"},"Date#sunday?":{"description":"Returns true if the date is Sunday.","name":"sunday?","namespace":"Date","path":"Date#sunday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#thursday?":{"description":"Returns true if the date is Thursday.","name":"thursday?","namespace":"Date","path":"Date#thursday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#to_date":{"description":"Returns self;","name":"to_date","namespace":"Date","path":"Date#to_date","type":"instance_method","visibility":"public"},"Date#to_datetime":{"description":"Returns a DateTime object which denotes self.","name":"to_datetime","namespace":"Date","path":"Date#to_datetime","type":"instance_method","visibility":"public"},"Date#to_json":{"description":"Stores class name (Date) with Julian year <tt>y</tt>, month <tt>m</tt>, day\n<tt>d</tt> and Day of Calendar Reform <tt>sg</tt> as JSON string","name":"to_json","namespace":"Date","path":"Date#to_json","type":"instance_method","visibility":"public"},"Date#to_s":{"description":"Returns a string in an ISO 8601 format (This method doesn't use the\nexpanded representations).\n\n    Date.new(2001,2,3).to_s\t#=> \"2001-02-03\"","name":"to_s","namespace":"Date","path":"Date#to_s","type":"instance_method","visibility":"public"},"Date#to_time":{"description":"Returns a Time object which denotes self.","name":"to_time","namespace":"Date","path":"Date#to_time","type":"instance_method","visibility":"public"},"Date#tuesday?":{"description":"Returns true if the date is Tuesday.","name":"tuesday?","namespace":"Date","path":"Date#tuesday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#upto":{"description":"This method is equivalent to step(max, 1){|date| ...}.","name":"upto","namespace":"Date","path":"Date#upto","type":"instance_method","visibility":"public"},"Date#wday":{"description":"Returns the day of week (0-6, Sunday is zero).\n\n   Date.new(2001,2,3).wday\t\t#=> 6","name":"wday","namespace":"Date","path":"Date#wday","type":"instance_method","visibility":"public"},"Date#wednesday?":{"description":"Returns true if the date is Wednesday.","name":"wednesday?","namespace":"Date","path":"Date#wednesday?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date#xmlschema":{"description":"This method is equivalent to strftime('%F').","name":"xmlschema","namespace":"Date","path":"Date#xmlschema","type":"instance_method","visibility":"public"},"Date#yday":{"description":"Returns the day of the year (1-366).\n\n   Date.new(2001,2,3).yday\t\t#=> 34","name":"yday","namespace":"Date","path":"Date#yday","type":"instance_method","visibility":"public"},"Date#year":{"description":"Returns the year.\n\n   Date.new(2001,2,3).year\t\t#=> 2001\n   (Date.new(1,1,1) - 1).year\t#=> 0","name":"year","namespace":"Date","path":"Date#year","type":"instance_method","visibility":"public"},"Date#zone":{"description":"Returns the timezone.\n\n   DateTime.parse('04pm+0730').zone\t\t#=> \"+07:30\"","name":"zone","namespace":"Date","path":"Date#zone","type":"instance_method","visibility":"private"},"Date._httpdate":{"description":"Returns a hash of parsed elements.","name":"_httpdate","namespace":"Date","path":"Date._httpdate","type":"class_method","visibility":"public"},"Date._iso8601":{"description":"Returns a hash of parsed elements.","name":"_iso8601","namespace":"Date","path":"Date._iso8601","type":"class_method","visibility":"public"},"Date._jisx0301":{"description":"Returns a hash of parsed elements.","name":"_jisx0301","namespace":"Date","path":"Date._jisx0301","type":"class_method","visibility":"public"},"Date._load":{"description":":nodoc:","name":"_load","namespace":"Date","path":"Date._load","type":"class_method","visibility":"public"},"Date._parse":{"description":"Parses the given representation of date and time, and returns a\nhash of parsed elements.  This method does not function as a\nvalidator.\n\nIf the optional second argument is true and the detected year is in\nthe range \"00\" to \"99\", considers the year a 2-digit form and makes\nit full.\n\n   Date._parse('2001-02-03')\t#=> {:year=>2001, :mon=>2, :mday=>3}","name":"_parse","namespace":"Date","path":"Date._parse","type":"class_method","visibility":"public"},"Date._rfc2822":{"description":"Returns a hash of parsed elements.","name":"_rfc2822","namespace":"Date","path":"Date._rfc2822","type":"class_method","visibility":"public"},"Date._rfc3339":{"description":"Returns a hash of parsed elements.","name":"_rfc3339","namespace":"Date","path":"Date._rfc3339","type":"class_method","visibility":"public"},"Date._rfc822":{"description":"Returns a hash of parsed elements.","name":"_rfc822","namespace":"Date","path":"Date._rfc822","type":"class_method","visibility":"public"},"Date._strptime":{"description":"Parses the given representation of date and time with the given\ntemplate, and returns a hash of parsed elements.  _strptime does\nnot support specification of flags and width unlike strftime.\n\n   Date._strptime('2001-02-03', '%Y-%m-%d')\n\t\t\t#=> {:year=>2001, :mon=>2, :mday=>3}\n\n See also strptime(3) and strftime.","name":"_strptime","namespace":"Date","path":"Date._strptime","type":"class_method","visibility":"public"},"Date._xmlschema":{"description":"Returns a hash of parsed elements.","name":"_xmlschema","namespace":"Date","path":"Date._xmlschema","type":"class_method","visibility":"public"},"Date.civil":{"description":"Creates a date object denoting the given calendar date.\n\nIn this class, BCE years are counted astronomically.  Thus, the\nyear before the year 1 is the year zero, and the year preceding the\nyear zero is the year -1.  The month and the day of month should be\na negative or a positive number (as a relative month/day from the\nend of year/month when negative).  They should not be zero.\n\nThe last argument should be a Julian day number which denotes the\nday of calendar reform.  Date::ITALY (2299161=1582-10-15),\nDate::ENGLAND (2361222=1752-09-14), Date::GREGORIAN (the proleptic\nGregorian calendar) and Date::JULIAN (the proleptic Julian\ncalendar) can be specified as a day of calendar reform.\n\n   Date.new(2001)\t\t#=> #<Date: 2001-01-01 ...>\n   Date.new(2001,2,3)\t#=> #<Date: 2001-02-03 ...>\n   Date.new(2001,2,-1)\t#=> #<Date: 2001-02-28 ...>\n\nSee also jd.","name":"civil","namespace":"Date","path":"Date.civil","type":"class_method","visibility":"public"},"Date.commercial":{"description":"Creates a date object denoting the given week date.\n\nThe week and the day of week should be a negative or a positive\nnumber (as a relative week/day from the end of year/week when\nnegative).  They should not be zero.\n\n   Date.commercial(2001)\t#=> #<Date: 2001-01-01 ...>\n   Date.commercial(2002)\t#=> #<Date: 2001-12-31 ...>\n   Date.commercial(2001,5,6)\t#=> #<Date: 2001-02-03 ...>\n\nSee also jd and new.","name":"commercial","namespace":"Date","path":"Date.commercial","type":"class_method","visibility":"public"},"Date.gregorian_leap?":{"description":"Returns true if the given year is a leap year of the proleptic\nGregorian calendar.\n\n   Date.gregorian_leap?(1900)\t#=> false\n   Date.gregorian_leap?(2000)\t#=> true","name":"gregorian_leap?","namespace":"Date","path":"Date.gregorian_leap?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.httpdate":{"description":"Creates a new Date object by parsing from a string according to\nsome RFC 2616 format.\n\n   Date.httpdate('Sat, 03 Feb 2001 00:00:00 GMT')\n\t\t\t\t\t#=> #<Date: 2001-02-03 ...>","name":"httpdate","namespace":"Date","path":"Date.httpdate","type":"class_method","visibility":"public"},"Date.iso8601":{"description":"Creates a new Date object by parsing from a string according to\nsome typical ISO 8601 formats.\n\n   Date.iso8601('2001-02-03')\t#=> #<Date: 2001-02-03 ...>\n   Date.iso8601('20010203')\t\t#=> #<Date: 2001-02-03 ...>\n   Date.iso8601('2001-W05-6')\t#=> #<Date: 2001-02-03 ...>","name":"iso8601","namespace":"Date","path":"Date.iso8601","type":"class_method","visibility":"public"},"Date.jd":{"description":"Creates a date object denoting the given chronological Julian day\nnumber.\n\n   Date.jd(2451944)\t\t#=> #<Date: 2001-02-03 ...>\n   Date.jd(2451945)\t\t#=> #<Date: 2001-02-04 ...>\n   Date.jd(0)\t\t#=> #<Date: -4712-01-01 ...>\n\nSee also new.","name":"jd","namespace":"Date","path":"Date.jd","type":"class_method","visibility":"public"},"Date.jisx0301":{"description":"Creates a new Date object by parsing from a string according to\nsome typical JIS X 0301 formats.\n\n   Date.jisx0301('H13.02.03')\t\t#=> #<Date: 2001-02-03 ...>","name":"jisx0301","namespace":"Date","path":"Date.jisx0301","type":"class_method","visibility":"public"},"Date.json_create":{"description":"Deserializes JSON string by converting Julian year <tt>y</tt>, month\n<tt>m</tt>, day <tt>d</tt> and Day of Calendar Reform <tt>sg</tt> to Date.","name":"json_create","namespace":"Date","path":"Date.json_create","type":"class_method","visibility":"public"},"Date.julian_leap?":{"description":"Returns true if the given year is a leap year of the proleptic\nJulian calendar.\n\n   Date.julian_leap?(1900)\t\t#=> true\n   Date.julian_leap?(1901)\t\t#=> false","name":"julian_leap?","namespace":"Date","path":"Date.julian_leap?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.leap?":{"description":"Returns true if the given year is a leap year of the proleptic\nGregorian calendar.\n\n   Date.gregorian_leap?(1900)\t#=> false\n   Date.gregorian_leap?(2000)\t#=> true","name":"leap?","namespace":"Date","path":"Date.leap?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.new":{"description":"Creates a date object denoting the given calendar date.\n\nIn this class, BCE years are counted astronomically.  Thus, the\nyear before the year 1 is the year zero, and the year preceding the\nyear zero is the year -1.  The month and the day of month should be\na negative or a positive number (as a relative month/day from the\nend of year/month when negative).  They should not be zero.\n\nThe last argument should be a Julian day number which denotes the\nday of calendar reform.  Date::ITALY (2299161=1582-10-15),\nDate::ENGLAND (2361222=1752-09-14), Date::GREGORIAN (the proleptic\nGregorian calendar) and Date::JULIAN (the proleptic Julian\ncalendar) can be specified as a day of calendar reform.\n\n   Date.new(2001)\t\t#=> #<Date: 2001-01-01 ...>\n   Date.new(2001,2,3)\t#=> #<Date: 2001-02-03 ...>\n   Date.new(2001,2,-1)\t#=> #<Date: 2001-02-28 ...>\n\nSee also jd.","name":"new","namespace":"Date","path":"Date.new","type":"class_method","visibility":"public"},"Date.ordinal":{"description":"Creates a date object denoting the given ordinal date.\n\nThe day of year should be a negative or a positive number (as a\nrelative day from the end of year when negative).  It should not be\nzero.\n\n   Date.ordinal(2001)\t#=> #<Date: 2001-01-01 ...>\n   Date.ordinal(2001,34)\t#=> #<Date: 2001-02-03 ...>\n   Date.ordinal(2001,-1)\t#=> #<Date: 2001-12-31 ...>\n\nSee also jd and new.","name":"ordinal","namespace":"Date","path":"Date.ordinal","type":"class_method","visibility":"public"},"Date.parse":{"description":"Parses the given representation of date and time, and creates a\ndate object.  This method does not function as a validator.\n\nIf the optional second argument is true and the detected year is in\nthe range \"00\" to \"99\", considers the year a 2-digit form and makes\nit full.\n\n   Date.parse('2001-02-03')\t\t#=> #<Date: 2001-02-03 ...>\n   Date.parse('20010203')\t\t#=> #<Date: 2001-02-03 ...>\n   Date.parse('3rd Feb 2001')\t#=> #<Date: 2001-02-03 ...>","name":"parse","namespace":"Date","path":"Date.parse","type":"class_method","visibility":"public"},"Date.rfc2822":{"description":"Creates a new Date object by parsing from a string according to\nsome typical RFC 2822 formats.\n\n   Date.rfc2822('Sat, 3 Feb 2001 00:00:00 +0000')\n\t\t\t\t\t#=> #<Date: 2001-02-03 ...>","name":"rfc2822","namespace":"Date","path":"Date.rfc2822","type":"class_method","visibility":"public"},"Date.rfc3339":{"description":"Creates a new Date object by parsing from a string according to\nsome typical RFC 3339 formats.\n\n   Date.rfc3339('2001-02-03T04:05:06+07:00')\t#=> #<Date: 2001-02-03 ...>","name":"rfc3339","namespace":"Date","path":"Date.rfc3339","type":"class_method","visibility":"public"},"Date.rfc822":{"description":"Creates a new Date object by parsing from a string according to\nsome typical RFC 2822 formats.\n\n   Date.rfc2822('Sat, 3 Feb 2001 00:00:00 +0000')\n\t\t\t\t\t#=> #<Date: 2001-02-03 ...>","name":"rfc822","namespace":"Date","path":"Date.rfc822","type":"class_method","visibility":"public"},"Date.strptime":{"description":"Parses the given representation of date and time with the given\ntemplate, and creates a date object.  strptime does not support\nspecification of flags and width unlike strftime.\n\n   Date.strptime('2001-02-03', '%Y-%m-%d')\t#=> #<Date: 2001-02-03 ...>\n   Date.strptime('03-02-2001', '%d-%m-%Y')\t#=> #<Date: 2001-02-03 ...>\n   Date.strptime('2001-034', '%Y-%j')\t#=> #<Date: 2001-02-03 ...>\n   Date.strptime('2001-W05-6', '%G-W%V-%u')\t#=> #<Date: 2001-02-03 ...>\n   Date.strptime('2001 04 6', '%Y %U %w')\t#=> #<Date: 2001-02-03 ...>\n   Date.strptime('2001 05 6', '%Y %W %u')\t#=> #<Date: 2001-02-03 ...>\n   Date.strptime('sat3feb01', '%a%d%b%y')\t#=> #<Date: 2001-02-03 ...>\n\nSee also strptime(3) and strftime.","name":"strptime","namespace":"Date","path":"Date.strptime","type":"class_method","visibility":"public"},"Date.today":{"description":"Date.today\t\t#=> #<Date: 2011-06-11 ..>\n\nCreates a date object denoting the present day.","name":"today","namespace":"Date","path":"Date.today","type":"class_method","visibility":"public"},"Date.valid_civil?":{"description":"Returns true if the given calendar date is valid, and false if not.\n\n   Date.valid_date?(2001,2,3)\t#=> true\n   Date.valid_date?(2001,2,29)\t#=> false\n\nSee also jd and civil.","name":"valid_civil?","namespace":"Date","path":"Date.valid_civil?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.valid_commercial?":{"description":"Returns true if the given week date is valid, and false if not.\n\n   Date.valid_commercial?(2001,5,6)\t#=> true\n   Date.valid_commercial?(2001,5,8)\t#=> false\n\nSee also jd and commercial.","name":"valid_commercial?","namespace":"Date","path":"Date.valid_commercial?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.valid_date?":{"description":"Returns true if the given calendar date is valid, and false if not.\n\n   Date.valid_date?(2001,2,3)\t#=> true\n   Date.valid_date?(2001,2,29)\t#=> false\n\nSee also jd and civil.","name":"valid_date?","namespace":"Date","path":"Date.valid_date?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.valid_jd?":{"description":"Just returns true.  It's nonsense, but is for symmetry.\n\n   Date.valid_jd?(2451944)\t\t#=> true\n\nSee also jd.","name":"valid_jd?","namespace":"Date","path":"Date.valid_jd?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.valid_ordinal?":{"description":"Returns true if the given ordinal date is valid, and false if not.\n\n   Date.valid_ordinal?(2001,34)\t#=> true\n   Date.valid_ordinal?(2001,366)\t#=> false\n\nSee also jd and ordinal.","name":"valid_ordinal?","namespace":"Date","path":"Date.valid_ordinal?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"Date.xmlschema":{"description":"Creates a new Date object by parsing from a string according to\nsome typical XML Schema formats.\n\n   Date.xmlschema('2001-02-03')\t#=> #<Date: 2001-02-03 ...>","name":"xmlschema","namespace":"Date","path":"Date.xmlschema","type":"class_method","visibility":"public"},"Date::ABBR_DAYNAMES":{"description":"An array of strings of abbreviated day names in English.  The\nfirst is \"Sun\".","name":"ABBR_DAYNAMES","namespace":"Date","path":"Date::ABBR_DAYNAMES","type":"constant","return":null,"visibility":"public"},"Date::ABBR_MONTHNAMES":{"description":"An array of strings of abbreviated month names in English.  The\nfirst element is nil.","name":"ABBR_MONTHNAMES","namespace":"Date","path":"Date::ABBR_MONTHNAMES","type":"constant","return":null,"visibility":"public"},"Date::DAYNAMES":{"description":"An array of strings of the full names of days of the week in English.\nThe first is \"Sunday\".","name":"DAYNAMES","namespace":"Date","path":"Date::DAYNAMES","type":"constant","return":null,"visibility":"public"},"Date::ENGLAND":{"description":"The Julian day number of the day of calendar reform for England\nand her colonies.","name":"ENGLAND","namespace":"Date","path":"Date::ENGLAND","type":"constant","return":null,"visibility":"public"},"Date::GREGORIAN":{"description":"The Julian day number of the day of calendar reform for the\nproleptic Gregorian calendar","name":"GREGORIAN","namespace":"Date","path":"Date::GREGORIAN","type":"constant","return":null,"visibility":"public"},"Date::ITALY":{"description":"The Julian day number of the day of calendar reform for Italy\nand some catholic countries.","name":"ITALY","namespace":"Date","path":"Date::ITALY","type":"constant","return":null,"visibility":"public"},"Date::Infinity":{"description":":nodoc:","name":"Infinity","namespace":"Date","path":"Date::Infinity","type":"class","visibility":"public"},"Date::Infinity#+@":{"description":"","name":"+@","namespace":"Date::Infinity","path":"Date::Infinity#+@","type":"instance_method","visibility":"public"},"Date::Infinity#-@":{"description":"","name":"-@","namespace":"Date::Infinity","path":"Date::Infinity#-@","type":"instance_method","visibility":"public"},"Date::Infinity#<=>":{"description":"","name":"<=>","namespace":"Date::Infinity","path":"Date::Infinity#<=>","type":"instance_method","visibility":"public"},"Date::Infinity#abs":{"description":"","name":"abs","namespace":"Date::Infinity","path":"Date::Infinity#abs","type":"instance_method","visibility":"public"},"Date::Infinity#coerce":{"description":"","name":"coerce","namespace":"Date::Infinity","path":"Date::Infinity#coerce","type":"instance_method","visibility":"public"},"Date::Infinity#d":{"description":"","name":"d","namespace":"Date::Infinity","path":"Date::Infinity#d","type":"instance_method","visibility":"protected"},"Date::Infinity#finite?":{"description":"","name":"finite?","namespace":"Date::Infinity","path":"Date::Infinity#finite?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date::Infinity#infinite?":{"description":"","name":"infinite?","namespace":"Date::Infinity","path":"Date::Infinity#infinite?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date::Infinity#initialize":{"description":"","name":"initialize","namespace":"Date::Infinity","path":"Date::Infinity#initialize","type":"instance_method","visibility":"public","return":[["Infinity"],"a new instance of Infinity"]},"Date::Infinity#nan?":{"description":"","name":"nan?","namespace":"Date::Infinity","path":"Date::Infinity#nan?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date::Infinity#to_f":{"description":"","name":"to_f","namespace":"Date::Infinity","path":"Date::Infinity#to_f","type":"instance_method","visibility":"public"},"Date::Infinity#zero?":{"description":"","name":"zero?","namespace":"Date::Infinity","path":"Date::Infinity#zero?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Date::JULIAN":{"description":"The Julian day number of the day of calendar reform for the\nproleptic Julian calendar","name":"JULIAN","namespace":"Date","path":"Date::JULIAN","type":"constant","return":null,"visibility":"public"},"Date::MONTHNAMES":{"description":"An array of strings of full month names in English.  The first\nelement is nil.","name":"MONTHNAMES","namespace":"Date","path":"Date::MONTHNAMES","type":"constant","return":null,"visibility":"public"},"DateTime":{"description":"DateTime serialization/deserialization","name":"DateTime","namespace":"","path":"DateTime","type":"class","visibility":"public"},"DateTime#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"DateTime","path":"DateTime#as_json","type":"instance_method","visibility":"public"},"DateTime#iso8601":{"description":"This method is equivalent to strftime('%FT%T').  The optional\nargument n is length of fractional seconds.\n\n   DateTime.parse('2001-02-03T04:05:06.123456789+07:00').iso8601(9)\n\t\t\t#=> \"2001-02-03T04:05:06.123456789+07:00\"","name":"iso8601","namespace":"DateTime","path":"DateTime#iso8601","type":"instance_method","visibility":"public"},"DateTime#jisx0301":{"description":"Returns a string in a JIS X 0301 format.  The optional argument n\nis length of fractional seconds.\n\n   DateTime.parse('2001-02-03T04:05:06.123456789+07:00').jisx0301(9)\n\t\t\t#=> \"H13.02.03T04:05:06.123456789+07:00\"","name":"jisx0301","namespace":"DateTime","path":"DateTime#jisx0301","type":"instance_method","visibility":"public"},"DateTime#rfc3339":{"description":"This method is equivalent to strftime('%FT%T').  The optional\nargument n is length of fractional seconds.\n\n   DateTime.parse('2001-02-03T04:05:06.123456789+07:00').rfc3339(9)\n\t\t\t#=> \"2001-02-03T04:05:06.123456789+07:00\"","name":"rfc3339","namespace":"DateTime","path":"DateTime#rfc3339","type":"instance_method","visibility":"public"},"DateTime#start":{"description":"","name":"start","namespace":"DateTime","path":"DateTime#start","type":"instance_method","visibility":"public"},"DateTime#strftime":{"description":"Formats date according to the directives in the given format\n string.\n The directives begins with a percent (%) character.\n Any text not listed as a directive will be passed through to the\n output string.\n\n The directive consists of a percent (%) character,\n zero or more flags, optional minimum field width,\n optional modifier and a conversion specifier\n as follows.\n\n   %<flags><width><modifier><conversion>\n\n Flags:\n   -  don't pad a numerical output.\n   _  use spaces for padding.\n   0  use zeros for padding.\n   ^  upcase the result string.\n   #  change case.\n   :  use colons for %z.\n\n The minimum field width specifies the minimum width.\n\n The modifier is \"E\" and \"O\".\n They are ignored.\n\n Format directives:\n\n   Date (Year, Month, Day):\n     %Y - Year with century (can be negative, 4 digits at least)\n             -0001, 0000, 1995, 2009, 14292, etc.\n     %C - year / 100 (round down.  20 in 2009)\n     %y - year % 100 (00..99)\n\n     %m - Month of the year, zero-padded (01..12)\n             %_m  blank-padded ( 1..12)\n             %-m  no-padded (1..12)\n     %B - The full month name (``January'')\n             %^B  uppercased (``JANUARY'')\n     %b - The abbreviated month name (``Jan'')\n             %^b  uppercased (``JAN'')\n     %h - Equivalent to %b\n\n     %d - Day of the month, zero-padded (01..31)\n             %-d  no-padded (1..31)\n     %e - Day of the month, blank-padded ( 1..31)\n\n     %j - Day of the year (001..366)\n\n   Time (Hour, Minute, Second, Subsecond):\n     %H - Hour of the day, 24-hour clock, zero-padded (00..23)\n     %k - Hour of the day, 24-hour clock, blank-padded ( 0..23)\n     %I - Hour of the day, 12-hour clock, zero-padded (01..12)\n     %l - Hour of the day, 12-hour clock, blank-padded ( 1..12)\n     %P - Meridian indicator, lowercase (``am'' or ``pm'')\n     %p - Meridian indicator, uppercase (``AM'' or ``PM'')\n\n     %M - Minute of the hour (00..59)\n\n     %S - Second of the minute (00..59)\n\n     %L - Millisecond of the second (000..999)\n     %N - Fractional seconds digits, default is 9 digits (nanosecond)\n             %3N  millisecond (3 digits)   %15N femtosecond (15 digits)\n             %6N  microsecond (6 digits)   %18N attosecond  (18 digits)\n             %9N  nanosecond  (9 digits)   %21N zeptosecond (21 digits)\n             %12N picosecond (12 digits)   %24N yoctosecond (24 digits)\n\n   Time zone:\n     %z - Time zone as hour and minute offset from UTC (e.g. +0900)\n             %:z - hour and minute offset from UTC with a colon (e.g. +09:00)\n             %::z - hour, minute and second offset from UTC (e.g. +09:00:00)\n             %:::z - hour, minute and second offset from UTC\n                                               (e.g. +09, +09:30, +09:30:30)\n     %Z - Time zone abbreviation name or something similar information.\n\n   Weekday:\n     %A - The full weekday name (``Sunday'')\n             %^A  uppercased (``SUNDAY'')\n     %a - The abbreviated name (``Sun'')\n             %^a  uppercased (``SUN'')\n     %u - Day of the week (Monday is 1, 1..7)\n     %w - Day of the week (Sunday is 0, 0..6)\n\n   ISO 8601 week-based year and week number:\n   The week 1 of YYYY starts with a Monday and includes YYYY-01-04.\n   The days in the year before the first week are in the last week of\n   the previous year.\n     %G - The week-based year\n     %g - The last 2 digits of the week-based year (00..99)\n     %V - Week number of the week-based year (01..53)\n\n   Week number:\n   The week 1 of YYYY starts with a Sunday or Monday (according to %U\n   or %W).  The days in the year before the first week are in week 0.\n     %U - Week number of the year.  The week starts with Sunday.  (00..53)\n     %W - Week number of the year.  The week starts with Monday.  (00..53)\n\n   Seconds since the Unix Epoch:\n     %s - Number of seconds since 1970-01-01 00:00:00 UTC.\n     %Q - Number of milliseconds since 1970-01-01 00:00:00 UTC.\n\n   Literal string:\n     %n - Newline character (\\n)\n     %t - Tab character (\\t)\n     %% - Literal ``%'' character\n\n   Combination:\n     %c - date and time (%a %b %e %T %Y)\n     %D - Date (%m/%d/%y)\n     %F - The ISO 8601 date format (%Y-%m-%d)\n     %v - VMS date (%e-%b-%Y)\n     %x - Same as %D\n     %X - Same as %T\n     %r - 12-hour time (%I:%M:%S %p)\n     %R - 24-hour time (%H:%M)\n     %T - 24-hour time (%H:%M:%S)\n     %+ - date(1) (%a %b %e %H:%M:%S %Z %Y)\n\n This method is similar to strftime() function defined in ISO C and POSIX.\n Several directives (%a, %A, %b, %B, %c, %p, %r, %x, %X, %E*, %O* and %Z)\n are locale dependent in the function.\n However this method is locale independent.\n So, the result may differ even if a same format string is used in other\n systems such as C.\n It is good practice to avoid %x and %X because there are corresponding\n locale independent representations, %D and %T.\n\n Examples:\n\n   d = DateTime.new(2007,11,19,8,37,48,\"-06:00\")\n\t\t\t#=> #<DateTime: 2007-11-19T08:37:48-0600 ...>\n   d.strftime(\"Printed on %m/%d/%Y\")   #=> \"Printed on 11/19/2007\"\n   d.strftime(\"at %I:%M%p\")            #=> \"at 08:37AM\"\n\n Various ISO 8601 formats:\n   %Y%m%d           => 20071119                  Calendar date (basic)\n   %F               => 2007-11-19                Calendar date (extended)\n   %Y-%m            => 2007-11                   Calendar date, reduced accuracy, specific month\n   %Y               => 2007                      Calendar date, reduced accuracy, specific year\n   %C               => 20                        Calendar date, reduced accuracy, specific century\n   %Y%j             => 2007323                   Ordinal date (basic)\n   %Y-%j            => 2007-323                  Ordinal date (extended)\n   %GW%V%u          => 2007W471                  Week date (basic)\n   %G-W%V-%u        => 2007-W47-1                Week date (extended)\n   %GW%V            => 2007W47                   Week date, reduced accuracy, specific week (basic)\n   %G-W%V           => 2007-W47                  Week date, reduced accuracy, specific week (extended)\n   %H%M%S           => 083748                    Local time (basic)\n   %T               => 08:37:48                  Local time (extended)\n   %H%M             => 0837                      Local time, reduced accuracy, specific minute (basic)\n   %H:%M            => 08:37                     Local time, reduced accuracy, specific minute (extended)\n   %H               => 08                        Local time, reduced accuracy, specific hour\n   %H%M%S,%L        => 083748,000                Local time with decimal fraction, comma as decimal sign (basic)\n   %T,%L            => 08:37:48,000              Local time with decimal fraction, comma as decimal sign (extended)\n   %H%M%S.%L        => 083748.000                Local time with decimal fraction, full stop as decimal sign (basic)\n   %T.%L            => 08:37:48.000              Local time with decimal fraction, full stop as decimal sign (extended)\n   %H%M%S%z         => 083748-0600               Local time and the difference from UTC (basic)\n   %T%:z            => 08:37:48-06:00            Local time and the difference from UTC (extended)\n   %Y%m%dT%H%M%S%z  => 20071119T083748-0600      Date and time of day for calendar date (basic)\n   %FT%T%:z         => 2007-11-19T08:37:48-06:00 Date and time of day for calendar date (extended)\n   %Y%jT%H%M%S%z    => 2007323T083748-0600       Date and time of day for ordinal date (basic)\n   %Y-%jT%T%:z      => 2007-323T08:37:48-06:00   Date and time of day for ordinal date (extended)\n   %GW%V%uT%H%M%S%z => 2007W471T083748-0600      Date and time of day for week date (basic)\n   %G-W%V-%uT%T%:z  => 2007-W47-1T08:37:48-06:00 Date and time of day for week date (extended)\n   %Y%m%dT%H%M      => 20071119T0837             Calendar date and local time (basic)\n   %FT%R            => 2007-11-19T08:37          Calendar date and local time (extended)\n   %Y%jT%H%MZ       => 2007323T0837Z             Ordinal date and UTC of day (basic)\n   %Y-%jT%RZ        => 2007-323T08:37Z           Ordinal date and UTC of day (extended)\n   %GW%V%uT%H%M%z   => 2007W471T0837-0600        Week date and local time and difference from UTC (basic)\n   %G-W%V-%uT%R%:z  => 2007-W47-1T08:37-06:00    Week date and local time and difference from UTC (extended)\n\nSee also strftime(3) and strptime.","name":"strftime","namespace":"DateTime","path":"DateTime#strftime","type":"instance_method","visibility":"public"},"DateTime#to_date":{"description":"Returns a Date object which denotes self.","name":"to_date","namespace":"DateTime","path":"DateTime#to_date","type":"instance_method","visibility":"public"},"DateTime#to_datetime":{"description":"Returns self.","name":"to_datetime","namespace":"DateTime","path":"DateTime#to_datetime","type":"instance_method","visibility":"public"},"DateTime#to_json":{"description":"Stores class name (DateTime) with Julian year <tt>y</tt>, month <tt>m</tt>,\nday <tt>d</tt>, hour <tt>H</tt>, minute <tt>M</tt>, second <tt>S</tt>,\noffset <tt>of</tt> and Day of Calendar Reform <tt>sg</tt> as JSON string","name":"to_json","namespace":"DateTime","path":"DateTime#to_json","type":"instance_method","visibility":"public"},"DateTime#to_s":{"description":"Returns a string in an ISO 8601 format (This method doesn't use the\nexpanded representations).\n\n    DateTime.new(2001,2,3,4,5,6,'-7').to_s\n\t\t\t#=> \"2001-02-03T04:05:06-07:00\"","name":"to_s","namespace":"DateTime","path":"DateTime#to_s","type":"instance_method","visibility":"public"},"DateTime#to_time":{"description":"Returns a Time object which denotes self.","name":"to_time","namespace":"DateTime","path":"DateTime#to_time","type":"instance_method","visibility":"public"},"DateTime#xmlschema":{"description":"This method is equivalent to strftime('%FT%T').  The optional\nargument n is length of fractional seconds.\n\n   DateTime.parse('2001-02-03T04:05:06.123456789+07:00').iso8601(9)\n\t\t\t#=> \"2001-02-03T04:05:06.123456789+07:00\"","name":"xmlschema","namespace":"DateTime","path":"DateTime#xmlschema","type":"instance_method","visibility":"public"},"DateTime._strptime":{"description":"Parses the given representation of date and time with the given\ntemplate, and returns a hash of parsed elements.  _strptime does\nnot support specification of flags and width unlike strftime.\n\n See also strptime(3) and strftime.","name":"_strptime","namespace":"DateTime","path":"DateTime._strptime","type":"class_method","visibility":"public"},"DateTime.civil":{"description":"Creates a date-time object denoting the given calendar date.\n\n   DateTime.new(2001,2,3)\t#=> #<DateTime: 2001-02-03T00:00:00+00:00 ...>\n   DateTime.new(2001,2,3,4,5,6,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.new(2001,-11,-26,-20,-55,-54,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"civil","namespace":"DateTime","path":"DateTime.civil","type":"class_method","visibility":"public"},"DateTime.commercial":{"description":"Creates a date-time object denoting the given week date.\n\n   DateTime.commercial(2001)\t#=> #<DateTime: 2001-01-01T00:00:00+00:00 ...>\n   DateTime.commercial(2002)\t#=> #<DateTime: 2001-12-31T00:00:00+00:00 ...>\n   DateTime.commercial(2001,5,6,4,5,6,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"commercial","namespace":"DateTime","path":"DateTime.commercial","type":"class_method","visibility":"public"},"DateTime.httpdate":{"description":"Creates a new Date object by parsing from a string according to\nsome RFC 2616 format.\n\n   DateTime.httpdate('Sat, 03 Feb 2001 04:05:06 GMT')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+00:00 ...>","name":"httpdate","namespace":"DateTime","path":"DateTime.httpdate","type":"class_method","visibility":"public"},"DateTime.iso8601":{"description":"Creates a new Date object by parsing from a string according to\nsome typical ISO 8601 formats.\n\n   DateTime.iso8601('2001-02-03T04:05:06+07:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.iso8601('20010203T040506+0700')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.iso8601('2001-W05-6T04:05:06+07:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"iso8601","namespace":"DateTime","path":"DateTime.iso8601","type":"class_method","visibility":"public"},"DateTime.jd":{"description":"Creates a datetime object denoting the given chronological Julian\nday number.\n\n   DateTime.jd(2451944)\t#=> #<DateTime: 2001-02-03T00:00:00+00:00 ...>\n   DateTime.jd(2451945)\t#=> #<DateTime: 2001-02-04T00:00:00+00:00 ...>\n   DateTime.jd(Rational('0.5'))\n\t\t\t\t#=> #<DateTime: -4712-01-01T12:00:00+00:00 ...>","name":"jd","namespace":"DateTime","path":"DateTime.jd","type":"class_method","visibility":"public"},"DateTime.jisx0301":{"description":"Creates a new Date object by parsing from a string according to\nsome typical JIS X 0301 formats.\n\n   DateTime.jisx0301('H13.02.03T04:05:06+07:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"jisx0301","namespace":"DateTime","path":"DateTime.jisx0301","type":"class_method","visibility":"public"},"DateTime.json_create":{"description":"Deserializes JSON string by converting year <tt>y</tt>, month <tt>m</tt>,\nday <tt>d</tt>, hour <tt>H</tt>, minute <tt>M</tt>, second <tt>S</tt>,\noffset <tt>of</tt> and Day of Calendar Reform <tt>sg</tt> to DateTime.","name":"json_create","namespace":"DateTime","path":"DateTime.json_create","type":"class_method","visibility":"public"},"DateTime.new":{"description":"Creates a date-time object denoting the given calendar date.\n\n   DateTime.new(2001,2,3)\t#=> #<DateTime: 2001-02-03T00:00:00+00:00 ...>\n   DateTime.new(2001,2,3,4,5,6,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.new(2001,-11,-26,-20,-55,-54,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"new","namespace":"DateTime","path":"DateTime.new","type":"class_method","visibility":"public"},"DateTime.now":{"description":"Creates a date-time object denoting the present time.\n\n   DateTime.now\t\t#=> #<DateTime: 2011-06-11T21:20:44+09:00 ...>","name":"now","namespace":"DateTime","path":"DateTime.now","type":"class_method","visibility":"public"},"DateTime.ordinal":{"description":"Creates a date-time object denoting the given ordinal date.\n\n   DateTime.ordinal(2001,34)\t#=> #<DateTime: 2001-02-03T00:00:00+00:00 ...>\n   DateTime.ordinal(2001,34,4,5,6,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.ordinal(2001,-332,-20,-55,-54,'+7')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"ordinal","namespace":"DateTime","path":"DateTime.ordinal","type":"class_method","visibility":"public"},"DateTime.parse":{"description":"Parses the given representation of date and time, and creates a\ndate object.  This method does not function as a validator.\n\nIf the optional second argument is true and the detected year is in\nthe range \"00\" to \"99\", makes it full.\n\n   DateTime.parse('2001-02-03T04:05:06+07:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.parse('20010203T040506+0700')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.parse('3rd Feb 2001 04:05:06 PM')\n\t\t\t#=> #<DateTime: 2001-02-03T16:05:06+00:00 ...>","name":"parse","namespace":"DateTime","path":"DateTime.parse","type":"class_method","visibility":"public"},"DateTime.rfc2822":{"description":"Creates a new Date object by parsing from a string according to\nsome typical RFC 2822 formats.\n\n    DateTime.rfc2822('Sat, 3 Feb 2001 04:05:06 +0700')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"rfc2822","namespace":"DateTime","path":"DateTime.rfc2822","type":"class_method","visibility":"public"},"DateTime.rfc3339":{"description":"Creates a new Date object by parsing from a string according to\nsome typical RFC 3339 formats.\n\n   DateTime.rfc3339('2001-02-03T04:05:06+07:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"rfc3339","namespace":"DateTime","path":"DateTime.rfc3339","type":"class_method","visibility":"public"},"DateTime.rfc822":{"description":"Creates a new Date object by parsing from a string according to\nsome typical RFC 2822 formats.\n\n    DateTime.rfc2822('Sat, 3 Feb 2001 04:05:06 +0700')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"rfc822","namespace":"DateTime","path":"DateTime.rfc822","type":"class_method","visibility":"public"},"DateTime.strptime":{"description":"Parses the given representation of date and time with the given\ntemplate, and creates a date object.  strptime does not support\nspecification of flags and width unlike strftime.\n\n   DateTime.strptime('2001-02-03T04:05:06+07:00', '%Y-%m-%dT%H:%M:%S%z')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.strptime('03-02-2001 04:05:06 PM', '%d-%m-%Y %I:%M:%S %p')\n\t\t\t#=> #<DateTime: 2001-02-03T16:05:06+00:00 ...>\n   DateTime.strptime('2001-W05-6T04:05:06+07:00', '%G-W%V-%uT%H:%M:%S%z')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.strptime('2001 04 6 04 05 06 +7', '%Y %U %w %H %M %S %z')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.strptime('2001 05 6 04 05 06 +7', '%Y %W %u %H %M %S %z')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>\n   DateTime.strptime('-1', '%s')\n\t\t\t#=> #<DateTime: 1969-12-31T23:59:59+00:00 ...>\n   DateTime.strptime('-1000', '%Q')\n\t\t\t#=> #<DateTime: 1969-12-31T23:59:59+00:00 ...>\n   DateTime.strptime('sat3feb014pm+7', '%a%d%b%y%H%p%z')\n\t\t\t#=> #<DateTime: 2001-02-03T16:00:00+07:00 ...>\n\nSee also strptime(3) and strftime.","name":"strptime","namespace":"DateTime","path":"DateTime.strptime","type":"class_method","visibility":"public"},"DateTime.xmlschema":{"description":"Creates a new Date object by parsing from a string according to\nsome typical XML Schema formats.\n\n   DateTime.xmlschema('2001-02-03T04:05:06+07:00')\n\t\t\t#=> #<DateTime: 2001-02-03T04:05:06+07:00 ...>","name":"xmlschema","namespace":"DateTime","path":"DateTime.xmlschema","type":"class_method","visibility":"public"},"Time":{"description":"Time serialization/deserialization","name":"Time","namespace":"","path":"Time","type":"class","visibility":"public"},"Time#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Time","path":"Time#as_json","type":"instance_method","visibility":"public"},"Time#to_date":{"description":"Returns a Date object which denotes self.","name":"to_date","namespace":"Time","path":"Time#to_date","type":"instance_method","visibility":"public"},"Time#to_datetime":{"description":"Returns a DateTime object which denotes self.","name":"to_datetime","namespace":"Time","path":"Time#to_datetime","type":"instance_method","visibility":"public"},"Time#to_json":{"description":"Stores class name (Time) with number of seconds since epoch and number of\nmicroseconds for Time as JSON string","name":"to_json","namespace":"Time","path":"Time#to_json","type":"instance_method","visibility":"public"},"Time#to_time":{"description":"Returns a copy of self as local mode.","name":"to_time","namespace":"Time","path":"Time#to_time","type":"instance_method","visibility":"public"},"Time.json_create":{"description":"Deserializes JSON string by converting time since epoch to Time","name":"json_create","namespace":"Time","path":"Time.json_create","type":"class_method","visibility":"public"},"Digest":{"description":"This module provides a framework for message digest libraries.\n\nYou may want to look at OpenSSL::Digest as it supports more algorithms.\n\nA cryptographic hash function is a procedure that takes data and returns a\nfixed bit string: the hash value, also known as _digest_. Hash functions\nare also called one-way functions, it is easy to compute a digest from\na message, but it is infeasible to generate a message from a digest.\n\n== Examples\n\n  require 'digest'\n\n  # Compute a complete digest\n  Digest::SHA256.digest 'message'       #=> \"\\xABS\\n\\x13\\xE4Y...\"\n\n  sha256 = Digest::SHA256.new\n  sha256.digest 'message'               #=> \"\\xABS\\n\\x13\\xE4Y...\"\n\n  # Other encoding formats\n  Digest::SHA256.hexdigest 'message'    #=> \"ab530a13e459...\"\n  Digest::SHA256.base64digest 'message' #=> \"q1MKE+RZFJgr...\"\n\n  # Compute digest by chunks\n  md5 = Digest::MD5.new\n  md5.update 'message1'\n  md5 << 'message2'                     # << is an alias for update\n\n  md5.hexdigest                         #=> \"94af09c09bb9...\"\n\n  # Compute digest for a file\n  sha256 = Digest::SHA256.file 'testfile'\n  sha256.hexdigest\n\nAdditionally digests can be encoded in \"bubble babble\" format as a sequence\nof consonants and vowels which is more recognizable and comparable than a\nhexadecimal digest.\n\n  require 'digest/bubblebabble'\n\n  Digest::SHA256.bubblebabble 'message' #=> \"xopoh-fedac-fenyh-...\"\n\nSee the bubble babble specification at\nhttp://web.mit.edu/kenta/www/one/bubblebabble/spec/jrtrjwzi/draft-huima-01.txt.\n\n== Digest algorithms\n\nDifferent digest algorithms (or hash functions) are available:\n\nHMAC::\n  See FIPS PUB 198 The Keyed-Hash Message Authentication Code (HMAC).\nRIPEMD-160::\n  As Digest::RMD160.\n  See http://homes.esat.kuleuven.be/~bosselae/ripemd160.html.\nSHA1::\n  See FIPS 180 Secure Hash Standard.\nSHA2 family::\n  See FIPS 180 Secure Hash Standard which defines the following algorithms:\n  * SHA512\n  * SHA384\n  * SHA256\n\nThe latest versions of the FIPS publications can be found here:\nhttp://csrc.nist.gov/publications/PubsFIPS.html.","name":"Digest","namespace":"","path":"Digest","type":"module","visibility":"public"},"Digest#<<":{"description":"Not every message digest can be computed in one single pass. If a message\ndigest is to be computed from several subsequent sources, then each may\nbe passed individually to the Digest instance.\n\n=== Example\n digest = OpenSSL::Digest::SHA256.new\n digest.update('First input')\n digest << 'Second input' # equivalent to digest.update('Second input')\n result = digest.digest","name":"<<","namespace":"Digest","path":"Digest#<<","type":"module_function","visibility":"public"},"Digest#block_length":{"description":"Returns the block length of the digest algorithm, i.e. the length in bytes\nof an individual block. Most modern algorithms partition a message to be\ndigested into a sequence of fix-sized blocks that are processed\nconsecutively.\n\n=== Example\n digest = OpenSSL::Digest::SHA1.new\n puts digest.block_length # => 64","name":"block_length","namespace":"Digest","path":"Digest#block_length","type":"module_function","visibility":"public"},"Digest#bubblebabble":{"description":"call-seq:\n    Digest.bubblebabble(string) -> bubblebabble_string\n\nReturns a BubbleBabble encoded version of a given _string_.","name":"bubblebabble","namespace":"Digest","path":"Digest#bubblebabble","type":"module_function","visibility":"private"},"Digest#digest_length":{"description":"Returns the output size of the digest, i.e. the length in bytes of the\nfinal message digest result.\n\n=== Example\n digest = OpenSSL::Digest::SHA1.new\n puts digest.digest_length # => 20","name":"digest_length","namespace":"Digest","path":"Digest#digest_length","type":"module_function","visibility":"public"},"Digest#finish":{"description":"","name":"finish","namespace":"Digest","path":"Digest#finish","type":"module_function","visibility":"private"},"Digest#hexencode":{"description":"Generates a hex-encoded version of a given _string_.","name":"hexencode","namespace":"Digest","path":"Digest#hexencode","type":"module_function","visibility":"private"},"Digest#initialize":{"description":"Creates a Digest instance based on +string+, which is either the ln\n(long name) or sn (short name) of a supported digest algorithm.\nIf +data+ (a +String+) is given, it is used as the initial input to the\nDigest instance, i.e.\n digest = OpenSSL::Digest.new('sha256', 'digestdata')\nis equal to\n digest = OpenSSL::Digest.new('sha256')\n digest.update('digestdata')\n\n=== Example\n digest = OpenSSL::Digest.new('sha1')","name":"initialize","namespace":"Digest","path":"Digest#initialize","type":"module_function","visibility":"public"},"Digest#name":{"description":"Returns the sn of this Digest instance.\n\n=== Example\n digest = OpenSSL::Digest::SHA512.new\n puts digest.name # => SHA512","name":"name","namespace":"Digest","path":"Digest#name","type":"module_function","visibility":"public"},"Digest#reset":{"description":"Resets the Digest in the sense that any Digest#update that has been\nperformed is abandoned and the Digest is set to its initial state again.","name":"reset","namespace":"Digest","path":"Digest#reset","type":"module_function","visibility":"public"},"Digest#update":{"description":"Not every message digest can be computed in one single pass. If a message\ndigest is to be computed from several subsequent sources, then each may\nbe passed individually to the Digest instance.\n\n=== Example\n digest = OpenSSL::Digest::SHA256.new\n digest.update('First input')\n digest << 'Second input' # equivalent to digest.update('Second input')\n result = digest.digest","name":"<<","namespace":"Digest","path":"Digest#<<","type":"module_function","visibility":"public"},"Digest.bubblebabble":{"description":"call-seq:\n    Digest.bubblebabble(string) -> bubblebabble_string\n\nReturns a BubbleBabble encoded version of a given _string_.","name":"bubblebabble","namespace":"Digest","path":"Digest.bubblebabble","type":"module_function","visibility":"public"},"Digest.const_missing":{"description":":nodoc:","name":"const_missing","namespace":"Digest","path":"Digest.const_missing","type":"module_function","visibility":"public"},"Digest.hexencode":{"description":"Generates a hex-encoded version of a given _string_.","name":"hexencode","namespace":"Digest","path":"Digest.hexencode","type":"module_function","visibility":"public"},"Digest::Base":{"description":"This abstract class provides a common interface to message digest\nimplementation classes written in C.","name":"Base","namespace":"Digest","path":"Digest::Base","type":"class","visibility":"public"},"Digest::Base#<<":{"description":":nodoc:","name":"<<","namespace":"Digest::Base","path":"Digest::Base#<<","type":"instance_method","visibility":"public"},"Digest::Base#block_length":{"description":":nodoc:","name":"block_length","namespace":"Digest::Base","path":"Digest::Base#block_length","type":"instance_method","visibility":"public"},"Digest::Base#digest_length":{"description":":nodoc:","name":"digest_length","namespace":"Digest::Base","path":"Digest::Base#digest_length","type":"instance_method","visibility":"public"},"Digest::Base#finish":{"description":":nodoc:","name":"finish","namespace":"Digest::Base","path":"Digest::Base#finish","type":"instance_method","visibility":"private"},"Digest::Base#initialize_copy":{"description":":nodoc:","name":"initialize_copy","namespace":"Digest::Base","path":"Digest::Base#initialize_copy","type":"instance_method","visibility":"public"},"Digest::Base#reset":{"description":":nodoc:","name":"reset","namespace":"Digest::Base","path":"Digest::Base#reset","type":"instance_method","visibility":"public"},"Digest::Base#update":{"description":":nodoc:","name":"update","namespace":"Digest::Base","path":"Digest::Base#update","type":"instance_method","visibility":"public"},"Digest::Class":{"description":"This module stands as a base class for digest implementation\nclasses.","name":"Class","namespace":"Digest","path":"Digest::Class","type":"class","visibility":"public"},"Digest::Class#initialize":{"description":":nodoc:","name":"initialize","namespace":"Digest::Class","path":"Digest::Class#initialize","type":"instance_method","visibility":"public"},"Digest::Class.base64digest":{"description":"Returns the base64 encoded hash value of a given _string_.  The\nreturn value is properly padded with '=' and contains no line\nfeeds.","name":"base64digest","namespace":"Digest::Class","path":"Digest::Class.base64digest","type":"class_method","visibility":"public"},"Digest::Class.bubblebabble":{"description":"call-seq:\n    Digest::Class.bubblebabble(string, ...) -> hash_string\n\nReturns the BubbleBabble encoded hash value of a given _string_.","name":"bubblebabble","namespace":"Digest::Class","path":"Digest::Class.bubblebabble","type":"class_method","visibility":"public"},"Digest::Class.digest":{"description":"Returns the hash value of a given _string_.  This is equivalent to\nDigest::Class.new(*parameters).digest(string), where extra\n_parameters_, if any, are passed through to the constructor and the\n_string_ is passed to #digest().","name":"digest","namespace":"Digest::Class","path":"Digest::Class.digest","type":"class_method","visibility":"public"},"Digest::Class.file":{"description":"Creates a digest object and reads a given file, _name_.\nOptional arguments are passed to the constructor of the digest\nclass.\n\n  p Digest::SHA256.file(\"X11R6.8.2-src.tar.bz2\").hexdigest\n  # => \"f02e3c85572dc9ad7cb77c2a638e3be24cc1b5bea9fdbb0b0299c9668475c534\"","name":"file","namespace":"Digest::Class","path":"Digest::Class.file","type":"class_method","visibility":"public"},"Digest::Class.hexdigest":{"description":"Returns the hex-encoded hash value of a given _string_.  This is\nalmost equivalent to\nDigest.hexencode(Digest::Class.new(*parameters).digest(string)).","name":"hexdigest","namespace":"Digest::Class","path":"Digest::Class.hexdigest","type":"class_method","visibility":"public"},"Digest::DigestError":{"description":"","name":"DigestError","namespace":"Digest","path":"Digest::DigestError","type":"class","visibility":"public"},"Digest::Instance":{"description":"This module provides instance methods for a digest implementation\nobject to calculate message digest values.","name":"Instance","namespace":"Digest","path":"Digest::Instance","type":"module","visibility":"public"},"Digest::Instance#<<":{"description":"Updates the digest using a given _string_ and returns self.\n\nThe update() method and the left-shift operator are overridden by\neach implementation subclass. (One should be an alias for the\nother)","name":"<<","namespace":"Digest::Instance","path":"Digest::Instance#<<","type":"module_function","visibility":"public"},"Digest::Instance#==":{"description":"If a string is given, checks whether it is equal to the hex-encoded\nhash value of the digest object.  If another digest instance is\ngiven, checks whether they have the same hash value.  Otherwise\nreturns false.","name":"==","namespace":"Digest::Instance","path":"Digest::Instance#==","type":"module_function","visibility":"public"},"Digest::Instance#base64digest":{"description":"If none is given, returns the resulting hash value of the digest\nin a base64 encoded form, keeping the digest's state.\n\nIf a +string+ is given, returns the hash value for the given\n+string+ in a base64 encoded form, resetting the digest to the\ninitial state before and after the process.\n\nIn either case, the return value is properly padded with '=' and\ncontains no line feeds.","name":"base64digest","namespace":"Digest::Instance","path":"Digest::Instance#base64digest","type":"module_function","visibility":"public"},"Digest::Instance#base64digest!":{"description":"Returns the resulting hash value and resets the digest to the\ninitial state.","name":"base64digest!","namespace":"Digest::Instance","path":"Digest::Instance#base64digest!","type":"module_function","visibility":"public"},"Digest::Instance#block_length":{"description":"Returns the block length of the digest.\n\nThis method is overridden by each implementation subclass.","name":"block_length","namespace":"Digest::Instance","path":"Digest::Instance#block_length","type":"module_function","visibility":"public"},"Digest::Instance#bubblebabble":{"description":"call-seq:\n    digest_obj.bubblebabble -> hash_string\n\nReturns the resulting hash value in a Bubblebabble encoded form.","name":"bubblebabble","namespace":"Digest::Instance","path":"Digest::Instance#bubblebabble","type":"module_function","visibility":"public"},"Digest::Instance#digest":{"description":"If none is given, returns the resulting hash value of the digest,\nkeeping the digest's state.\n\nIf a _string_ is given, returns the hash value for the given\n_string_, resetting the digest to the initial state before and\nafter the process.","name":"digest","namespace":"Digest::Instance","path":"Digest::Instance#digest","type":"module_function","visibility":"public"},"Digest::Instance#digest!":{"description":"Returns the resulting hash value and resets the digest to the\ninitial state.","name":"digest!","namespace":"Digest::Instance","path":"Digest::Instance#digest!","type":"module_function","visibility":"public"},"Digest::Instance#digest_length":{"description":"Returns the length of the hash value of the digest.\n\nThis method should be overridden by each implementation subclass.\nIf not, digest_obj.digest().length() is returned.","name":"digest_length","namespace":"Digest::Instance","path":"Digest::Instance#digest_length","type":"module_function","visibility":"public"},"Digest::Instance#file":{"description":"Updates the digest with the contents of a given file _name_ and\nreturns self.","name":"file","namespace":"Digest::Instance","path":"Digest::Instance#file","type":"module_function","visibility":"public"},"Digest::Instance#finish":{"description":"Finishes the digest and returns the resulting hash value.\n\nThis method is overridden by each implementation subclass and often\nmade private, because some of those subclasses may leave internal\ndata uninitialized.  Do not call this method from outside.  Use\n#digest!() instead, which ensures that internal data be reset for\nsecurity reasons.","name":"finish","namespace":"Digest::Instance","path":"Digest::Instance#finish","type":"module_function","visibility":"private"},"Digest::Instance#hexdigest":{"description":"If none is given, returns the resulting hash value of the digest in\na hex-encoded form, keeping the digest's state.\n\nIf a _string_ is given, returns the hash value for the given\n_string_ in a hex-encoded form, resetting the digest to the initial\nstate before and after the process.","name":"hexdigest","namespace":"Digest::Instance","path":"Digest::Instance#hexdigest","type":"module_function","visibility":"public"},"Digest::Instance#hexdigest!":{"description":"Returns the resulting hash value in a hex-encoded form and resets\nthe digest to the initial state.","name":"hexdigest!","namespace":"Digest::Instance","path":"Digest::Instance#hexdigest!","type":"module_function","visibility":"public"},"Digest::Instance#inspect":{"description":"Creates a printable version of the digest object.","name":"inspect","namespace":"Digest::Instance","path":"Digest::Instance#inspect","type":"module_function","visibility":"public"},"Digest::Instance#length":{"description":"Returns digest_obj.digest_length().","name":"length","namespace":"Digest::Instance","path":"Digest::Instance#length","type":"module_function","visibility":"public"},"Digest::Instance#new":{"description":"Returns a new, initialized copy of the digest object.  Equivalent\nto digest_obj.clone().reset().","name":"new","namespace":"Digest::Instance","path":"Digest::Instance#new","type":"module_function","visibility":"public"},"Digest::Instance#reset":{"description":"Resets the digest to the initial state and returns self.\n\nThis method is overridden by each implementation subclass.","name":"reset","namespace":"Digest::Instance","path":"Digest::Instance#reset","type":"module_function","visibility":"public"},"Digest::Instance#size":{"description":"Returns digest_obj.digest_length().","name":"size","namespace":"Digest::Instance","path":"Digest::Instance#size","type":"module_function","visibility":"public"},"Digest::Instance#to_s":{"description":"Returns digest_obj.hexdigest().","name":"to_s","namespace":"Digest::Instance","path":"Digest::Instance#to_s","type":"module_function","visibility":"public"},"Digest::Instance#update":{"description":"Updates the digest using a given _string_ and returns self.\n\nThe update() method and the left-shift operator are overridden by\neach implementation subclass. (One should be an alias for the\nother)","name":"update","namespace":"Digest::Instance","path":"Digest::Instance#update","type":"module_function","visibility":"public"},"Digest::MD5":{"description":"","name":"MD5","namespace":"Digest","path":"Digest::MD5","type":"class","visibility":"public"},"Digest::REQUIRE_MUTEX":{"description":"A mutex for Digest().","name":"REQUIRE_MUTEX","namespace":"Digest","path":"Digest::REQUIRE_MUTEX","type":"constant","return":["Thread::Mutex",""],"visibility":"public"},"Digest::RMD160":{"description":"","name":"RMD160","namespace":"Digest","path":"Digest::RMD160","type":"class","visibility":"public"},"Digest::SHA1":{"description":"","name":"SHA1","namespace":"Digest","path":"Digest::SHA1","type":"class","visibility":"public"},"Digest::SHA2":{"description":"A meta digest provider class for SHA256, SHA384 and SHA512.","name":"SHA2","namespace":"Digest","path":"Digest::SHA2","type":"class","visibility":"public"},"Digest::SHA2#<<":{"description":"call-seq:\n  digest_obj.update(string) -> digest_obj\n  digest_obj << string -> digest_obj\n\nUpdates the digest using a given _string_ and returns self.","name":"<<","namespace":"Digest::SHA2","path":"Digest::SHA2#<<","type":"instance_method","visibility":"public"},"Digest::SHA2#block_length":{"description":"call-seq:\n  digest_obj.block_length -> Integer\n\nReturns the block length of the digest in bytes.\n\n  Digest::SHA256.new.block_length * 8\n  # => 512\n  Digest::SHA384.new.block_length * 8\n  # => 1024\n  Digest::SHA512.new.block_length * 8\n  # => 1024","name":"block_length","namespace":"Digest::SHA2","path":"Digest::SHA2#block_length","type":"instance_method","visibility":"public"},"Digest::SHA2#digest_length":{"description":"call-seq:\n  digest_obj.digest_length -> Integer\n\nReturns the length of the hash value of the digest in bytes.\n\n  Digest::SHA256.new.digest_length * 8\n  # => 256\n  Digest::SHA384.new.digest_length * 8\n  # => 384\n  Digest::SHA512.new.digest_length * 8\n  # => 512\n\nFor example, digests produced by Digest::SHA256 will always be 32 bytes\n(256 bits) in size.","name":"digest_length","namespace":"Digest::SHA2","path":"Digest::SHA2#digest_length","type":"instance_method","visibility":"public"},"Digest::SHA2#finish":{"description":":nodoc:","name":"finish","namespace":"Digest::SHA2","path":"Digest::SHA2#finish","type":"instance_method","visibility":"private"},"Digest::SHA2#initialize":{"description":"call-seq:\n  Digest::SHA2.new(bitlen = 256) -> digest_obj\n\nCreates a new SHA2 hash object with a given bit length.\n\nValid bit lengths are 256, 384 and 512.","name":"initialize","namespace":"Digest::SHA2","path":"Digest::SHA2#initialize","type":"instance_method","visibility":"public","return":[["SHA2"],"a new instance of SHA2"]},"Digest::SHA2#initialize_copy":{"description":":nodoc:","name":"initialize_copy","namespace":"Digest::SHA2","path":"Digest::SHA2#initialize_copy","type":"instance_method","visibility":"public"},"Digest::SHA2#inspect":{"description":":nodoc:","name":"inspect","namespace":"Digest::SHA2","path":"Digest::SHA2#inspect","type":"instance_method","visibility":"public"},"Digest::SHA2#reset":{"description":"call-seq:\n  digest_obj.reset -> digest_obj\n\nResets the digest to the initial state and returns self.","name":"reset","namespace":"Digest::SHA2","path":"Digest::SHA2#reset","type":"instance_method","visibility":"public"},"Digest::SHA2#update":{"description":"call-seq:\n  digest_obj.update(string) -> digest_obj\n  digest_obj << string -> digest_obj\n\nUpdates the digest using a given _string_ and returns self.","name":"<<","namespace":"Digest::SHA2","path":"Digest::SHA2#<<","type":"instance_method","visibility":"public"},"Fiddle":{"description":"A libffi wrapper for Ruby.\n\n== Description\n\nFiddle is an extension to translate a foreign function interface (FFI)\nwith ruby.\n\nIt wraps {libffi}[http://sourceware.org/libffi/], a popular C library\nwhich provides a portable interface that allows code written in one\nlanguage to call code written in another language.\n\n== Example\n\nHere we will use Fiddle::Function to wrap {floor(3) from\nlibm}[http://linux.die.net/man/3/floor]\n\n    require 'fiddle'\n\n    libm = Fiddle.dlopen('/lib/libm.so.6')\n\n    floor = Fiddle::Function.new(\n      libm['floor'],\n      [Fiddle::TYPE_DOUBLE],\n      Fiddle::TYPE_DOUBLE\n    )\n\n    puts floor.call(3.14159) #=> 3.0","name":"Fiddle","namespace":"","path":"Fiddle","type":"module","visibility":"public"},"Fiddle#dlopen":{"description":"call-seq: dlopen(library) => Fiddle::Handle\n\nCreates a new handler that opens +library+, and returns an instance of\nFiddle::Handle.\n\nIf +nil+ is given for the +library+, Fiddle::Handle::DEFAULT is used, which\nis the equivalent to RTLD_DEFAULT. See <code>man 3 dlopen</code> for more.\n\n  lib = Fiddle.dlopen(nil)\n\nThe default is dependent on OS, and provide a handle for all libraries\nalready loaded. For example, in most cases you can use this to access\n+libc+ functions, or ruby functions like +rb_str_new+.\n\nSee Fiddle::Handle.new for more.","name":"dlopen","namespace":"Fiddle","path":"Fiddle#dlopen","type":"module_function","visibility":"private"},"Fiddle#dlunwrap":{"description":"Returns the hexadecimal representation of a memory pointer address +addr+\n\nExample:\n\n  lib = Fiddle.dlopen('/lib64/libc-2.15.so')\n  => #<Fiddle::Handle:0x00000001342460>\n\n  lib['strcpy'].to_s(16)\n  => \"7f59de6dd240\"\n\n  Fiddle.dlunwrap(Fiddle.dlwrap(lib['strcpy'].to_s(16)))\n  => \"7f59de6dd240\"","name":"dlunwrap","namespace":"Fiddle","path":"Fiddle#dlunwrap","type":"module_function","visibility":"private"},"Fiddle#dlwrap":{"description":"Returns a memory pointer of a function's hexadecimal address location +val+\n\nExample:\n\n  lib = Fiddle.dlopen('/lib64/libc-2.15.so')\n  => #<Fiddle::Handle:0x00000001342460>\n\n  Fiddle.dlwrap(lib['strcpy'].to_s(16))\n  => 25522520","name":"dlwrap","namespace":"Fiddle","path":"Fiddle#dlwrap","type":"module_function","visibility":"private"},"Fiddle#free":{"description":"Free the memory at address +addr+","name":"free","namespace":"Fiddle","path":"Fiddle#free","type":"module_function","visibility":"private"},"Fiddle#malloc":{"description":"Allocate +size+ bytes of memory and return the integer memory address\nfor the allocated memory.","name":"malloc","namespace":"Fiddle","path":"Fiddle#malloc","type":"module_function","visibility":"private"},"Fiddle#realloc":{"description":"Change the size of the memory allocated at the memory location +addr+ to\n+size+ bytes.  Returns the memory address of the reallocated memory, which\nmay be different than the address passed in.","name":"realloc","namespace":"Fiddle","path":"Fiddle#realloc","type":"module_function","visibility":"private"},"Fiddle.dlopen":{"description":"call-seq: dlopen(library) => Fiddle::Handle\n\nCreates a new handler that opens +library+, and returns an instance of\nFiddle::Handle.\n\nIf +nil+ is given for the +library+, Fiddle::Handle::DEFAULT is used, which\nis the equivalent to RTLD_DEFAULT. See <code>man 3 dlopen</code> for more.\n\n  lib = Fiddle.dlopen(nil)\n\nThe default is dependent on OS, and provide a handle for all libraries\nalready loaded. For example, in most cases you can use this to access\n+libc+ functions, or ruby functions like +rb_str_new+.\n\nSee Fiddle::Handle.new for more.","name":"dlopen","namespace":"Fiddle","path":"Fiddle.dlopen","type":"module_function","visibility":"public"},"Fiddle.dlunwrap":{"description":"Returns the hexadecimal representation of a memory pointer address +addr+\n\nExample:\n\n  lib = Fiddle.dlopen('/lib64/libc-2.15.so')\n  => #<Fiddle::Handle:0x00000001342460>\n\n  lib['strcpy'].to_s(16)\n  => \"7f59de6dd240\"\n\n  Fiddle.dlunwrap(Fiddle.dlwrap(lib['strcpy'].to_s(16)))\n  => \"7f59de6dd240\"","name":"dlunwrap","namespace":"Fiddle","path":"Fiddle.dlunwrap","type":"module_function","visibility":"public"},"Fiddle.dlwrap":{"description":"Returns a memory pointer of a function's hexadecimal address location +val+\n\nExample:\n\n  lib = Fiddle.dlopen('/lib64/libc-2.15.so')\n  => #<Fiddle::Handle:0x00000001342460>\n\n  Fiddle.dlwrap(lib['strcpy'].to_s(16))\n  => 25522520","name":"dlwrap","namespace":"Fiddle","path":"Fiddle.dlwrap","type":"module_function","visibility":"public"},"Fiddle.free":{"description":"Free the memory at address +addr+","name":"free","namespace":"Fiddle","path":"Fiddle.free","type":"module_function","visibility":"public"},"Fiddle.last_error":{"description":"Returns the last +Error+ of the current executing +Thread+ or nil if none","name":"last_error","namespace":"Fiddle","path":"Fiddle.last_error","type":"module_function","visibility":"public"},"Fiddle.last_error=":{"description":"Sets the last +Error+ of the current executing +Thread+ to +error+","name":"last_error=","namespace":"Fiddle","path":"Fiddle.last_error=","type":"module_function","visibility":"public"},"Fiddle.malloc":{"description":"Allocate +size+ bytes of memory and return the integer memory address\nfor the allocated memory.","name":"malloc","namespace":"Fiddle","path":"Fiddle.malloc","type":"module_function","visibility":"public"},"Fiddle.realloc":{"description":"Change the size of the memory allocated at the memory location +addr+ to\n+size+ bytes.  Returns the memory address of the reallocated memory, which\nmay be different than the address passed in.","name":"realloc","namespace":"Fiddle","path":"Fiddle.realloc","type":"module_function","visibility":"public"},"Fiddle.win32_last_error":{"description":"Returns the last win32 +Error+ of the current executing +Thread+ or nil\nif none","name":"win32_last_error","namespace":"Fiddle","path":"Fiddle.win32_last_error","type":"module_function","visibility":"public"},"Fiddle.win32_last_error=":{"description":"Sets the last win32 +Error+ of the current executing +Thread+ to +error+","name":"win32_last_error=","namespace":"Fiddle","path":"Fiddle.win32_last_error=","type":"module_function","visibility":"public"},"Fiddle::ALIGN_CHAR":{"description":"The alignment size of a char","name":"ALIGN_CHAR","namespace":"Fiddle","path":"Fiddle::ALIGN_CHAR","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_DOUBLE":{"description":"The alignment size of a double","name":"ALIGN_DOUBLE","namespace":"Fiddle","path":"Fiddle::ALIGN_DOUBLE","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_FLOAT":{"description":"The alignment size of a float","name":"ALIGN_FLOAT","namespace":"Fiddle","path":"Fiddle::ALIGN_FLOAT","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_INT":{"description":"The alignment size of an int","name":"ALIGN_INT","namespace":"Fiddle","path":"Fiddle::ALIGN_INT","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_INTPTR_T":{"description":"The alignment size of a intptr_t","name":"ALIGN_INTPTR_T","namespace":"Fiddle","path":"Fiddle::ALIGN_INTPTR_T","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_LONG":{"description":"The alignment size of a long","name":"ALIGN_LONG","namespace":"Fiddle","path":"Fiddle::ALIGN_LONG","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_LONG_LONG":{"description":"The alignment size of a long long","name":"ALIGN_LONG_LONG","namespace":"Fiddle","path":"Fiddle::ALIGN_LONG_LONG","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_PTRDIFF_T":{"description":"The alignment size of a ptrdiff_t","name":"ALIGN_PTRDIFF_T","namespace":"Fiddle","path":"Fiddle::ALIGN_PTRDIFF_T","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_SHORT":{"description":"The alignment size of a short","name":"ALIGN_SHORT","namespace":"Fiddle","path":"Fiddle::ALIGN_SHORT","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_SIZE_T":{"description":"The alignment size of a size_t","name":"ALIGN_SIZE_T","namespace":"Fiddle","path":"Fiddle::ALIGN_SIZE_T","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_SSIZE_T":{"description":"same as size_t","name":"ALIGN_SSIZE_T","namespace":"Fiddle","path":"Fiddle::ALIGN_SSIZE_T","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_UINTPTR_T":{"description":"The alignment size of a uintptr_t","name":"ALIGN_UINTPTR_T","namespace":"Fiddle","path":"Fiddle::ALIGN_UINTPTR_T","type":"constant","return":null,"visibility":"public"},"Fiddle::ALIGN_VOIDP":{"description":"The alignment size of a void*","name":"ALIGN_VOIDP","namespace":"Fiddle","path":"Fiddle::ALIGN_VOIDP","type":"constant","return":null,"visibility":"public"},"Fiddle::BUILD_RUBY_PLATFORM":{"description":"Platform built against (i.e. \"x86_64-linux\", etc.)\n\nSee also RUBY_PLATFORM","name":"BUILD_RUBY_PLATFORM","namespace":"Fiddle","path":"Fiddle::BUILD_RUBY_PLATFORM","type":"constant","return":null,"visibility":"public"},"Fiddle::BasicTypes":{"description":"Adds basic type aliases to the including class for use with Fiddle::Importer.\n\nThe aliases added are +uint+ and +u_int+ (<tt>unsigned int</tt>) and\n+ulong+ and +u_long+ (<tt>unsigned long</tt>)","name":"BasicTypes","namespace":"Fiddle","path":"Fiddle::BasicTypes","type":"module","visibility":"public"},"Fiddle::BasicTypes#included":{"description":":nodoc:","name":"included","namespace":"Fiddle::BasicTypes","path":"Fiddle::BasicTypes#included","type":"module_function","visibility":"private"},"Fiddle::BasicTypes.included":{"description":":nodoc:","name":"included","namespace":"Fiddle::BasicTypes","path":"Fiddle::BasicTypes.included","type":"module_function","visibility":"public"},"Fiddle::CParser":{"description":"A mixin that provides methods for parsing C struct and prototype signatures.\n\n== Example\n  require 'fiddle/import'\n\n  include Fiddle::CParser\n    #=> Object\n\n  parse_ctype('int increment(int)')\n    #=> [\"increment\", Fiddle::TYPE_INT, [Fiddle::TYPE_INT]]","name":"CParser","namespace":"Fiddle","path":"Fiddle::CParser","type":"module","visibility":"public"},"Fiddle::CParser#parse_ctype":{"description":"Given a String of C type +ty+, returns the corresponding Fiddle constant.\n\n+ty+ can also accept an Array of C type Strings, and will be returned in\na corresponding Array.\n\nIf Hash +tymap+ is provided, +ty+ is expected to be the key, and the\nvalue will be the C type to be looked up.\n\nExample:\n\n  include Fiddle::CParser\n    #=> Object\n\n  parse_ctype('int')\n    #=> Fiddle::TYPE_INT\n\n  parse_ctype('double')\n    #=> Fiddle::TYPE_DOUBLE\n\n  parse_ctype('unsigned char')\n    #=> -Fiddle::TYPE_CHAR","name":"parse_ctype","namespace":"Fiddle::CParser","path":"Fiddle::CParser#parse_ctype","type":"module_function","visibility":"public"},"Fiddle::CParser#parse_signature":{"description":"Parses a C prototype signature\n\nIf Hash +tymap+ is provided, the return value and the arguments from the\n+signature+ are expected to be keys, and the value will be the C type to\nbe looked up.\n\nExample:\n\n  include Fiddle::CParser\n    #=> Object\n\n  parse_signature('double sum(double, double)')\n    #=> [\"sum\", Fiddle::TYPE_DOUBLE, [Fiddle::TYPE_DOUBLE, Fiddle::TYPE_DOUBLE]]","name":"parse_signature","namespace":"Fiddle::CParser","path":"Fiddle::CParser#parse_signature","type":"module_function","visibility":"public"},"Fiddle::CParser#parse_struct_signature":{"description":"Parses a C struct's members\n\nExample:\n\n  include Fiddle::CParser\n    #=> Object\n\n  parse_struct_signature(['int i', 'char c'])\n    #=> [[Fiddle::TYPE_INT, Fiddle::TYPE_CHAR], [\"i\", \"c\"]]","name":"parse_struct_signature","namespace":"Fiddle::CParser","path":"Fiddle::CParser#parse_struct_signature","type":"module_function","visibility":"public"},"Fiddle::CStruct":{"description":"C struct shell","name":"CStruct","namespace":"Fiddle","path":"Fiddle::CStruct","type":"class","visibility":"public"},"Fiddle::CStruct.entity_class":{"description":"accessor to Fiddle::CStructEntity","name":"entity_class","namespace":"Fiddle::CStruct","path":"Fiddle::CStruct.entity_class","type":"class_method","visibility":"public"},"Fiddle::CStructBuilder":{"description":"Used to construct C classes (CUnion, CStruct, etc)\n\nFiddle::Importer#struct and Fiddle::Importer#union wrap this functionality in an\neasy-to-use manner.","name":"CStructBuilder","namespace":"Fiddle","path":"Fiddle::CStructBuilder","type":"module","visibility":"public"},"Fiddle::CStructBuilder#create":{"description":"Construct a new class given a C:\n* class +klass+ (CUnion, CStruct, or other that provide an\n  #entity_class)\n* +types+ (Fiddle::TYPE_INT, Fiddle::TYPE_SIZE_T, etc., see the C types\n  constants)\n* corresponding +members+\n\nFiddle::Importer#struct and Fiddle::Importer#union wrap this functionality in an\neasy-to-use manner.\n\nExample:\n\n  require 'fiddle/struct'\n  require 'fiddle/cparser'\n\n  include Fiddle::CParser\n\n  types, members = parse_struct_signature(['int i','char c'])\n\n  MyStruct = Fiddle::CStructBuilder.create(Fiddle::CUnion, types, members)\n\n  obj = MyStruct.allocate","name":"create","namespace":"Fiddle::CStructBuilder","path":"Fiddle::CStructBuilder#create","type":"module_function","visibility":"private"},"Fiddle::CStructBuilder.create":{"description":"Construct a new class given a C:\n* class +klass+ (CUnion, CStruct, or other that provide an\n  #entity_class)\n* +types+ (Fiddle::TYPE_INT, Fiddle::TYPE_SIZE_T, etc., see the C types\n  constants)\n* corresponding +members+\n\nFiddle::Importer#struct and Fiddle::Importer#union wrap this functionality in an\neasy-to-use manner.\n\nExample:\n\n  require 'fiddle/struct'\n  require 'fiddle/cparser'\n\n  include Fiddle::CParser\n\n  types, members = parse_struct_signature(['int i','char c'])\n\n  MyStruct = Fiddle::CStructBuilder.create(Fiddle::CUnion, types, members)\n\n  obj = MyStruct.allocate","name":"create","namespace":"Fiddle::CStructBuilder","path":"Fiddle::CStructBuilder.create","type":"module_function","visibility":"public"},"Fiddle::CStructEntity":{"description":"A C struct wrapper","name":"CStructEntity","namespace":"Fiddle","path":"Fiddle::CStructEntity","type":"class","visibility":"public"},"Fiddle::CStructEntity#[]":{"description":"Fetch struct member +name+","name":"[]","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity#[]","type":"instance_method","visibility":"public"},"Fiddle::CStructEntity#[]=":{"description":"Set struct member +name+, to value +val+","name":"[]=","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity#[]=","type":"instance_method","visibility":"public"},"Fiddle::CStructEntity#assign_names":{"description":"Set the names of the +members+ in this C struct","name":"assign_names","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity#assign_names","type":"instance_method","visibility":"public"},"Fiddle::CStructEntity#initialize":{"description":"Wraps the C pointer +addr+ as a C struct with the given +types+.\n\nWhen the instance is garbage collected, the C function +func+ is called.\n\nSee also Fiddle::Pointer.new","name":"initialize","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity#initialize","type":"instance_method","visibility":"public","return":[["CStructEntity"],"a new instance of CStructEntity"]},"Fiddle::CStructEntity#set_ctypes":{"description":"Calculates the offsets and sizes for the given +types+ in the struct.","name":"set_ctypes","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity#set_ctypes","type":"instance_method","visibility":"public"},"Fiddle::CStructEntity#to_s":{"description":":nodoc:","name":"to_s","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity#to_s","type":"instance_method","visibility":"public"},"Fiddle::CStructEntity.malloc":{"description":"Allocates a C struct with the +types+ provided.\n\nWhen the instance is garbage collected, the C function +func+ is called.","name":"malloc","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity.malloc","type":"class_method","visibility":"public"},"Fiddle::CStructEntity.size":{"description":"Returns the offset for the packed sizes for the given +types+.\n\n  Fiddle::CStructEntity.size(\n    [ Fiddle::TYPE_DOUBLE,\n      Fiddle::TYPE_INT,\n      Fiddle::TYPE_CHAR,\n      Fiddle::TYPE_VOIDP ]) #=> 24","name":"size","namespace":"Fiddle::CStructEntity","path":"Fiddle::CStructEntity.size","type":"class_method","visibility":"public"},"Fiddle::CUnion":{"description":"C union shell","name":"CUnion","namespace":"Fiddle","path":"Fiddle::CUnion","type":"class","visibility":"public"},"Fiddle::CUnion.entity_class":{"description":"accessor to Fiddle::CUnionEntity","name":"entity_class","namespace":"Fiddle::CUnion","path":"Fiddle::CUnion.entity_class","type":"class_method","visibility":"public"},"Fiddle::CUnionEntity":{"description":"A C union wrapper","name":"CUnionEntity","namespace":"Fiddle","path":"Fiddle::CUnionEntity","type":"class","visibility":"public"},"Fiddle::CUnionEntity#set_ctypes":{"description":"Calculate the necessary offset and for each union member with the given\n+types+","name":"set_ctypes","namespace":"Fiddle::CUnionEntity","path":"Fiddle::CUnionEntity#set_ctypes","type":"instance_method","visibility":"public"},"Fiddle::CUnionEntity.malloc":{"description":"Allocates a C union the +types+ provided.\n\nWhen the instance is garbage collected, the C function +func+ is called.","name":"malloc","namespace":"Fiddle::CUnionEntity","path":"Fiddle::CUnionEntity.malloc","type":"class_method","visibility":"public"},"Fiddle::CUnionEntity.size":{"description":"Returns the size needed for the union with the given +types+.\n\n  Fiddle::CUnionEntity.size(\n    [ Fiddle::TYPE_DOUBLE,\n      Fiddle::TYPE_INT,\n      Fiddle::TYPE_CHAR,\n      Fiddle::TYPE_VOIDP ]) #=> 8","name":"size","namespace":"Fiddle::CUnionEntity","path":"Fiddle::CUnionEntity.size","type":"class_method","visibility":"public"},"Fiddle::Closure":{"description":"== Description\n\nAn FFI closure wrapper, for handling callbacks.\n\n== Example\n\n  closure = Class.new(Fiddle::Closure) {\n    def call\n      10\n    end\n  }.new(Fiddle::TYPE_INT, [])\n    #=> #<#<Class:0x0000000150d308>:0x0000000150d240>\n  func = Fiddle::Function.new(closure, [], Fiddle::TYPE_INT)\n    #=> #<Fiddle::Function:0x00000001516e58>\n  func.call\n    #=> 10","name":"Closure","namespace":"Fiddle","path":"Fiddle::Closure","type":"class","visibility":"public"},"Fiddle::Closure#args":{"description":"arguments of the FFI closure","name":"args","namespace":"Fiddle::Closure","path":"Fiddle::Closure#args","type":"instance_method","visibility":"public"},"Fiddle::Closure#ctype":{"description":"the C type of the return of the FFI closure","name":"ctype","namespace":"Fiddle::Closure","path":"Fiddle::Closure#ctype","type":"instance_method","visibility":"public"},"Fiddle::Closure#initialize":{"description":"call-seq: new(ret, args, abi = Fiddle::DEFAULT)\n\nConstruct a new Closure object.\n\n* +ret+ is the C type to be returned\n* +args+ is an Array of arguments, passed to the callback function\n* +abi+ is the abi of the closure\n\nIf there is an error in preparing the ffi_cif or ffi_prep_closure,\nthen a RuntimeError will be raised.","name":"initialize","namespace":"Fiddle::Closure","path":"Fiddle::Closure#initialize","type":"instance_method","visibility":"public"},"Fiddle::Closure#to_i":{"description":"Returns the memory address for this closure","name":"to_i","namespace":"Fiddle::Closure","path":"Fiddle::Closure#to_i","type":"instance_method","visibility":"public"},"Fiddle::Closure::BlockCaller":{"description":"Extends Fiddle::Closure to allow for building the closure in a block","name":"BlockCaller","namespace":"Fiddle::Closure","path":"Fiddle::Closure::BlockCaller","type":"class","visibility":"public"},"Fiddle::Closure::BlockCaller#call":{"description":"Calls the constructed BlockCaller, with +args+\n\nFor an example see Fiddle::Closure::BlockCaller.new","name":"call","namespace":"Fiddle::Closure::BlockCaller","path":"Fiddle::Closure::BlockCaller#call","type":"instance_method","visibility":"public"},"Fiddle::Closure::BlockCaller#initialize":{"description":"== Description\n\nConstruct a new BlockCaller object.\n\n* +ctype+ is the C type to be returned\n* +args+ are passed the callback\n* +abi+ is the abi of the closure\n\nIf there is an error in preparing the +ffi_cif+ or +ffi_prep_closure+,\nthen a RuntimeError will be raised.\n\n== Example\n\n  include Fiddle\n\n  cb = Closure::BlockCaller.new(TYPE_INT, [TYPE_INT]) do |one|\n    one\n  end\n\n  func = Function.new(cb, [TYPE_INT], TYPE_INT)","name":"initialize","namespace":"Fiddle::Closure::BlockCaller","path":"Fiddle::Closure::BlockCaller#initialize","type":"instance_method","visibility":"public","return":[["BlockCaller"],"a new instance of BlockCaller"]},"Fiddle::CompositeHandler":{"description":"Used internally by Fiddle::Importer","name":"CompositeHandler","namespace":"Fiddle","path":"Fiddle::CompositeHandler","type":"class","visibility":"public"},"Fiddle::CompositeHandler#[]":{"description":"See Fiddle::CompositeHandler.sym","name":"[]","namespace":"Fiddle::CompositeHandler","path":"Fiddle::CompositeHandler#[]","type":"instance_method","visibility":"public"},"Fiddle::CompositeHandler#handlers":{"description":"Array of the currently loaded libraries.","name":"handlers","namespace":"Fiddle::CompositeHandler","path":"Fiddle::CompositeHandler#handlers","type":"instance_method","visibility":"public"},"Fiddle::CompositeHandler#initialize":{"description":"Create a new handler with the open +handlers+\n\nUsed internally by Fiddle::Importer.dlload","name":"initialize","namespace":"Fiddle::CompositeHandler","path":"Fiddle::CompositeHandler#initialize","type":"instance_method","visibility":"public","return":[["CompositeHandler"],"a new instance of CompositeHandler"]},"Fiddle::CompositeHandler#sym":{"description":"Returns the address as an Integer from any handlers with the function\nnamed +symbol+.\n\nRaises a DLError if the handle is closed.","name":"sym","namespace":"Fiddle::CompositeHandler","path":"Fiddle::CompositeHandler#sym","type":"instance_method","visibility":"public"},"Fiddle::DLError":{"description":"standard dynamic load exception","name":"DLError","namespace":"Fiddle","path":"Fiddle::DLError","type":"class","visibility":"public"},"Fiddle::Function":{"description":"== Description\n\nA representation of a C function\n\n== Examples\n\n=== 'strcpy'\n\n  @libc = Fiddle.dlopen \"/lib/libc.so.6\"\n    #=> #<Fiddle::Handle:0x00000001d7a8d8>\n  f = Fiddle::Function.new(\n    @libc['strcpy'],\n    [Fiddle::TYPE_VOIDP, Fiddle::TYPE_VOIDP],\n    Fiddle::TYPE_VOIDP)\n    #=> #<Fiddle::Function:0x00000001d8ee00>\n  buff = \"000\"\n    #=> \"000\"\n  str = f.call(buff, \"123\")\n    #=> #<Fiddle::Pointer:0x00000001d0c380 ptr=0x000000018a21b8 size=0 free=0x00000000000000>\n  str.to_s\n  => \"123\"\n\n=== ABI check\n\n  @libc = Fiddle.dlopen \"/lib/libc.so.6\"\n    #=> #<Fiddle::Handle:0x00000001d7a8d8>\n  f = Fiddle::Function.new(@libc['strcpy'], [TYPE_VOIDP, TYPE_VOIDP], TYPE_VOIDP)\n    #=> #<Fiddle::Function:0x00000001d8ee00>\n  f.abi == Fiddle::Function::DEFAULT\n    #=> true","name":"Function","namespace":"Fiddle","path":"Fiddle::Function","type":"class","visibility":"public"},"Fiddle::Function#abi":{"description":"The ABI of the Function.","name":"abi","namespace":"Fiddle::Function","path":"Fiddle::Function#abi","type":"instance_method","visibility":"public"},"Fiddle::Function#call":{"description":"Calls the constructed Function, with +args+\n\nFor an example see Fiddle::Function","name":"call","namespace":"Fiddle::Function","path":"Fiddle::Function#call","type":"instance_method","visibility":"public"},"Fiddle::Function#initialize":{"description":"Constructs a Function object.\n* +ptr+ is a referenced function, of a Fiddle::Handle\n* +args+ is an Array of arguments, passed to the +ptr+ function\n* +ret_type+ is the return type of the function\n* +abi+ is the ABI of the function","name":"initialize","namespace":"Fiddle::Function","path":"Fiddle::Function#initialize","type":"instance_method","visibility":"public"},"Fiddle::Function#name":{"description":"The name of this function","name":"name","namespace":"Fiddle::Function","path":"Fiddle::Function#name","type":"instance_method","visibility":"public"},"Fiddle::Function#ptr":{"description":"The address of this function","name":"ptr","namespace":"Fiddle::Function","path":"Fiddle::Function#ptr","type":"instance_method","visibility":"public"},"Fiddle::Function#to_i":{"description":"The integer memory location of this function","name":"to_i","namespace":"Fiddle::Function","path":"Fiddle::Function#to_i","type":"instance_method","visibility":"public"},"Fiddle::Function::DEFAULT":{"description":"Default ABI","name":"DEFAULT","namespace":"Fiddle::Function","path":"Fiddle::Function::DEFAULT","type":"constant","return":null,"visibility":"public"},"Fiddle::Function::STDCALL":{"description":"FFI implementation of WIN32 stdcall convention","name":"STDCALL","namespace":"Fiddle::Function","path":"Fiddle::Function::STDCALL","type":"constant","return":null,"visibility":"public"},"Fiddle::Handle":{"description":"The Fiddle::Handle is the manner to access the dynamic library\n\n== Example\n\n=== Setup\n\n  libc_so = \"/lib64/libc.so.6\"\n  => \"/lib64/libc.so.6\"\n  @handle = Fiddle::Handle.new(libc_so)\n  => #<Fiddle::Handle:0x00000000d69ef8>\n\n=== Setup, with flags\n\n  libc_so = \"/lib64/libc.so.6\"\n  => \"/lib64/libc.so.6\"\n  @handle = Fiddle::Handle.new(libc_so, Fiddle::RTLD_LAZY | Fiddle::RTLD_GLOBAL)\n  => #<Fiddle::Handle:0x00000000d69ef8>\n\nSee RTLD_LAZY and RTLD_GLOBAL\n\n=== Addresses to symbols\n\n  strcpy_addr = @handle['strcpy']\n  => 140062278451968\n\nor\n\n  strcpy_addr = @handle.sym('strcpy')\n  => 140062278451968","name":"Handle","namespace":"Fiddle","path":"Fiddle::Handle","type":"class","visibility":"public"},"Fiddle::Handle#[]":{"description":"call-seq: sym(name)\n\nGet the address as an Integer for the function named +name+.","name":"[]","namespace":"Fiddle::Handle","path":"Fiddle::Handle#[]","type":"instance_method","visibility":"public"},"Fiddle::Handle#close":{"description":"Close this handle.\n\nCalling close more than once will raise a Fiddle::DLError exception.","name":"close","namespace":"Fiddle::Handle","path":"Fiddle::Handle#close","type":"instance_method","visibility":"public"},"Fiddle::Handle#close_enabled?":{"description":"Returns +true+ if dlclose() will be called when this handle is garbage collected.\n\nSee man(3) dlclose() for more info.","name":"close_enabled?","namespace":"Fiddle::Handle","path":"Fiddle::Handle#close_enabled?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Fiddle::Handle#disable_close":{"description":"Disable a call to dlclose() when this handle is garbage collected.","name":"disable_close","namespace":"Fiddle::Handle","path":"Fiddle::Handle#disable_close","type":"instance_method","visibility":"public"},"Fiddle::Handle#enable_close":{"description":"Enable a call to dlclose() when this handle is garbage collected.","name":"enable_close","namespace":"Fiddle::Handle","path":"Fiddle::Handle#enable_close","type":"instance_method","visibility":"public"},"Fiddle::Handle#initialize":{"description":"Create a new handler that opens +library+ with +flags+.\n\nIf no +library+ is specified or +nil+ is given, DEFAULT is used, which is\nthe equivalent to RTLD_DEFAULT. See <code>man 3 dlopen</code> for more.\n\nlib = Fiddle::Handle.new\n\nThe default is dependent on OS, and provide a handle for all libraries\nalready loaded. For example, in most cases you can use this to access +libc+\nfunctions, or ruby functions like +rb_str_new+.","name":"initialize","namespace":"Fiddle::Handle","path":"Fiddle::Handle#initialize","type":"instance_method","visibility":"public"},"Fiddle::Handle#sym":{"description":"call-seq: sym(name)\n\nGet the address as an Integer for the function named +name+.","name":"sym","namespace":"Fiddle::Handle","path":"Fiddle::Handle#sym","type":"instance_method","visibility":"public"},"Fiddle::Handle#to_i":{"description":"Returns the memory address for this handle.","name":"to_i","namespace":"Fiddle::Handle","path":"Fiddle::Handle#to_i","type":"instance_method","visibility":"public"},"Fiddle::Handle.[]":{"description":"call-seq: sym(name)\n\nGet the address as an Integer for the function named +name+.  The function\nis searched via dlsym on RTLD_NEXT.\n\nSee man(3) dlsym() for more info.","name":"[]","namespace":"Fiddle::Handle","path":"Fiddle::Handle.[]","type":"class_method","visibility":"public"},"Fiddle::Handle.sym":{"description":"call-seq: sym(name)\n\nGet the address as an Integer for the function named +name+.  The function\nis searched via dlsym on RTLD_NEXT.\n\nSee man(3) dlsym() for more info.","name":"sym","namespace":"Fiddle::Handle","path":"Fiddle::Handle.sym","type":"class_method","visibility":"public"},"Fiddle::Handle::DEFAULT":{"description":"A predefined pseudo-handle of RTLD_DEFAULT\n\nWhich will find the first occurrence of the desired symbol using the\ndefault library search order","name":"DEFAULT","namespace":"Fiddle::Handle","path":"Fiddle::Handle::DEFAULT","type":"constant","return":null,"visibility":"public"},"Fiddle::Handle::NEXT":{"description":"A predefined pseudo-handle of RTLD_NEXT\n\nWhich will find the next occurrence of a function in the search order\nafter the current library.","name":"NEXT","namespace":"Fiddle::Handle","path":"Fiddle::Handle::NEXT","type":"constant","return":null,"visibility":"public"},"Fiddle::Handle::RTLD_GLOBAL":{"description":":Handle flag.\n\nThe symbols defined by this library will be made available for symbol\nresolution of subsequently loaded libraries.","name":"RTLD_GLOBAL","namespace":"Fiddle::Handle","path":"Fiddle::Handle::RTLD_GLOBAL","type":"constant","return":null,"visibility":"public"},"Fiddle::Handle::RTLD_LAZY":{"description":":Handle flag.\n\nPerform lazy binding.  Only resolve symbols as the code that references\nthem is executed.  If the  symbol is never referenced, then it is never\nresolved.  (Lazy binding is only performed for function references;\nreferences to variables are always immediately bound when the library\nis loaded.)","name":"RTLD_LAZY","namespace":"Fiddle::Handle","path":"Fiddle::Handle::RTLD_LAZY","type":"constant","return":null,"visibility":"public"},"Fiddle::Handle::RTLD_NOW":{"description":":Handle flag.\n\nIf this value is specified or the environment variable LD_BIND_NOW is\nset to a nonempty string, all undefined symbols in the library are\nresolved before Fiddle.dlopen returns.  If this cannot be done an error\nis returned.","name":"RTLD_NOW","namespace":"Fiddle::Handle","path":"Fiddle::Handle::RTLD_NOW","type":"constant","return":null,"visibility":"public"},"Fiddle::Importer":{"description":"A DSL that provides the means to dynamically load libraries and build\nmodules around them including calling extern functions within the C\nlibrary that has been loaded.\n\n== Example\n\n  require 'fiddle'\n  require 'fiddle/import'\n\n  module LibSum\n  \textend Fiddle::Importer\n  \tdlload './libsum.so'\n  \textern 'double sum(double*, int)'\n  \textern 'double split(double)'\n  end","name":"Importer","namespace":"Fiddle","path":"Fiddle::Importer","type":"module","visibility":"public"},"Fiddle::Importer#[]":{"description":"Returns the function mapped to +name+, that was created by either\nFiddle::Importer.extern or Fiddle::Importer.bind","name":"[]","namespace":"Fiddle::Importer","path":"Fiddle::Importer#[]","type":"module_function","visibility":"public"},"Fiddle::Importer#bind":{"description":"Creates a global method from the given C +signature+ using the given\n+opts+ as bind parameters with the given block.","name":"bind","namespace":"Fiddle::Importer","path":"Fiddle::Importer#bind","type":"module_function","visibility":"public"},"Fiddle::Importer#bind_function":{"description":"Returns a new closure wrapper for the +name+ function.\n\n* +ctype+ is the return type of the function\n* +argtype+ is an Array of arguments, passed to the callback function\n* +call_type+ is the abi of the closure\n* +block+ is passed to the callback\n\nSee Fiddle::Closure","name":"bind_function","namespace":"Fiddle::Importer","path":"Fiddle::Importer#bind_function","type":"module_function","visibility":"public"},"Fiddle::Importer#create_value":{"description":"Creates a class to wrap the C struct with the value +ty+\n\nSee also Fiddle::Importer.struct","name":"value","namespace":"Fiddle::Importer","path":"Fiddle::Importer#value","type":"module_function","visibility":"public"},"Fiddle::Importer#value":{"description":"Creates a class to wrap the C struct with the value +ty+\n\nSee also Fiddle::Importer.struct","name":"value","namespace":"Fiddle::Importer","path":"Fiddle::Importer#value","type":"module_function","visibility":"public"},"Fiddle::Importer#dlload":{"description":"Creates an array of handlers for the given +libs+, can be an instance of\nFiddle::Handle, Fiddle::Importer, or will create a new instance of\nFiddle::Handle using Fiddle.dlopen\n\nRaises a DLError if the library cannot be loaded.\n\nSee Fiddle.dlopen","name":"dlload","namespace":"Fiddle::Importer","path":"Fiddle::Importer#dlload","type":"module_function","visibility":"public"},"Fiddle::Importer#extern":{"description":"Creates a global method from the given C +signature+.","name":"extern","namespace":"Fiddle::Importer","path":"Fiddle::Importer#extern","type":"module_function","visibility":"public"},"Fiddle::Importer#handler":{"description":"The Fiddle::CompositeHandler instance\n\nWill raise an error if no handlers are open.","name":"handler","namespace":"Fiddle::Importer","path":"Fiddle::Importer#handler","type":"module_function","visibility":"public"},"Fiddle::Importer#import_function":{"description":"Returns a new Fiddle::Function instance at the memory address of the given\n+name+ function.\n\nRaises a DLError if the +name+ doesn't exist.\n\n* +argtype+ is an Array of arguments, passed to the +name+ function.\n* +ctype+ is the return type of the function\n* +call_type+ is the ABI of the function\n\nSee also Fiddle:Function.new\n\nSee Fiddle::CompositeHandler.sym and Fiddle::Handler.sym","name":"import_function","namespace":"Fiddle::Importer","path":"Fiddle::Importer#import_function","type":"module_function","visibility":"public"},"Fiddle::Importer#import_symbol":{"description":"Returns a new Fiddle::Pointer instance at the memory address of the given\n+name+ symbol.\n\nRaises a DLError if the +name+ doesn't exist.\n\nSee Fiddle::CompositeHandler.sym and Fiddle::Handle.sym","name":"import_symbol","namespace":"Fiddle::Importer","path":"Fiddle::Importer#import_symbol","type":"module_function","visibility":"public"},"Fiddle::Importer#import_value":{"description":"Returns a new instance of the C struct with the value +ty+ at the +addr+\naddress.","name":"import_value","namespace":"Fiddle::Importer","path":"Fiddle::Importer#import_value","type":"module_function","visibility":"public"},"Fiddle::Importer#parse_bind_options":{"description":"","name":"parse_bind_options","namespace":"Fiddle::Importer","path":"Fiddle::Importer#parse_bind_options","type":"module_function","visibility":"private"},"Fiddle::Importer#sizeof":{"description":"Returns the sizeof +ty+, using Fiddle::Importer.parse_ctype to determine\nthe C type and the appropriate Fiddle constant.","name":"sizeof","namespace":"Fiddle::Importer","path":"Fiddle::Importer#sizeof","type":"module_function","visibility":"public"},"Fiddle::Importer#struct":{"description":"Creates a class to wrap the C struct described by +signature+.\n\n  MyStruct = struct ['int i', 'char c']","name":"struct","namespace":"Fiddle::Importer","path":"Fiddle::Importer#struct","type":"module_function","visibility":"public"},"Fiddle::Importer#typealias":{"description":"Sets the type alias for +alias_type+ as +orig_type+","name":"typealias","namespace":"Fiddle::Importer","path":"Fiddle::Importer#typealias","type":"module_function","visibility":"public"},"Fiddle::Importer#union":{"description":"Creates a class to wrap the C union described by +signature+.\n\n  MyUnion = union ['int i', 'char c']","name":"union","namespace":"Fiddle::Importer","path":"Fiddle::Importer#union","type":"module_function","visibility":"public"},"Fiddle::Importer::CALL_TYPE_TO_ABI":{"description":":stopdoc:","name":"CALL_TYPE_TO_ABI","namespace":"Fiddle::Importer","path":"Fiddle::Importer::CALL_TYPE_TO_ABI","type":"constant","return":null,"visibility":"private"},"Fiddle::NULL":{"description":"A NULL pointer","name":"NULL","namespace":"Fiddle","path":"Fiddle::NULL","type":"constant","return":null,"visibility":"public"},"Fiddle::PackInfo":{"description":":nodoc: all","name":"PackInfo","namespace":"Fiddle","path":"Fiddle::PackInfo","type":"module","visibility":"public"},"Fiddle::PackInfo#align":{"description":"","name":"align","namespace":"Fiddle::PackInfo","path":"Fiddle::PackInfo#align","type":"module_function","visibility":"private"},"Fiddle::PackInfo.align":{"description":"","name":"align","namespace":"Fiddle::PackInfo","path":"Fiddle::PackInfo.align","type":"module_function","visibility":"public"},"Fiddle::PackInfo::ALIGN_MAP":{"description":"","name":"ALIGN_MAP","namespace":"Fiddle::PackInfo","path":"Fiddle::PackInfo::ALIGN_MAP","type":"constant","return":null,"visibility":"public"},"Fiddle::PackInfo::PACK_MAP":{"description":"","name":"PACK_MAP","namespace":"Fiddle::PackInfo","path":"Fiddle::PackInfo::PACK_MAP","type":"constant","return":null,"visibility":"public"},"Fiddle::PackInfo::SIZE_MAP":{"description":"","name":"SIZE_MAP","namespace":"Fiddle::PackInfo","path":"Fiddle::PackInfo::SIZE_MAP","type":"constant","return":null,"visibility":"public"},"Fiddle::Packer":{"description":":nodoc: all","name":"Packer","namespace":"Fiddle","path":"Fiddle::Packer","type":"class","visibility":"public"},"Fiddle::Packer#initialize":{"description":"","name":"initialize","namespace":"Fiddle::Packer","path":"Fiddle::Packer#initialize","type":"instance_method","visibility":"public","return":[["Packer"],"a new instance of Packer"]},"Fiddle::Packer#pack":{"description":"","name":"pack","namespace":"Fiddle::Packer","path":"Fiddle::Packer#pack","type":"instance_method","visibility":"public"},"Fiddle::Packer#parse_types":{"description":"","name":"parse_types","namespace":"Fiddle::Packer","path":"Fiddle::Packer#parse_types","type":"instance_method","visibility":"private"},"Fiddle::Packer#size":{"description":"","name":"size","namespace":"Fiddle::Packer","path":"Fiddle::Packer#size","type":"instance_method","visibility":"public"},"Fiddle::Packer#unpack":{"description":"","name":"unpack","namespace":"Fiddle::Packer","path":"Fiddle::Packer#unpack","type":"instance_method","visibility":"public"},"Fiddle::Packer.[]":{"description":"","name":"[]","namespace":"Fiddle::Packer","path":"Fiddle::Packer.[]","type":"class_method","visibility":"public"},"Fiddle::Pointer":{"description":"Fiddle::Pointer is a class to handle C pointers","name":"Pointer","namespace":"Fiddle","path":"Fiddle::Pointer","type":"class","visibility":"public"},"Fiddle::Pointer#+":{"description":"Returns a new pointer instance that has been advanced +n+ bytes.","name":"+","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#+","type":"instance_method","visibility":"public"},"Fiddle::Pointer#+@":{"description":"Returns a new Fiddle::Pointer instance that is a dereferenced pointer for\nthis pointer.\n\nAnalogous to the star operator in C.","name":"+@","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#+@","type":"instance_method","visibility":"public"},"Fiddle::Pointer#-":{"description":"Returns a new pointer instance that has been moved back +n+ bytes.","name":"-","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#-","type":"instance_method","visibility":"public"},"Fiddle::Pointer#-@":{"description":"Returns a new Fiddle::Pointer instance that is a reference pointer for this\npointer.\n\nAnalogous to the ampersand operator in C.","name":"-@","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#-@","type":"instance_method","visibility":"public"},"Fiddle::Pointer#<=>":{"description":"Returns -1 if less than, 0 if equal to, 1 if greater than +other+.\n\nReturns nil if +ptr+ cannot be compared to +other+.","name":"<=>","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#<=>","type":"instance_method","visibility":"public"},"Fiddle::Pointer#==":{"description":"Returns true if +other+ wraps the same pointer, otherwise returns\nfalse.","name":"==","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#==","type":"instance_method","visibility":"public"},"Fiddle::Pointer#[]":{"description":"Returns integer stored at _index_.\n\nIf _start_ and _length_ are given, a string containing the bytes from\n_start_ of _length_ will be returned.","name":"[]","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#[]","type":"instance_method","visibility":"public"},"Fiddle::Pointer#[]=":{"description":"Set the value at +index+ to +int+.\n\nOr, set the memory at +start+ until +length+ with the contents of +string+,\nthe memory from +dl_cptr+, or the memory pointed at by the memory address\n+addr+.","name":"[]=","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#[]=","type":"instance_method","visibility":"public"},"Fiddle::Pointer#eql?":{"description":"Returns true if +other+ wraps the same pointer, otherwise returns\nfalse.","name":"eql?","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Fiddle::Pointer#free":{"description":"Get the free function for this pointer.\n\nReturns a new instance of Fiddle::Function.\n\nSee Fiddle::Function.new","name":"free","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#free","type":"instance_method","visibility":"public"},"Fiddle::Pointer#free=":{"description":"Set the free function for this pointer to +function+ in the given\nFiddle::Function.","name":"free=","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#free=","type":"instance_method","visibility":"public"},"Fiddle::Pointer#initialize":{"description":"Create a new pointer to +address+ with an optional +size+ and +freefunc+.\n\n+freefunc+ will be called when the instance is garbage collected.","name":"initialize","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#initialize","type":"instance_method","visibility":"public"},"Fiddle::Pointer#inspect":{"description":"Returns a string formatted with an easily readable representation of the\ninternal state of the pointer.","name":"inspect","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#inspect","type":"instance_method","visibility":"public"},"Fiddle::Pointer#null?":{"description":"Returns +true+ if this is a null pointer.","name":"null?","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#null?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Fiddle::Pointer#ptr":{"description":"Returns a new Fiddle::Pointer instance that is a dereferenced pointer for\nthis pointer.\n\nAnalogous to the star operator in C.","name":"ptr","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#ptr","type":"instance_method","visibility":"public"},"Fiddle::Pointer#ref":{"description":"Returns a new Fiddle::Pointer instance that is a reference pointer for this\npointer.\n\nAnalogous to the ampersand operator in C.","name":"ref","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#ref","type":"instance_method","visibility":"public"},"Fiddle::Pointer#size":{"description":"Get the size of this pointer.","name":"size","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#size","type":"instance_method","visibility":"public"},"Fiddle::Pointer#size=":{"description":"Set the size of this pointer to +size+","name":"size=","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#size=","type":"instance_method","visibility":"public"},"Fiddle::Pointer#to_i":{"description":"Returns the integer memory location of this pointer.","name":"to_i","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#to_i","type":"instance_method","visibility":"public"},"Fiddle::Pointer#to_int":{"description":"Returns the integer memory location of this pointer.","name":"to_int","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#to_int","type":"instance_method","visibility":"public"},"Fiddle::Pointer#to_s":{"description":"Returns the pointer contents as a string.\n\nWhen called with no arguments, this method will return the contents until\nthe first NULL byte.\n\nWhen called with +len+, a string of +len+ bytes will be returned.\n\nSee to_str","name":"to_s","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#to_s","type":"instance_method","visibility":"public"},"Fiddle::Pointer#to_str":{"description":"Returns the pointer contents as a string.\n\nWhen called with no arguments, this method will return the contents with the\nlength of this pointer's +size+.\n\nWhen called with +len+, a string of +len+ bytes will be returned.\n\nSee to_s","name":"to_str","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#to_str","type":"instance_method","visibility":"public"},"Fiddle::Pointer#to_value":{"description":"Cast this pointer to a ruby object.","name":"to_value","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer#to_value","type":"instance_method","visibility":"public"},"Fiddle::Pointer.[]":{"description":"Get the underlying pointer for ruby object +val+ and return it as a\nFiddle::Pointer object.","name":"[]","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer.[]","type":"class_method","visibility":"public"},"Fiddle::Pointer.malloc":{"description":"Allocate +size+ bytes of memory and associate it with an optional\n+freefunc+ that will be called when the pointer is garbage collected.\n\n+freefunc+ must be an address pointing to a function or an instance of\nFiddle::Function","name":"malloc","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer.malloc","type":"class_method","visibility":"public"},"Fiddle::Pointer.to_ptr":{"description":"Get the underlying pointer for ruby object +val+ and return it as a\nFiddle::Pointer object.","name":"to_ptr","namespace":"Fiddle::Pointer","path":"Fiddle::Pointer.to_ptr","type":"class_method","visibility":"public"},"Fiddle::RTLD_GLOBAL":{"description":"Add constants for backwards compat","name":"RTLD_GLOBAL","namespace":"Fiddle","path":"Fiddle::RTLD_GLOBAL","type":"constant","return":null,"visibility":"public"},"Fiddle::RTLD_LAZY":{"description":":nodoc:","name":"RTLD_LAZY","namespace":"Fiddle","path":"Fiddle::RTLD_LAZY","type":"constant","return":null,"visibility":"public"},"Fiddle::RTLD_NOW":{"description":":nodoc:","name":"RTLD_NOW","namespace":"Fiddle","path":"Fiddle::RTLD_NOW","type":"constant","return":null,"visibility":"public"},"Fiddle::RUBY_FREE":{"description":"Address of the ruby_xfree() function","name":"RUBY_FREE","namespace":"Fiddle","path":"Fiddle::RUBY_FREE","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_CHAR":{"description":"size of a char","name":"SIZEOF_CHAR","namespace":"Fiddle","path":"Fiddle::SIZEOF_CHAR","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_DOUBLE":{"description":"size of a double","name":"SIZEOF_DOUBLE","namespace":"Fiddle","path":"Fiddle::SIZEOF_DOUBLE","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_FLOAT":{"description":"size of a float","name":"SIZEOF_FLOAT","namespace":"Fiddle","path":"Fiddle::SIZEOF_FLOAT","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_INT":{"description":"size of an int","name":"SIZEOF_INT","namespace":"Fiddle","path":"Fiddle::SIZEOF_INT","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_INTPTR_T":{"description":"size of a intptr_t","name":"SIZEOF_INTPTR_T","namespace":"Fiddle","path":"Fiddle::SIZEOF_INTPTR_T","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_LONG":{"description":"size of a long","name":"SIZEOF_LONG","namespace":"Fiddle","path":"Fiddle::SIZEOF_LONG","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_LONG_LONG":{"description":"size of a long long","name":"SIZEOF_LONG_LONG","namespace":"Fiddle","path":"Fiddle::SIZEOF_LONG_LONG","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_PTRDIFF_T":{"description":"size of a ptrdiff_t","name":"SIZEOF_PTRDIFF_T","namespace":"Fiddle","path":"Fiddle::SIZEOF_PTRDIFF_T","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_SHORT":{"description":"size of a short","name":"SIZEOF_SHORT","namespace":"Fiddle","path":"Fiddle::SIZEOF_SHORT","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_SIZE_T":{"description":"size of a size_t","name":"SIZEOF_SIZE_T","namespace":"Fiddle","path":"Fiddle::SIZEOF_SIZE_T","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_SSIZE_T":{"description":"same as size_t","name":"SIZEOF_SSIZE_T","namespace":"Fiddle","path":"Fiddle::SIZEOF_SSIZE_T","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_UINTPTR_T":{"description":"size of a uintptr_t","name":"SIZEOF_UINTPTR_T","namespace":"Fiddle","path":"Fiddle::SIZEOF_UINTPTR_T","type":"constant","return":null,"visibility":"public"},"Fiddle::SIZEOF_VOIDP":{"description":"size of a void*","name":"SIZEOF_VOIDP","namespace":"Fiddle","path":"Fiddle::SIZEOF_VOIDP","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_CHAR":{"description":"C type - char","name":"TYPE_CHAR","namespace":"Fiddle","path":"Fiddle::TYPE_CHAR","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_DOUBLE":{"description":"C type - double","name":"TYPE_DOUBLE","namespace":"Fiddle","path":"Fiddle::TYPE_DOUBLE","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_FLOAT":{"description":"C type - float","name":"TYPE_FLOAT","namespace":"Fiddle","path":"Fiddle::TYPE_FLOAT","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_INT":{"description":"C type - int","name":"TYPE_INT","namespace":"Fiddle","path":"Fiddle::TYPE_INT","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_INTPTR_T":{"description":"C type - intptr_t","name":"TYPE_INTPTR_T","namespace":"Fiddle","path":"Fiddle::TYPE_INTPTR_T","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_LONG":{"description":"C type - long","name":"TYPE_LONG","namespace":"Fiddle","path":"Fiddle::TYPE_LONG","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_LONG_LONG":{"description":"C type - long long","name":"TYPE_LONG_LONG","namespace":"Fiddle","path":"Fiddle::TYPE_LONG_LONG","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_PTRDIFF_T":{"description":"C type - ptrdiff_t","name":"TYPE_PTRDIFF_T","namespace":"Fiddle","path":"Fiddle::TYPE_PTRDIFF_T","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_SHORT":{"description":"C type - short","name":"TYPE_SHORT","namespace":"Fiddle","path":"Fiddle::TYPE_SHORT","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_SIZE_T":{"description":"C type - size_t","name":"TYPE_SIZE_T","namespace":"Fiddle","path":"Fiddle::TYPE_SIZE_T","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_SSIZE_T":{"description":"C type - ssize_t","name":"TYPE_SSIZE_T","namespace":"Fiddle","path":"Fiddle::TYPE_SSIZE_T","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_UINTPTR_T":{"description":"C type - uintptr_t","name":"TYPE_UINTPTR_T","namespace":"Fiddle","path":"Fiddle::TYPE_UINTPTR_T","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_VOID":{"description":"C type - void","name":"TYPE_VOID","namespace":"Fiddle","path":"Fiddle::TYPE_VOID","type":"constant","return":null,"visibility":"public"},"Fiddle::TYPE_VOIDP":{"description":"C type - void*","name":"TYPE_VOIDP","namespace":"Fiddle","path":"Fiddle::TYPE_VOIDP","type":"constant","return":null,"visibility":"public"},"Fiddle::ValueUtil":{"description":":nodoc: all","name":"ValueUtil","namespace":"Fiddle","path":"Fiddle::ValueUtil","type":"module","visibility":"public"},"Fiddle::ValueUtil#signed_value":{"description":"","name":"signed_value","namespace":"Fiddle::ValueUtil","path":"Fiddle::ValueUtil#signed_value","type":"module_function","visibility":"public"},"Fiddle::ValueUtil#unsigned_value":{"description":"","name":"unsigned_value","namespace":"Fiddle::ValueUtil","path":"Fiddle::ValueUtil#unsigned_value","type":"module_function","visibility":"public"},"Fiddle::ValueUtil#wrap_arg":{"description":"","name":"wrap_arg","namespace":"Fiddle::ValueUtil","path":"Fiddle::ValueUtil#wrap_arg","type":"module_function","visibility":"public"},"Fiddle::ValueUtil#wrap_args":{"description":"","name":"wrap_args","namespace":"Fiddle::ValueUtil","path":"Fiddle::ValueUtil#wrap_args","type":"module_function","visibility":"public"},"Fiddle::WINDOWS":{"description":"","name":"WINDOWS","namespace":"Fiddle","path":"Fiddle::WINDOWS","type":"constant","return":null,"visibility":"public"},"Fiddle::Win32Types":{"description":"Adds Windows type aliases to the including class for use with\nFiddle::Importer.\n\nThe aliases added are:\n* ATOM\n* BOOL\n* BYTE\n* DWORD\n* DWORD32\n* DWORD64\n* HANDLE\n* HDC\n* HINSTANCE\n* HWND\n* LPCSTR\n* LPSTR\n* PBYTE\n* PDWORD\n* PHANDLE\n* PVOID\n* PWORD\n* UCHAR\n* UINT\n* ULONG\n* WORD","name":"Win32Types","namespace":"Fiddle","path":"Fiddle::Win32Types","type":"module","visibility":"public"},"Fiddle::Win32Types#included":{"description":":nodoc:","name":"included","namespace":"Fiddle::Win32Types","path":"Fiddle::Win32Types#included","type":"module_function","visibility":"private"},"Fiddle::Win32Types.included":{"description":":nodoc:","name":"included","namespace":"Fiddle::Win32Types","path":"Fiddle::Win32Types.included","type":"module_function","visibility":"public"},"JSON":{"description":"= JavaScript Object Notation (JSON)\n\nJSON is a lightweight data-interchange format. It is easy for us\nhumans to read and write. Plus, equally simple for machines to generate or parse.\nJSON is completely language agnostic, making it the ideal interchange format.\n\nBuilt on two universally available structures:\n  1. A collection of name/value pairs. Often referred to as an _object_, hash table, record, struct, keyed list, or associative array.\n  2. An ordered list of values. More commonly called an _array_, vector, sequence or list.\n\nTo read more about JSON visit: http://json.org\n\n== Parsing JSON\n\nTo parse a JSON string received by another application or generated within\nyour existing application:\n\n  require 'json'\n\n  my_hash = JSON.parse('{\"hello\": \"goodbye\"}')\n  puts my_hash[\"hello\"] => \"goodbye\"\n\nNotice the extra quotes <tt>''</tt> around the hash notation. Ruby expects\nthe argument to be a string and can't convert objects like a hash or array.\n\nRuby converts your string into a hash\n\n== Generating JSON\n\nCreating a JSON string for communication or serialization is\njust as simple.\n\n  require 'json'\n\n  my_hash = {:hello => \"goodbye\"}\n  puts JSON.generate(my_hash) => \"{\\\"hello\\\":\\\"goodbye\\\"}\"\n\nOr an alternative way:\n\n  require 'json'\n  puts {:hello => \"goodbye\"}.to_json => \"{\\\"hello\\\":\\\"goodbye\\\"}\"\n\n<tt>JSON.generate</tt> only allows objects or arrays to be converted\nto JSON syntax. <tt>to_json</tt>, however, accepts many Ruby classes\neven though it acts only as a method for serialization:\n\n  require 'json'\n\n  1.to_json => \"1\"","name":"JSON","namespace":"","path":"JSON","type":"module","visibility":"public"},"JSON#dump":{"description":"Dumps _obj_ as a JSON string, i.e. calls generate on the object and returns\nthe result.\n\nIf anIO (an IO-like object or an object that responds to the write method)\nwas given, the resulting JSON is written to it.\n\nIf the number of nested arrays or objects exceeds _limit_, an ArgumentError\nexception is raised. This argument is similar (but not exactly the\nsame!) to the _limit_ argument in Marshal.dump.\n\nThe default options for the generator can be changed via the\ndump_default_options method.\n\nThis method is part of the implementation of the load/dump interface of\nMarshal and YAML.","name":"dump","namespace":"JSON","path":"JSON#dump","type":"module_function","visibility":"private"},"JSON#fast_generate":{"description":"Generate a JSON document from the Ruby data structure _obj_ and return it.\nThis method disables the checks for circles in Ruby objects.\n\n*WARNING*: Be careful not to pass any Ruby data structures with circles as\n_obj_ argument because this will cause JSON to go into an infinite loop.","name":"fast_generate","namespace":"JSON","path":"JSON#fast_generate","type":"module_function","visibility":"private"},"JSON#fast_unparse":{"description":":stopdoc:\nI want to deprecate these later, so I'll first be silent about them, and later delete them.","name":"fast_unparse","namespace":"JSON","path":"JSON#fast_unparse","type":"module_function","visibility":"private"},"JSON#generate":{"description":"Generate a JSON document from the Ruby data structure _obj_ and return\nit. _state_ is * a JSON::State object,\n* or a Hash like object (responding to to_hash),\n* an object convertible into a hash by a to_h method,\nthat is used as or to configure a State object.\n\nIt defaults to a state object, that creates the shortest possible JSON text\nin one line, checks for circular data structures and doesn't allow NaN,\nInfinity, and -Infinity.\n\nA _state_ hash can have the following keys:\n* *indent*: a string used to indent levels (default: ''),\n* *space*: a string that is put after, a : or , delimiter (default: ''),\n* *space_before*: a string that is put before a : pair delimiter (default: ''),\n* *object_nl*: a string that is put at the end of a JSON object (default: ''),\n* *array_nl*: a string that is put at the end of a JSON array (default: ''),\n* *allow_nan*: true if NaN, Infinity, and -Infinity should be\n  generated, otherwise an exception is thrown if these values are\n  encountered. This options defaults to false.\n* *max_nesting*: The maximum depth of nesting allowed in the data\n  structures from which JSON is to be generated. Disable depth checking\n  with :max_nesting => false, it defaults to 100.\n\nSee also the fast_generate for the fastest creation method with the least\namount of sanity checks, and the pretty_generate method for some\ndefaults for pretty output.","name":"generate","namespace":"JSON","path":"JSON#generate","type":"module_function","visibility":"private"},"JSON#load":{"description":"Load a ruby data structure from a JSON _source_ and return it. A source can\neither be a string-like object, an IO-like object, or an object responding\nto the read method. If _proc_ was given, it will be called with any nested\nRuby object as an argument recursively in depth first order. To modify the\ndefault options pass in the optional _options_ argument as well.\n\nBEWARE: This method is meant to serialise data from trusted user input,\nlike from your own database server or clients under your control, it could\nbe dangerous to allow untrusted users to pass JSON sources into it. The\ndefault options for the parser can be changed via the load_default_options\nmethod.\n\nThis method is part of the implementation of the load/dump interface of\nMarshal and YAML.","name":"load","namespace":"JSON","path":"JSON#load","type":"module_function","visibility":"private"},"JSON#parse":{"description":"Parse the JSON document _source_ into a Ruby data structure and return it.\n\n_opts_ can have the following\nkeys:\n* *max_nesting*: The maximum depth of nesting allowed in the parsed data\n  structures. Disable depth checking with :max_nesting => false. It defaults\n  to 100.\n* *allow_nan*: If set to true, allow NaN, Infinity and -Infinity in\n  defiance of RFC 4627 to be parsed by the Parser. This option defaults\n  to false.\n* *symbolize_names*: If set to true, returns symbols for the names\n  (keys) in a JSON object. Otherwise strings are returned. Strings are\n  the default.\n* *create_additions*: If set to false, the Parser doesn't create\n  additions even if a matching class and create_id was found. This option\n  defaults to true.\n* *object_class*: Defaults to Hash\n* *array_class*: Defaults to Array","name":"parse","namespace":"JSON","path":"JSON#parse","type":"module_function","visibility":"private"},"JSON#parse!":{"description":"Parse the JSON document _source_ into a Ruby data structure and return it.\nThe bang version of the parse method defaults to the more dangerous values\nfor the _opts_ hash, so be sure only to parse trusted _source_ documents.\n\n_opts_ can have the following keys:\n* *max_nesting*: The maximum depth of nesting allowed in the parsed data\n  structures. Enable depth checking with :max_nesting => anInteger. The parse!\n  methods defaults to not doing max depth checking: This can be dangerous\n  if someone wants to fill up your stack.\n* *allow_nan*: If set to true, allow NaN, Infinity, and -Infinity in\n  defiance of RFC 4627 to be parsed by the Parser. This option defaults\n  to true.\n* *create_additions*: If set to false, the Parser doesn't create\n  additions even if a matching class and create_id was found. This option\n  defaults to true.","name":"parse!","namespace":"JSON","path":"JSON#parse!","type":"module_function","visibility":"private"},"JSON#pretty_generate":{"description":"Generate a JSON document from the Ruby data structure _obj_ and return it.\nThe returned document is a prettier form of the document returned by\n#unparse.\n\nThe _opts_ argument can be used to configure the generator. See the\ngenerate method for a more detailed explanation.","name":"pretty_generate","namespace":"JSON","path":"JSON#pretty_generate","type":"module_function","visibility":"private"},"JSON#pretty_unparse":{"description":":stopdoc:\nI want to deprecate these later, so I'll first be silent about them, and later delete them.","name":"pretty_unparse","namespace":"JSON","path":"JSON#pretty_unparse","type":"module_function","visibility":"private"},"JSON#recurse_proc":{"description":"Recursively calls passed _Proc_ if the parsed data structure is an _Array_ or _Hash_","name":"recurse_proc","namespace":"JSON","path":"JSON#recurse_proc","type":"module_function","visibility":"private"},"JSON#restore":{"description":"","name":"restore","namespace":"JSON","path":"JSON#restore","type":"module_function","visibility":"private"},"JSON#unparse":{"description":":stopdoc:\nI want to deprecate these later, so I'll first be silent about them, and\nlater delete them.","name":"unparse","namespace":"JSON","path":"JSON#unparse","type":"module_function","visibility":"private"},"JSON.[]":{"description":"If _object_ is string-like, parse the string and return the parsed result\nas a Ruby data structure. Otherwise generate a JSON text from the Ruby\ndata structure object and return it.\n\nThe _opts_ argument is passed through to generate/parse respectively. See\ngenerate and parse for their documentation.","name":"[]","namespace":"JSON","path":"JSON.[]","type":"module_function","visibility":"public"},"JSON.const_defined_in?":{"description":"","name":"const_defined_in?","namespace":"JSON","path":"JSON.const_defined_in?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"JSON.create_id":{"description":"This is create identifier, which is used to decide if the _json_create_\nhook of a class should be called. It defaults to 'json_class'.","name":"create_id","namespace":"JSON","path":"JSON.create_id","type":"module_function","visibility":"public"},"JSON.create_id=":{"description":"This is create identifier, which is used to decide if the _json_create_\nhook of a class should be called. It defaults to 'json_class'.","name":"create_id=","namespace":"JSON","path":"JSON.create_id=","type":"module_function","visibility":"public"},"JSON.deep_const_get":{"description":"Return the constant located at _path_. The format of _path_ has to be\neither ::A::B::C or A::B::C. In any case, A has to be located at the top\nlevel (absolute namespace path?). If there doesn't exist a constant at\nthe given path, an ArgumentError is raised.","name":"deep_const_get","namespace":"JSON","path":"JSON.deep_const_get","type":"module_function","visibility":"public"},"JSON.dump":{"description":"Dumps _obj_ as a JSON string, i.e. calls generate on the object and returns\nthe result.\n\nIf anIO (an IO-like object or an object that responds to the write method)\nwas given, the resulting JSON is written to it.\n\nIf the number of nested arrays or objects exceeds _limit_, an ArgumentError\nexception is raised. This argument is similar (but not exactly the\nsame!) to the _limit_ argument in Marshal.dump.\n\nThe default options for the generator can be changed via the\ndump_default_options method.\n\nThis method is part of the implementation of the load/dump interface of\nMarshal and YAML.","name":"dump","namespace":"JSON","path":"JSON.dump","type":"module_function","visibility":"public"},"JSON.dump_default_options":{"description":"The global default options for the JSON.dump method:\n :max_nesting: false\n :allow_nan:   true\n :quirks_mode: true","name":"dump_default_options","namespace":"JSON","path":"JSON.dump_default_options","type":"module_function","visibility":"public"},"JSON.dump_default_options=":{"description":"The global default options for the JSON.dump method:\n :max_nesting: false\n :allow_nan:   true\n :quirks_mode: true","name":"dump_default_options=","namespace":"JSON","path":"JSON.dump_default_options=","type":"module_function","visibility":"public"},"JSON.fast_generate":{"description":"Generate a JSON document from the Ruby data structure _obj_ and return it.\nThis method disables the checks for circles in Ruby objects.\n\n*WARNING*: Be careful not to pass any Ruby data structures with circles as\n_obj_ argument because this will cause JSON to go into an infinite loop.","name":"fast_unparse","namespace":"JSON","path":"JSON.fast_unparse","type":"module_function","visibility":"public"},"JSON.fast_unparse":{"description":":stopdoc:\nI want to deprecate these later, so I'll first be silent about them, and later delete them.","name":"fast_unparse","namespace":"JSON","path":"JSON.fast_unparse","type":"module_function","visibility":"public"},"JSON.generate":{"description":"Generate a JSON document from the Ruby data structure _obj_ and return\nit. _state_ is * a JSON::State object,\n* or a Hash like object (responding to to_hash),\n* an object convertible into a hash by a to_h method,\nthat is used as or to configure a State object.\n\nIt defaults to a state object, that creates the shortest possible JSON text\nin one line, checks for circular data structures and doesn't allow NaN,\nInfinity, and -Infinity.\n\nA _state_ hash can have the following keys:\n* *indent*: a string used to indent levels (default: ''),\n* *space*: a string that is put after, a : or , delimiter (default: ''),\n* *space_before*: a string that is put before a : pair delimiter (default: ''),\n* *object_nl*: a string that is put at the end of a JSON object (default: ''),\n* *array_nl*: a string that is put at the end of a JSON array (default: ''),\n* *allow_nan*: true if NaN, Infinity, and -Infinity should be\n  generated, otherwise an exception is thrown if these values are\n  encountered. This options defaults to false.\n* *max_nesting*: The maximum depth of nesting allowed in the data\n  structures from which JSON is to be generated. Disable depth checking\n  with :max_nesting => false, it defaults to 100.\n\nSee also the fast_generate for the fastest creation method with the least\namount of sanity checks, and the pretty_generate method for some\ndefaults for pretty output.","name":"unparse","namespace":"JSON","path":"JSON.unparse","type":"module_function","visibility":"public"},"JSON.unparse":{"description":":stopdoc:\nI want to deprecate these later, so I'll first be silent about them, and\nlater delete them.","name":"unparse","namespace":"JSON","path":"JSON.unparse","type":"module_function","visibility":"public"},"JSON.generator":{"description":"Returns the JSON generator module that is used by JSON. This is\neither JSON::Ext::Generator or JSON::Pure::Generator.","name":"generator","namespace":"JSON","path":"JSON.generator","type":"module_function","visibility":"public"},"JSON.generator=":{"description":"Set the module _generator_ to be used by JSON.","name":"generator=","namespace":"JSON","path":"JSON.generator=","type":"module_function","visibility":"public"},"JSON.iconv":{"description":"Encodes string using _iconv_ library","name":"iconv","namespace":"JSON","path":"JSON.iconv","type":"module_function","visibility":"public"},"JSON.load":{"description":"Load a ruby data structure from a JSON _source_ and return it. A source can\neither be a string-like object, an IO-like object, or an object responding\nto the read method. If _proc_ was given, it will be called with any nested\nRuby object as an argument recursively in depth first order. To modify the\ndefault options pass in the optional _options_ argument as well.\n\nBEWARE: This method is meant to serialise data from trusted user input,\nlike from your own database server or clients under your control, it could\nbe dangerous to allow untrusted users to pass JSON sources into it. The\ndefault options for the parser can be changed via the load_default_options\nmethod.\n\nThis method is part of the implementation of the load/dump interface of\nMarshal and YAML.","name":"restore","namespace":"JSON","path":"JSON.restore","type":"module_function","visibility":"public"},"JSON.restore":{"description":"","name":"restore","namespace":"JSON","path":"JSON.restore","type":"module_function","visibility":"public"},"JSON.load_default_options":{"description":"The global default options for the JSON.load method:\n :max_nesting: false\n :allow_nan:   true\n :quirks_mode: true","name":"load_default_options","namespace":"JSON","path":"JSON.load_default_options","type":"module_function","visibility":"public"},"JSON.load_default_options=":{"description":"The global default options for the JSON.load method:\n :max_nesting: false\n :allow_nan:   true\n :quirks_mode: true","name":"load_default_options=","namespace":"JSON","path":"JSON.load_default_options=","type":"module_function","visibility":"public"},"JSON.parse":{"description":"Parse the JSON document _source_ into a Ruby data structure and return it.\n\n_opts_ can have the following\nkeys:\n* *max_nesting*: The maximum depth of nesting allowed in the parsed data\n  structures. Disable depth checking with :max_nesting => false. It defaults\n  to 100.\n* *allow_nan*: If set to true, allow NaN, Infinity and -Infinity in\n  defiance of RFC 4627 to be parsed by the Parser. This option defaults\n  to false.\n* *symbolize_names*: If set to true, returns symbols for the names\n  (keys) in a JSON object. Otherwise strings are returned. Strings are\n  the default.\n* *create_additions*: If set to false, the Parser doesn't create\n  additions even if a matching class and create_id was found. This option\n  defaults to true.\n* *object_class*: Defaults to Hash\n* *array_class*: Defaults to Array","name":"parse","namespace":"JSON","path":"JSON.parse","type":"module_function","visibility":"public"},"JSON.parse!":{"description":"Parse the JSON document _source_ into a Ruby data structure and return it.\nThe bang version of the parse method defaults to the more dangerous values\nfor the _opts_ hash, so be sure only to parse trusted _source_ documents.\n\n_opts_ can have the following keys:\n* *max_nesting*: The maximum depth of nesting allowed in the parsed data\n  structures. Enable depth checking with :max_nesting => anInteger. The parse!\n  methods defaults to not doing max depth checking: This can be dangerous\n  if someone wants to fill up your stack.\n* *allow_nan*: If set to true, allow NaN, Infinity, and -Infinity in\n  defiance of RFC 4627 to be parsed by the Parser. This option defaults\n  to true.\n* *create_additions*: If set to false, the Parser doesn't create\n  additions even if a matching class and create_id was found. This option\n  defaults to true.","name":"parse!","namespace":"JSON","path":"JSON.parse!","type":"module_function","visibility":"public"},"JSON.parser":{"description":"Returns the JSON parser class that is used by JSON. This is either\nJSON::Ext::Parser or JSON::Pure::Parser.","name":"parser","namespace":"JSON","path":"JSON.parser","type":"module_function","visibility":"public"},"JSON.parser=":{"description":"Set the JSON parser class _parser_ to be used by JSON.","name":"parser=","namespace":"JSON","path":"JSON.parser=","type":"module_function","visibility":"public"},"JSON.pretty_generate":{"description":"Generate a JSON document from the Ruby data structure _obj_ and return it.\nThe returned document is a prettier form of the document returned by\n#unparse.\n\nThe _opts_ argument can be used to configure the generator. See the\ngenerate method for a more detailed explanation.","name":"pretty_unparse","namespace":"JSON","path":"JSON.pretty_unparse","type":"module_function","visibility":"public"},"JSON.pretty_unparse":{"description":":stopdoc:\nI want to deprecate these later, so I'll first be silent about them, and later delete them.","name":"pretty_unparse","namespace":"JSON","path":"JSON.pretty_unparse","type":"module_function","visibility":"public"},"JSON.recurse_proc":{"description":"Recursively calls passed _Proc_ if the parsed data structure is an _Array_ or _Hash_","name":"recurse_proc","namespace":"JSON","path":"JSON.recurse_proc","type":"module_function","visibility":"public"},"JSON.state":{"description":"Returns the JSON generator state class that is used by JSON. This is\neither JSON::Ext::Generator::State or JSON::Pure::Generator::State.","name":"state","namespace":"JSON","path":"JSON.state","type":"module_function","visibility":"public"},"JSON.state=":{"description":"Returns the JSON generator state class that is used by JSON. This is\neither JSON::Ext::Generator::State or JSON::Pure::Generator::State.","name":"state=","namespace":"JSON","path":"JSON.state=","type":"module_function","visibility":"public"},"JSON.swap!":{"description":"Swap consecutive bytes of _string_ in place.","name":"swap!","namespace":"JSON","path":"JSON.swap!","type":"module_function","visibility":"public"},"JSON::CircularDatastructure":{"description":":stopdoc:","name":"CircularDatastructure","namespace":"JSON","path":"JSON::CircularDatastructure","type":"class","visibility":"public"},"JSON::Ext":{"description":"This module holds all the modules/classes that implement JSON's\nfunctionality as C extensions.","name":"Ext","namespace":"JSON","path":"JSON::Ext","type":"module","visibility":"public"},"JSON::Ext::Generator":{"description":"This is the JSON generator implemented as a C extension. It can be\nconfigured to be used by setting\n\n JSON.generator = JSON::Ext::Generator\n\nwith the method generator= in JSON.","name":"Generator","namespace":"JSON::Ext","path":"JSON::Ext::Generator","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods":{"description":"","name":"GeneratorMethods","namespace":"JSON::Ext::Generator","path":"JSON::Ext::Generator::GeneratorMethods","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::Array":{"description":"","name":"Array","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::Array","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::Bignum":{"description":"","name":"Bignum","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::Bignum","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::FalseClass":{"description":"","name":"FalseClass","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::FalseClass","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::Fixnum":{"description":"","name":"Fixnum","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::Fixnum","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::Float":{"description":"","name":"Float","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::Float","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::Hash":{"description":"","name":"Hash","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::Hash","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::NilClass":{"description":"","name":"NilClass","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::NilClass","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::Object":{"description":"","name":"Object","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::Object","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::String":{"description":"","name":"String","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::String","type":"module","visibility":"public"},"JSON::Ext::Generator::GeneratorMethods::TrueClass":{"description":"","name":"TrueClass","namespace":"JSON::Ext::Generator::GeneratorMethods","path":"JSON::Ext::Generator::GeneratorMethods::TrueClass","type":"module","visibility":"public"},"JSON::Ext::Generator::State":{"description":"","name":"State","namespace":"JSON::Ext::Generator","path":"JSON::Ext::Generator::State","type":"class","visibility":"public"},"JSON::Ext::Generator::State#[]":{"description":"Return the value returned by method +name+.","name":"[]","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#[]","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#[]=":{"description":"Set the attribute name to value.","name":"[]=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#[]=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#allow_nan?":{"description":"Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise\nreturns false.","name":"allow_nan?","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#allow_nan?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"JSON::Ext::Generator::State#array_nl":{"description":"This string is put at the end of a line that holds a JSON array.","name":"array_nl","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#array_nl","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#array_nl=":{"description":"This string is put at the end of a line that holds a JSON array.","name":"array_nl=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#array_nl=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#ascii_only?":{"description":"Returns true, if NaN, Infinity, and -Infinity should be generated, otherwise\nreturns false.","name":"ascii_only?","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#ascii_only?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"JSON::Ext::Generator::State#buffer_initial_length":{"description":"This integer returns the current inital length of the buffer.","name":"buffer_initial_length","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#buffer_initial_length","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#buffer_initial_length=":{"description":"This sets the initial length of the buffer to +length+, if +length+ > 0,\notherwise its value isn't changed.","name":"buffer_initial_length=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#buffer_initial_length=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#check_circular?":{"description":"Returns true, if circular data structures should be checked,\notherwise returns false.","name":"check_circular?","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#check_circular?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"JSON::Ext::Generator::State#configure":{"description":"Configure this State instance with the Hash _opts_, and return\nitself.","name":"merge","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#merge","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#merge":{"description":"Configure this State instance with the Hash _opts_, and return\nitself.","name":"merge","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#merge","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#depth":{"description":"This integer returns the current depth of data structure nesting.","name":"depth","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#depth","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#depth=":{"description":"This sets the maximum level of data structure nesting in the generated JSON\nto the integer depth, max_nesting = 0 if no maximum should be checked.","name":"depth=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#depth=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#generate":{"description":"Generates a valid JSON document from object +obj+ and returns the\nresult. If no valid JSON document can be created this method raises a\nGeneratorError exception.","name":"generate","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#generate","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#indent":{"description":"This string is used to indent levels in the JSON text.","name":"indent","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#indent","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#indent=":{"description":"This string is used to indent levels in the JSON text.","name":"indent=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#indent=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#initialize":{"description":"Instantiates a new State object, configured by _opts_.\n\n_opts_ can have the following keys:\n\n* *indent*: a string used to indent levels (default: ''),\n* *space*: a string that is put after, a : or , delimiter (default: ''),\n* *space_before*: a string that is put before a : pair delimiter (default: ''),\n* *object_nl*: a string that is put at the end of a JSON object (default: ''),\n* *array_nl*: a string that is put at the end of a JSON array (default: ''),\n* *allow_nan*: true if NaN, Infinity, and -Infinity should be\n  generated, otherwise an exception is thrown, if these values are\n  encountered. This options defaults to false.\n* *quirks_mode*: Enables quirks_mode for parser, that is for example\n  generating single JSON values instead of documents is possible.\n* *buffer_initial_length*: sets the initial length of the generator's\n  internal buffer.","name":"initialize","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#initialize","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#initialize_copy":{"description":"Initializes this object from orig if it to be duplicated/cloned and returns\nit.","name":"initialize_copy","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#initialize_copy","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#max_nesting":{"description":"This integer returns the maximum level of data structure nesting in\nthe generated JSON, max_nesting = 0 if no maximum is checked.","name":"max_nesting","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#max_nesting","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#max_nesting=":{"description":"This sets the maximum level of data structure nesting in the generated JSON\nto the integer depth, max_nesting = 0 if no maximum should be checked.","name":"max_nesting=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#max_nesting=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#object_nl":{"description":"This string is put at the end of a line that holds a JSON object (or\nHash).","name":"object_nl","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#object_nl","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#object_nl=":{"description":"This string is put at the end of a line that holds a JSON object (or\nHash).","name":"object_nl=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#object_nl=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#quirks_mode":{"description":"Returns true, if quirks mode is enabled. Otherwise returns false.","name":"quirks_mode","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#quirks_mode","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#quirks_mode=":{"description":"If set to true, enables the quirks_mode mode.","name":"quirks_mode=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#quirks_mode=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#quirks_mode?":{"description":"Returns true, if quirks mode is enabled. Otherwise returns false.","name":"quirks_mode?","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#quirks_mode?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"JSON::Ext::Generator::State#space":{"description":"This string is used to insert a space between the tokens in a JSON\nstring.","name":"space","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#space","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#space=":{"description":"This string is used to insert a space between the tokens in a JSON\nstring.","name":"space=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#space=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#space_before":{"description":"This string is used to insert a space before the ':' in JSON objects.","name":"space_before","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#space_before","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#space_before=":{"description":"This string is used to insert a space before the ':' in JSON objects.","name":"space_before=","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#space_before=","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#to_h":{"description":"Returns the configuration instance variables as a hash, that can be\npassed to the configure method.","name":"to_hash","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#to_hash","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State#to_hash":{"description":"Returns the configuration instance variables as a hash, that can be\npassed to the configure method.","name":"to_hash","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State#to_hash","type":"instance_method","visibility":"public"},"JSON::Ext::Generator::State.from_state":{"description":"Creates a State object from _opts_, which ought to be Hash to create a\nnew State instance configured by _opts_, something else to create an\nunconfigured instance. If _opts_ is a State object, it is just returned.","name":"from_state","namespace":"JSON::Ext::Generator::State","path":"JSON::Ext::Generator::State.from_state","type":"class_method","visibility":"public"},"JSON::Ext::Parser":{"description":"This is the JSON parser implemented as a C extension. It can be configured\nto be used by setting\n\n JSON.parser = JSON::Ext::Parser\n\nwith the method parser= in JSON.","name":"Parser","namespace":"JSON::Ext","path":"JSON::Ext::Parser","type":"class","visibility":"public"},"JSON::Ext::Parser#initialize":{"description":"Creates a new JSON::Ext::Parser instance for the string _source_.\n\nCreates a new JSON::Ext::Parser instance for the string _source_.\n\nIt will be configured by the _opts_ hash. _opts_ can have the following\nkeys:\n\n_opts_ can have the following keys:\n* *max_nesting*: The maximum depth of nesting allowed in the parsed data\n  structures. Disable depth checking with :max_nesting => false|nil|0, it\n  defaults to 100.\n* *allow_nan*: If set to true, allow NaN, Infinity and -Infinity in\n  defiance of RFC 4627 to be parsed by the Parser. This option defaults to\n  false.\n* *symbolize_names*: If set to true, returns symbols for the names\n  (keys) in a JSON object. Otherwise strings are returned, which is also\n  the default.\n* *create_additions*: If set to false, the Parser doesn't create\n  additions even if a matchin class and create_id was found. This option\n  defaults to true.\n* *object_class*: Defaults to Hash\n* *array_class*: Defaults to Array","name":"initialize","namespace":"JSON::Ext::Parser","path":"JSON::Ext::Parser#initialize","type":"instance_method","visibility":"public"},"JSON::Ext::Parser#parse":{"description":"Parses the current JSON text _source_ and returns the complete data\n structure as a result.","name":"parse","namespace":"JSON::Ext::Parser","path":"JSON::Ext::Parser#parse","type":"instance_method","visibility":"public"},"JSON::Ext::Parser#quirks_mode?":{"description":"Returns a true, if this parser is in quirks_mode, false otherwise.","name":"quirks_mode?","namespace":"JSON::Ext::Parser","path":"JSON::Ext::Parser#quirks_mode?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"JSON::Ext::Parser#source":{"description":"Returns a copy of the current _source_ string, that was used to construct\nthis Parser.","name":"source","namespace":"JSON::Ext::Parser","path":"JSON::Ext::Parser#source","type":"instance_method","visibility":"public"},"JSON::GeneratorError":{"description":"This exception is raised if a generator or unparser error occurs.","name":"GeneratorError","namespace":"JSON","path":"JSON::GeneratorError","type":"class","visibility":"public"},"JSON::GenericObject":{"description":"","name":"GenericObject","namespace":"JSON","path":"JSON::GenericObject","type":"class","visibility":"public"},"JSON::GenericObject#[]":{"description":"","name":"[]","namespace":"JSON::GenericObject","path":"JSON::GenericObject#[]","type":"instance_method","visibility":"public"},"JSON::GenericObject#[]=":{"description":"","name":"[]=","namespace":"JSON::GenericObject","path":"JSON::GenericObject#[]=","type":"instance_method","visibility":"public"},"JSON::GenericObject#as_json":{"description":"","name":"as_json","namespace":"JSON::GenericObject","path":"JSON::GenericObject#as_json","type":"instance_method","visibility":"public"},"JSON::GenericObject#to_hash":{"description":"","name":"to_hash","namespace":"JSON::GenericObject","path":"JSON::GenericObject#to_hash","type":"instance_method","visibility":"public"},"JSON::GenericObject#to_json":{"description":"","name":"to_json","namespace":"JSON::GenericObject","path":"JSON::GenericObject#to_json","type":"instance_method","visibility":"public"},"JSON::GenericObject#|":{"description":"","name":"|","namespace":"JSON::GenericObject","path":"JSON::GenericObject#|","type":"instance_method","visibility":"public"},"JSON::GenericObject.[]":{"description":"","name":"[]","namespace":"JSON::GenericObject","path":"JSON::GenericObject.[]","type":"class_method","visibility":"public"},"JSON::GenericObject.dump":{"description":"","name":"dump","namespace":"JSON::GenericObject","path":"JSON::GenericObject.dump","type":"class_method","visibility":"public"},"JSON::GenericObject.from_hash":{"description":"","name":"from_hash","namespace":"JSON::GenericObject","path":"JSON::GenericObject.from_hash","type":"class_method","visibility":"public"},"JSON::GenericObject.json_creatable=":{"description":"Sets the attribute json_creatable","name":"json_creatable=","namespace":"JSON::GenericObject","path":"JSON::GenericObject.json_creatable=","type":"class_method","visibility":"public","parameters":[["value",null,"the value to set the attribute json_creatable to."]]},"JSON::GenericObject.json_creatable?":{"description":"","name":"json_creatable?","namespace":"JSON::GenericObject","path":"JSON::GenericObject.json_creatable?","type":"class_method","visibility":"public","return":[["Boolean"],""]},"JSON::GenericObject.json_create":{"description":"","name":"json_create","namespace":"JSON::GenericObject","path":"JSON::GenericObject.json_create","type":"class_method","visibility":"public"},"JSON::GenericObject.load":{"description":"","name":"load","namespace":"JSON::GenericObject","path":"JSON::GenericObject.load","type":"class_method","visibility":"public"},"JSON::Infinity":{"description":"","name":"Infinity","namespace":"JSON","path":"JSON::Infinity","type":"constant","return":["Float",""],"visibility":"public"},"JSON::JSONError":{"description":"The base exception for JSON errors.","name":"JSONError","namespace":"JSON","path":"JSON::JSONError","type":"class","visibility":"public"},"JSON::JSONError.wrap":{"description":"","name":"wrap","namespace":"JSON::JSONError","path":"JSON::JSONError.wrap","type":"class_method","visibility":"public"},"JSON::JSON_LOADED":{"description":"","name":"JSON_LOADED","namespace":"JSON","path":"JSON::JSON_LOADED","type":"constant","return":["TrueClass",""],"visibility":"public"},"JSON::MinusInfinity":{"description":"","name":"MinusInfinity","namespace":"JSON","path":"JSON::MinusInfinity","type":"constant","return":["Float",""],"visibility":"public"},"JSON::MissingUnicodeSupport":{"description":"This exception is raised if the required unicode support is missing on the\nsystem. Usually this means that the iconv library is not installed.","name":"MissingUnicodeSupport","namespace":"JSON","path":"JSON::MissingUnicodeSupport","type":"class","visibility":"public"},"JSON::NaN":{"description":"","name":"NaN","namespace":"JSON","path":"JSON::NaN","type":"constant","return":["Float",""],"visibility":"public"},"JSON::NestingError":{"description":"This exception is raised if the nesting of parsed data structures is too\ndeep.","name":"NestingError","namespace":"JSON","path":"JSON::NestingError","type":"class","visibility":"public"},"JSON::ParserError":{"description":"This exception is raised if a parser error occurs.","name":"ParserError","namespace":"JSON","path":"JSON::ParserError","type":"class","visibility":"public"},"JSON::UnparserError":{"description":"For backwards compatibility","name":"UnparserError","namespace":"JSON","path":"JSON::UnparserError","type":"constant","return":["Class",""],"visibility":"public"},"JSON::VERSION":{"description":"JSON version","name":"VERSION","namespace":"JSON","path":"JSON::VERSION","type":"constant","return":["String",""],"visibility":"public"},"JSON::VERSION_ARRAY":{"description":":nodoc:","name":"VERSION_ARRAY","namespace":"JSON","path":"JSON::VERSION_ARRAY","type":"constant","return":["Array",""],"visibility":"public"},"JSON::VERSION_BUILD":{"description":":nodoc:","name":"VERSION_BUILD","namespace":"JSON","path":"JSON::VERSION_BUILD","type":"constant","return":["Fixnum",""],"visibility":"public"},"JSON::VERSION_MAJOR":{"description":":nodoc:","name":"VERSION_MAJOR","namespace":"JSON","path":"JSON::VERSION_MAJOR","type":"constant","return":["Fixnum",""],"visibility":"public"},"JSON::VERSION_MINOR":{"description":":nodoc:","name":"VERSION_MINOR","namespace":"JSON","path":"JSON::VERSION_MINOR","type":"constant","return":["Fixnum",""],"visibility":"public"},"Class":{"description":"Extends any Class to include _json_creatable?_ method.","name":"Class","namespace":"","path":"Class","type":"class","visibility":"public"},"Class#json_creatable?":{"description":"Returns true if this class can be used to create an instance\nfrom a serialised JSON string. The class has to implement a class\nmethod _json_create_ that expects a hash as first parameter. The hash\nshould include the required data.","name":"json_creatable?","namespace":"Class","path":"Class#json_creatable?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Regexp":{"description":"Regexp serialization/deserialization","name":"Regexp","namespace":"","path":"Regexp","type":"class","visibility":"public"},"Regexp#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Regexp","path":"Regexp#as_json","type":"instance_method","visibility":"public"},"Regexp#to_json":{"description":"Stores class name (Regexp) with options <tt>o</tt> and source <tt>s</tt>\n(Regexp or String) as JSON string","name":"to_json","namespace":"Regexp","path":"Regexp#to_json","type":"instance_method","visibility":"public"},"Regexp.json_create":{"description":"Deserializes JSON string by constructing new Regexp object with source\n<tt>s</tt> (Regexp or String) and options <tt>o</tt> serialized by\n<tt>to_json</tt>","name":"json_create","namespace":"Regexp","path":"Regexp.json_create","type":"class_method","visibility":"public"},"Symbol":{"description":"Symbol serialization/deserialization","name":"Symbol","namespace":"","path":"Symbol","type":"class","visibility":"public"},"Symbol#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Symbol","path":"Symbol#as_json","type":"instance_method","visibility":"public"},"Symbol#to_json":{"description":"Stores class name (Symbol) with String representation of Symbol as a JSON string.","name":"to_json","namespace":"Symbol","path":"Symbol#to_json","type":"instance_method","visibility":"public"},"Symbol.json_create":{"description":"Deserializes JSON string by converting the <tt>string</tt> value stored in the object to a Symbol","name":"json_create","namespace":"Symbol","path":"Symbol.json_create","type":"class_method","visibility":"public"},"Complex":{"description":"","name":"Complex","namespace":"","path":"Complex","type":"class","visibility":"public"},"Complex#as_json":{"description":"","name":"as_json","namespace":"Complex","path":"Complex#as_json","type":"instance_method","visibility":"public"},"Complex#to_json":{"description":"","name":"to_json","namespace":"Complex","path":"Complex#to_json","type":"instance_method","visibility":"public"},"Complex.json_create":{"description":"","name":"json_create","namespace":"Complex","path":"Complex.json_create","type":"class_method","visibility":"public"},"Rational":{"description":"","name":"Rational","namespace":"","path":"Rational","type":"class","visibility":"public"},"Rational#as_json":{"description":"","name":"as_json","namespace":"Rational","path":"Rational#as_json","type":"instance_method","visibility":"public"},"Rational#to_json":{"description":"","name":"to_json","namespace":"Rational","path":"Rational#to_json","type":"instance_method","visibility":"public"},"Rational.json_create":{"description":"","name":"json_create","namespace":"Rational","path":"Rational.json_create","type":"class_method","visibility":"public"},"Exception":{"description":"Exception serialization/deserialization","name":"Exception","namespace":"","path":"Exception","type":"class","visibility":"public"},"Exception#as_json":{"description":"Returns a hash, that will be turned into a JSON object and represent this\nobject.","name":"as_json","namespace":"Exception","path":"Exception#as_json","type":"instance_method","visibility":"public"},"Exception#to_json":{"description":"Stores class name (Exception) with message <tt>m</tt> and backtrace array\n<tt>b</tt> as JSON string","name":"to_json","namespace":"Exception","path":"Exception#to_json","type":"instance_method","visibility":"public"},"Exception.json_create":{"description":"Deserializes JSON string by constructing new Exception object with message\n<tt>m</tt> and backtrace <tt>b</tt> serialized with <tt>to_json</tt>","name":"json_create","namespace":"Exception","path":"Exception.json_create","type":"class_method","visibility":"public"},"BigDecimal":{"description":"","name":"BigDecimal","namespace":"","path":"BigDecimal","type":"class","visibility":"public"},"BigDecimal#as_json":{"description":"Marshal the object to JSON.\n\nmethod used for JSON marshalling support.","name":"as_json","namespace":"BigDecimal","path":"BigDecimal#as_json","type":"instance_method","visibility":"public"},"BigDecimal#to_json":{"description":"return the JSON value","name":"to_json","namespace":"BigDecimal","path":"BigDecimal#to_json","type":"instance_method","visibility":"public"},"BigDecimal.json_create":{"description":"Import a JSON Marshalled object.\n\nmethod used for JSON marshalling support.","name":"json_create","namespace":"BigDecimal","path":"BigDecimal.json_create","type":"class_method","visibility":"public"},"OpenSSL":{"description":"--\n\n$RCSfile$\n\n= Ruby-space predefined Digest subclasses\n\n= Info\n'OpenSSL for Ruby 2' project\nCopyright (C) 2002  Michal Rokos <m.rokos@sh.cvut.cz>\nAll rights reserved.\n\n= Licence\nThis program is licenced under the same licence as Ruby.\n(See the file 'LICENCE'.)\n\n= Version\n$Id: digest.rb 44116 2013-12-10 07:16:03Z nobu $\n\n++","name":"OpenSSL","namespace":"","path":"OpenSSL","type":"module","visibility":"public"},"OpenSSL#Digest":{"description":"Returns a Digest subclass by +name+.\n\n  require 'openssl'\n\n  OpenSSL::Digest(\"MD5\")\n  # => OpenSSL::Digest::MD5\n\n  Digest(\"Foo\")\n  # => NameError: wrong constant name Foo","name":"Digest","namespace":"OpenSSL","path":"OpenSSL#Digest","type":"module_function","visibility":"private"},"OpenSSL#debug":{"description":"","name":"debug","namespace":"OpenSSL","path":"OpenSSL#debug","type":"module_function","visibility":"private"},"OpenSSL#debug=":{"description":"Turns on or off CRYPTO_MEM_CHECK.\nAlso shows some debugging message on stderr.","name":"debug=","namespace":"OpenSSL","path":"OpenSSL#debug=","type":"module_function","visibility":"private"},"OpenSSL#errors":{"description":"See any remaining errors held in queue.\n\nAny errors you see here are probably due to a bug in ruby's OpenSSL implementation.","name":"errors","namespace":"OpenSSL","path":"OpenSSL#errors","type":"module_function","visibility":"private"},"OpenSSL#fips_mode=":{"description":"Turns FIPS mode on or off. Turning on FIPS mode will obviously only have an\neffect for FIPS-capable installations of the OpenSSL library. Trying to do\nso otherwise will result in an error.\n\n=== Examples\n\nOpenSSL.fips_mode = true   # turn FIPS mode on\nOpenSSL.fips_mode = false  # and off again","name":"fips_mode=","namespace":"OpenSSL","path":"OpenSSL#fips_mode=","type":"module_function","visibility":"private"},"OpenSSL.Digest":{"description":"Returns a Digest subclass by +name+.\n\n  require 'openssl'\n\n  OpenSSL::Digest(\"MD5\")\n  # => OpenSSL::Digest::MD5\n\n  Digest(\"Foo\")\n  # => NameError: wrong constant name Foo","name":"Digest","namespace":"OpenSSL","path":"OpenSSL.Digest","type":"module_function","visibility":"public"},"OpenSSL.check_func":{"description":"","name":"check_func","namespace":"OpenSSL","path":"OpenSSL.check_func","type":"module_function","visibility":"public"},"OpenSSL.debug":{"description":"","name":"debug","namespace":"OpenSSL","path":"OpenSSL.debug","type":"module_function","visibility":"public"},"OpenSSL.debug=":{"description":"Turns on or off CRYPTO_MEM_CHECK.\nAlso shows some debugging message on stderr.","name":"debug=","namespace":"OpenSSL","path":"OpenSSL.debug=","type":"module_function","visibility":"public"},"OpenSSL.deprecated_warning_flag":{"description":"","name":"deprecated_warning_flag","namespace":"OpenSSL","path":"OpenSSL.deprecated_warning_flag","type":"module_function","visibility":"public"},"OpenSSL.errors":{"description":"See any remaining errors held in queue.\n\nAny errors you see here are probably due to a bug in ruby's OpenSSL implementation.","name":"errors","namespace":"OpenSSL","path":"OpenSSL.errors","type":"module_function","visibility":"public"},"OpenSSL.fips_mode=":{"description":"Turns FIPS mode on or off. Turning on FIPS mode will obviously only have an\neffect for FIPS-capable installations of the OpenSSL library. Trying to do\nso otherwise will result in an error.\n\n=== Examples\n\nOpenSSL.fips_mode = true   # turn FIPS mode on\nOpenSSL.fips_mode = false  # and off again","name":"fips_mode=","namespace":"OpenSSL","path":"OpenSSL.fips_mode=","type":"module_function","visibility":"public"},"OpenSSL::ASN1":{"description":"Abstract Syntax Notation One (or ASN.1) is a notation syntax to\ndescribe data structures and is defined in ITU-T X.680. ASN.1 itself\ndoes not mandate any encoding or parsing rules, but usually ASN.1 data\nstructures are encoded using the Distinguished Encoding Rules (DER) or\nless often the Basic Encoding Rules (BER) described in ITU-T X.690. DER\nand BER encodings are binary Tag-Length-Value (TLV) encodings that are\nquite concise compared to other popular data description formats such\nas XML, JSON etc.\nASN.1 data structures are very common in cryptographic applications,\ne.g. X.509 public key certificates or certificate revocation lists\n(CRLs) are all defined in ASN.1 and DER-encoded. ASN.1, DER and BER are\nthe building blocks of applied cryptography.\nThe ASN1 module provides the necessary classes that allow generation\nof ASN.1 data structures and the methods to encode them using a DER\nencoding. The decode method allows parsing arbitrary BER-/DER-encoded\ndata to a Ruby object that can then be modified and re-encoded at will.\n\n== ASN.1 class hierarchy\n\nThe base class representing ASN.1 structures is ASN1Data. ASN1Data offers\nattributes to read and set the +tag+, the +tag_class+ and finally the\n+value+ of a particular ASN.1 item. Upon parsing, any tagged values\n(implicit or explicit) will be represented by ASN1Data instances because\ntheir \"real type\" can only be determined using out-of-band information\nfrom the ASN.1 type declaration. Since this information is normally\nknown when encoding a type, all sub-classes of ASN1Data offer an\nadditional attribute +tagging+ that allows to encode a value implicitly\n(+:IMPLICIT+) or explicitly (+:EXPLICIT+).\n\n=== Constructive\n\nConstructive is, as its name implies, the base class for all\nconstructed encodings, i.e. those that consist of several values,\nopposed to \"primitive\" encodings with just one single value.\nPrimitive values that are encoded with \"infinite length\" are typically\nconstructed (their values come in multiple chunks) and are therefore\nrepresented by instances of Constructive. The value of an Constructive\nis always an Array.\n\n==== ASN1::Set and ASN1::Sequence\n\nThe most common constructive encodings are SETs and SEQUENCEs, which is\nwhy there are two sub-classes of Constructive representing each of\nthem.\n\n=== Primitive\n\nThis is the super class of all primitive values. Primitive\nitself is not used when parsing ASN.1 data, all values are either\ninstances of a corresponding sub-class of Primitive or they are\ninstances of ASN1Data if the value was tagged implicitly or explicitly.\nPlease cf. Primitive documentation for details on sub-classes and\ntheir respective mappings of ASN.1 data types to Ruby objects.\n\n== Possible values for +tagging+\n\nWhen constructing an ASN1Data object the ASN.1 type definition may\nrequire certain elements to be either implicitly or explicitly tagged.\nThis can be achieved by setting the +tagging+ attribute manually for\nsub-classes of ASN1Data. Use the symbol +:IMPLICIT+ for implicit\ntagging and +:EXPLICIT+ if the element requires explicit tagging.\n\n== Possible values for +tag_class+\n\nIt is possible to create arbitrary ASN1Data objects that also support\na PRIVATE or APPLICATION tag class. Possible values for the +tag_class+\nattribute are:\n* +:UNIVERSAL+ (the default for untagged values)\n* +:CONTEXT_SPECIFIC+ (the default for tagged values)\n* +:APPLICATION+\n* +:PRIVATE+\n\n== Tag constants\n\nThere is a constant defined for each universal tag:\n* OpenSSL::ASN1::EOC (0)\n* OpenSSL::ASN1::BOOLEAN (1)\n* OpenSSL::ASN1::INTEGER (2)\n* OpenSSL::ASN1::BIT_STRING (3)\n* OpenSSL::ASN1::OCTET_STRING (4)\n* OpenSSL::ASN1::NULL (5)\n* OpenSSL::ASN1::OBJECT (6)\n* OpenSSL::ASN1::ENUMERATED (10)\n* OpenSSL::ASN1::UTF8STRING (12)\n* OpenSSL::ASN1::SEQUENCE (16)\n* OpenSSL::ASN1::SET (17)\n* OpenSSL::ASN1::NUMERICSTRING (18)\n* OpenSSL::ASN1::PRINTABLESTRING (19)\n* OpenSSL::ASN1::T61STRING (20)\n* OpenSSL::ASN1::VIDEOTEXSTRING (21)\n* OpenSSL::ASN1::IA5STRING (22)\n* OpenSSL::ASN1::UTCTIME (23)\n* OpenSSL::ASN1::GENERALIZEDTIME (24)\n* OpenSSL::ASN1::GRAPHICSTRING (25)\n* OpenSSL::ASN1::ISO64STRING (26)\n* OpenSSL::ASN1::GENERALSTRING (27)\n* OpenSSL::ASN1::UNIVERSALSTRING (28)\n* OpenSSL::ASN1::BMPSTRING (30)\n\n== UNIVERSAL_TAG_NAME constant\n\nAn Array that stores the name of a given tag number. These names are\nthe same as the name of the tag constant that is additionally defined,\ne.g. UNIVERSAL_TAG_NAME[2] = \"INTEGER\" and OpenSSL::ASN1::INTEGER = 2.\n\n== Example usage\n\n=== Decoding and viewing a DER-encoded file\n  require 'openssl'\n  require 'pp'\n  der = File.binread('data.der')\n  asn1 = OpenSSL::ASN1.decode(der)\n  pp der\n\n=== Creating an ASN.1 structure and DER-encoding it\n  require 'openssl'\n  version = OpenSSL::ASN1::Integer.new(1)\n  # Explicitly 0-tagged implies context-specific tag class\n  serial = OpenSSL::ASN1::Integer.new(12345, 0, :EXPLICIT, :CONTEXT_SPECIFIC)\n  name = OpenSSL::ASN1::PrintableString.new('Data 1')\n  sequence = OpenSSL::ASN1::Sequence.new( [ version, serial, name ] )\n  der = sequence.to_der","name":"ASN1","namespace":"OpenSSL","path":"OpenSSL::ASN1","type":"module","visibility":"public"},"OpenSSL::ASN1#decode":{"description":"Decodes a BER- or DER-encoded value and creates an ASN1Data instance. +der+\nmay be a +String+ or any object that features a +#to_der+ method transforming\nit into a BER-/DER-encoded +String+.\n\n== Example\n  der = File.binread('asn1data')\n  asn1 = OpenSSL::ASN1.decode(der)","name":"decode","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1#decode","type":"module_function","visibility":"private"},"OpenSSL::ASN1#decode_all":{"description":"Similar to +decode+ with the difference that +decode+ expects one\ndistinct value represented in +der+. +decode_all+ on the contrary\ndecodes a sequence of sequential BER/DER values lined up in +der+\nand returns them as an array.\n\n== Example\n  ders = File.binread('asn1data_seq')\n  asn1_ary = OpenSSL::ASN1.decode_all(ders)","name":"decode_all","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1#decode_all","type":"module_function","visibility":"private"},"OpenSSL::ASN1#traverse":{"description":"If a block is given, it prints out each of the elements encountered.\nBlock parameters are (in that order):\n* depth: The recursion depth, plus one with each constructed value being encountered (Number)\n* offset: Current byte offset (Number)\n* header length: Combined length in bytes of the Tag and Length headers. (Number)\n* length: The overall remaining length of the entire data (Number)\n* constructed: Whether this value is constructed or not (Boolean)\n* tag_class: Current tag class (Symbol)\n* tag: The current tag (Number)\n\n== Example\n  der = File.binread('asn1data.der')\n  OpenSSL::ASN1.traverse(der) do | depth, offset, header_len, length, constructed, tag_class, tag|\n    puts \"Depth: #{depth} Offset: #{offset} Length: #{length}\"\n    puts \"Header length: #{header_len} Tag: #{tag} Tag class: #{tag_class} Constructed: #{constructed}\"\n  end","name":"traverse","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1#traverse","type":"module_function","visibility":"private"},"OpenSSL::ASN1.decode":{"description":"Decodes a BER- or DER-encoded value and creates an ASN1Data instance. +der+\nmay be a +String+ or any object that features a +#to_der+ method transforming\nit into a BER-/DER-encoded +String+.\n\n== Example\n  der = File.binread('asn1data')\n  asn1 = OpenSSL::ASN1.decode(der)","name":"decode","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1.decode","type":"module_function","visibility":"public"},"OpenSSL::ASN1.decode_all":{"description":"Similar to +decode+ with the difference that +decode+ expects one\ndistinct value represented in +der+. +decode_all+ on the contrary\ndecodes a sequence of sequential BER/DER values lined up in +der+\nand returns them as an array.\n\n== Example\n  ders = File.binread('asn1data_seq')\n  asn1_ary = OpenSSL::ASN1.decode_all(ders)","name":"decode_all","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1.decode_all","type":"module_function","visibility":"public"},"OpenSSL::ASN1.traverse":{"description":"If a block is given, it prints out each of the elements encountered.\nBlock parameters are (in that order):\n* depth: The recursion depth, plus one with each constructed value being encountered (Number)\n* offset: Current byte offset (Number)\n* header length: Combined length in bytes of the Tag and Length headers. (Number)\n* length: The overall remaining length of the entire data (Number)\n* constructed: Whether this value is constructed or not (Boolean)\n* tag_class: Current tag class (Symbol)\n* tag: The current tag (Number)\n\n== Example\n  der = File.binread('asn1data.der')\n  OpenSSL::ASN1.traverse(der) do | depth, offset, header_len, length, constructed, tag_class, tag|\n    puts \"Depth: #{depth} Offset: #{offset} Length: #{length}\"\n    puts \"Header length: #{header_len} Tag: #{tag} Tag class: #{tag_class} Constructed: #{constructed}\"\n  end","name":"traverse","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1.traverse","type":"module_function","visibility":"public"},"OpenSSL::ASN1::ASN1Data":{"description":"The top-level class representing any ASN.1 object. When parsed by\nASN1.decode, tagged values are always represented by an instance\nof ASN1Data.\n\n== The role of ASN1Data for parsing tagged values\n\nWhen encoding an ASN.1 type it is inherently clear what original\ntype (e.g. INTEGER, OCTET STRING etc.) this value has, regardless\nof its tagging.\nBut opposed to the time an ASN.1 type is to be encoded, when parsing\nthem it is not possible to deduce the \"real type\" of tagged\nvalues. This is why tagged values are generally parsed into ASN1Data\ninstances, but with a different outcome for implicit and explicit\ntagging.\n\n=== Example of a parsed implicitly tagged value\n\nAn implicitly 1-tagged INTEGER value will be parsed as an\nASN1Data with\n* +tag+ equal to 1\n* +tag_class+ equal to +:CONTEXT_SPECIFIC+\n* +value+ equal to a +String+ that carries the raw encoding\n  of the INTEGER.\nThis implies that a subsequent decoding step is required to\ncompletely decode implicitly tagged values.\n\n=== Example of a parsed explicitly tagged value\n\nAn explicitly 1-tagged INTEGER value will be parsed as an\nASN1Data with\n* +tag+ equal to 1\n* +tag_class+ equal to +:CONTEXT_SPECIFIC+\n* +value+ equal to an +Array+ with one single element, an\n  instance of OpenSSL::ASN1::Integer, i.e. the inner element\n  is the non-tagged primitive value, and the tagging is represented\n  in the outer ASN1Data\n\n== Example - Decoding an implicitly tagged INTEGER\n  int = OpenSSL::ASN1::Integer.new(1, 0, :IMPLICIT) # implicit 0-tagged\n  seq = OpenSSL::ASN1::Sequence.new( [int] )\n  der = seq.to_der\n  asn1 = OpenSSL::ASN1.decode(der)\n  # pp asn1 => #<OpenSSL::ASN1::Sequence:0x87326e0\n  #              @infinite_length=false,\n  #              @tag=16,\n  #              @tag_class=:UNIVERSAL,\n  #              @tagging=nil,\n  #              @value=\n  #                [#<OpenSSL::ASN1::ASN1Data:0x87326f4\n  #                   @infinite_length=false,\n  #                   @tag=0,\n  #                   @tag_class=:CONTEXT_SPECIFIC,\n  #                   @value=\"\\x01\">]>\n  raw_int = asn1.value[0]\n  # manually rewrite tag and tag class to make it an UNIVERSAL value\n  raw_int.tag = OpenSSL::ASN1::INTEGER\n  raw_int.tag_class = :UNIVERSAL\n  int2 = OpenSSL::ASN1.decode(raw_int)\n  puts int2.value # => 1\n\n== Example - Decoding an explicitly tagged INTEGER\n  int = OpenSSL::ASN1::Integer.new(1, 0, :EXPLICIT) # explicit 0-tagged\n  seq = OpenSSL::ASN1::Sequence.new( [int] )\n  der = seq.to_der\n  asn1 = OpenSSL::ASN1.decode(der)\n  # pp asn1 => #<OpenSSL::ASN1::Sequence:0x87326e0\n  #              @infinite_length=false,\n  #              @tag=16,\n  #              @tag_class=:UNIVERSAL,\n  #              @tagging=nil,\n  #              @value=\n  #                [#<OpenSSL::ASN1::ASN1Data:0x87326f4\n  #                   @infinite_length=false,\n  #                   @tag=0,\n  #                   @tag_class=:CONTEXT_SPECIFIC,\n  #                   @value=\n  #                     [#<OpenSSL::ASN1::Integer:0x85bf308\n  #                        @infinite_length=false,\n  #                        @tag=2,\n  #                        @tag_class=:UNIVERSAL\n  #                        @tagging=nil,\n  #                        @value=1>]>]>\n  int2 = asn1.value[0].value[0]\n  puts int2.value # => 1","name":"ASN1Data","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1::ASN1Data","type":"class","visibility":"public"},"OpenSSL::ASN1::ASN1Data#initialize":{"description":"+value+: Please have a look at Constructive and Primitive to see how Ruby\ntypes are mapped to ASN.1 types and vice versa.\n\n+tag+: A +Number+ indicating the tag number.\n\n+tag_class+: A +Symbol+ indicating the tag class. Please cf. ASN1 for\npossible values.\n\n== Example\n  asn1_int = OpenSSL::ASN1Data.new(42, 2, :UNIVERSAL) # => Same as OpenSSL::ASN1::Integer.new(42)\n  tagged_int = OpenSSL::ASN1Data.new(42, 0, :CONTEXT_SPECIFIC) # implicitly 0-tagged INTEGER","name":"initialize","namespace":"OpenSSL::ASN1::ASN1Data","path":"OpenSSL::ASN1::ASN1Data#initialize","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ASN1Data#to_der":{"description":"Encodes this ASN1Data into a DER-encoded String value. The result is\nDER-encoded except for the possibility of infinite length encodings.\nInfinite length encodings are not allowed in strict DER, so strictly\nspeaking the result of such an encoding would be a BER-encoding.","name":"to_der","namespace":"OpenSSL::ASN1::ASN1Data","path":"OpenSSL::ASN1::ASN1Data#to_der","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ASN1Error":{"description":"Generic error class for all errors raised in ASN1 and any of the\nclasses defined in it.","name":"ASN1Error","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1::ASN1Error","type":"class","visibility":"public"},"OpenSSL::ASN1::Constructive":{"description":"The parent class for all constructed encodings. The +value+ attribute\nof a Constructive is always an +Array+. Attributes are the same as\nfor ASN1Data, with the addition of +tagging+.\n\n== SET and SEQUENCE\n\nMost constructed encodings come in the form of a SET or a SEQUENCE.\nThese encodings are represented by one of the two sub-classes of\nConstructive:\n* OpenSSL::ASN1::Set\n* OpenSSL::ASN1::Sequence\nPlease note that tagged sequences and sets are still parsed as\ninstances of ASN1Data. Find further details on tagged values\nthere.\n\n=== Example - constructing a SEQUENCE\n  int = OpenSSL::ASN1::Integer.new(1)\n  str = OpenSSL::ASN1::PrintableString.new('abc')\n  sequence = OpenSSL::ASN1::Sequence.new( [ int, str ] )\n\n=== Example - constructing a SET\n  int = OpenSSL::ASN1::Integer.new(1)\n  str = OpenSSL::ASN1::PrintableString.new('abc')\n  set = OpenSSL::ASN1::Set.new( [ int, str ] )\n\n== Infinite length primitive values\n\nThe only case where Constructive is used directly is for infinite\nlength encodings of primitive values. These encodings are always\nconstructed, with the contents of the +value+ +Array+ being either\nUNIVERSAL non-infinite length partial encodings of the actual value\nor again constructive encodings with infinite length (i.e. infinite\nlength primitive encodings may be constructed recursively with another\ninfinite length value within an already infinite length value). Each\npartial encoding must be of the same UNIVERSAL type as the overall\nencoding. The value of the overall encoding consists of the\nconcatenation of each partial encoding taken in sequence. The +value+\narray of the outer infinite length value must end with a\nOpenSSL::ASN1::EndOfContent instance.\n\nPlease note that it is not possible to encode Constructive without\nthe +infinite_length+ attribute being set to +true+, use\nOpenSSL::ASN1::Sequence or OpenSSL::ASN1::Set in these cases instead.\n\n=== Example - Infinite length OCTET STRING\n  partial1 = OpenSSL::ASN1::OctetString.new(\"\\x01\")\n  partial2 = OpenSSL::ASN1::OctetString.new(\"\\x02\")\n  inf_octets = OpenSSL::ASN1::Constructive.new( [ partial1,\n                                                  partial2,\n                                                  OpenSSL::ASN1::EndOfContent.new ],\n                                                OpenSSL::ASN1::OCTET_STRING,\n                                                nil,\n                                                :UNIVERSAL )\n  # The real value of inf_octets is \"\\x01\\x02\", i.e. the concatenation\n  # of partial1 and partial2\n  inf_octets.infinite_length = true\n  der = inf_octets.to_der\n  asn1 = OpenSSL::ASN1.decode(der)\n  puts asn1.infinite_length # => true","name":"Constructive","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1::Constructive","type":"class","visibility":"public"},"OpenSSL::ASN1::Constructive#each":{"description":"Calls <i>block</i> once for each element in +self+, passing that element\nas parameter +asn1+. If no block is given, an enumerator is returned\ninstead.\n\n== Example\n  asn1_ary.each do |asn1|\n    puts asn1\n  end","name":"each","namespace":"OpenSSL::ASN1::Constructive","path":"OpenSSL::ASN1::Constructive#each","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::Constructive#initialize":{"description":"+value+: is mandatory.\n\n+tag+: optional, may be specified for tagged values. If no +tag+ is\nspecified, the UNIVERSAL tag corresponding to the Primitive sub-class\nis used by default.\n\n+tagging+: may be used as an encoding hint to encode a value either\nexplicitly or implicitly, see ASN1 for possible values.\n\n+tag_class+: if +tag+ and +tagging+ are +nil+ then this is set to\n+:UNIVERSAL+ by default. If either +tag+ or +tagging+ are set then\n+:CONTEXT_SPECIFIC+ is used as the default. For possible values please\ncf. ASN1.\n\n== Example\n  int = OpenSSL::ASN1::Integer.new(42)\n  zero_tagged_int = OpenSSL::ASN1::Integer.new(42, 0, :IMPLICIT)\n  private_explicit_zero_tagged_int = OpenSSL::ASN1::Integer.new(42, 0, :EXPLICIT, :PRIVATE)","name":"initialize","namespace":"OpenSSL::ASN1::Constructive","path":"OpenSSL::ASN1::Constructive#initialize","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::Constructive#to_der":{"description":"See ASN1Data#to_der for details.","name":"to_der","namespace":"OpenSSL::ASN1::Constructive","path":"OpenSSL::ASN1::Constructive#to_der","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ObjectId":{"description":"Represents the primitive object id for OpenSSL::ASN1","name":"ObjectId","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1::ObjectId","type":"class","visibility":"public"},"OpenSSL::ASN1::ObjectId#ln":{"description":"#long_name is an alias to #ln","name":"long_name","namespace":"OpenSSL::ASN1::ObjectId","path":"OpenSSL::ASN1::ObjectId#long_name","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ObjectId#long_name":{"description":"#long_name is an alias to #ln","name":"long_name","namespace":"OpenSSL::ASN1::ObjectId","path":"OpenSSL::ASN1::ObjectId#long_name","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ObjectId#oid":{"description":"The object identifier as a String.","name":"oid","namespace":"OpenSSL::ASN1::ObjectId","path":"OpenSSL::ASN1::ObjectId#oid","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ObjectId#short_name":{"description":"#short_name is an alias to #sn","name":"short_name","namespace":"OpenSSL::ASN1::ObjectId","path":"OpenSSL::ASN1::ObjectId#short_name","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ObjectId#sn":{"description":"#short_name is an alias to #sn","name":"short_name","namespace":"OpenSSL::ASN1::ObjectId","path":"OpenSSL::ASN1::ObjectId#short_name","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::ObjectId.register":{"description":"This adds a new ObjectId to the internal tables. Where +object_id+ is the\nnumerical form, +short_name+ is the short name, and +long_name+ is the long\nname.\n\nReturns +true+ if successful. Raises an ASN1Error otherwise.","name":"register","namespace":"OpenSSL::ASN1::ObjectId","path":"OpenSSL::ASN1::ObjectId.register","type":"class_method","visibility":"public"},"OpenSSL::ASN1::Primitive":{"description":"The parent class for all primitive encodings. Attributes are the same as\nfor ASN1Data, with the addition of +tagging+.\nPrimitive values can never be infinite length encodings, thus it is not\npossible to set the +infinite_length+ attribute for Primitive and its\nsub-classes.\n\n== Primitive sub-classes and their mapping to Ruby classes\n* OpenSSL::ASN1::EndOfContent    <=> +value+ is always +nil+\n* OpenSSL::ASN1::Boolean         <=> +value+ is a +Boolean+\n* OpenSSL::ASN1::Integer         <=> +value+ is a +Number+\n* OpenSSL::ASN1::BitString       <=> +value+ is a +String+\n* OpenSSL::ASN1::OctetString     <=> +value+ is a +String+\n* OpenSSL::ASN1::Null            <=> +value+ is always +nil+\n* OpenSSL::ASN1::Object          <=> +value+ is a +String+\n* OpenSSL::ASN1::Enumerated      <=> +value+ is a +Number+\n* OpenSSL::ASN1::UTF8String      <=> +value+ is a +String+\n* OpenSSL::ASN1::NumericString   <=> +value+ is a +String+\n* OpenSSL::ASN1::PrintableString <=> +value+ is a +String+\n* OpenSSL::ASN1::T61String       <=> +value+ is a +String+\n* OpenSSL::ASN1::VideotexString  <=> +value+ is a +String+\n* OpenSSL::ASN1::IA5String       <=> +value+ is a +String+\n* OpenSSL::ASN1::UTCTime         <=> +value+ is a +Time+\n* OpenSSL::ASN1::GeneralizedTime <=> +value+ is a +Time+\n* OpenSSL::ASN1::GraphicString   <=> +value+ is a +String+\n* OpenSSL::ASN1::ISO64String     <=> +value+ is a +String+\n* OpenSSL::ASN1::GeneralString   <=> +value+ is a +String+\n* OpenSSL::ASN1::UniversalString <=> +value+ is a +String+\n* OpenSSL::ASN1::BMPString       <=> +value+ is a +String+\n\n== OpenSSL::ASN1::BitString\n\n=== Additional attributes\n+unused_bits+: if the underlying BIT STRING's\nlength is a multiple of 8 then +unused_bits+ is 0. Otherwise\n+unused_bits+ indicates the number of bits that are to be ignored in\nthe final octet of the +BitString+'s +value+.\n\n== OpenSSL::ASN1::ObjectId\n\nWhile OpenSSL::ASN1::ObjectId.new will allocate a new ObjectId, it is\nnot typically allocated this way, but rather that are received from\nparsed ASN1 encodings.\n\n=== Additional attributes\n* +sn+: the short name as defined in <openssl/objects.h>.\n* +ln+: the long name as defined in <openssl/objects.h>.\n* +oid+: the object identifier as a +String+, e.g. \"1.2.3.4.5\"\n* +short_name+: alias for +sn+.\n* +long_name+: alias for +ln+.\n\n== Examples\nWith the Exception of OpenSSL::ASN1::EndOfContent, each Primitive class\nconstructor takes at least one parameter, the +value+.\n\n=== Creating EndOfContent\n  eoc = OpenSSL::ASN1::EndOfContent.new\n\n=== Creating any other Primitive\n  prim = <class>.new(value) # <class> being one of the sub-classes except EndOfContent\n  prim_zero_tagged_implicit = <class>.new(value, 0, :IMPLICIT)\n  prim_zero_tagged_explicit = <class>.new(value, 0, :EXPLICIT)","name":"Primitive","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1::Primitive","type":"class","visibility":"public"},"OpenSSL::ASN1::Primitive#initialize":{"description":"+value+: is mandatory.\n\n+tag+: optional, may be specified for tagged values. If no +tag+ is\nspecified, the UNIVERSAL tag corresponding to the Primitive sub-class\nis used by default.\n\n+tagging+: may be used as an encoding hint to encode a value either\nexplicitly or implicitly, see ASN1 for possible values.\n\n+tag_class+: if +tag+ and +tagging+ are +nil+ then this is set to\n+:UNIVERSAL+ by default. If either +tag+ or +tagging+ are set then\n+:CONTEXT_SPECIFIC+ is used as the default. For possible values please\ncf. ASN1.\n\n== Example\n  int = OpenSSL::ASN1::Integer.new(42)\n  zero_tagged_int = OpenSSL::ASN1::Integer.new(42, 0, :IMPLICIT)\n  private_explicit_zero_tagged_int = OpenSSL::ASN1::Integer.new(42, 0, :EXPLICIT, :PRIVATE)","name":"initialize","namespace":"OpenSSL::ASN1::Primitive","path":"OpenSSL::ASN1::Primitive#initialize","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::Primitive#to_der":{"description":"See ASN1Data#to_der for details. *","name":"to_der","namespace":"OpenSSL::ASN1::Primitive","path":"OpenSSL::ASN1::Primitive#to_der","type":"instance_method","visibility":"public"},"OpenSSL::ASN1::UNIVERSAL_TAG_NAME":{"description":"Array storing tag names at the tag's index.","name":"UNIVERSAL_TAG_NAME","namespace":"OpenSSL::ASN1","path":"OpenSSL::ASN1::UNIVERSAL_TAG_NAME","type":"constant","return":["Array",""],"visibility":"public"},"OpenSSL::BN":{"description":"","name":"BN","namespace":"OpenSSL","path":"OpenSSL::BN","type":"class","visibility":"public"},"OpenSSL::BN#%":{"description":"","name":"%","namespace":"OpenSSL::BN","path":"OpenSSL::BN#%","type":"instance_method","visibility":"public"},"OpenSSL::BN#*":{"description":"","name":"*","namespace":"OpenSSL::BN","path":"OpenSSL::BN#*","type":"instance_method","visibility":"public"},"OpenSSL::BN#**":{"description":"","name":"**","namespace":"OpenSSL::BN","path":"OpenSSL::BN#**","type":"instance_method","visibility":"public"},"OpenSSL::BN#+":{"description":"num_bits_word","name":"+","namespace":"OpenSSL::BN","path":"OpenSSL::BN#+","type":"instance_method","visibility":"public"},"OpenSSL::BN#-":{"description":"","name":"-","namespace":"OpenSSL::BN","path":"OpenSSL::BN#-","type":"instance_method","visibility":"public"},"OpenSSL::BN#/":{"description":"","name":"/","namespace":"OpenSSL::BN","path":"OpenSSL::BN#/","type":"instance_method","visibility":"public"},"OpenSSL::BN#<<":{"description":"","name":"<<","namespace":"OpenSSL::BN","path":"OpenSSL::BN#<<","type":"instance_method","visibility":"public"},"OpenSSL::BN#<=>":{"description":"add_word\nsub_word\nmul_word\ndiv_word\nmod_word","name":"<=>","namespace":"OpenSSL::BN","path":"OpenSSL::BN#<=>","type":"instance_method","visibility":"public"},"OpenSSL::BN#==":{"description":"","name":"===","namespace":"OpenSSL::BN","path":"OpenSSL::BN#===","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#===":{"description":"","name":"===","namespace":"OpenSSL::BN","path":"OpenSSL::BN#===","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#>>":{"description":"","name":">>","namespace":"OpenSSL::BN","path":"OpenSSL::BN#>>","type":"instance_method","visibility":"public"},"OpenSSL::BN#bit_set?":{"description":"","name":"bit_set?","namespace":"OpenSSL::BN","path":"OpenSSL::BN#bit_set?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#clear_bit!":{"description":"","name":"clear_bit!","namespace":"OpenSSL::BN","path":"OpenSSL::BN#clear_bit!","type":"instance_method","visibility":"public"},"OpenSSL::BN#cmp":{"description":"add_word\nsub_word\nmul_word\ndiv_word\nmod_word","name":"<=>","namespace":"OpenSSL::BN","path":"OpenSSL::BN#<=>","type":"instance_method","visibility":"public"},"OpenSSL::BN#coerce":{"description":"","name":"coerce","namespace":"OpenSSL::BN","path":"OpenSSL::BN#coerce","type":"instance_method","visibility":"public"},"OpenSSL::BN#copy":{"description":"","name":"copy","namespace":"OpenSSL::BN","path":"OpenSSL::BN#copy","type":"instance_method","visibility":"public"},"OpenSSL::BN#eql?":{"description":"","name":"===","namespace":"OpenSSL::BN","path":"OpenSSL::BN#===","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#gcd":{"description":"","name":"gcd","namespace":"OpenSSL::BN","path":"OpenSSL::BN#gcd","type":"instance_method","visibility":"public"},"OpenSSL::BN#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::BN","path":"OpenSSL::BN#initialize","type":"instance_method","visibility":"public"},"OpenSSL::BN#lshift!":{"description":"","name":"lshift!","namespace":"OpenSSL::BN","path":"OpenSSL::BN#lshift!","type":"instance_method","visibility":"public"},"OpenSSL::BN#mask_bits!":{"description":"","name":"mask_bits!","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mask_bits!","type":"instance_method","visibility":"public"},"OpenSSL::BN#mod_add":{"description":"nnmod","name":"mod_add","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mod_add","type":"instance_method","visibility":"public"},"OpenSSL::BN#mod_exp":{"description":"","name":"mod_exp","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mod_exp","type":"instance_method","visibility":"public"},"OpenSSL::BN#mod_inverse":{"description":"TODO:\nBut how to: from_bin, from_mpi? PACK?\nto_bin\nto_mpi","name":"mod_inverse","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mod_inverse","type":"instance_method","visibility":"public"},"OpenSSL::BN#mod_mul":{"description":"","name":"mod_mul","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mod_mul","type":"instance_method","visibility":"public"},"OpenSSL::BN#mod_sqr":{"description":"","name":"mod_sqr","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mod_sqr","type":"instance_method","visibility":"public"},"OpenSSL::BN#mod_sub":{"description":"","name":"mod_sub","namespace":"OpenSSL::BN","path":"OpenSSL::BN#mod_sub","type":"instance_method","visibility":"public"},"OpenSSL::BN#num_bits":{"description":"","name":"num_bits","namespace":"OpenSSL::BN","path":"OpenSSL::BN#num_bits","type":"instance_method","visibility":"public"},"OpenSSL::BN#num_bytes":{"description":"swap (=coerce?)","name":"num_bytes","namespace":"OpenSSL::BN","path":"OpenSSL::BN#num_bytes","type":"instance_method","visibility":"public"},"OpenSSL::BN#odd?":{"description":"is_word","name":"odd?","namespace":"OpenSSL::BN","path":"OpenSSL::BN#odd?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#one?":{"description":"","name":"one?","namespace":"OpenSSL::BN","path":"OpenSSL::BN#one?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#pretty_print":{"description":"","name":"pretty_print","namespace":"OpenSSL::BN","path":"OpenSSL::BN#pretty_print","type":"instance_method","visibility":"public"},"OpenSSL::BN#prime?":{"description":"=== Parameters\n* +checks+ - integer","name":"prime?","namespace":"OpenSSL::BN","path":"OpenSSL::BN#prime?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#prime_fasttest?":{"description":"=== Parameters\n* +checks+ - integer\n* +trial_div+ - boolean","name":"prime_fasttest?","namespace":"OpenSSL::BN","path":"OpenSSL::BN#prime_fasttest?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN#rshift!":{"description":"","name":"rshift!","namespace":"OpenSSL::BN","path":"OpenSSL::BN#rshift!","type":"instance_method","visibility":"public"},"OpenSSL::BN#set_bit!":{"description":"","name":"set_bit!","namespace":"OpenSSL::BN","path":"OpenSSL::BN#set_bit!","type":"instance_method","visibility":"public"},"OpenSSL::BN#sqr":{"description":"","name":"sqr","namespace":"OpenSSL::BN","path":"OpenSSL::BN#sqr","type":"instance_method","visibility":"public"},"OpenSSL::BN#to_bn":{"description":"","name":"to_bn","namespace":"OpenSSL::BN","path":"OpenSSL::BN#to_bn","type":"instance_method","visibility":"public"},"OpenSSL::BN#to_i":{"description":"","name":"to_int","namespace":"OpenSSL::BN","path":"OpenSSL::BN#to_int","type":"instance_method","visibility":"public"},"OpenSSL::BN#to_int":{"description":"","name":"to_int","namespace":"OpenSSL::BN","path":"OpenSSL::BN#to_int","type":"instance_method","visibility":"public"},"OpenSSL::BN#to_s":{"description":"=== Parameters\n* +base+ - integer\n* * Valid values:\n* * * 0 - MPI\n* * * 2 - binary\n* * * 10 - the default\n* * * 16 - hex","name":"to_s","namespace":"OpenSSL::BN","path":"OpenSSL::BN#to_s","type":"instance_method","visibility":"public"},"OpenSSL::BN#ucmp":{"description":"","name":"ucmp","namespace":"OpenSSL::BN","path":"OpenSSL::BN#ucmp","type":"instance_method","visibility":"public"},"OpenSSL::BN#zero?":{"description":"","name":"zero?","namespace":"OpenSSL::BN","path":"OpenSSL::BN#zero?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::BN.generate_prime":{"description":"","name":"generate_prime","namespace":"OpenSSL::BN","path":"OpenSSL::BN.generate_prime","type":"class_method","visibility":"public"},"OpenSSL::BN.pseudo_rand":{"description":"","name":"pseudo_rand","namespace":"OpenSSL::BN","path":"OpenSSL::BN.pseudo_rand","type":"class_method","visibility":"public"},"OpenSSL::BN.pseudo_rand_range":{"description":"","name":"pseudo_rand_range","namespace":"OpenSSL::BN","path":"OpenSSL::BN.pseudo_rand_range","type":"class_method","visibility":"public"},"OpenSSL::BN.rand":{"description":"zero\none\nvalue_one - DON'T IMPL.\nset_word\nget_word","name":"rand","namespace":"OpenSSL::BN","path":"OpenSSL::BN.rand","type":"class_method","visibility":"public"},"OpenSSL::BN.rand_range":{"description":"","name":"rand_range","namespace":"OpenSSL::BN","path":"OpenSSL::BN.rand_range","type":"class_method","visibility":"public"},"OpenSSL::BNError":{"description":"","name":"BNError","namespace":"OpenSSL","path":"OpenSSL::BNError","type":"class","visibility":"public"},"OpenSSL::Buffering":{"description":"OpenSSL IO buffering mix-in module.\n\nThis module allows an OpenSSL::SSL::SSLSocket to behave like an IO.\n\nYou typically won't use this module directly, you can see it implemented in\nOpenSSL::SSL::SSLSocket.","name":"Buffering","namespace":"OpenSSL","path":"OpenSSL::Buffering","type":"module","visibility":"public"},"OpenSSL::Buffering#<<":{"description":"Writes +s+ to the stream.  +s+ will be converted to a String using\nString#to_s.","name":"<<","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#<<","type":"module_function","visibility":"public"},"OpenSSL::Buffering#close":{"description":"Closes the SSLSocket and flushes any unwritten data.","name":"close","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#close","type":"module_function","visibility":"public"},"OpenSSL::Buffering#consume_rbuff":{"description":"Consumes +size+ bytes from the buffer","name":"consume_rbuff","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#consume_rbuff","type":"module_function","visibility":"private"},"OpenSSL::Buffering#do_write":{"description":"Writes +s+ to the buffer.  When the buffer is full or #sync is true the\nbuffer is flushed to the underlying socket.","name":"do_write","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#do_write","type":"module_function","visibility":"private"},"OpenSSL::Buffering#each":{"description":"Executes the block for every line in the stream where lines are separated\nby +eol+.\n\nSee also #gets","name":"each_line","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#each_line","type":"module_function","visibility":"public"},"OpenSSL::Buffering#each_line":{"description":"Executes the block for every line in the stream where lines are separated\nby +eol+.\n\nSee also #gets","name":"each_line","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#each_line","type":"module_function","visibility":"public"},"OpenSSL::Buffering#each_byte":{"description":"Calls the given block once for each byte in the stream.","name":"each_byte","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#each_byte","type":"module_function","visibility":"public"},"OpenSSL::Buffering#eof":{"description":"Returns true if the stream is at file which means there is no more data to\nbe read.","name":"eof","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#eof","type":"module_function","visibility":"public","return":[["Boolean"],""]},"OpenSSL::Buffering#eof?":{"description":"Returns true if the stream is at file which means there is no more data to\nbe read.","name":"eof","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#eof","type":"module_function","visibility":"public","return":[["Boolean"],""]},"OpenSSL::Buffering#fill_rbuff":{"description":"Fills the buffer from the underlying SSLSocket","name":"fill_rbuff","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#fill_rbuff","type":"module_function","visibility":"private"},"OpenSSL::Buffering#flush":{"description":"Flushes buffered data to the SSLSocket.","name":"flush","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#flush","type":"module_function","visibility":"public"},"OpenSSL::Buffering#getc":{"description":"Reads one character from the stream.  Returns nil if called at end of\nfile.","name":"getc","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#getc","type":"module_function","visibility":"public"},"OpenSSL::Buffering#gets":{"description":"Reads the next \"line+ from the stream.  Lines are separated by +eol+.  If\n+limit+ is provided the result will not be longer than the given number of\nbytes.\n\n+eol+ may be a String or Regexp.\n\nUnlike IO#gets the line read will not be assigned to +$_+.\n\nUnlike IO#gets the separator must be provided if a limit is provided.","name":"gets","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#gets","type":"module_function","visibility":"public"},"OpenSSL::Buffering#initialize":{"description":"Creates an instance of OpenSSL's buffering IO module.","name":"initialize","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#initialize","type":"module_function","visibility":"public"},"OpenSSL::Buffering#print":{"description":"Writes +args+ to the stream.\n\nSee IO#print for full details.","name":"print","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#print","type":"module_function","visibility":"public"},"OpenSSL::Buffering#printf":{"description":"Formats and writes to the stream converting parameters under control of\nthe format string.\n\nSee Kernel#sprintf for format string details.","name":"printf","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#printf","type":"module_function","visibility":"public"},"OpenSSL::Buffering#puts":{"description":"Writes +args+ to the stream along with a record separator.\n\nSee IO#puts for full details.","name":"puts","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#puts","type":"module_function","visibility":"public"},"OpenSSL::Buffering#read":{"description":"Reads +size+ bytes from the stream.  If +buf+ is provided it must\nreference a string which will receive the data.\n\nSee IO#read for full details.","name":"read","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#read","type":"module_function","visibility":"public"},"OpenSSL::Buffering#read_nonblock":{"description":"Reads at most +maxlen+ bytes in the non-blocking manner.\n\nWhen no data can be read without blocking it raises\nOpenSSL::SSL::SSLError extended by IO::WaitReadable or IO::WaitWritable.\n\nIO::WaitReadable means SSL needs to read internally so read_nonblock\nshould be called again when the underlying IO is readable.\n\nIO::WaitWritable means SSL needs to write internally so read_nonblock\nshould be called again after the underlying IO is writable.\n\nOpenSSL::Buffering#read_nonblock needs two rescue clause as follows:\n\n  # emulates blocking read (readpartial).\n  begin\n    result = ssl.read_nonblock(maxlen)\n  rescue IO::WaitReadable\n    IO.select([io])\n    retry\n  rescue IO::WaitWritable\n    IO.select(nil, [io])\n    retry\n  end\n\nNote that one reason that read_nonblock writes to the underlying IO is\nwhen the peer requests a new TLS/SSL handshake.  See openssl the FAQ for\nmore details.  http://www.openssl.org/support/faq.html","name":"read_nonblock","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#read_nonblock","type":"module_function","visibility":"public"},"OpenSSL::Buffering#readchar":{"description":"Reads a one-character string from the stream.  Raises an EOFError at end\nof file.","name":"readchar","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#readchar","type":"module_function","visibility":"public"},"OpenSSL::Buffering#readline":{"description":"Reads a line from the stream which is separated by +eol+.\n\nRaises EOFError if at end of file.","name":"readline","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#readline","type":"module_function","visibility":"public"},"OpenSSL::Buffering#readlines":{"description":"Reads lines from the stream which are separated by +eol+.\n\nSee also #gets","name":"readlines","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#readlines","type":"module_function","visibility":"public"},"OpenSSL::Buffering#readpartial":{"description":"Reads at most +maxlen+ bytes from the stream.  If +buf+ is provided it\nmust reference a string which will receive the data.\n\nSee IO#readpartial for full details.","name":"readpartial","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#readpartial","type":"module_function","visibility":"public"},"OpenSSL::Buffering#sync":{"description":"The \"sync mode\" of the SSLSocket.\n\nSee IO#sync for full details.","name":"sync","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#sync","type":"module_function","visibility":"public"},"OpenSSL::Buffering#sync=":{"description":"The \"sync mode\" of the SSLSocket.\n\nSee IO#sync for full details.","name":"sync=","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#sync=","type":"module_function","visibility":"public"},"OpenSSL::Buffering#ungetc":{"description":"Pushes character +c+ back onto the stream such that a subsequent buffered\ncharacter read will return it.\n\nUnlike IO#getc multiple bytes may be pushed back onto the stream.\n\nHas no effect on unbuffered reads (such as #sysread).","name":"ungetc","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#ungetc","type":"module_function","visibility":"public"},"OpenSSL::Buffering#write":{"description":"Writes +s+ to the stream.  If the argument is not a string it will be\nconverted using String#to_s.  Returns the number of bytes written.","name":"write","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#write","type":"module_function","visibility":"public"},"OpenSSL::Buffering#write_nonblock":{"description":"Writes +str+ in the non-blocking manner.\n\nIf there is buffered data, it is flushed first.  This may block.\n\nwrite_nonblock returns number of bytes written to the SSL connection.\n\nWhen no data can be written without blocking it raises\nOpenSSL::SSL::SSLError extended by IO::WaitReadable or IO::WaitWritable.\n\nIO::WaitReadable means SSL needs to read internally so write_nonblock\nshould be called again after the underlying IO is readable.\n\nIO::WaitWritable means SSL needs to write internally so write_nonblock\nshould be called again after underlying IO is writable.\n\nSo OpenSSL::Buffering#write_nonblock needs two rescue clause as follows.\n\n  # emulates blocking write.\n  begin\n    result = ssl.write_nonblock(str)\n  rescue IO::WaitReadable\n    IO.select([io])\n    retry\n  rescue IO::WaitWritable\n    IO.select(nil, [io])\n    retry\n  end\n\nNote that one reason that write_nonblock reads from the underlying IO\nis when the peer requests a new TLS/SSL handshake.  See the openssl FAQ\nfor more details.  http://www.openssl.org/support/faq.html","name":"write_nonblock","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering#write_nonblock","type":"module_function","visibility":"public"},"OpenSSL::Buffering::BLOCK_SIZE":{"description":"Default size to read from or write to the SSLSocket for buffer operations.","name":"BLOCK_SIZE","namespace":"OpenSSL::Buffering","path":"OpenSSL::Buffering::BLOCK_SIZE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::Cipher":{"description":"Provides symmetric algorithms for encryption and decryption. The\nalgorithms that are available depend on the particular version\nof OpenSSL that is installed.\n\n=== Listing all supported algorithms\n\nA list of supported algorithms can be obtained by\n\n  puts OpenSSL::Cipher.ciphers\n\n=== Instantiating a Cipher\n\nThere are several ways to create a Cipher instance. Generally, a\nCipher algorithm is categorized by its name, the key length in bits\nand the cipher mode to be used. The most generic way to create a\nCipher is the following\n\n  cipher = OpenSSL::Cipher.new('<name>-<key length>-<mode>')\n\nThat is, a string consisting of the hyphenated concatenation of the\nindividual components name, key length and mode. Either all uppercase\nor all lowercase strings may be used, for example:\n\n cipher = OpenSSL::Cipher.new('AES-128-CBC')\n\nFor each algorithm supported, there is a class defined under the\nCipher class that goes by the name of the cipher, e.g. to obtain an\ninstance of AES, you could also use\n\n  # these are equivalent\n  cipher = OpenSSL::Cipher::AES.new(128, :CBC)\n  cipher = OpenSSL::Cipher::AES.new(128, 'CBC')\n  cipher = OpenSSL::Cipher::AES.new('128-CBC')\n\nFinally, due to its wide-spread use, there are also extra classes\ndefined for the different key sizes of AES\n\n  cipher = OpenSSL::Cipher::AES128.new(:CBC)\n  cipher = OpenSSL::Cipher::AES192.new(:CBC)\n  cipher = OpenSSL::Cipher::AES256.new(:CBC)\n\n=== Choosing either encryption or decryption mode\n\nEncryption and decryption are often very similar operations for\nsymmetric algorithms, this is reflected by not having to choose\ndifferent classes for either operation, both can be done using the\nsame class. Still, after obtaining a Cipher instance, we need to\ntell the instance what it is that we intend to do with it, so we\nneed to call either\n\n  cipher.encrypt\n\nor\n\n  cipher.decrypt\n\non the Cipher instance. This should be the first call after creating\nthe instance, otherwise configuration that has already been set could\nget lost in the process.\n\n=== Choosing a key\n\nSymmetric encryption requires a key that is the same for the encrypting\nand for the decrypting party and after initial key establishment should\nbe kept as private information. There are a lot of ways to create\ninsecure keys, the most notable is to simply take a password as the key\nwithout processing the password further. A simple and secure way to\ncreate a key for a particular Cipher is\n\n cipher = OpenSSL::AES256.new(:CFB)\n cipher.encrypt\n key = cipher.random_key # also sets the generated key on the Cipher\n\nIf you absolutely need to use passwords as encryption keys, you\nshould use Password-Based Key Derivation Function 2 (PBKDF2) by\ngenerating the key with the help of the functionality provided by\nOpenSSL::PKCS5.pbkdf2_hmac_sha1 or OpenSSL::PKCS5.pbkdf2_hmac.\n\nAlthough there is Cipher#pkcs5_keyivgen, its use is deprecated and\nit should only be used in legacy applications because it does not use\nthe newer PKCS#5 v2 algorithms.\n\n=== Choosing an IV\n\nThe cipher modes CBC, CFB, OFB and CTR all need an \"initialization\nvector\", or short, IV. ECB mode is the only mode that does not require\nan IV, but there is almost no legitimate use case for this mode\nbecause of the fact that it does not sufficiently hide plaintext\npatterns. Therefore\n\n<b>You should never use ECB mode unless you are absolutely sure that\nyou absolutely need it</b>\n\nBecause of this, you will end up with a mode that explicitly requires\nan IV in any case. Note that for backwards compatibility reasons,\nsetting an IV is not explicitly mandated by the Cipher API. If not\nset, OpenSSL itself defaults to an all-zeroes IV (\"\\\\0\", not the\ncharacter). Although the IV can be seen as public information, i.e.\nit may be transmitted in public once generated, it should still stay\nunpredictable to prevent certain kinds of attacks. Therefore, ideally\n\n<b>Always create a secure random IV for every encryption of your\nCipher</b>\n\nA new, random IV should be created for every encryption of data. Think\nof the IV as a nonce (number used once) - it's public but random and\nunpredictable. A secure random IV can be created as follows\n\n cipher = ...\n cipher.encrypt\n key = cipher.random_key\n iv = cipher.random_iv # also sets the generated IV on the Cipher\n\n Although the key is generally a random value, too, it is a bad choice\n as an IV. There are elaborate ways how an attacker can take advantage\n of such an IV. As a general rule of thumb, exposing the key directly\n or indirectly should be avoided at all cost and exceptions only be\n made with good reason.\n\n=== Calling Cipher#final\n\nECB (which should not be used) and CBC are both block-based modes.\nThis means that unlike for the other streaming-based modes, they\noperate on fixed-size blocks of data, and therefore they require a\n\"finalization\" step to produce or correctly decrypt the last block of\ndata by appropriately handling some form of padding. Therefore it is\nessential to add the output of OpenSSL::Cipher#final to your\nencryption/decryption buffer or you will end up with decryption errors\nor truncated data.\n\nAlthough this is not really necessary for streaming-mode ciphers, it is\nstill recommended to apply the same pattern of adding the output of\nCipher#final there as well - it also enables you to switch between\nmodes more easily in the future.\n\n=== Encrypting and decrypting some data\n\n  data = \"Very, very confidential data\"\n\n  cipher = OpenSSL::Cipher::AES.new(128, :CBC)\n  cipher.encrypt\n  key = cipher.random_key\n  iv = cipher.random_iv\n\n  encrypted = cipher.update(data) + cipher.final\n  ...\n  decipher = OpenSSL::Cipher::AES.new(128, :CBC)\n  decipher.decrypt\n  decipher.key = key\n  decipher.iv = iv\n\n  plain = decipher.update(encrypted) + decipher.final\n\n  puts data == plain #=> true\n\n=== Authenticated Encryption and Associated Data (AEAD)\n\nIf the OpenSSL version used supports it, an Authenticated Encryption\nmode (such as GCM or CCM) should always be preferred over any\nunauthenticated mode. Currently, OpenSSL supports AE only in combination\nwith Associated Data (AEAD) where additional associated data is included\nin the encryption process to compute a tag at the end of the encryption.\nThis tag will also be used in the decryption process and by verifying\nits validity, the authenticity of a given ciphertext is established.\n\nThis is superior to unauthenticated modes in that it allows to detect\nif somebody effectively changed the ciphertext after it had been\nencrypted. This prevents malicious modifications of the ciphertext that\ncould otherwise be exploited to modify ciphertexts in ways beneficial to\npotential attackers.\n\nIf no associated data is needed for encryption and later decryption,\nthe OpenSSL library still requires a value to be set - \"\" may be used in\ncase none is available. An example using the GCM (Galois Counter Mode):\n\n  cipher = OpenSSL::Cipher::AES.new(128, :GCM)\n  cipher.encrypt\n  key = cipher.random_key\n  iv = cipher.random_iv\n  cipher.auth_data = \"\"\n\n  encrypted = cipher.update(data) + cipher.final\n  tag = cipher.auth_tag\n\n  decipher = OpenSSL::Cipher::AES.new(128, :GCM)\n  decipher.decrypt\n  decipher.key = key\n  decipher.iv = iv\n  decipher.auth_tag = tag\n  decipher.auth_data = \"\"\n\n  plain = decipher.update(encrypted) + decipher.final\n\n  puts data == plain #=> true","name":"Cipher","namespace":"OpenSSL","path":"OpenSSL::Cipher","type":"class","visibility":"public"},"OpenSSL::Cipher#auth_data=":{"description":"Sets the cipher's additional authenticated data. This field must be\nset when using AEAD cipher modes such as GCM or CCM. If no associated\ndata shall be used, this method must *still* be called with a value of \"\".\nThe contents of this field should be non-sensitive data which will be\nadded to the ciphertext to generate the authentication tag which validates\nthe contents of the ciphertext.\n\nThe AAD must be set prior to encryption or decryption. In encryption mode,\nit must be set after calling Cipher#encrypt and setting Cipher#key= and\nCipher#iv=. When decrypting, the authenticated data must be set after key,\niv and especially *after* the authentication tag has been set. I.e. set it\nonly after calling Cipher#decrypt, Cipher#key=, Cipher#iv= and\nCipher#auth_tag= first.","name":"auth_data=","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#auth_data=","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#auth_tag":{"description":"Gets the authentication tag generated by Authenticated Encryption Cipher\nmodes (GCM for example). This tag may be stored along with the ciphertext,\nthen set on the decryption cipher to authenticate the contents of the\nciphertext against changes. If the optional integer parameter +tag_len+ is\ngiven, the returned tag will be +tag_len+ bytes long. If the parameter is\nomitted, the maximum length of 16 bytes will be returned. For maximum\nsecurity, the default of 16 bytes should be chosen.\n\nThe tag may only be retrieved after calling Cipher#final.","name":"auth_tag","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#auth_tag","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#auth_tag=":{"description":"Sets the authentication tag to verify the contents of the\nciphertext. The tag must be set after calling Cipher#decrypt,\nCipher#key= and Cipher#iv=, but before assigning the associated\nauthenticated data using Cipher#auth_data= and of course, before\ndecrypting any of the ciphertext. After all decryption is\nperformed, the tag is verified automatically in the call to\nCipher#final.","name":"auth_tag=","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#auth_tag=","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#authenticated?":{"description":"Indicated whether this Cipher instance uses an Authenticated Encryption\nmode.","name":"authenticated?","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#authenticated?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::Cipher#block_size":{"description":"","name":"block_size","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#block_size","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#ciphers":{"description":"Returns the names of all available ciphers in an array.","name":"ciphers","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#ciphers","type":"instance_method","visibility":"private"},"OpenSSL::Cipher#decrypt":{"description":"Initializes the Cipher for decryption.\n\nMake sure to call Cipher#encrypt or Cipher#decrypt before using any of the\nfollowing methods:\n* [key=, iv=, random_key, random_iv, pkcs5_keyivgen]\n\nInternally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, 0).","name":"decrypt","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#decrypt","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#encrypt":{"description":"Initializes the Cipher for encryption.\n\nMake sure to call Cipher#encrypt or Cipher#decrypt before using any of the\nfollowing methods:\n* [key=, iv=, random_key, random_iv, pkcs5_keyivgen]\n\nInternally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, 1).","name":"encrypt","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#encrypt","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#final":{"description":"Returns the remaining data held in the cipher object. Further calls to\nCipher#update or Cipher#final will return garbage. This call should always\nbe made as the last call of an encryption or decryption operation, after\nafter having fed the entire plaintext or ciphertext to the Cipher instance.\n\nIf an authenticated cipher was used, a CipherError is raised if the tag\ncould not be authenticated successfully. Only call this method after\nsetting the authentication tag and passing the entire contents of the\nciphertext into the cipher.","name":"final","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#final","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#initialize":{"description":"The string must contain a valid cipher name like \"AES-128-CBC\" or \"3DES\".\n\nA list of cipher names is available by calling OpenSSL::Cipher.ciphers.","name":"initialize","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#initialize","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#iv=":{"description":"Sets the cipher IV. Please note that since you should never be using ECB\nmode, an IV is always explicitly required and should be set prior to\nencryption. The IV itself can be safely transmitted in public, but it\nshould be unpredictable to prevent certain kinds of attacks. You may use\nCipher#random_iv to create a secure random IV.\n\nOnly call this method after calling Cipher#encrypt or Cipher#decrypt.\n\nIf not explicitly set, the OpenSSL default of an all-zeroes (\"\\\\0\") IV is\nused.","name":"iv=","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#iv=","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#iv_len":{"description":"","name":"iv_len","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#iv_len","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#key=":{"description":"Sets the cipher key. To generate a key, you should either use a secure\nrandom byte string or, if the key is to be derived from a password, you\nshould rely on PBKDF2 functionality provided by OpenSSL::PKCS5. To\ngenerate a secure random-based key, Cipher#random_key may be used.\n\nOnly call this method after calling Cipher#encrypt or Cipher#decrypt.","name":"key=","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#key=","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#key_len":{"description":"","name":"key_len","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#key_len","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#key_len=":{"description":"Sets the key length of the cipher.  If the cipher is a fixed length cipher\nthen attempting to set the key length to any value other than the fixed\nvalue is an error.\n\nUnder normal circumstances you do not need to call this method (and probably shouldn't).\n\nSee EVP_CIPHER_CTX_set_key_length for further information.","name":"key_len=","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#key_len=","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#name":{"description":"Returns the name of the cipher which may differ slightly from the original\nname provided.","name":"name","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#name","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#padding=":{"description":"Enables or disables padding. By default encryption operations are padded using standard block padding and the\npadding is checked and removed when decrypting. If the pad parameter is zero then no padding is performed, the\ntotal amount of data encrypted or decrypted must then be a multiple of the block size or an error will occur.\n\nSee EVP_CIPHER_CTX_set_padding for further information.","name":"padding=","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#padding=","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#pkcs5_keyivgen":{"description":"Generates and sets the key/IV based on a password.\n\nWARNING: This method is only PKCS5 v1.5 compliant when using RC2, RC4-40,\nor DES with MD5 or SHA1. Using anything else (like AES) will generate the\nkey/iv using an OpenSSL specific method. This method is deprecated and\nshould no longer be used. Use a PKCS5 v2 key generation method from\nOpenSSL::PKCS5 instead.\n\n=== Parameters\n+salt+ must be an 8 byte string if provided.\n+iterations+ is a integer with a default of 2048.\n+digest+ is a Digest object that defaults to 'MD5'\n\nA minimum of 1000 iterations is recommended.","name":"pkcs5_keyivgen","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#pkcs5_keyivgen","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#random_iv":{"description":"Generate, set, and return a random iv.\nYou must call cipher.encrypt or cipher.decrypt before calling this method.","name":"random_iv","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#random_iv","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#random_key":{"description":"Generate, set, and return a random key.\nYou must call cipher.encrypt or cipher.decrypt before calling this method.","name":"random_key","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#random_key","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#reset":{"description":"Fully resets the internal state of the Cipher. By using this, the same\nCipher instance may be used several times for encryption or decryption tasks.\n\nInternally calls EVP_CipherInit_ex(ctx, NULL, NULL, NULL, NULL, -1).","name":"reset","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#reset","type":"instance_method","visibility":"public"},"OpenSSL::Cipher#update":{"description":"Encrypts data in a streaming fashion. Hand consecutive blocks of data\nto the +update+ method in order to encrypt it. Returns the encrypted\ndata chunk. When done, the output of Cipher#final should be additionally\nadded to the result.\n\n=== Parameters\n+data+ is a nonempty string.\n+buffer+ is an optional string to store the result.","name":"update","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher#update","type":"instance_method","visibility":"public"},"OpenSSL::Cipher.ciphers":{"description":"Returns the names of all available ciphers in an array.","name":"ciphers","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher.ciphers","type":"class_method","visibility":"public"},"OpenSSL::Cipher::Cipher":{"description":"This class is only provided for backwards compatibility.  Use OpenSSL::Cipher in the future.","name":"Cipher","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher::Cipher","type":"class","visibility":"public"},"OpenSSL::Cipher::CipherError":{"description":"","name":"CipherError","namespace":"OpenSSL::Cipher","path":"OpenSSL::Cipher::CipherError","type":"class","visibility":"public"},"OpenSSL::Config":{"description":"= OpenSSL::Config\n\nConfiguration for the openssl library.\n\nMany system's installation of openssl library will depend on your system\nconfiguration. See the value of OpenSSL::Config::DEFAULT_CONFIG_FILE for\nthe location of the file for your host.\n\nSee also http://www.openssl.org/docs/apps/config.html","name":"Config","namespace":"OpenSSL","path":"OpenSSL::Config","type":"class","visibility":"public"},"OpenSSL::Config#[]":{"description":"Get a specific +section+ from the current configuration\n\nGiven the following configurating file being loaded:\n\n  config = OpenSSL::Config.load('foo.cnf')\n    #=> #<OpenSSL::Config sections=[\"default\"]>\n  puts config.to_s\n    #=> [ default ]\n    #   foo=bar\n\nYou can get a hash of the specific section like so:\n\n  config['default']\n    #=> {\"foo\"=>\"bar\"}","name":"[]","namespace":"OpenSSL::Config","path":"OpenSSL::Config#[]","type":"instance_method","visibility":"public"},"OpenSSL::Config#[]=":{"description":"Sets a specific +section+ name with a Hash +pairs+\n\nGiven the following configuration being created:\n\n  config = OpenSSL::Config.new\n    #=> #<OpenSSL::Config sections=[]>\n  config['default'] = {\"foo\"=>\"bar\",\"baz\"=>\"buz\"}\n    #=> {\"foo\"=>\"bar\", \"baz\"=>\"buz\"}\n  puts config.to_s\n    #=> [ default ]\n    #   foo=bar\n    #   baz=buz\n\nIt's important to note that this will essentially merge any of the keys\nin +pairs+ with the existing +section+. For example:\n\n  config['default']\n    #=> {\"foo\"=>\"bar\", \"baz\"=>\"buz\"}\n  config['default'] = {\"foo\" => \"changed\"}\n    #=> {\"foo\"=>\"changed\"}\n  config['default']\n    #=> {\"foo\"=>\"changed\", \"baz\"=>\"buz\"}","name":"[]=","namespace":"OpenSSL::Config","path":"OpenSSL::Config#[]=","type":"instance_method","visibility":"public"},"OpenSSL::Config#add_value":{"description":"Set the target +key+ with a given +value+ under a specific +section+.\n\nGiven the following configurating file being loaded:\n\n  config = OpenSSL::Config.load('foo.cnf')\n    #=> #<OpenSSL::Config sections=[\"default\"]>\n  puts config.to_s\n    #=> [ default ]\n    #   foo=bar\n\nYou can set the value of +foo+ under the +default+ section to a new\nvalue:\n\n  config.add_value('default', 'foo', 'buzz')\n    #=> \"buzz\"\n  puts config.to_s\n    #=> [ default ]\n    #   foo=buzz","name":"add_value","namespace":"OpenSSL::Config","path":"OpenSSL::Config#add_value","type":"instance_method","visibility":"public"},"OpenSSL::Config#check_modify":{"description":"","name":"check_modify","namespace":"OpenSSL::Config","path":"OpenSSL::Config#check_modify","type":"instance_method","visibility":"private"},"OpenSSL::Config#data":{"description":":nodoc:","name":"data","namespace":"OpenSSL::Config","path":"OpenSSL::Config#data","type":"instance_method","visibility":"protected"},"OpenSSL::Config#each":{"description":"For a block.\n\nReceive the section and its pairs for the current configuration.\n\n  config.each do |section, key, value|\n    # ...\n  end","name":"each","namespace":"OpenSSL::Config","path":"OpenSSL::Config#each","type":"instance_method","visibility":"public"},"OpenSSL::Config#get_key_string":{"description":"","name":"get_key_string","namespace":"OpenSSL::Config","path":"OpenSSL::Config#get_key_string","type":"instance_method","visibility":"private"},"OpenSSL::Config#get_value":{"description":"Gets the value of +key+ from the given +section+\n\nGiven the following configurating file being loaded:\n\n  config = OpenSSL::Config.load('foo.cnf')\n    #=> #<OpenSSL::Config sections=[\"default\"]>\n  puts config.to_s\n    #=> [ default ]\n    #   foo=bar\n\nYou can get a specific value from the config if you know the +section+\nand +key+ like so:\n\n  config.get_value('default','foo')\n    #=> \"bar\"","name":"get_value","namespace":"OpenSSL::Config","path":"OpenSSL::Config#get_value","type":"instance_method","visibility":"public"},"OpenSSL::Config#initialize":{"description":"Creates an instance of OpenSSL's configuration class.\n\nThis can be used in contexts like OpenSSL::X509::ExtensionFactory.config=\n\nIf the optional +filename+ parameter is provided, then it is read in and\nparsed via #parse_config.\n\nThis can raise IO exceptions based on the access, or availability of the\nfile. A ConfigError exception may be raised depending on the validity of\nthe data being configured.","name":"initialize","namespace":"OpenSSL::Config","path":"OpenSSL::Config#initialize","type":"instance_method","visibility":"public","return":[["Config"],"a new instance of Config"]},"OpenSSL::Config#initialize_copy":{"description":"","name":"initialize_copy","namespace":"OpenSSL::Config","path":"OpenSSL::Config#initialize_copy","type":"instance_method","visibility":"private"},"OpenSSL::Config#inspect":{"description":"String representation of this configuration object, including the class\nname and its sections.","name":"inspect","namespace":"OpenSSL::Config","path":"OpenSSL::Config#inspect","type":"instance_method","visibility":"public"},"OpenSSL::Config#section":{"description":"Deprecated\n\nUse #[] instead","name":"section","namespace":"OpenSSL::Config","path":"OpenSSL::Config#section","type":"instance_method","visibility":"public"},"OpenSSL::Config#sections":{"description":"Get the names of all sections in the current configuration","name":"sections","namespace":"OpenSSL::Config","path":"OpenSSL::Config#sections","type":"instance_method","visibility":"public"},"OpenSSL::Config#to_s":{"description":"Get the parsable form of the current configuration\n\nGiven the following configuration being created:\n\n  config = OpenSSL::Config.new\n    #=> #<OpenSSL::Config sections=[]>\n  config['default'] = {\"foo\"=>\"bar\",\"baz\"=>\"buz\"}\n    #=> {\"foo\"=>\"bar\", \"baz\"=>\"buz\"}\n  puts config.to_s\n    #=> [ default ]\n    #   foo=bar\n    #   baz=buz\n\nYou can parse get the serialized configuration using #to_s and then parse\nit later:\n\n  serialized_config = config.to_s\n  # much later...\n  new_config = OpenSSL::Config.parse(serialized_config)\n    #=> #<OpenSSL::Config sections=[\"default\"]>\n  puts new_config\n    #=> [ default ]\n        foo=bar\n        baz=buz","name":"to_s","namespace":"OpenSSL::Config","path":"OpenSSL::Config#to_s","type":"instance_method","visibility":"public"},"OpenSSL::Config#value":{"description":"*Deprecated*\n\nUse #get_value instead","name":"value","namespace":"OpenSSL::Config","path":"OpenSSL::Config#value","type":"instance_method","visibility":"public"},"OpenSSL::Config.clear_comments":{"description":"","name":"clear_comments","namespace":"OpenSSL::Config","path":"OpenSSL::Config.clear_comments","type":"class_method","visibility":"private"},"OpenSSL::Config.extract_reference":{"description":"","name":"extract_reference","namespace":"OpenSSL::Config","path":"OpenSSL::Config.extract_reference","type":"class_method","visibility":"private"},"OpenSSL::Config.get_definition":{"description":"","name":"get_definition","namespace":"OpenSSL::Config","path":"OpenSSL::Config.get_definition","type":"class_method","visibility":"private"},"OpenSSL::Config.get_key_string":{"description":":nodoc:","name":"get_key_string","namespace":"OpenSSL::Config","path":"OpenSSL::Config.get_key_string","type":"class_method","visibility":"public"},"OpenSSL::Config.get_line":{"description":"","name":"get_line","namespace":"OpenSSL::Config","path":"OpenSSL::Config.get_line","type":"class_method","visibility":"private"},"OpenSSL::Config.load":{"description":"load is an alias to ::new","name":"load","namespace":"OpenSSL::Config","path":"OpenSSL::Config.load","type":"class_method","visibility":"public"},"OpenSSL::Config.parse":{"description":"Parses a given +string+ as a blob that contains configuration for openssl.\n\nIf the source of the IO is a file, then consider using #parse_config.","name":"parse","namespace":"OpenSSL::Config","path":"OpenSSL::Config.parse","type":"class_method","visibility":"public"},"OpenSSL::Config.parse_config":{"description":"Parses the configuration data read from +io+, see also #parse.\n\nRaises a ConfigError on invalid configuration data.","name":"parse_config","namespace":"OpenSSL::Config","path":"OpenSSL::Config.parse_config","type":"class_method","visibility":"public"},"OpenSSL::Config.parse_config_lines":{"description":"","name":"parse_config_lines","namespace":"OpenSSL::Config","path":"OpenSSL::Config.parse_config_lines","type":"class_method","visibility":"private"},"OpenSSL::Config.unescape_value":{"description":"","name":"unescape_value","namespace":"OpenSSL::Config","path":"OpenSSL::Config.unescape_value","type":"class_method","visibility":"private"},"OpenSSL::Config::DEFAULT_CONFIG_FILE":{"description":"The default system configuration file for openssl","name":"DEFAULT_CONFIG_FILE","namespace":"OpenSSL::Config","path":"OpenSSL::Config::DEFAULT_CONFIG_FILE","type":"constant","return":["String",""],"visibility":"public"},"OpenSSL::Config::ESCAPE_MAP":{"description":"escaped char map","name":"ESCAPE_MAP","namespace":"OpenSSL::Config","path":"OpenSSL::Config::ESCAPE_MAP","type":"constant","return":null,"visibility":"private"},"OpenSSL::Config::QUOTE_REGEXP_DQ":{"description":"escape with backslash and doubled dq","name":"QUOTE_REGEXP_DQ","namespace":"OpenSSL::Config","path":"OpenSSL::Config::QUOTE_REGEXP_DQ","type":"constant","return":null,"visibility":"private"},"OpenSSL::Config::QUOTE_REGEXP_SQ":{"description":"escape with backslash","name":"QUOTE_REGEXP_SQ","namespace":"OpenSSL::Config","path":"OpenSSL::Config::QUOTE_REGEXP_SQ","type":"constant","return":null,"visibility":"private"},"OpenSSL::ConfigError":{"description":"General error for openssl library configuration files. Including formatting,\nparsing errors, etc.","name":"ConfigError","namespace":"OpenSSL","path":"OpenSSL::ConfigError","type":"class","visibility":"public"},"OpenSSL::Digest":{"description":"OpenSSL::Digest allows you to compute message digests (sometimes\ninterchangeably called \"hashes\") of arbitrary data that are\ncryptographically secure, i.e. a Digest implements a secure one-way\nfunction.\n\nOne-way functions offer some useful properties. E.g. given two\ndistinct inputs the probability that both yield the same output\nis highly unlikely. Combined with the fact that every message digest\nalgorithm has a fixed-length output of just a few bytes, digests are\noften used to create unique identifiers for arbitrary data. A common\nexample is the creation of a unique id for binary documents that are\nstored in a database.\n\nAnother useful characteristic of one-way functions (and thus the name)\nis that given a digest there is no indication about the original\ndata that produced it, i.e. the only way to identify the original input\nis to \"brute-force\" through every possible combination of inputs.\n\nThese characteristics make one-way functions also ideal companions\nfor public key signature algorithms: instead of signing an entire\ndocument, first a hash of the document is produced with a considerably\nfaster message digest algorithm and only the few bytes of its output\nneed to be signed using the slower public key algorithm. To validate\nthe integrity of a signed document, it suffices to re-compute the hash\nand verify that it is equal to that in the signature.\n\nAmong the supported message digest algorithms are:\n* SHA, SHA1, SHA224, SHA256, SHA384 and SHA512\n* MD2, MD4, MDC2 and MD5\n* RIPEMD160\n* DSS, DSS1 (Pseudo algorithms to be used for DSA signatures. DSS is\n  equal to SHA and DSS1 is equal to SHA1)\n\nFor each of these algorithms, there is a sub-class of Digest that\ncan be instantiated as simply as e.g.\n\n  digest = OpenSSL::Digest::SHA1.new\n\n=== Mapping between Digest class and sn/ln\n\nThe sn (short names) and ln (long names) are defined in\n<openssl/object.h> and <openssl/obj_mac.h>. They are textual\nrepresentations of ASN.1 OBJECT IDENTIFIERs. Each supported digest\nalgorithm has an OBJECT IDENTIFIER associated to it and those again\nhave short/long names assigned to them.\nE.g. the OBJECT IDENTIFIER for SHA-1 is 1.3.14.3.2.26 and its\nsn is \"SHA1\" and its ln is \"sha1\".\n==== MD2\n* sn: MD2\n* ln: md2\n==== MD4\n* sn: MD4\n* ln: md4\n==== MD5\n* sn: MD5\n* ln: md5\n==== SHA\n* sn: SHA\n* ln: SHA\n==== SHA-1\n* sn: SHA1\n* ln: sha1\n==== SHA-224\n* sn: SHA224\n* ln: sha224\n==== SHA-256\n* sn: SHA256\n* ln: sha256\n==== SHA-384\n* sn: SHA384\n* ln: sha384\n==== SHA-512\n* sn: SHA512\n* ln: sha512\n\n\"Breaking\" a message digest algorithm means defying its one-way\nfunction characteristics, i.e. producing a collision or finding a way\nto get to the original data by means that are more efficient than\nbrute-forcing etc. Most of the supported digest algorithms can be\nconsidered broken in this sense, even the very popular MD5 and SHA1\nalgorithms. Should security be your highest concern, then you should\nprobably rely on SHA224, SHA256, SHA384 or SHA512.\n\n=== Hashing a file\n\n  data = File.read('document')\n  sha256 = OpenSSL::Digest::SHA256.new\n  digest = sha256.digest(data)\n\n=== Hashing several pieces of data at once\n\n  data1 = File.read('file1')\n  data2 = File.read('file2')\n  data3 = File.read('file3')\n  sha256 = OpenSSL::Digest::SHA256.new\n  sha256 << data1\n  sha256 << data2\n  sha256 << data3\n  digest = sha256.digest\n\n=== Reuse a Digest instance\n\n  data1 = File.read('file1')\n  sha256 = OpenSSL::Digest::SHA256.new\n  digest1 = sha256.digest(data1)\n\n  data2 = File.read('file2')\n  sha256.reset\n  digest2 = sha256.digest(data2)","name":"Digest","namespace":"OpenSSL","path":"OpenSSL::Digest","type":"class","visibility":"public"},"OpenSSL::Digest.digest":{"description":"Return the +data+ hash computed with +name+ Digest. +name+ is either the\nlong name or short name of a supported digest algorithm.\n\n=== Examples\n\n  OpenSSL::Digest.digest(\"SHA256\", \"abc\")\n\nwhich is equivalent to:\n\n  OpenSSL::Digest::SHA256.digest(\"abc\")","name":"digest","namespace":"OpenSSL::Digest","path":"OpenSSL::Digest.digest","type":"class_method","visibility":"public"},"OpenSSL::Digest::Digest":{"description":"Deprecated.\n\nThis class is only provided for backwards compatibility.","name":"Digest","namespace":"OpenSSL::Digest","path":"OpenSSL::Digest::Digest","type":"class","visibility":"public"},"OpenSSL::Digest::Digest#initialize":{"description":"Deprecated.\n\nSee OpenSSL::Digest.new","name":"initialize","namespace":"OpenSSL::Digest::Digest","path":"OpenSSL::Digest::Digest#initialize","type":"instance_method","visibility":"public","return":[["Digest"],"a new instance of Digest"]},"OpenSSL::Digest::DigestError":{"description":"Generic Exception class that is raised if an error occurs during a\nDigest operation.","name":"DigestError","namespace":"OpenSSL::Digest","path":"OpenSSL::Digest::DigestError","type":"class","visibility":"public"},"OpenSSL::Engine":{"description":"This class is the access to openssl's ENGINE cryptographic module\nimplementation.\n\nSee also, https://www.openssl.org/docs/crypto/engine.html","name":"Engine","namespace":"OpenSSL","path":"OpenSSL::Engine","type":"class","visibility":"public"},"OpenSSL::Engine#cipher":{"description":"call-seq:\n  engine.cipher(name) -> OpenSSL::Cipher\n\nThis returns an OpenSSL::Cipher by +name+, if it is available in this\nengine.\n\nA EngineError will be raised if the cipher is unavailable.\n\n   e = OpenSSL::Engine.by_id(\"openssl\")\n    => #<OpenSSL::Engine id=\"openssl\" name=\"Software engine support\">\n   e.cipher(\"RC4\")\n    => #<OpenSSL::Cipher:0x007fc5cacc3048>","name":"cipher","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#cipher","type":"instance_method","visibility":"public"},"OpenSSL::Engine#cmds":{"description":"Returns an array of command definitions for the current engine","name":"cmds","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#cmds","type":"instance_method","visibility":"public"},"OpenSSL::Engine#ctrl_cmd":{"description":"call-seq:\n   engine.ctrl_cmd(command, value = nil) -> engine\n\nSend the given +command+ to this engine.\n\nRaises an EngineError if the +command+ fails.","name":"ctrl_cmd","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#ctrl_cmd","type":"instance_method","visibility":"public"},"OpenSSL::Engine#digest":{"description":"call-seq:\n  engine.digest(name) -> OpenSSL::Digest\n\nThis returns an OpenSSL::Digest by +name+.\n\nWill raise an EngineError if the digest is unavailable.\n\n   e = OpenSSL::Engine.by_id(\"openssl\")\n#=> #<OpenSSL::Engine id=\"openssl\" name=\"Software engine support\">\n   e.digest(\"SHA1\")\n#=> #<OpenSSL::Digest: da39a3ee5e6b4b0d3255bfef95601890afd80709>\n   e.digest(\"zomg\")\n#=> OpenSSL::Engine::EngineError: no such digest `zomg'","name":"digest","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#digest","type":"instance_method","visibility":"public"},"OpenSSL::Engine#finish":{"description":"Releases all internal structural references for this engine.\n\nMay raise an EngineError if the engine is unavailable","name":"finish","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#finish","type":"instance_method","visibility":"public"},"OpenSSL::Engine#id":{"description":"Get the id for this engine\n\n   OpenSSL::Engine.load\n   OpenSSL::Engine.engines #=> [#<OpenSSL::Engine#>, ...]\n   OpenSSL::Engine.engines.first.id\n#=> \"rsax\"","name":"id","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#id","type":"instance_method","visibility":"public"},"OpenSSL::Engine#inspect":{"description":"Pretty print this engine","name":"inspect","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#inspect","type":"instance_method","visibility":"public"},"OpenSSL::Engine#load_private_key":{"description":"call-seq:\n   engine.load_private_key(id = nil, data = nil) -> OpenSSL::PKey\n\nLoads the given private key by +id+ and +data+.\n\nAn EngineError is raised of the OpenSSL::PKey is unavailable.","name":"load_private_key","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#load_private_key","type":"instance_method","visibility":"public"},"OpenSSL::Engine#load_public_key":{"description":"call-seq:\n   engine.load_public_key(id = nil, data = nil) -> OpenSSL::PKey\n\nLoads the given private key by +id+ and +data+.\n\nAn EngineError is raised of the OpenSSL::PKey is unavailable.","name":"load_public_key","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#load_public_key","type":"instance_method","visibility":"public"},"OpenSSL::Engine#name":{"description":"Get the descriptive name for this engine\n\n   OpenSSL::Engine.load\n   OpenSSL::Engine.engines #=> [#<OpenSSL::Engine#>, ...]\n   OpenSSL::Engine.engines.first.name\n#=> \"RSAX engine support\"","name":"name","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#name","type":"instance_method","visibility":"public"},"OpenSSL::Engine#set_default":{"description":"call-seq:\n   engine.set_default(flag)\n\nSet the defaults for this engine with the given +flag+.\n\nThese flags are used to control combinations of algorithm methods.\n\n+flag+ can be one of the following, other flags are available depending on\nyour OS.\n\n[All flags]  0xFFFF\n[No flags]\t0x0000\n\nSee also <openssl/engine.h>","name":"set_default","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine#set_default","type":"instance_method","visibility":"public"},"OpenSSL::Engine.by_id":{"description":"call-seq:\n  by_id(name) -> engine\n\nFetch the engine as specified by the +id+ String\n\n  OpenSSL::Engine.by_id(\"openssl\")\n   => #<OpenSSL::Engine id=\"openssl\" name=\"Software engine support\">\n\nSee OpenSSL::Engine.engines for the currently loaded engines","name":"by_id","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine.by_id","type":"class_method","visibility":"public"},"OpenSSL::Engine.cleanup":{"description":"It is only necessary to run cleanup when engines are loaded via\nOpenSSL::Engine.load. However, running cleanup before exit is recommended.\n\nSee also, https://www.openssl.org/docs/crypto/engine.html","name":"cleanup","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine.cleanup","type":"class_method","visibility":"public"},"OpenSSL::Engine.engines":{"description":"Returns an array of currently loaded engines.","name":"engines","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine.engines","type":"class_method","visibility":"public"},"OpenSSL::Engine.load":{"description":"call-seq:\n  load(enginename = nil)\n\nThis method loads engines. If +name+ is nil, then all builtin engines are\nloaded. Otherwise, the given +name+, as a string,  is loaded if available to\nyour runtime, and returns true. If +name+ is not found, then nil is\nreturned.","name":"load","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine.load","type":"class_method","visibility":"public"},"OpenSSL::Engine::EngineError":{"description":"This is the generic exception for OpenSSL::Engine related errors","name":"EngineError","namespace":"OpenSSL::Engine","path":"OpenSSL::Engine::EngineError","type":"class","visibility":"public"},"OpenSSL::HMAC":{"description":"","name":"HMAC","namespace":"OpenSSL","path":"OpenSSL::HMAC","type":"class","visibility":"public"},"OpenSSL::HMAC#<<":{"description":"Returns +self+ updated with the message to be authenticated.\nCan be called repeatedly with chunks of the message.\n\n=== Example\n\nfirst_chunk = 'The quick brown fox jumps '\nsecond_chunk = 'over the lazy dog'\n\ninstance.update(first_chunk)\n#=> 5b9a8038a65d571076d97fe783989e52278a492a\ninstance.update(second_chunk)\n#=> de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9","name":"<<","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#<<","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#digest":{"description":"Returns the authentication code an instance represents as a binary string.\n\n=== Example\n\ninstance = OpenSSL::HMAC.new('key', OpenSSL::Digest.new('sha1'))\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\ninstance.digest\n#=> \"\\xF4+\\xB0\\xEE\\xB0\\x18\\xEB\\xBDE\\x97\\xAEr\\x13q\\x1E\\xC6\\a`\\x84?\"","name":"digest","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#digest","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#hexdigest":{"description":"Returns the authentication code an instance represents as a hex-encoded\nstring.","name":"to_s","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#to_s","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#inspect":{"description":"Returns the authentication code an instance represents as a hex-encoded\nstring.","name":"inspect","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#inspect","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#to_s":{"description":"Returns the authentication code an instance represents as a hex-encoded\nstring.","name":"to_s","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#to_s","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#initialize":{"description":"Returns an instance of OpenSSL::HMAC set with the key and digest\nalgorithm to be used. The instance represents the initial state of\nthe message authentication code before any data has been processed.\nTo process data with it, use the instance method #update with your\ndata as an argument.\n\n=== Example\n\nkey = 'key'\ndigest = OpenSSL::Digest.new('sha1')\ninstance = OpenSSL::HMAC.new(key, digest)\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\ninstance.class\n#=> OpenSSL::HMAC\n\n=== A note about comparisons\n\nTwo instances won't be equal when they're compared, even if they have the\nsame value. Use #to_s or #hexdigest to return the authentication code that\nthe instance represents. For example:\n\nother_instance = OpenSSL::HMAC.new('key', OpenSSL::Digest.new('sha1'))\n\t#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\n\tinstance\n\t#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\n\tinstance == other_instance\n\t#=> false\n\tinstance.to_s == other_instance.to_s\n\t#=> true","name":"initialize","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#initialize","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#reset":{"description":"Returns +self+ as it was when it was first initialized, with all processed\ndata cleared from it.\n\n=== Example\n\ndata = \"The quick brown fox jumps over the lazy dog\"\ninstance = OpenSSL::HMAC.new('key', OpenSSL::Digest.new('sha1'))\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f\n\ninstance.update(data)\n#=> de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9\ninstance.reset\n#=> f42bb0eeb018ebbd4597ae7213711ec60760843f","name":"reset","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#reset","type":"instance_method","visibility":"public"},"OpenSSL::HMAC#update":{"description":"Returns +self+ updated with the message to be authenticated.\nCan be called repeatedly with chunks of the message.\n\n=== Example\n\nfirst_chunk = 'The quick brown fox jumps '\nsecond_chunk = 'over the lazy dog'\n\ninstance.update(first_chunk)\n#=> 5b9a8038a65d571076d97fe783989e52278a492a\ninstance.update(second_chunk)\n#=> de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9","name":"<<","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC#<<","type":"instance_method","visibility":"public"},"OpenSSL::HMAC.digest":{"description":"Returns the authentication code as a binary string. The +digest+ parameter\nmust be an instance of OpenSSL::Digest.\n\n=== Example\n\nkey = 'key'\ndata = 'The quick brown fox jumps over the lazy dog'\ndigest = OpenSSL::Digest.new('sha1')\n\nhmac = OpenSSL::HMAC.digest(digest, key, data)\n#=> \"\\xDE|\\x9B\\x85\\xB8\\xB7\\x8A\\xA6\\xBC\\x8Az6\\xF7\\n\\x90p\\x1C\\x9D\\xB4\\xD9\"","name":"digest","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC.digest","type":"class_method","visibility":"public"},"OpenSSL::HMAC.hexdigest":{"description":"Returns the authentication code as a hex-encoded string. The +digest+\nparameter must be an instance of OpenSSL::Digest.\n\n=== Example\n\nkey = 'key'\ndata = 'The quick brown fox jumps over the lazy dog'\ndigest = OpenSSL::Digest.new('sha1')\n\nhmac = OpenSSL::HMAC.hexdigest(digest, key, data)\n#=> \"de7c9b85b8b78aa6bc8a7a36f70a90701c9db4d9\"","name":"hexdigest","namespace":"OpenSSL::HMAC","path":"OpenSSL::HMAC.hexdigest","type":"class_method","visibility":"public"},"OpenSSL::HMACError":{"description":"","name":"HMACError","namespace":"OpenSSL","path":"OpenSSL::HMACError","type":"class","visibility":"public"},"OpenSSL::Netscape":{"description":"OpenSSL::Netscape is a namespace for SPKI (Simple Public Key\nInfrastructure) which implements Signed Public Key and Challenge.\nSee {RFC 2692}[http://tools.ietf.org/html/rfc2692] and {RFC\n2693}[http://tools.ietf.org/html/rfc2692] for details.","name":"Netscape","namespace":"OpenSSL","path":"OpenSSL::Netscape","type":"module","visibility":"public"},"OpenSSL::Netscape::SPKI":{"description":"A Simple Public Key Infrastructure implementation (pronounced \"spookey\").\nThe structure is defined as\n  PublicKeyAndChallenge ::= SEQUENCE {\n    spki SubjectPublicKeyInfo,\n    challenge IA5STRING\n  }\n\n  SignedPublicKeyAndChallenge ::= SEQUENCE {\n    publicKeyAndChallenge PublicKeyAndChallenge,\n    signatureAlgorithm AlgorithmIdentifier,\n    signature BIT STRING\n  }\nwhere the definitions of SubjectPublicKeyInfo and AlgorithmIdentifier can\nbe found in RFC5280. SPKI is typically used in browsers for generating\na public/private key pair and a subsequent certificate request, using\nthe HTML <keygen> element.\n\n== Examples\n\n=== Creating an SPKI\n  key = OpenSSL::PKey::RSA.new 2048\n  spki = OpenSSL::Netscape::SPKI.new\n  spki.challenge = \"RandomChallenge\"\n  spki.public_key = key.public_key\n  spki.sign(key, OpenSSL::Digest::SHA256.new)\n  #send a request containing this to a server generating a certificate\n=== Verifiying an SPKI request\n  request = #...\n  spki = OpenSSL::Netscape::SPKI.new request\n  unless spki.verify(spki.public_key)\n    # signature is invalid\n  end\n  #proceed","name":"SPKI","namespace":"OpenSSL::Netscape","path":"OpenSSL::Netscape::SPKI","type":"class","visibility":"public"},"OpenSSL::Netscape::SPKI#challenge":{"description":"Returns the challenge string associated with this SPKI.","name":"challenge","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#challenge","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#challenge=":{"description":"=== Parameters\n* +str+ - the challenge string to be set for this instance\n\nSets the challenge to be associated with the SPKI. May be used by the\nserver, e.g. to prevent replay.","name":"challenge=","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#challenge=","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#initialize":{"description":"=== Parameters\n* +request+ - optional raw request, either in PEM or DER format.","name":"initialize","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#initialize","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#public_key":{"description":"Returns the public key associated with the SPKI, an instance of\nOpenSSL::PKey.","name":"public_key","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#public_key","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#public_key=":{"description":"=== Parameters\n* +pub+ - the public key to be set for this instance\n\nSets the public key to be associated with the SPKI, an instance of\nOpenSSL::PKey. This should be the public key corresponding to the\nprivate key used for signing the SPKI.","name":"public_key=","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#public_key=","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#sign":{"description":"=== Parameters\n* +key+ - the private key to be used for signing this instance\n* +digest+ - the digest to be used for signing this instance\n\nTo sign an SPKI, the private key corresponding to the public key set\nfor this instance should be used, in addition to a digest algorithm in\nthe form of an OpenSSL::Digest. The private key should be an instance of\nOpenSSL::PKey.","name":"sign","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#sign","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#to_der":{"description":"Returns the DER encoding of this SPKI.","name":"to_der","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#to_der","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#to_pem":{"description":"Returns the PEM encoding of this SPKI.","name":"to_s","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#to_s","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#to_s":{"description":"Returns the PEM encoding of this SPKI.","name":"to_s","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#to_s","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#to_text":{"description":"Returns a textual representation of this SPKI, useful for debugging\npurposes.","name":"to_text","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#to_text","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKI#verify":{"description":"=== Parameters\n* +key+ - the public key to be used for verifying the SPKI signature\n\nReturns +true+ if the signature is valid, +false+ otherwise. To verify an\nSPKI, the public key contained within the SPKI should be used.","name":"verify","namespace":"OpenSSL::Netscape::SPKI","path":"OpenSSL::Netscape::SPKI#verify","type":"instance_method","visibility":"public"},"OpenSSL::Netscape::SPKIError":{"description":"Generic Exception class that is raised if an error occurs during an\noperation on an instance of OpenSSL::Netscape::SPKI.","name":"SPKIError","namespace":"OpenSSL::Netscape","path":"OpenSSL::Netscape::SPKIError","type":"class","visibility":"public"},"OpenSSL::OCSP":{"description":"","name":"OCSP","namespace":"OpenSSL","path":"OpenSSL::OCSP","type":"module","visibility":"public"},"OpenSSL::OCSP::BasicResponse":{"description":"","name":"BasicResponse","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::BasicResponse","type":"class","visibility":"public"},"OpenSSL::OCSP::BasicResponse#add_nonce":{"description":"Adds +nonce+ to this response.  If no nonce was provided a random nonce\nwill be added.","name":"add_nonce","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#add_nonce","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::BasicResponse#add_status":{"description":"Adds a validation +status+ (0 for revoked, 1 for success) to this\nresponse for +certificate_id+.  +reason+ describes the reason for the\nrevocation, if any.\n\nThe +revocation_time+, +this_update+ and +next_update+ are times for the\ncertificate's revocation time, the time of this status and the next update\ntime for a new status, respectively.\n\n+extensions+ may be an Array of OpenSSL::X509::Extension that will\nbe added to this response or nil.","name":"add_status","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#add_status","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::BasicResponse#copy_nonce":{"description":"Copies the nonce from +request+ into this response.  Returns 1 on success\nand 0 on failure.","name":"copy_nonce","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#copy_nonce","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::BasicResponse#initialize":{"description":"Creates a new BasicResponse and ignores all arguments.","name":"initialize","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#initialize","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::BasicResponse#sign":{"description":"Signs this response using the +signer_cert+ and +signer_key+.  Additional\n+certificates+ may be added to the signature along with a set of +flags+.","name":"sign","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#sign","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::BasicResponse#status":{"description":"Returns an Array of statuses for this response.  Each status contains a\nCertificateId, the status (0 for success, 1 for revoked), the reason for\nthe status, the revocation time, the time of this update, the time for the\nnext update and a list of OpenSSL::X509::Extensions.","name":"status","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#status","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::BasicResponse#verify":{"description":"Verifies the signature of the response using the given +certificates+,\n+store+ and +flags+.","name":"verify","namespace":"OpenSSL::OCSP::BasicResponse","path":"OpenSSL::OCSP::BasicResponse#verify","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::CertificateId":{"description":"","name":"CertificateId","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::CertificateId","type":"class","visibility":"public"},"OpenSSL::OCSP::CertificateId#cmp":{"description":"Compares this certificate id with +other+ and returns true if they are the\nsame.","name":"cmp","namespace":"OpenSSL::OCSP::CertificateId","path":"OpenSSL::OCSP::CertificateId#cmp","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::CertificateId#cmp_issuer":{"description":"Compares this certificate id's issuer with +other+ and returns true if\nthey are the same.","name":"cmp_issuer","namespace":"OpenSSL::OCSP::CertificateId","path":"OpenSSL::OCSP::CertificateId#cmp_issuer","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::CertificateId#initialize":{"description":"Creates a new OpenSSL::OCSP::CertificateId for the given +subject+ and\n+issuer+ X509 certificates.  The +digest+ is used to compute the\ncertificate ID and must be an OpenSSL::Digest instance.","name":"initialize","namespace":"OpenSSL::OCSP::CertificateId","path":"OpenSSL::OCSP::CertificateId#initialize","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::CertificateId#serial":{"description":"Returns the serial number of the issuing certificate.","name":"serial","namespace":"OpenSSL::OCSP::CertificateId","path":"OpenSSL::OCSP::CertificateId#serial","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::NOCASIGN":{"description":"(This flag is not used by OpenSSL 1.0.1g)","name":"NOCASIGN","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOCASIGN","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOCERTS":{"description":"Do not include certificates in the response","name":"NOCERTS","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOCERTS","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOCHAIN":{"description":"Do not verify the certificate chain on the response","name":"NOCHAIN","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOCHAIN","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOCHECKS":{"description":"Do not make additional signing certificate checks","name":"NOCHECKS","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOCHECKS","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NODELEGATED":{"description":"(This flag is not used by OpenSSL 1.0.1g)","name":"NODELEGATED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NODELEGATED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOEXPLICIT":{"description":"Do not check trust","name":"NOEXPLICIT","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOEXPLICIT","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOINTERN":{"description":"Do not search certificates contained in the response for a signer","name":"NOINTERN","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOINTERN","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOSIGS":{"description":"Do not check the signature on the response","name":"NOSIGS","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOSIGS","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOTIME":{"description":"Do not include producedAt time in response","name":"NOTIME","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOTIME","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::NOVERIFY":{"description":"Do not verify the response at all","name":"NOVERIFY","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::NOVERIFY","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::OCSPError":{"description":"","name":"OCSPError","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::OCSPError","type":"class","visibility":"public"},"OpenSSL::OCSP::RESPID_KEY":{"description":"Identify the response by signing the certificate key ID","name":"RESPID_KEY","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPID_KEY","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::RESPONSE_STATUS_INTERNALERROR":{"description":"Internal error in issuer","name":"RESPONSE_STATUS_INTERNALERROR","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPONSE_STATUS_INTERNALERROR","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::RESPONSE_STATUS_MALFORMEDREQUEST":{"description":"Illegal confirmation request","name":"RESPONSE_STATUS_MALFORMEDREQUEST","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPONSE_STATUS_MALFORMEDREQUEST","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::RESPONSE_STATUS_SIGREQUIRED":{"description":"You must sign the request and resubmit","name":"RESPONSE_STATUS_SIGREQUIRED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPONSE_STATUS_SIGREQUIRED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::RESPONSE_STATUS_SUCCESSFUL":{"description":"Response has valid confirmations","name":"RESPONSE_STATUS_SUCCESSFUL","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPONSE_STATUS_SUCCESSFUL","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::RESPONSE_STATUS_TRYLATER":{"description":"Try again later","name":"RESPONSE_STATUS_TRYLATER","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPONSE_STATUS_TRYLATER","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::RESPONSE_STATUS_UNAUTHORIZED":{"description":"Your request is unauthorized.","name":"RESPONSE_STATUS_UNAUTHORIZED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::RESPONSE_STATUS_UNAUTHORIZED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_AFFILIATIONCHANGED":{"description":"The certificate subject's name or other information changed","name":"REVOKED_STATUS_AFFILIATIONCHANGED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_AFFILIATIONCHANGED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_CACOMPROMISE":{"description":"This CA certificate was revoked due to a key compromise","name":"REVOKED_STATUS_CACOMPROMISE","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_CACOMPROMISE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_CERTIFICATEHOLD":{"description":"The certificate is on hold","name":"REVOKED_STATUS_CERTIFICATEHOLD","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_CERTIFICATEHOLD","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_CESSATIONOFOPERATION":{"description":"The certificate is no longer needed","name":"REVOKED_STATUS_CESSATIONOFOPERATION","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_CESSATIONOFOPERATION","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_KEYCOMPROMISE":{"description":"The certificate was revoked due to a key compromise","name":"REVOKED_STATUS_KEYCOMPROMISE","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_KEYCOMPROMISE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_NOSTATUS":{"description":"The certificate was revoked for an unknown reason","name":"REVOKED_STATUS_NOSTATUS","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_NOSTATUS","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_REMOVEFROMCRL":{"description":"The certificate was previously on hold and should now be removed from\nthe CRL","name":"REVOKED_STATUS_REMOVEFROMCRL","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_REMOVEFROMCRL","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_SUPERSEDED":{"description":"The certificate was superseded by a new certificate","name":"REVOKED_STATUS_SUPERSEDED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_SUPERSEDED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::REVOKED_STATUS_UNSPECIFIED":{"description":"The certificate was revoked for an unspecified reason","name":"REVOKED_STATUS_UNSPECIFIED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::REVOKED_STATUS_UNSPECIFIED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::Request":{"description":"","name":"Request","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::Request","type":"class","visibility":"public"},"OpenSSL::OCSP::Request#add_certid":{"description":"Adds +certificate_id+ to the request.","name":"add_certid","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#add_certid","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#add_nonce":{"description":"Adds a +nonce+ to the OCSP request.  If no nonce is given a random one will\nbe generated.\n\nThe nonce is used to prevent replay attacks but some servers do not support\nit.","name":"add_nonce","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#add_nonce","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#certid":{"description":"Returns all certificate IDs in this request.","name":"certid","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#certid","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#check_nonce":{"description":"Checks the nonce validity for this request and +response+.\n\nThe return value is one of the following:\n\n-1 :: nonce in request only.\n 0 :: nonces both present and not equal.\n 1 :: nonces present and equal.\n 2 :: nonces both absent.\n 3 :: nonce present in response only.\n\nFor most responses, clients can check +result+ > 0.  If a responder doesn't\nhandle nonces <code>result.nonzero?</code> may be necessary.  A result of\n<code>0</code> is always an error.","name":"check_nonce","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#check_nonce","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#initialize":{"description":"Creates a new OpenSSL::OCSP::Request.  The request may be created empty or\nfrom a +request_der+ string.","name":"initialize","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#initialize","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#sign":{"description":"Signs this OCSP request using +signer_cert+ and +signer_key+.\n+certificates+ is an optional Array of certificates that may be included in\nthe request.","name":"sign","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#sign","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#to_der":{"description":"Returns this request as a DER-encoded string","name":"to_der","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#to_der","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Request#verify":{"description":"Verifies this request using the given +certificates+ and X509 +store+.","name":"verify","namespace":"OpenSSL::OCSP::Request","path":"OpenSSL::OCSP::Request#verify","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Response":{"description":"","name":"Response","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::Response","type":"class","visibility":"public"},"OpenSSL::OCSP::Response#basic":{"description":"Returns a BasicResponse for this response","name":"basic","namespace":"OpenSSL::OCSP::Response","path":"OpenSSL::OCSP::Response#basic","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Response#initialize":{"description":"Creates a new OpenSSL::OCSP::Response.  The response may be created empty or\nfrom a +response_der+ string.","name":"initialize","namespace":"OpenSSL::OCSP::Response","path":"OpenSSL::OCSP::Response#initialize","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Response#status":{"description":"Returns the status of the response.","name":"status","namespace":"OpenSSL::OCSP::Response","path":"OpenSSL::OCSP::Response#status","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Response#status_string":{"description":"Returns a status string for the response.","name":"status_string","namespace":"OpenSSL::OCSP::Response","path":"OpenSSL::OCSP::Response#status_string","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Response#to_der":{"description":"Returns this response as a DER-encoded string.","name":"to_der","namespace":"OpenSSL::OCSP::Response","path":"OpenSSL::OCSP::Response#to_der","type":"instance_method","visibility":"public"},"OpenSSL::OCSP::Response.create":{"description":"Creates an OpenSSL::OCSP::Response from +status+ and +basic_response+.","name":"create","namespace":"OpenSSL::OCSP::Response","path":"OpenSSL::OCSP::Response.create","type":"class_method","visibility":"public"},"OpenSSL::OCSP::TRUSTOTHER":{"description":"Do not verify additional certificates","name":"TRUSTOTHER","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::TRUSTOTHER","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::V_CERTSTATUS_GOOD":{"description":"Indicates the certificate is not revoked but does not necessarily mean\nthe certificate was issued or that this response is within the\ncertificate's validity interval","name":"V_CERTSTATUS_GOOD","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::V_CERTSTATUS_GOOD","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::V_CERTSTATUS_REVOKED":{"description":"Indicates the certificate has been revoked either permanently or\ntemporarily (on hold).","name":"V_CERTSTATUS_REVOKED","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::V_CERTSTATUS_REVOKED","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::V_CERTSTATUS_UNKNOWN":{"description":"Indicates the responder does not know about the certificate being\nrequested.","name":"V_CERTSTATUS_UNKNOWN","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::V_CERTSTATUS_UNKNOWN","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::V_RESPID_KEY":{"description":"The responder ID is based on the public key.","name":"V_RESPID_KEY","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::V_RESPID_KEY","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OCSP::V_RESPID_NAME":{"description":"The responder ID is based on the key name.","name":"V_RESPID_NAME","namespace":"OpenSSL::OCSP","path":"OpenSSL::OCSP::V_RESPID_NAME","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OPENSSL_FIPS":{"description":"","name":"OPENSSL_FIPS","namespace":"OpenSSL","path":"OpenSSL::OPENSSL_FIPS","type":"constant","return":["FalseClass",""],"visibility":"public"},"OpenSSL::OPENSSL_LIBRARY_VERSION":{"description":"Version of OpenSSL the ruby OpenSSL extension is running with","name":"OPENSSL_LIBRARY_VERSION","namespace":"OpenSSL","path":"OpenSSL::OPENSSL_LIBRARY_VERSION","type":"constant","return":["String",""],"visibility":"public"},"OpenSSL::OPENSSL_VERSION":{"description":"Version of OpenSSL the ruby OpenSSL extension was built with","name":"OPENSSL_VERSION","namespace":"OpenSSL","path":"OpenSSL::OPENSSL_VERSION","type":"constant","return":["String",""],"visibility":"public"},"OpenSSL::OPENSSL_VERSION_NUMBER":{"description":"Version number of OpenSSL the ruby OpenSSL extension was built with\n(base 16)","name":"OPENSSL_VERSION_NUMBER","namespace":"OpenSSL","path":"OpenSSL::OPENSSL_VERSION_NUMBER","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::OpenSSLError":{"description":"","name":"OpenSSLError","namespace":"OpenSSL","path":"OpenSSL::OpenSSLError","type":"class","visibility":"public"},"OpenSSL::PKCS12":{"description":"","name":"PKCS12","namespace":"OpenSSL","path":"OpenSSL::PKCS12","type":"class","visibility":"public"},"OpenSSL::PKCS12#initialize":{"description":"=== Parameters\n* +str+ - Must be a DER encoded PKCS12 string.\n* +pass+ - string","name":"initialize","namespace":"OpenSSL::PKCS12","path":"OpenSSL::PKCS12#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKCS12#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::PKCS12","path":"OpenSSL::PKCS12#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKCS12.create":{"description":"=== Parameters\n* +pass+ - string\n* +name+ - A string describing the key.\n* +key+ - Any PKey.\n* +cert+ - A X509::Certificate.\n* * The public_key portion of the certificate must contain a valid public key.\n* * The not_before and not_after fields must be filled in.\n* +ca+ - An optional array of X509::Certificate's.\n* +key_pbe+ - string\n* +cert_pbe+ - string\n* +key_iter+ - integer\n* +mac_iter+ - integer\n* +keytype+ - An integer representing an MSIE specific extension.\n\nAny optional arguments may be supplied as nil to preserve the OpenSSL defaults.\n\nSee the OpenSSL documentation for PKCS12_create().","name":"create","namespace":"OpenSSL::PKCS12","path":"OpenSSL::PKCS12.create","type":"class_method","visibility":"public"},"OpenSSL::PKCS12::PKCS12Error":{"description":"","name":"PKCS12Error","namespace":"OpenSSL::PKCS12","path":"OpenSSL::PKCS12::PKCS12Error","type":"class","visibility":"public"},"OpenSSL::PKCS5":{"description":"","name":"PKCS5","namespace":"OpenSSL","path":"OpenSSL::PKCS5","type":"module","visibility":"public"},"OpenSSL::PKCS5#pbkdf2_hmac":{"description":"=== Parameters\n* +pass+ - string\n* +salt+ - string - should be at least 8 bytes long.\n* +iter+ - integer - should be greater than 1000.  20000 is better.\n* +keylen+ - integer\n* +digest+ - a string or OpenSSL::Digest object.\n\nAvailable in OpenSSL 0.9.4.\n\nDigests other than SHA1 may not be supported by other cryptography libraries.","name":"pbkdf2_hmac","namespace":"OpenSSL::PKCS5","path":"OpenSSL::PKCS5#pbkdf2_hmac","type":"module_function","visibility":"private"},"OpenSSL::PKCS5#pbkdf2_hmac_sha1":{"description":"=== Parameters\n* +pass+ - string\n* +salt+ - string - should be at least 8 bytes long.\n* +iter+ - integer - should be greater than 1000.  20000 is better.\n* +keylen+ - integer\n\nThis method is available in almost any version of OpenSSL.\n\nConforms to rfc2898.","name":"pbkdf2_hmac_sha1","namespace":"OpenSSL::PKCS5","path":"OpenSSL::PKCS5#pbkdf2_hmac_sha1","type":"module_function","visibility":"private"},"OpenSSL::PKCS5.pbkdf2_hmac":{"description":"=== Parameters\n* +pass+ - string\n* +salt+ - string - should be at least 8 bytes long.\n* +iter+ - integer - should be greater than 1000.  20000 is better.\n* +keylen+ - integer\n* +digest+ - a string or OpenSSL::Digest object.\n\nAvailable in OpenSSL 0.9.4.\n\nDigests other than SHA1 may not be supported by other cryptography libraries.","name":"pbkdf2_hmac","namespace":"OpenSSL::PKCS5","path":"OpenSSL::PKCS5.pbkdf2_hmac","type":"module_function","visibility":"public"},"OpenSSL::PKCS5.pbkdf2_hmac_sha1":{"description":"=== Parameters\n* +pass+ - string\n* +salt+ - string - should be at least 8 bytes long.\n* +iter+ - integer - should be greater than 1000.  20000 is better.\n* +keylen+ - integer\n\nThis method is available in almost any version of OpenSSL.\n\nConforms to rfc2898.","name":"pbkdf2_hmac_sha1","namespace":"OpenSSL::PKCS5","path":"OpenSSL::PKCS5.pbkdf2_hmac_sha1","type":"module_function","visibility":"public"},"OpenSSL::PKCS5::PKCS5Error":{"description":"Generic Exception class that is raised if an error occurs during a\ncomputation.","name":"PKCS5Error","namespace":"OpenSSL::PKCS5","path":"OpenSSL::PKCS5::PKCS5Error","type":"class","visibility":"public"},"OpenSSL::PKCS7":{"description":"","name":"PKCS7","namespace":"OpenSSL","path":"OpenSSL::PKCS7","type":"class","visibility":"public"},"OpenSSL::PKCS7#add_certificate":{"description":"","name":"add_certificate","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#add_certificate","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#add_crl":{"description":"","name":"add_crl","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#add_crl","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#add_data":{"description":"","name":"data=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#data=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#data=":{"description":"","name":"data=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#data=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#add_recipient":{"description":"","name":"add_recipient","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#add_recipient","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#add_signer":{"description":"","name":"add_signer","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#add_signer","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#certificates":{"description":"","name":"certificates","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#certificates","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#certificates=":{"description":"","name":"certificates=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#certificates=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#cipher=":{"description":"","name":"cipher=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#cipher=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#crls":{"description":"","name":"crls","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#crls","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#crls=":{"description":"","name":"crls=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#crls=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#decrypt":{"description":"","name":"decrypt","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#decrypt","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#detached":{"description":"","name":"detached","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#detached","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#detached=":{"description":"","name":"detached=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#detached=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#detached?":{"description":"","name":"detached?","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#detached?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKCS7#initialize":{"description":"Many methods in this class aren't documented.","name":"initialize","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#recipients":{"description":"","name":"recipients","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#recipients","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#signers":{"description":"","name":"signers","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#signers","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#to_pem":{"description":"","name":"to_s","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#to_s":{"description":"","name":"to_s","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#type":{"description":"","name":"type","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#type","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#type=":{"description":"","name":"type=","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#type=","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7#verify":{"description":"","name":"verify","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7#verify","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7.encrypt":{"description":"","name":"encrypt","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7.encrypt","type":"class_method","visibility":"public"},"OpenSSL::PKCS7.read_smime":{"description":"","name":"read_smime","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7.read_smime","type":"class_method","visibility":"public"},"OpenSSL::PKCS7.sign":{"description":"","name":"sign","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7.sign","type":"class_method","visibility":"public"},"OpenSSL::PKCS7.write_smime":{"description":"","name":"write_smime","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7.write_smime","type":"class_method","visibility":"public"},"OpenSSL::PKCS7::PKCS7Error":{"description":"","name":"PKCS7Error","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7::PKCS7Error","type":"class","visibility":"public"},"OpenSSL::PKCS7::RecipientInfo":{"description":"","name":"RecipientInfo","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7::RecipientInfo","type":"class","visibility":"public"},"OpenSSL::PKCS7::RecipientInfo#enc_key":{"description":"","name":"enc_key","namespace":"OpenSSL::PKCS7::RecipientInfo","path":"OpenSSL::PKCS7::RecipientInfo#enc_key","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::RecipientInfo#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::PKCS7::RecipientInfo","path":"OpenSSL::PKCS7::RecipientInfo#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::RecipientInfo#issuer":{"description":"","name":"issuer","namespace":"OpenSSL::PKCS7::RecipientInfo","path":"OpenSSL::PKCS7::RecipientInfo#issuer","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::RecipientInfo#serial":{"description":"","name":"serial","namespace":"OpenSSL::PKCS7::RecipientInfo","path":"OpenSSL::PKCS7::RecipientInfo#serial","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::Signer":{"description":"","name":"Signer","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7::Signer","type":"constant","return":["Class",""],"visibility":"public"},"OpenSSL::PKCS7::SignerInfo":{"description":"","name":"SignerInfo","namespace":"OpenSSL::PKCS7","path":"OpenSSL::PKCS7::SignerInfo","type":"class","visibility":"public"},"OpenSSL::PKCS7::SignerInfo#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::PKCS7::SignerInfo","path":"OpenSSL::PKCS7::SignerInfo#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::SignerInfo#issuer":{"description":"","name":"name","namespace":"OpenSSL::PKCS7::SignerInfo","path":"OpenSSL::PKCS7::SignerInfo#name","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::SignerInfo#name":{"description":"","name":"name","namespace":"OpenSSL::PKCS7::SignerInfo","path":"OpenSSL::PKCS7::SignerInfo#name","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::SignerInfo#serial":{"description":"","name":"serial","namespace":"OpenSSL::PKCS7::SignerInfo","path":"OpenSSL::PKCS7::SignerInfo#serial","type":"instance_method","visibility":"public"},"OpenSSL::PKCS7::SignerInfo#signed_time":{"description":"","name":"signed_time","namespace":"OpenSSL::PKCS7::SignerInfo","path":"OpenSSL::PKCS7::SignerInfo#signed_time","type":"instance_method","visibility":"public"},"OpenSSL::PKey":{"description":"== Asymmetric Public Key Algorithms\n\nAsymmetric public key algorithms solve the problem of establishing and\nsharing secret keys to en-/decrypt messages. The key in such an\nalgorithm consists of two parts: a public key that may be distributed\nto others and a private key that needs to remain secret.\n\nMessages encrypted with a public key can only be encrypted by\nrecipients that are in possession of the associated private key.\nSince public key algorithms are considerably slower than symmetric\nkey algorithms (cf. OpenSSL::Cipher) they are often used to establish\na symmetric key shared between two parties that are in possession of\neach other's public key.\n\nAsymmetric algorithms offer a lot of nice features that are used in a\nlot of different areas. A very common application is the creation and\nvalidation of digital signatures. To sign a document, the signatory\ngenerally uses a message digest algorithm (cf. OpenSSL::Digest) to\ncompute a digest of the document that is then encrypted (i.e. signed)\nusing the private key. Anyone in possession of the public key may then\nverify the signature by computing the message digest of the original\ndocument on their own, decrypting the signature using the signatory's\npublic key and comparing the result to the message digest they\npreviously computed. The signature is valid if and only if the\ndecrypted signature is equal to this message digest.\n\nThe PKey module offers support for three popular public/private key\nalgorithms:\n* RSA (OpenSSL::PKey::RSA)\n* DSA (OpenSSL::PKey::DSA)\n* Elliptic Curve Cryptography (OpenSSL::PKey::EC)\nEach of these implementations is in fact a sub-class of the abstract\nPKey class which offers the interface for supporting digital signatures\nin the form of PKey#sign and PKey#verify.\n\n== Diffie-Hellman Key Exchange\n\nFinally PKey also features OpenSSL::PKey::DH, an implementation of\nthe Diffie-Hellman key exchange protocol based on discrete logarithms\nin finite fields, the same basis that DSA is built on.\nThe Diffie-Hellman protocol can be used to exchange (symmetric) keys\nover insecure channels without needing any prior joint knowledge\nbetween the participating parties. As the security of DH demands\nrelatively long \"public keys\" (i.e. the part that is overtly\ntransmitted between participants) DH tends to be quite slow. If\nsecurity or speed is your primary concern, OpenSSL::PKey::EC offers\nanother implementation of the Diffie-Hellman protocol.","name":"PKey","namespace":"OpenSSL","path":"OpenSSL::PKey","type":"module","visibility":"public"},"OpenSSL::PKey#read":{"description":"=== Parameters\n* +string+ is a DER- or PEM-encoded string containing an arbitrary private\nor public key.\n* +file+ is an instance of +File+ containing a DER- or PEM-encoded\narbitrary private or public key.\n* +pwd+ is an optional password in case +string+ or +file+ is an encrypted\nPEM resource.","name":"read","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey#read","type":"module_function","visibility":"private"},"OpenSSL::PKey.read":{"description":"=== Parameters\n* +string+ is a DER- or PEM-encoded string containing an arbitrary private\nor public key.\n* +file+ is an instance of +File+ containing a DER- or PEM-encoded\narbitrary private or public key.\n* +pwd+ is an optional password in case +string+ or +file+ is an encrypted\nPEM resource.","name":"read","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey.read","type":"module_function","visibility":"public"},"OpenSSL::PKey::DH":{"description":"An implementation of the Diffie-Hellman key exchange protocol based on\ndiscrete logarithms in finite fields, the same basis that DSA is built\non.\n\n=== Accessor methods for the Diffie-Hellman parameters\n* DH#p\nThe prime (an OpenSSL::BN) of the Diffie-Hellman parameters.\n* DH#g\nThe generator (an OpenSSL::BN) g of the Diffie-Hellman parameters.\n* DH#pub_key\nThe per-session public key (an OpenSSL::BN) matching the private key.\nThis needs to be passed to DH#compute_key.\n* DH#priv_key\nThe per-session private key, an OpenSSL::BN.\n\n=== Example of a key exchange\n dh1 = OpenSSL::PKey::DH.new(2048)\n der = dh1.public_key.to_der #you may send this publicly to the participating party\n dh2 = OpenSSL::PKey::DH.new(der)\n dh2.generate_key! #generate the per-session key pair\n symm_key1 = dh1.compute_key(dh2.pub_key)\n symm_key2 = dh2.compute_key(dh1.pub_key)\n\n puts symm_key1 == symm_key2 # => true","name":"DH","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::DH","type":"class","visibility":"public"},"OpenSSL::PKey::DH#compute_key":{"description":"Returns a String containing a shared secret computed from the other party's public value.\nSee DH_compute_key() for further information.\n\n=== Parameters\n* +pub_bn+ is a OpenSSL::BN, *not* the DH instance returned by\nDH#public_key as that contains the DH parameters only.","name":"compute_key","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#compute_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#export":{"description":"Encodes this DH to its PEM encoding. Note that any existing per-session\npublic/private keys will *not* get encoded, just the Diffie-Hellman\nparameters will be encoded.","name":"to_s","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#to_pem":{"description":"Encodes this DH to its PEM encoding. Note that any existing per-session\npublic/private keys will *not* get encoded, just the Diffie-Hellman\nparameters will be encoded.","name":"to_pem","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#to_s":{"description":"Encodes this DH to its PEM encoding. Note that any existing per-session\npublic/private keys will *not* get encoded, just the Diffie-Hellman\nparameters will be encoded.","name":"to_s","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#generate_key!":{"description":"Generates a private and public key unless a private key already exists.\nIf this DH instance was generated from public DH parameters (e.g. by\nencoding the result of DH#public_key), then this method needs to be\ncalled first in order to generate the per-session keys before performing\nthe actual key exchange.\n\n=== Example\n dh = OpenSSL::PKey::DH.new(2048)\n public_key = dh.public_key #contains no private/public key yet\n public_key.generate_key!\n puts public_key.private? # => true","name":"generate_key!","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#generate_key!","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#initialize":{"description":"Either generates a DH instance from scratch or by reading already existing\nDH parameters from +string+. Note that when reading a DH instance from\ndata that was encoded from a DH instance by using DH#to_pem or DH#to_der\nthe result will *not* contain a public/private key pair yet. This needs to\nbe generated using DH#generate_key! first.\n\n=== Parameters\n* +size+ is an integer representing the desired key size. Keys smaller than 1024 bits should be considered insecure.\n* +generator+ is a small number > 1, typically 2 or 5.\n* +string+ contains the DER or PEM encoded key.\n\n=== Examples\nDH.new # -> dh\nDH.new(1024) # -> dh\nDH.new(1024, 5) # -> dh\n#Reading DH parameters\ndh = DH.new(File.read('parameters.pem')) # -> dh, but no public/private key yet\ndh.generate_key! # -> dh with public and private key","name":"initialize","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#params":{"description":"Stores all parameters of key to the hash\nINSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!\nDon't use :-)) (I's up to you)","name":"params","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#params","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#params_ok?":{"description":"Validates the Diffie-Hellman parameters associated with this instance.\nIt checks whether a safe prime and a suitable generator are used. If this\nis not the case, +false+ is returned.","name":"params_ok?","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#params_ok?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::DH#private?":{"description":"Indicates whether this DH instance has a private key associated with it or\nnot. The private key may be retrieved with DH#priv_key.","name":"private?","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#private?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::DH#public?":{"description":"Indicates whether this DH instance has a public key associated with it or\nnot. The public key may be retrieved with DH#pub_key.","name":"public?","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#public?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::DH#public_key":{"description":"Returns a new DH instance that carries just the public information, i.e.\nthe prime +p+ and the generator +g+, but no public/private key yet. Such\na pair may be generated using DH#generate_key!. The \"public key\" needed\nfor a key exchange with DH#compute_key is considered as per-session\ninformation and may be retrieved with DH#pub_key once a key pair has\nbeen generated.\nIf the current instance already contains private information (and thus a\nvalid public/private key pair), this information will no longer be present\nin the new instance generated by DH#public_key. This feature is helpful for\npublishing the Diffie-Hellman parameters without leaking any of the private\nper-session information.\n\n=== Example\ndh = OpenSSL::PKey::DH.new(2048) # has public and private key set\npublic_key = dh.public_key # contains only prime and generator\nparameters = public_key.to_der # it's safe to publish this","name":"public_key","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#public_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#to_der":{"description":"Encodes this DH to its DER encoding. Note that any existing per-session\npublic/private keys will *not* get encoded, just the Diffie-Hellman\nparameters will be encoded.","name":"to_der","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH#to_text":{"description":"Prints all parameters of key to buffer\nINSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!\nDon't use :-)) (I's up to you)","name":"to_text","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH#to_text","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DH.generate":{"description":"Creates a new DH instance from scratch by generating the private and public\ncomponents alike.\n\n=== Parameters\n* +size+ is an integer representing the desired key size. Keys smaller than 1024 bits should be considered insecure.\n* +generator+ is a small number > 1, typically 2 or 5.","name":"generate","namespace":"OpenSSL::PKey::DH","path":"OpenSSL::PKey::DH.generate","type":"class_method","visibility":"public"},"OpenSSL::PKey::DHError":{"description":"Generic exception that is raised if an operation on a DH PKey\nfails unexpectedly or in case an instantiation of an instance of DH\nfails due to non-conformant input data.","name":"DHError","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::DHError","type":"class","visibility":"public"},"OpenSSL::PKey::DSA":{"description":"DSA, the Digital Signature Algorithm, is specified in NIST's\nFIPS 186-3. It is an asymmetric public key algorithm that may be used\nsimilar to e.g. RSA.\nPlease note that for OpenSSL versions prior to 1.0.0 the digest\nalgorithms OpenSSL::Digest::DSS (equivalent to SHA) or\nOpenSSL::Digest::DSS1 (equivalent to SHA-1) must be used for issuing\nsignatures with a DSA key using OpenSSL::PKey#sign.\nStarting with OpenSSL 1.0.0, digest algorithms are no longer restricted,\nany Digest may be used for signing.","name":"DSA","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::DSA","type":"class","visibility":"public"},"OpenSSL::PKey::DSA#export":{"description":"Encodes this DSA to its PEM encoding.\n\n=== Parameters\n* +cipher+ is an OpenSSL::Cipher.\n* +password+ is a string containing your password.\n\n=== Examples\nDSA.to_pem -> aString\nDSA.to_pem(cipher, 'mypassword') -> aString","name":"to_s","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#to_pem":{"description":"Encodes this DSA to its PEM encoding.\n\n=== Parameters\n* +cipher+ is an OpenSSL::Cipher.\n* +password+ is a string containing your password.\n\n=== Examples\nDSA.to_pem -> aString\nDSA.to_pem(cipher, 'mypassword') -> aString","name":"to_pem","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#to_s":{"description":"Encodes this DSA to its PEM encoding.\n\n=== Parameters\n* +cipher+ is an OpenSSL::Cipher.\n* +password+ is a string containing your password.\n\n=== Examples\nDSA.to_pem -> aString\nDSA.to_pem(cipher, 'mypassword') -> aString","name":"to_s","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#initialize":{"description":"Creates a new DSA instance by reading an existing key from +string+.\n\n=== Parameters\n* +size+ is an integer representing the desired key size.\n* +string+ contains a DER or PEM encoded key.\n* +pass+ is a string that contains an optional password.\n\n=== Examples\nDSA.new -> dsa\nDSA.new(1024) -> dsa\nDSA.new(File.read('dsa.pem')) -> dsa\nDSA.new(File.read('dsa.pem'), 'mypassword') -> dsa","name":"initialize","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#params":{"description":"Stores all parameters of key to the hash\nINSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!\nDon't use :-)) (I's up to you)","name":"params","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#params","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#private?":{"description":"Indicates whether this DSA instance has a private key associated with it or\nnot. The private key may be retrieved with DSA#private_key.","name":"private?","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#private?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::DSA#public?":{"description":"Indicates whether this DSA instance has a public key associated with it or\nnot. The public key may be retrieved with DSA#public_key.","name":"public?","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#public?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::DSA#public_key":{"description":"Returns a new DSA instance that carries just the public key information.\nIf the current instance has also private key information, this will no\nlonger be present in the new instance. This feature is helpful for\npublishing the public key information without leaking any of the private\ninformation.\n\n=== Example\ndsa = OpenSSL::PKey::DSA.new(2048) # has public and private information\npub_key = dsa.public_key # has only the public part available\npub_key_der = pub_key.to_der # it's safe to publish this","name":"public_key","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#public_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#syssign":{"description":"Computes and returns the DSA signature of +string+, where +string+ is\nexpected to be an already-computed message digest of the original input\ndata. The signature is issued using the private key of this DSA instance.\n\n=== Parameters\n* +string+ is a message digest of the original input data to be signed\n\n=== Example\ndsa = OpenSSL::PKey::DSA.new(2048)\ndoc = \"Sign me\"\ndigest = OpenSSL::Digest::SHA1.digest(doc)\nsig = dsa.syssign(digest)","name":"syssign","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#syssign","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#sysverify":{"description":"Verifies whether the signature is valid given the message digest input. It\ndoes so by validating +sig+ using the public key of this DSA instance.\n\n=== Parameters\n* +digest+ is a message digest of the original input data to be signed\n* +sig+ is a DSA signature value\n\n=== Example\ndsa = OpenSSL::PKey::DSA.new(2048)\ndoc = \"Sign me\"\ndigest = OpenSSL::Digest::SHA1.digest(doc)\nsig = dsa.syssign(digest)\nputs dsa.sysverify(digest, sig) # => true","name":"sysverify","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#sysverify","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#to_der":{"description":"Encodes this DSA to its DER encoding.","name":"to_der","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA#to_text":{"description":"Prints all parameters of key to buffer\nINSECURE: PRIVATE INFORMATIONS CAN LEAK OUT!!!\nDon't use :-)) (I's up to you)","name":"to_text","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA#to_text","type":"instance_method","visibility":"public"},"OpenSSL::PKey::DSA.generate":{"description":"Creates a new DSA instance by generating a private/public key pair\nfrom scratch.\n\n=== Parameters\n* +size+ is an integer representing the desired key size.","name":"generate","namespace":"OpenSSL::PKey::DSA","path":"OpenSSL::PKey::DSA.generate","type":"class_method","visibility":"public"},"OpenSSL::PKey::DSAError":{"description":"Generic exception that is raised if an operation on a DSA PKey\nfails unexpectedly or in case an instantiation of an instance of DSA\nfails due to non-conformant input data.","name":"DSAError","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::DSAError","type":"class","visibility":"public"},"OpenSSL::PKey::EC":{"description":"","name":"EC","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::EC","type":"class","visibility":"public"},"OpenSSL::PKey::EC#check_key":{"description":"Raises an exception if the key is invalid.\n\nSee the OpenSSL documentation for EC_KEY_check_key()","name":"check_key","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#check_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#dh_compute_key":{"description":"See the OpenSSL documentation for ECDH_compute_key()","name":"dh_compute_key","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#dh_compute_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#dsa_sign_asn1":{"description":"See the OpenSSL documentation for ECDSA_sign()","name":"dsa_sign_asn1","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#dsa_sign_asn1","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#dsa_verify_asn1":{"description":"See the OpenSSL documentation for ECDSA_verify()","name":"dsa_verify_asn1","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#dsa_verify_asn1","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#export":{"description":"Outputs the EC key in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance. Note that encryption will only be\neffective for a private key, public keys will always be encoded in plain\ntext.","name":"to_pem","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#to_pem":{"description":"Outputs the EC key in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance. Note that encryption will only be\neffective for a private key, public keys will always be encoded in plain\ntext.","name":"to_pem","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#generate_key":{"description":"See the OpenSSL documentation for EC_KEY_generate_key()","name":"generate_key","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#generate_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#group":{"description":"Returns a constant <code>OpenSSL::EC::Group</code> that is tied to the key.\nModifying the returned group can make the key invalid.","name":"group","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#group","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#group=":{"description":"Returns the same object passed, not the group object associated with the key.\nIf you wish to access the group object tied to the key call key.group after setting\nthe group.\n\nSetting the group will immediately destroy any previously assigned group object.\nThe group is internally copied by OpenSSL.  Modifying the original group after\nassignment will not effect the internal key structure.\n(your changes may be lost).  BE CAREFUL.\n\nEC_KEY_set_group calls EC_GROUP_free(key->group) then EC_GROUP_dup(), not EC_GROUP_copy.\nThis documentation is accurate for OpenSSL 0.9.8b.","name":"group=","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#group=","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#initialize":{"description":"See the OpenSSL documentation for:\n   EC_KEY_*","name":"initialize","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#private_key":{"description":"See the OpenSSL documentation for EC_KEY_get0_private_key()","name":"private_key","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#private_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#private_key=":{"description":"See the OpenSSL documentation for EC_KEY_set_private_key()","name":"private_key=","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#private_key=","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#private_key?":{"description":"Both public_key? and private_key? may return false at the same time unlike other PKey classes.","name":"private_key?","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#private_key?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC#public_key":{"description":"See the OpenSSL documentation for EC_KEY_get0_public_key()","name":"public_key","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#public_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#public_key=":{"description":"See the OpenSSL documentation for EC_KEY_set_public_key()","name":"public_key=","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#public_key=","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#public_key?":{"description":"Both public_key? and private_key? may return false at the same time unlike other PKey classes.","name":"public_key?","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#public_key?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC#to_der":{"description":"See the OpenSSL documentation for i2d_ECPrivateKey_bio()","name":"to_der","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC#to_text":{"description":"See the OpenSSL documentation for EC_KEY_print()","name":"to_text","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC#to_text","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC.builtin_curves":{"description":"See the OpenSSL documentation for EC_builtin_curves()","name":"builtin_curves","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC.builtin_curves","type":"class_method","visibility":"public"},"OpenSSL::PKey::EC::Group":{"description":"","name":"Group","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC::Group","type":"class","visibility":"public"},"OpenSSL::PKey::EC::Group#==":{"description":"","name":"==","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#==","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC::Group#asn1_flag":{"description":"See the OpenSSL documentation for EC_GROUP_get_asn1_flag()","name":"asn1_flag","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#asn1_flag","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#asn1_flag=":{"description":"See the OpenSSL documentation for EC_GROUP_set_asn1_flag()","name":"asn1_flag=","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#asn1_flag=","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#cofactor":{"description":"See the OpenSSL documentation for EC_GROUP_get_cofactor()","name":"cofactor","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#cofactor","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#curve_name":{"description":"See the OpenSSL documentation for EC_GROUP_get_curve_name()","name":"curve_name","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#curve_name","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#degree":{"description":"See the OpenSSL documentation for EC_GROUP_get_degree()","name":"degree","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#degree","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#eql?":{"description":"","name":"==","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#==","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC::Group#generator":{"description":"See the OpenSSL documentation for EC_GROUP_get0_generator()","name":"generator","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#generator","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#initialize":{"description":"See the OpenSSL documentation for EC_GROUP_*","name":"initialize","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#order":{"description":"See the OpenSSL documentation for EC_GROUP_get_order()","name":"order","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#order","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#point_conversion_form":{"description":"See the OpenSSL documentation for EC_GROUP_get_point_conversion_form()","name":"point_conversion_form","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#point_conversion_form","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#point_conversion_form=":{"description":"See the OpenSSL documentation for EC_GROUP_set_point_conversion_form()","name":"point_conversion_form=","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#point_conversion_form=","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#seed":{"description":"See the OpenSSL documentation for EC_GROUP_get0_seed()","name":"seed","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#seed","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#seed=":{"description":"See the OpenSSL documentation for EC_GROUP_set_seed()","name":"seed=","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#seed=","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#set_generator":{"description":"See the OpenSSL documentation for EC_GROUP_set_generator()","name":"set_generator","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#set_generator","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#to_der":{"description":"See the OpenSSL documentation for i2d_ECPKParameters_bio()","name":"to_der","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#to_pem":{"description":"See the OpenSSL documentation for PEM_write_bio_ECPKParameters()","name":"to_pem","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group#to_text":{"description":"See the OpenSSL documentation for ECPKParameters_print()","name":"to_text","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group#to_text","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Group::Error":{"description":"","name":"Error","namespace":"OpenSSL::PKey::EC::Group","path":"OpenSSL::PKey::EC::Group::Error","type":"class","visibility":"public"},"OpenSSL::PKey::EC::NAMED_CURVE":{"description":"","name":"NAMED_CURVE","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC::NAMED_CURVE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::PKey::EC::Point":{"description":"","name":"Point","namespace":"OpenSSL::PKey::EC","path":"OpenSSL::PKey::EC::Point","type":"class","visibility":"public"},"OpenSSL::PKey::EC::Point#==":{"description":"","name":"==","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#==","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC::Point#eql?":{"description":"","name":"==","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#==","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC::Point#infinity?":{"description":"","name":"infinity?","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#infinity?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC::Point#initialize":{"description":"See the OpenSSL documentation for EC_POINT_*","name":"initialize","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Point#invert!":{"description":"","name":"invert!","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#invert!","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Point#make_affine!":{"description":"","name":"make_affine!","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#make_affine!","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Point#mul":{"description":"","name":"mul","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#mul","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Point#on_curve?":{"description":"","name":"on_curve?","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#on_curve?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::EC::Point#set_to_infinity!":{"description":"","name":"set_to_infinity!","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#set_to_infinity!","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Point#to_bn":{"description":"See the OpenSSL documentation for EC_POINT_point2bn()","name":"to_bn","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point#to_bn","type":"instance_method","visibility":"public"},"OpenSSL::PKey::EC::Point::Error":{"description":"","name":"Error","namespace":"OpenSSL::PKey::EC::Point","path":"OpenSSL::PKey::EC::Point::Error","type":"class","visibility":"public"},"OpenSSL::PKey::ECError":{"description":"","name":"ECError","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::ECError","type":"class","visibility":"public"},"OpenSSL::PKey::PKey":{"description":"An abstract class that bundles signature creation (PKey#sign) and\nvalidation (PKey#verify) that is common to all implementations except\nOpenSSL::PKey::DH\n* OpenSSL::PKey::RSA\n* OpenSSL::PKey::DSA\n* OpenSSL::PKey::EC","name":"PKey","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::PKey","type":"class","visibility":"public"},"OpenSSL::PKey::PKey#initialize":{"description":"Because PKey is an abstract class, actually calling this method explicitly\nwill raise a +NotImplementedError+.","name":"initialize","namespace":"OpenSSL::PKey::PKey","path":"OpenSSL::PKey::PKey#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::PKey#sign":{"description":"To sign the +String+ +data+, +digest+, an instance of OpenSSL::Digest, must\nbe provided. The return value is again a +String+ containing the signature.\nA PKeyError is raised should errors occur.\nAny previous state of the +Digest+ instance is irrelevant to the signature\noutcome, the digest instance is reset to its initial state during the\noperation.\n\n== Example\n data = 'Sign me!'\n digest = OpenSSL::Digest::SHA256.new\n pkey = OpenSSL::PKey::RSA.new(2048)\n signature = pkey.sign(digest, data)","name":"sign","namespace":"OpenSSL::PKey::PKey","path":"OpenSSL::PKey::PKey#sign","type":"instance_method","visibility":"public"},"OpenSSL::PKey::PKey#verify":{"description":"To verify the +String+ +signature+, +digest+, an instance of\nOpenSSL::Digest, must be provided to re-compute the message digest of the\noriginal +data+, also a +String+. The return value is +true+ if the\nsignature is valid, +false+ otherwise. A PKeyError is raised should errors\noccur.\nAny previous state of the +Digest+ instance is irrelevant to the validation\noutcome, the digest instance is reset to its initial state during the\noperation.\n\n== Example\n data = 'Sign me!'\n digest = OpenSSL::Digest::SHA256.new\n pkey = OpenSSL::PKey::RSA.new(2048)\n signature = pkey.sign(digest, data)\n pub_key = pkey.public_key\n puts pub_key.verify(digest, signature, data) # => true","name":"verify","namespace":"OpenSSL::PKey::PKey","path":"OpenSSL::PKey::PKey#verify","type":"instance_method","visibility":"public"},"OpenSSL::PKey::PKeyError":{"description":"Raised when errors occur during PKey#sign or PKey#verify.","name":"PKeyError","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::PKeyError","type":"class","visibility":"public"},"OpenSSL::PKey::RSA":{"description":"RSA is an asymmetric public key algorithm that has been formalized in\nRFC 3447. It is in widespread use in public key infrastuctures (PKI)\nwhere certificates (cf. OpenSSL::X509::Certificate) often are issued\non the basis of a public/private RSA key pair. RSA is used in a wide\nfield of applications such as secure (symmetric) key exchange, e.g.\nwhen establishing a secure TLS/SSL connection. It is also used in\nvarious digital signature schemes.","name":"RSA","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::RSA","type":"class","visibility":"public"},"OpenSSL::PKey::RSA#export":{"description":"Outputs this keypair in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance.","name":"to_s","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#to_pem":{"description":"Outputs this keypair in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance.","name":"to_pem","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#to_s":{"description":"Outputs this keypair in PEM encoding.  If +cipher+ and +pass_phrase+ are\ngiven they will be used to encrypt the key.  +cipher+ must be an\nOpenSSL::Cipher::Cipher instance.","name":"to_s","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#to_s","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#initialize":{"description":"Generates or loads an RSA keypair.  If an integer +key_size+ is given it\nrepresents the desired key size.  Keys less than 1024 bits should be\nconsidered insecure.\n\nA key can instead be loaded from an +encoded_key+ which must be PEM or DER\nencoded.  A +pass_phrase+ can be used to decrypt the key.  If none is given\nOpenSSL will prompt for the pass phrase.\n\n= Examples\n\n  OpenSSL::PKey::RSA.new 2048\n  OpenSSL::PKey::RSA.new File.read 'rsa.pem'\n  OpenSSL::PKey::RSA.new File.read('rsa.pem'), 'my pass phrase'","name":"initialize","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#initialize","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#params":{"description":"THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n\nStores all parameters of key to the hash.  The hash has keys 'n', 'e', 'd',\n'p', 'q', 'dmp1', 'dmq1', 'iqmp'.\n\nDon't use :-)) (It's up to you)","name":"params","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#params","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#private?":{"description":"Does this keypair contain a private key?","name":"private?","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#private?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::RSA#private_decrypt":{"description":"Decrypt +string+, which has been encrypted with the public key, with the\nprivate key.  +padding+ defaults to PKCS1_PADDING.","name":"private_decrypt","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#private_decrypt","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#private_encrypt":{"description":"Encrypt +string+ with the private key.  +padding+ defaults to PKCS1_PADDING.\nThe encrypted string output can be decrypted using #public_decrypt.","name":"private_encrypt","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#private_encrypt","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#public?":{"description":"The return value is always true since every private key is also a public\nkey.","name":"public?","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#public?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::PKey::RSA#public_decrypt":{"description":"Decrypt +string+, which has been encrypted with the private key, with the\npublic key.  +padding+ defaults to PKCS1_PADDING.","name":"public_decrypt","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#public_decrypt","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#public_encrypt":{"description":"Encrypt +string+ with the public key.  +padding+ defaults to PKCS1_PADDING.\nThe encrypted string output can be decrypted using #private_decrypt.","name":"public_encrypt","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#public_encrypt","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#public_key":{"description":"Makes new RSA instance containing the public key from the private key.","name":"public_key","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#public_key","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#to_der":{"description":"Outputs this keypair in DER encoding.","name":"to_der","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#to_der","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA#to_text":{"description":"THIS METHOD IS INSECURE, PRIVATE INFORMATION CAN LEAK OUT!!!\n\nDumps all parameters of a keypair to a String\n\nDon't use :-)) (It's up to you)","name":"to_text","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA#to_text","type":"instance_method","visibility":"public"},"OpenSSL::PKey::RSA.generate":{"description":"Generates an RSA keypair.  +size+ is an integer representing the desired key\nsize.  Keys smaller than 1024 should be considered insecure.  +exponent+ is\nan odd number normally 3, 17, or 65537.","name":"generate","namespace":"OpenSSL::PKey::RSA","path":"OpenSSL::PKey::RSA.generate","type":"class_method","visibility":"public"},"OpenSSL::PKey::RSAError":{"description":"Generic exception that is raised if an operation on an RSA PKey\nfails unexpectedly or in case an instantiation of an instance of RSA\nfails due to non-conformant input data.","name":"RSAError","namespace":"OpenSSL::PKey","path":"OpenSSL::PKey::RSAError","type":"class","visibility":"public"},"OpenSSL::Random":{"description":"","name":"Random","namespace":"OpenSSL","path":"OpenSSL::Random","type":"module","visibility":"public"},"OpenSSL::Random#egd":{"description":"Same as ::egd_bytes but queries 255 bytes by default.","name":"egd","namespace":"OpenSSL::Random","path":"OpenSSL::Random#egd","type":"module_function","visibility":"private"},"OpenSSL::Random#egd_bytes":{"description":"Queries the entropy gathering daemon EGD on socket path given by +filename+.\n\nFetches +length+ number of bytes and uses ::add to seed the OpenSSL built-in\nPRNG.","name":"egd_bytes","namespace":"OpenSSL::Random","path":"OpenSSL::Random#egd_bytes","type":"module_function","visibility":"private"},"OpenSSL::Random#load_random_file":{"description":"Reads bytes from +filename+ and adds them to the PRNG.","name":"load_random_file","namespace":"OpenSSL::Random","path":"OpenSSL::Random#load_random_file","type":"module_function","visibility":"private"},"OpenSSL::Random#pseudo_bytes":{"description":"pseudo_bytes(length) -> string\n\nGenerates +string+ with +length+ number of pseudo-random bytes.\n\nPseudo-random byte sequences generated by ::pseudo_bytes will be unique if\nthey are of sufficient length, but are not necessarily unpredictable.\n\nExample:\n\n  OpenSSL::Random.pseudo_bytes(12)\n  => \"...\"","name":"pseudo_bytes","namespace":"OpenSSL::Random","path":"OpenSSL::Random#pseudo_bytes","type":"module_function","visibility":"private"},"OpenSSL::Random#random_add":{"description":"Mixes the bytes from +str+ into the Pseudo Random Number Generator(PRNG)\nstate.\n\nThus, if the data from +str+ are unpredictable to an adversary, this\nincreases the uncertainty about the state and makes the PRNG output less\npredictable.\n\nThe +entropy+ argument is (the lower bound of) an estimate of how much\nrandomness is contained in +str+, measured in bytes.\n\nExample:\n\n  pid = $$\n  now = Time.now\n  ary = [now.to_i, now.nsec, 1000, pid]\n  OpenSSL::Random.add(ary.join(\"\").to_s, 0.0)\n  OpenSSL::Random.seed(ary.join(\"\").to_s)","name":"random_add","namespace":"OpenSSL::Random","path":"OpenSSL::Random#random_add","type":"module_function","visibility":"private"},"OpenSSL::Random#random_bytes":{"description":"random_bytes(length) -> string\n\nGenerates +string+ with +length+ number of cryptographically strong\npseudo-random bytes.\n\nExample:\n\n  OpenSSL::Random.random_bytes(12)\n  => \"...\"","name":"random_bytes","namespace":"OpenSSL::Random","path":"OpenSSL::Random#random_bytes","type":"module_function","visibility":"private"},"OpenSSL::Random#seed":{"description":"::seed is equivalent to ::add where +entropy+ is length of +str+.","name":"seed","namespace":"OpenSSL::Random","path":"OpenSSL::Random#seed","type":"module_function","visibility":"private"},"OpenSSL::Random#status?":{"description":"Return true if the PRNG has been seeded with enough data, false otherwise.","name":"status?","namespace":"OpenSSL::Random","path":"OpenSSL::Random#status?","type":"module_function","visibility":"private","return":[["Boolean"],""]},"OpenSSL::Random#write_random_file":{"description":"Writes a number of random generated bytes (currently 1024) to +filename+\nwhich can be used to initialize the PRNG by calling ::load_random_file in a\nlater session.","name":"write_random_file","namespace":"OpenSSL::Random","path":"OpenSSL::Random#write_random_file","type":"module_function","visibility":"private"},"OpenSSL::Random.egd":{"description":"Same as ::egd_bytes but queries 255 bytes by default.","name":"egd","namespace":"OpenSSL::Random","path":"OpenSSL::Random.egd","type":"module_function","visibility":"public"},"OpenSSL::Random.egd_bytes":{"description":"Queries the entropy gathering daemon EGD on socket path given by +filename+.\n\nFetches +length+ number of bytes and uses ::add to seed the OpenSSL built-in\nPRNG.","name":"egd_bytes","namespace":"OpenSSL::Random","path":"OpenSSL::Random.egd_bytes","type":"module_function","visibility":"public"},"OpenSSL::Random.load_random_file":{"description":"Reads bytes from +filename+ and adds them to the PRNG.","name":"load_random_file","namespace":"OpenSSL::Random","path":"OpenSSL::Random.load_random_file","type":"module_function","visibility":"public"},"OpenSSL::Random.pseudo_bytes":{"description":"pseudo_bytes(length) -> string\n\nGenerates +string+ with +length+ number of pseudo-random bytes.\n\nPseudo-random byte sequences generated by ::pseudo_bytes will be unique if\nthey are of sufficient length, but are not necessarily unpredictable.\n\nExample:\n\n  OpenSSL::Random.pseudo_bytes(12)\n  => \"...\"","name":"pseudo_bytes","namespace":"OpenSSL::Random","path":"OpenSSL::Random.pseudo_bytes","type":"module_function","visibility":"public"},"OpenSSL::Random.random_add":{"description":"Mixes the bytes from +str+ into the Pseudo Random Number Generator(PRNG)\nstate.\n\nThus, if the data from +str+ are unpredictable to an adversary, this\nincreases the uncertainty about the state and makes the PRNG output less\npredictable.\n\nThe +entropy+ argument is (the lower bound of) an estimate of how much\nrandomness is contained in +str+, measured in bytes.\n\nExample:\n\n  pid = $$\n  now = Time.now\n  ary = [now.to_i, now.nsec, 1000, pid]\n  OpenSSL::Random.add(ary.join(\"\").to_s, 0.0)\n  OpenSSL::Random.seed(ary.join(\"\").to_s)","name":"random_add","namespace":"OpenSSL::Random","path":"OpenSSL::Random.random_add","type":"module_function","visibility":"public"},"OpenSSL::Random.random_bytes":{"description":"random_bytes(length) -> string\n\nGenerates +string+ with +length+ number of cryptographically strong\npseudo-random bytes.\n\nExample:\n\n  OpenSSL::Random.random_bytes(12)\n  => \"...\"","name":"random_bytes","namespace":"OpenSSL::Random","path":"OpenSSL::Random.random_bytes","type":"module_function","visibility":"public"},"OpenSSL::Random.seed":{"description":"::seed is equivalent to ::add where +entropy+ is length of +str+.","name":"seed","namespace":"OpenSSL::Random","path":"OpenSSL::Random.seed","type":"module_function","visibility":"public"},"OpenSSL::Random.status?":{"description":"Return true if the PRNG has been seeded with enough data, false otherwise.","name":"status?","namespace":"OpenSSL::Random","path":"OpenSSL::Random.status?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"OpenSSL::Random.write_random_file":{"description":"Writes a number of random generated bytes (currently 1024) to +filename+\nwhich can be used to initialize the PRNG by calling ::load_random_file in a\nlater session.","name":"write_random_file","namespace":"OpenSSL::Random","path":"OpenSSL::Random.write_random_file","type":"module_function","visibility":"public"},"OpenSSL::Random::RandomError":{"description":"","name":"RandomError","namespace":"OpenSSL::Random","path":"OpenSSL::Random::RandomError","type":"class","visibility":"public"},"OpenSSL::SSL":{"description":"Use SSLContext to set up the parameters for a TLS (former SSL)\nconnection. Both client and server TLS connections are supported,\nSSLSocket and SSLServer may be used in conjunction with an instance\nof SSLContext to set up connections.","name":"SSL","namespace":"OpenSSL","path":"OpenSSL::SSL","type":"module","visibility":"public"},"OpenSSL::SSL#verify_certificate_identity":{"description":"","name":"verify_certificate_identity","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL#verify_certificate_identity","type":"module_function","visibility":"private"},"OpenSSL::SSL#verify_hostname":{"description":":nodoc:","name":"verify_hostname","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL#verify_hostname","type":"module_function","visibility":"private"},"OpenSSL::SSL#verify_wildcard":{"description":":nodoc:","name":"verify_wildcard","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL#verify_wildcard","type":"module_function","visibility":"private"},"OpenSSL::SSL.verify_certificate_identity":{"description":"","name":"verify_certificate_identity","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL.verify_certificate_identity","type":"module_function","visibility":"public"},"OpenSSL::SSL.verify_hostname":{"description":":nodoc:","name":"verify_hostname","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL.verify_hostname","type":"module_function","visibility":"public"},"OpenSSL::SSL.verify_wildcard":{"description":":nodoc:","name":"verify_wildcard","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL.verify_wildcard","type":"module_function","visibility":"public"},"OpenSSL::SSL::Nonblock":{"description":"","name":"Nonblock","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::Nonblock","type":"module","visibility":"public"},"OpenSSL::SSL::Nonblock#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::SSL::Nonblock","path":"OpenSSL::SSL::Nonblock#initialize","type":"module_function","visibility":"public"},"OpenSSL::SSL::SSLContext":{"description":"An SSLContext is used to set various options regarding certificates,\nalgorithms, verification, session caching, etc.  The SSLContext is\nused to create an SSLSocket.\n\nAll attributes must be set before creating an SSLSocket as the\nSSLContext will be frozen afterward.\n\nThe following attributes are available but don't show up in rdoc:\n* ssl_version, cert, key, client_ca, ca_file, ca_path, timeout,\n* verify_mode, verify_depth client_cert_cb, tmp_dh_callback,\n* session_id_context, session_add_cb, session_new_cb, session_remove_cb","name":"SSLContext","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SSLContext","type":"class","visibility":"public"},"OpenSSL::SSL::SSLContext#ciphers":{"description":"The list of ciphers configured for this context.","name":"ciphers","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#ciphers","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#ciphers=":{"description":"ctx.ciphers = [name, ...]\n   ctx.ciphers = [[name, version, bits, alg_bits], ...]\n\nSets the list of available ciphers for this context.  Note in a server\ncontext some ciphers require the appropriate certificates.  For example, an\nRSA cipher can only be chosen when an RSA certificate is available.\n\nSee also OpenSSL::Cipher and OpenSSL::Cipher::ciphers","name":"ciphers=","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#ciphers=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#flush_sessions":{"description":"Removes sessions in the internal cache that have expired at +time+.","name":"flush_sessions","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#flush_sessions","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#initialize":{"description":"You can get a list of valid methods with OpenSSL::SSL::SSLContext::METHODS","name":"initialize","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#initialize","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_add":{"description":"Adds +session+ to the session cache","name":"session_add","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_add","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_cache_mode":{"description":"The current session cache mode.","name":"session_cache_mode","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_cache_mode","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_cache_mode=":{"description":"Sets the SSL session cache mode.  Bitwise-or together the desired\nSESSION_CACHE_* constants to set.  See SSL_CTX_set_session_cache_mode(3) for\ndetails.","name":"session_cache_mode=","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_cache_mode=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_cache_size":{"description":"Returns the current session cache size.  Zero is used to represent an\nunlimited cache size.","name":"session_cache_size","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_cache_size","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_cache_size=":{"description":"Sets the session cache size.  Returns the previously valid session cache\nsize.  Zero is used to represent an unlimited session cache size.","name":"session_cache_size=","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_cache_size=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_cache_stats":{"description":"Returns a Hash containing the following keys:\n\n:accept:: Number of started SSL/TLS handshakes in server mode\n:accept_good:: Number of established SSL/TLS sessions in server mode\n:accept_renegotiate:: Number of start renegotiations in server mode\n:cache_full:: Number of sessions that were removed due to cache overflow\n:cache_hits:: Number of successfully reused connections\n:cache_misses:: Number of sessions proposed by clients that were not found\n               in the cache\n:cache_num:: Number of sessions in the internal session cache\n:cb_hits:: Number of sessions retrieved from the external cache in server\n          mode\n:connect:: Number of started SSL/TLS handshakes in client mode\n:connect_good:: Number of established SSL/TLS sessions in client mode\n:connect_renegotiate:: Number of start renegotiations in client mode\n:timeouts:: Number of sessions proposed by clients that were found in the\n           cache but had expired due to timeouts","name":"session_cache_stats","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_cache_stats","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#session_remove":{"description":"Removes +session+ from the session cache","name":"session_remove","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#session_remove","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#set_params":{"description":"Sets the parameters for this SSL context to the values in +params+.\nThe keys in +params+ must be assignment methods on SSLContext.\n\nIf the verify_mode is not VERIFY_NONE and ca_file, ca_path and\ncert_store are not set then the system default certificate store is\nused.","name":"set_params","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#set_params","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#setup":{"description":"This method is called automatically when a new SSLSocket is created.\nNormally you do not need to call this method (unless you are writing an\nextension in C).","name":"setup","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#setup","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#ssl_timeout":{"description":"","name":"ssl_timeout","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#ssl_timeout","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#ssl_timeout=":{"description":"","name":"ssl_timeout=","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#ssl_timeout=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext#ssl_version=":{"description":"ctx.ssl_version = \"SSLv23_client\"\n\nYou can get a list of valid versions with OpenSSL::SSL::SSLContext::METHODS","name":"ssl_version=","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext#ssl_version=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLContext::DEFAULT_CERT_STORE":{"description":"","name":"DEFAULT_CERT_STORE","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::DEFAULT_CERT_STORE","type":"constant","return":["OpenSSL::X509::Store",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::DEFAULT_PARAMS":{"description":"","name":"DEFAULT_PARAMS","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::DEFAULT_PARAMS","type":"constant","return":["Hash",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::METHODS":{"description":"The list of available SSL/TLS methods","name":"METHODS","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::METHODS","type":"constant","return":["Array",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_BOTH":{"description":"no different than CACHE_SERVER in 0.9.8e","name":"SESSION_CACHE_BOTH","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_BOTH","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_CLIENT":{"description":"doesn't actually do anything in 0.9.8e","name":"SESSION_CACHE_CLIENT","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_CLIENT","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_AUTO_CLEAR":{"description":"Normally the session cache is checked for expired sessions every 255\nconnections.  Since this may lead to a delay that cannot be controlled,\nthe automatic flushing may be disabled and #flush_sessions can be\ncalled explicitly.","name":"SESSION_CACHE_NO_AUTO_CLEAR","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_AUTO_CLEAR","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL":{"description":"Enables both SESSION_CACHE_NO_INTERNAL_LOOKUP and\nSESSION_CACHE_NO_INTERNAL_STORE.","name":"SESSION_CACHE_NO_INTERNAL","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL_LOOKUP":{"description":"Always perform external lookups of sessions even if they are in the\ninternal cache.\n\nThis flag has no effect on clients","name":"SESSION_CACHE_NO_INTERNAL_LOOKUP","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL_LOOKUP","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL_STORE":{"description":"Never automatically store sessions in the internal store.","name":"SESSION_CACHE_NO_INTERNAL_STORE","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_NO_INTERNAL_STORE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_OFF":{"description":"No session caching for client or server","name":"SESSION_CACHE_OFF","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_OFF","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLContext::SESSION_CACHE_SERVER":{"description":"Server sessions are added to the session cache","name":"SESSION_CACHE_SERVER","namespace":"OpenSSL::SSL::SSLContext","path":"OpenSSL::SSL::SSLContext::SESSION_CACHE_SERVER","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::SSL::SSLError":{"description":"Generic error class raised by SSLSocket and SSLContext.","name":"SSLError","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SSLError","type":"class","visibility":"public"},"OpenSSL::SSL::SSLErrorWaitReadable":{"description":"","name":"SSLErrorWaitReadable","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SSLErrorWaitReadable","type":"class","visibility":"public"},"OpenSSL::SSL::SSLErrorWaitWritable":{"description":"","name":"SSLErrorWaitWritable","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SSLErrorWaitWritable","type":"class","visibility":"public"},"OpenSSL::SSL::SSLServer":{"description":"SSLServer represents a TCP/IP server socket with Secure Sockets Layer.","name":"SSLServer","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SSLServer","type":"class","visibility":"public"},"OpenSSL::SSL::SSLServer#accept":{"description":"Works similar to TCPServer#accept.","name":"accept","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#accept","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLServer#close":{"description":"See IO#close for details.","name":"close","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#close","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLServer#initialize":{"description":"Creates a new instance of SSLServer.\n* +srv+ is an instance of TCPServer.\n* +ctx+ is an instance of OpenSSL::SSL::SSLContext.","name":"initialize","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#initialize","type":"instance_method","visibility":"public","return":[["SSLServer"],"a new instance of SSLServer"]},"OpenSSL::SSL::SSLServer#listen":{"description":"See TCPServer#listen for details.","name":"listen","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#listen","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLServer#shutdown":{"description":"See BasicSocket#shutdown for details.","name":"shutdown","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#shutdown","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLServer#start_immediately":{"description":"When true then #accept works exactly the same as TCPServer#accept","name":"start_immediately","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#start_immediately","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLServer#start_immediately=":{"description":"When true then #accept works exactly the same as TCPServer#accept","name":"start_immediately=","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#start_immediately=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLServer#to_io":{"description":"Returns the TCPServer passed to the SSLServer when initialized.","name":"to_io","namespace":"OpenSSL::SSL::SSLServer","path":"OpenSSL::SSL::SSLServer#to_io","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket":{"description":"The following attributes are available but don't show up in rdoc.\n* io, context, sync_close","name":"SSLSocket","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SSLSocket","type":"class","visibility":"public"},"OpenSSL::SSL::SSLSocket#accept":{"description":"Waits for a SSL/TLS client to initiate a handshake.  The handshake may be\nstarted after unencrypted data has been sent over the socket.","name":"accept","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#accept","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#accept_nonblock":{"description":"Initiates the SSL/TLS handshake as a server in non-blocking manner.\n\n  # emulates blocking accept\n  begin\n    ssl.accept_nonblock\n  rescue IO::WaitReadable\n    IO.select([s2])\n    retry\n  rescue IO::WaitWritable\n    IO.select(nil, [s2])\n    retry\n  end","name":"accept_nonblock","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#accept_nonblock","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#cert":{"description":"The X509 certificate for this socket endpoint.","name":"cert","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#cert","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#cipher":{"description":"The cipher being used for the current connection","name":"cipher","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#cipher","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#client_ca":{"description":"Returns the list of client CAs. Please note that in contrast to\nSSLContext#client_ca= no array of X509::Certificate is returned but\nX509::Name instances of the CA's subject distinguished name.\n\nIn server mode, returns the list set by SSLContext#client_ca=.\nIn client mode, returns the list of client CAs sent from the server.","name":"client_ca","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#client_ca","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#connect":{"description":"Initiates an SSL/TLS handshake with a server.  The handshake may be started\nafter unencrypted data has been sent over the socket.","name":"connect","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#connect","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#connect_nonblock":{"description":"Initiates the SSL/TLS handshake as a client in non-blocking manner.\n\n  # emulates blocking connect\n  begin\n    ssl.connect_nonblock\n  rescue IO::WaitReadable\n    IO.select([s2])\n    retry\n  rescue IO::WaitWritable\n    IO.select(nil, [s2])\n    retry\n  end","name":"connect_nonblock","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#connect_nonblock","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#initialize":{"description":"Creates a new SSL socket from +io+ which must be a real ruby object (not an\nIO-like object that responds to read/write).\n\nIf +ctx+ is provided the SSL Sockets initial params will be taken from\nthe context.\n\nThe OpenSSL::Buffering module provides additional IO methods.\n\nThis method will freeze the SSLContext if one is provided;\nhowever, session management is still allowed in the frozen SSLContext.","name":"initialize","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#initialize","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#npn_protocol":{"description":"Returns the protocol string that was finally selected by the client\nduring the handshake.","name":"npn_protocol","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#npn_protocol","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#peer_cert":{"description":"The X509 certificate for this socket's peer.","name":"peer_cert","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#peer_cert","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#peer_cert_chain":{"description":"The X509 certificate chain for this socket's peer.","name":"peer_cert_chain","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#peer_cert_chain","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#pending":{"description":"The number of bytes that are immediately available for reading","name":"pending","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#pending","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#post_connection_check":{"description":"Perform hostname verification after an SSL connection is established\n\nThis method MUST be called after calling #connect to ensure that the\nhostname of a remote peer has been verified.","name":"post_connection_check","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#post_connection_check","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#session":{"description":"","name":"session","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#session","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#session=":{"description":"Sets the Session to be used when the connection is established.","name":"session=","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#session=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#session_reused?":{"description":"Returns true if a reused session was negotiated during the handshake.","name":"session_reused?","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#session_reused?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::SSL::SSLSocket#ssl_version":{"description":"Returns a String representing the SSL/TLS version that was negotiated\nfor the connection, for example \"TLSv1.2\".","name":"ssl_version","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#ssl_version","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#state":{"description":"A description of the current connection state.","name":"state","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#state","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#sysclose":{"description":"Shuts down the SSL connection and prepares it for another connection.","name":"sysclose","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#sysclose","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#sysread":{"description":"Reads +length+ bytes from the SSL connection.  If a pre-allocated +buffer+\nis provided the data will be written into it.","name":"sysread","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#sysread","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#sysread_nonblock":{"description":"A non-blocking version of #sysread.  Raises an SSLError if reading would\nblock.  If \"exception: false\" is passed, this method returns a symbol of\n:wait_readable, :wait_writable, or nil, rather than raising an exception.\n\nReads +length+ bytes from the SSL connection.  If a pre-allocated +buffer+\nis provided the data will be written into it.","name":"sysread_nonblock","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#sysread_nonblock","type":"instance_method","visibility":"private"},"OpenSSL::SSL::SSLSocket#syswrite":{"description":"Writes +string+ to the SSL connection.","name":"syswrite","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#syswrite","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#syswrite_nonblock":{"description":"Writes +string+ to the SSL connection in a non-blocking manner.  Raises an\nSSLError if writing would block.","name":"syswrite_nonblock","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#syswrite_nonblock","type":"instance_method","visibility":"private"},"OpenSSL::SSL::SSLSocket#to_io":{"description":"","name":"to_io","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#to_io","type":"instance_method","visibility":"public"},"OpenSSL::SSL::SSLSocket#using_anon_cipher?":{"description":"","name":"using_anon_cipher?","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#using_anon_cipher?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"OpenSSL::SSL::SSLSocket#verify_result":{"description":"Returns the result of the peer certificates verification.  See verify(1)\nfor error values and descriptions.\n\nIf no peer certificate was presented X509_V_OK is returned.","name":"verify_result","namespace":"OpenSSL::SSL::SSLSocket","path":"OpenSSL::SSL::SSLSocket#verify_result","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session":{"description":"","name":"Session","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::Session","type":"class","visibility":"public"},"OpenSSL::SSL::Session#==":{"description":"","name":"==","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#==","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#id":{"description":"Returns the Session ID.","name":"id","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#id","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#initialize":{"description":"=== Parameters\n+SSLSocket+ is an OpenSSL::SSL::SSLSocket\n+string+ must be a DER or PEM encoded Session.","name":"initialize","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#initialize","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#time":{"description":"Gets start time of the session.","name":"time","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#time","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#time=":{"description":"Sets start time of the session. Time resolution is in seconds.","name":"time=","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#time=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#timeout":{"description":"Gets how long until the session expires in seconds.","name":"timeout","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#timeout","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#timeout=":{"description":"Sets how long until the session expires in seconds.","name":"timeout=","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#timeout=","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#to_der":{"description":"Returns an ASN1 encoded String that contains the Session object.","name":"to_der","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#to_der","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#to_pem":{"description":"Returns a PEM encoded String that contains the Session object.","name":"to_pem","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#to_pem","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session#to_text":{"description":"Shows everything in the Session object.","name":"to_text","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session#to_text","type":"instance_method","visibility":"public"},"OpenSSL::SSL::Session::SessionError":{"description":"","name":"SessionError","namespace":"OpenSSL::SSL::Session","path":"OpenSSL::SSL::Session::SessionError","type":"class","visibility":"public"},"OpenSSL::SSL::SocketForwarder":{"description":"","name":"SocketForwarder","namespace":"OpenSSL::SSL","path":"OpenSSL::SSL::SocketForwarder","type":"module","visibility":"public"},"OpenSSL::SSL::SocketForwarder#addr":{"description":"","name":"addr","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#addr","type":"module_function","visibility":"public"},"OpenSSL::SSL::SocketForwarder#closed?":{"description":"","name":"closed?","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#closed?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"OpenSSL::SSL::SocketForwarder#do_not_reverse_lookup=":{"description":"","name":"do_not_reverse_lookup=","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#do_not_reverse_lookup=","type":"module_function","visibility":"public"},"OpenSSL::SSL::SocketForwarder#fcntl":{"description":"","name":"fcntl","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#fcntl","type":"module_function","visibility":"public"},"OpenSSL::SSL::SocketForwarder#getsockopt":{"description":"","name":"getsockopt","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#getsockopt","type":"module_function","visibility":"public"},"OpenSSL::SSL::SocketForwarder#peeraddr":{"description":"","name":"peeraddr","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#peeraddr","type":"module_function","visibility":"public"},"OpenSSL::SSL::SocketForwarder#setsockopt":{"description":"","name":"setsockopt","namespace":"OpenSSL::SSL::SocketForwarder","path":"OpenSSL::SSL::SocketForwarder#setsockopt","type":"module_function","visibility":"public"},"OpenSSL::VERSION":{"description":"OpenSSL ruby extension version","name":"VERSION","namespace":"OpenSSL","path":"OpenSSL::VERSION","type":"constant","return":["String",""],"visibility":"public"},"OpenSSL::X509":{"description":"","name":"X509","namespace":"OpenSSL","path":"OpenSSL::X509","type":"module","visibility":"public"},"OpenSSL::X509::Attribute":{"description":"","name":"Attribute","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Attribute","type":"class","visibility":"public"},"OpenSSL::X509::Attribute#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::Attribute","path":"OpenSSL::X509::Attribute#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Attribute#oid":{"description":"","name":"oid","namespace":"OpenSSL::X509::Attribute","path":"OpenSSL::X509::Attribute#oid","type":"instance_method","visibility":"public"},"OpenSSL::X509::Attribute#oid=":{"description":"","name":"oid=","namespace":"OpenSSL::X509::Attribute","path":"OpenSSL::X509::Attribute#oid=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Attribute#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::X509::Attribute","path":"OpenSSL::X509::Attribute#to_der","type":"instance_method","visibility":"public"},"OpenSSL::X509::Attribute#value":{"description":"","name":"value","namespace":"OpenSSL::X509::Attribute","path":"OpenSSL::X509::Attribute#value","type":"instance_method","visibility":"public"},"OpenSSL::X509::Attribute#value=":{"description":"","name":"value=","namespace":"OpenSSL::X509::Attribute","path":"OpenSSL::X509::Attribute#value=","type":"instance_method","visibility":"public"},"OpenSSL::X509::AttributeError":{"description":"","name":"AttributeError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::AttributeError","type":"class","visibility":"public"},"OpenSSL::X509::CRL":{"description":"","name":"CRL","namespace":"OpenSSL::X509","path":"OpenSSL::X509::CRL","type":"class","visibility":"public"},"OpenSSL::X509::CRL#add_extension":{"description":"","name":"add_extension","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#add_extension","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#add_revoked":{"description":"","name":"add_revoked","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#add_revoked","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#extensions":{"description":"Gets X509v3 extensions as array of X509Ext objects","name":"extensions","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#extensions","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#extensions=":{"description":"Sets X509_EXTENSIONs","name":"extensions=","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#extensions=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#issuer":{"description":"","name":"issuer","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#issuer","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#issuer=":{"description":"NO DUP - don't free","name":"issuer=","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#issuer=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#last_update":{"description":"","name":"last_update","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#last_update","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#last_update=":{"description":"","name":"last_update=","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#last_update=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#next_update":{"description":"","name":"next_update","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#next_update","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#next_update=":{"description":"","name":"next_update=","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#next_update=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#revoked":{"description":"","name":"revoked","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#revoked","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#revoked=":{"description":"","name":"revoked=","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#revoked=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#sign":{"description":"","name":"sign","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#sign","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#signature_algorithm":{"description":"","name":"signature_algorithm","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#signature_algorithm","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#to_der","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#to_pem":{"description":"","name":"to_s","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#to_s":{"description":"","name":"to_s","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#to_text":{"description":"","name":"to_text","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#to_text","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#verify":{"description":"","name":"verify","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#verify","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#version":{"description":"","name":"version","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#version","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRL#version=":{"description":"","name":"version=","namespace":"OpenSSL::X509::CRL","path":"OpenSSL::X509::CRL#version=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CRLError":{"description":"","name":"CRLError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::CRLError","type":"class","visibility":"public"},"OpenSSL::X509::Certificate":{"description":"Implementation of an X.509 certificate as specified in RFC 5280.\nProvides access to a certificate's attributes and allows certificates\nto be read from a string, but also supports the creation of new\ncertificates from scratch.\n\n=== Reading a certificate from a file\n\nCertificate is capable of handling DER-encoded certificates and\ncertificates encoded in OpenSSL's PEM format.\n\n  raw = File.read \"cert.cer\" # DER- or PEM-encoded\n  certificate = OpenSSL::X509::Certificate.new raw\n\n=== Saving a certificate to a file\n\nA certificate may be encoded in DER format\n\n  cert = ...\n  File.open(\"cert.cer\", \"wb\") { |f| f.print cert.to_der }\n\nor in PEM format\n\n  cert = ...\n  File.open(\"cert.pem\", \"wb\") { |f| f.print cert.to_pem }\n\nX.509 certificates are associated with a private/public key pair,\ntypically a RSA, DSA or ECC key (see also OpenSSL::PKey::RSA,\nOpenSSL::PKey::DSA and OpenSSL::PKey::EC), the public key itself is\nstored within the certificate and can be accessed in form of an\nOpenSSL::PKey. Certificates are typically used to be able to associate\nsome form of identity with a key pair, for example web servers serving\npages over HTTPs use certificates to authenticate themselves to the user.\n\nThe public key infrastructure (PKI) model relies on trusted certificate\nauthorities (\"root CAs\") that issue these certificates, so that end\nusers need to base their trust just on a selected few authorities\nthat themselves again vouch for subordinate CAs issuing their\ncertificates to end users.\n\nThe OpenSSL::X509 module provides the tools to set up an independent\nPKI, similar to scenarios where the 'openssl' command line tool is\nused for issuing certificates in a private PKI.\n\n=== Creating a root CA certificate and an end-entity certificate\n\nFirst, we need to create a \"self-signed\" root certificate. To do so,\nwe need to generate a key first. Please note that the choice of \"1\"\nas a serial number is considered a security flaw for real certificates.\nSecure choices are integers in the two-digit byte range and ideally\nnot sequential but secure random numbers, steps omitted here to keep\nthe example concise.\n\n  root_key = OpenSSL::PKey::RSA.new 2048 # the CA's public/private key\n  root_ca = OpenSSL::X509::Certificate.new\n  root_ca.version = 2 # cf. RFC 5280 - to make it a \"v3\" certificate\n  root_ca.serial = 1\n  root_ca.subject = OpenSSL::X509::Name.parse \"/DC=org/DC=ruby-lang/CN=Ruby CA\"\n  root_ca.issuer = root_ca.subject # root CA's are \"self-signed\"\n  root_ca.public_key = root_key.public_key\n  root_ca.not_before = Time.now\n  root_ca.not_after = root_ca.not_before + 2 * 365 * 24 * 60 * 60 # 2 years validity\n  ef = OpenSSL::X509::ExtensionFactory.new\n  ef.subject_certificate = root_ca\n  ef.issuer_certificate = root_ca\n  root_ca.add_extension(ef.create_extension(\"basicConstraints\",\"CA:TRUE\",true))\n  root_ca.add_extension(ef.create_extension(\"keyUsage\",\"keyCertSign, cRLSign\", true))\n  root_ca.add_extension(ef.create_extension(\"subjectKeyIdentifier\",\"hash\",false))\n  root_ca.add_extension(ef.create_extension(\"authorityKeyIdentifier\",\"keyid:always\",false))\n  root_ca.sign(root_key, OpenSSL::Digest::SHA256.new)\n\nThe next step is to create the end-entity certificate using the root CA\ncertificate.\n\n  key = OpenSSL::PKey::RSA.new 2048\n  cert = OpenSSL::X509::Certificate.new\n  cert.version = 2\n  cert.serial = 2\n  cert.subject = OpenSSL::X509::Name.parse \"/DC=org/DC=ruby-lang/CN=Ruby certificate\"\n  cert.issuer = root_ca.subject # root CA is the issuer\n  cert.public_key = key.public_key\n  cert.not_before = Time.now\n  cert.not_after = cert.not_before + 1 * 365 * 24 * 60 * 60 # 1 years validity\n  ef = OpenSSL::X509::ExtensionFactory.new\n  ef.subject_certificate = cert\n  ef.issuer_certificate = root_ca\n  cert.add_extension(ef.create_extension(\"keyUsage\",\"digitalSignature\", true))\n  cert.add_extension(ef.create_extension(\"subjectKeyIdentifier\",\"hash\",false))\n  cert.sign(root_key, OpenSSL::Digest::SHA256.new)","name":"Certificate","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Certificate","type":"class","visibility":"public"},"OpenSSL::X509::Certificate#add_extension":{"description":"","name":"add_extension","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#add_extension","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#check_private_key":{"description":"Checks if 'key' is PRIV key for this cert","name":"check_private_key","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#check_private_key","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#extensions":{"description":"","name":"extensions","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#extensions","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#extensions=":{"description":"","name":"extensions=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#extensions=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#inspect":{"description":"","name":"inspect","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#inspect","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#issuer":{"description":"","name":"issuer","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#issuer","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#issuer=":{"description":"","name":"issuer=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#issuer=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#not_after":{"description":"","name":"not_after","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#not_after","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#not_after=":{"description":"","name":"not_after=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#not_after=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#not_before":{"description":"","name":"not_before","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#not_before","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#not_before=":{"description":"","name":"not_before=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#not_before=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#pretty_print":{"description":"","name":"pretty_print","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#pretty_print","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#public_key":{"description":"","name":"public_key","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#public_key","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#public_key=":{"description":"","name":"public_key=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#public_key=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#serial":{"description":"","name":"serial","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#serial","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#serial=":{"description":"","name":"serial=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#serial=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#sign":{"description":"","name":"sign","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#sign","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#signature_algorithm":{"description":"","name":"signature_algorithm","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#signature_algorithm","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#subject":{"description":"","name":"subject","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#subject","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#subject=":{"description":"","name":"subject=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#subject=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#to_der","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#to_pem":{"description":"","name":"to_s","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#to_s":{"description":"","name":"to_s","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#to_text":{"description":"","name":"to_text","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#to_text","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#verify":{"description":"Checks that cert signature is made with PRIVversion of this PUBLIC 'key'","name":"verify","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#verify","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#version":{"description":"","name":"version","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#version","type":"instance_method","visibility":"public"},"OpenSSL::X509::Certificate#version=":{"description":"","name":"version=","namespace":"OpenSSL::X509::Certificate","path":"OpenSSL::X509::Certificate#version=","type":"instance_method","visibility":"public"},"OpenSSL::X509::CertificateError":{"description":"","name":"CertificateError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::CertificateError","type":"class","visibility":"public"},"OpenSSL::X509::Extension":{"description":"","name":"Extension","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Extension","type":"class","visibility":"public"},"OpenSSL::X509::Extension#critical=":{"description":"","name":"critical=","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#critical=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#critical?":{"description":"","name":"critical?","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#critical?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::X509::Extension#initialize":{"description":"Creates an X509 extension.\n\nThe extension may be created from +asn1+ data or from an extension +name+\nand +value+.  The +name+ may be either an OID or an extension name.  If\n+critical+ is true the extension is marked critical.","name":"initialize","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#oid":{"description":"","name":"oid","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#oid","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#oid=":{"description":"","name":"oid=","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#oid=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#to_a":{"description":"","name":"to_a","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#to_a","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#to_der","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#to_h":{"description":"{\"oid\"=>sn|ln, \"value\"=>value, \"critical\"=>true|false}","name":"to_h","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#to_h","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#to_s":{"description":"\"oid = critical, value\"","name":"to_s","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#value":{"description":"","name":"value","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#value","type":"instance_method","visibility":"public"},"OpenSSL::X509::Extension#value=":{"description":"","name":"value=","namespace":"OpenSSL::X509::Extension","path":"OpenSSL::X509::Extension#value=","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionError":{"description":"","name":"ExtensionError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::ExtensionError","type":"class","visibility":"public"},"OpenSSL::X509::ExtensionFactory":{"description":"","name":"ExtensionFactory","namespace":"OpenSSL::X509","path":"OpenSSL::X509::ExtensionFactory","type":"class","visibility":"public"},"OpenSSL::X509::ExtensionFactory#config=":{"description":"","name":"config=","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#config=","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#create_ext":{"description":"Array to X509_EXTENSION\nStructure:\n[\"ln\", \"value\", bool_critical] or\n[\"sn\", \"value\", bool_critical] or\n[\"ln\", \"critical,value\"] or the same for sn\n[\"ln\", \"value\"] => not critical","name":"create_ext","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#create_ext","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#create_ext_from_array":{"description":"","name":"create_ext_from_array","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#create_ext_from_array","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#create_ext_from_hash":{"description":"","name":"create_ext_from_hash","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#create_ext_from_hash","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#create_ext_from_string":{"description":"\"oid = critical, value\"","name":"create_ext_from_string","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#create_ext_from_string","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#create_extension":{"description":"","name":"create_extension","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#create_extension","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#crl=":{"description":"","name":"crl=","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#crl=","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#issuer_certificate=":{"description":"","name":"issuer_certificate=","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#issuer_certificate=","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#subject_certificate=":{"description":"","name":"subject_certificate=","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#subject_certificate=","type":"instance_method","visibility":"public"},"OpenSSL::X509::ExtensionFactory#subject_request=":{"description":"","name":"subject_request=","namespace":"OpenSSL::X509::ExtensionFactory","path":"OpenSSL::X509::ExtensionFactory#subject_request=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name":{"description":"An X.509 name represents a hostname, email address or other entity\nassociated with a public key.\n\nYou can create a Name by parsing a distinguished name String or by\nsupplying the distinguished name as an Array.\n\n  name = OpenSSL::X509::Name.parse 'CN=nobody/DC=example'\n\n  name = OpenSSL::X509::Name.new [['CN', 'nobody'], ['DC', 'example']]","name":"Name","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Name","type":"class","visibility":"public"},"OpenSSL::X509::Name#<=>":{"description":"Compares this Name with +other+ and returns 0 if they are the same and -1 or\n+1 if they are greater or less than each other respectively.","name":"<=>","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#<=>","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#add_entry":{"description":"Adds a new entry with the given +oid+ and +value+ to this name.  The +oid+\nis an object identifier defined in ASN.1.  Some common OIDs are:\n\nC::  Country Name\nCN:: Common Name\nDC:: Domain Component\nO::  Organization Name\nOU:: Organizational Unit Name\nST:: State or Province Name","name":"add_entry","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#add_entry","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#cmp":{"description":"Compares this Name with +other+ and returns 0 if they are the same and -1 or\n+1 if they are greater or less than each other respectively.","name":"<=>","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#<=>","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#eql?":{"description":"Returns true if +name+ and +other+ refer to the same hash key.","name":"eql?","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OpenSSL::X509::Name#hash":{"description":"The hash value returned is suitable for use as a certificate's filename in\na CA path.","name":"hash","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#hash","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#hash_old":{"description":"Returns an MD5 based hash used in OpenSSL 0.9.X.","name":"hash_old","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#hash_old","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#initialize":{"description":"Creates a new Name.\n\nA name may be created from a DER encoded string +der+, an Array\nrepresenting a +distinguished_name+ or a +distinguished_name+ along with a\n+template+.\n\n  name = OpenSSL::X509::Name.new [['CN', 'nobody'], ['DC', 'example']]\n\n  name = OpenSSL::X509::Name.new name.to_der\n\nSee add_entry for a description of the +distinguished_name+ Array's\ncontents","name":"initialize","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#pretty_print":{"description":"","name":"pretty_print","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#pretty_print","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#to_a":{"description":"Returns an Array representation of the distinguished name suitable for\npassing to ::new","name":"to_a","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#to_a","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#to_der":{"description":"Converts the name to DER encoding","name":"to_der","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#to_der","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name#to_s":{"description":"Returns this name as a Distinguished Name string.  +flags+ may be one of:\n\n* OpenSSL::X509::Name::COMPAT\n* OpenSSL::X509::Name::RFC2253\n* OpenSSL::X509::Name::ONELINE\n* OpenSSL::X509::Name::MULTILINE","name":"to_s","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::Name.parse":{"description":"","name":"parse","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name.parse","type":"class_method","visibility":"public"},"OpenSSL::X509::Name.parse_openssl":{"description":"","name":"parse","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name.parse","type":"class_method","visibility":"public"},"OpenSSL::X509::Name.parse_rfc2253":{"description":"","name":"parse_rfc2253","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name.parse_rfc2253","type":"class_method","visibility":"public"},"OpenSSL::X509::Name::COMPAT":{"description":"A flag for #to_s.\n\nBreaks the name returned into multiple lines if longer than 80\ncharacters.","name":"COMPAT","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::COMPAT","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::X509::Name::DEFAULT_OBJECT_TYPE":{"description":"The default object type for name entries.","name":"DEFAULT_OBJECT_TYPE","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::DEFAULT_OBJECT_TYPE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::X509::Name::MULTILINE":{"description":"A flag for #to_s.\n\nReturns a multiline format.","name":"MULTILINE","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::MULTILINE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::X509::Name::OBJECT_TYPE_TEMPLATE":{"description":"The default object type template for name entries.","name":"OBJECT_TYPE_TEMPLATE","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::OBJECT_TYPE_TEMPLATE","type":"constant","return":["Hash",""],"visibility":"public"},"OpenSSL::X509::Name::ONELINE":{"description":"A flag for #to_s.\n\nReturns a more readable format than RFC2253.","name":"ONELINE","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::ONELINE","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253":{"description":"A flag for #to_s.\n\nReturns an RFC2253 format name.","name":"RFC2253","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::RFC2253","type":"constant","return":["Fixnum",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN":{"description":"","name":"RFC2253DN","namespace":"OpenSSL::X509::Name","path":"OpenSSL::X509::Name::RFC2253DN","type":"module","visibility":"public"},"OpenSSL::X509::Name::RFC2253DN#expand_hexstring":{"description":"","name":"expand_hexstring","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN#expand_hexstring","type":"module_function","visibility":"private"},"OpenSSL::X509::Name::RFC2253DN#expand_pair":{"description":"","name":"expand_pair","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN#expand_pair","type":"module_function","visibility":"private"},"OpenSSL::X509::Name::RFC2253DN#expand_value":{"description":"","name":"expand_value","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN#expand_value","type":"module_function","visibility":"private"},"OpenSSL::X509::Name::RFC2253DN#scan":{"description":"","name":"scan","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN#scan","type":"module_function","visibility":"private"},"OpenSSL::X509::Name::RFC2253DN.expand_hexstring":{"description":"","name":"expand_hexstring","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN.expand_hexstring","type":"module_function","visibility":"public"},"OpenSSL::X509::Name::RFC2253DN.expand_pair":{"description":"","name":"expand_pair","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN.expand_pair","type":"module_function","visibility":"public"},"OpenSSL::X509::Name::RFC2253DN.expand_value":{"description":"","name":"expand_value","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN.expand_value","type":"module_function","visibility":"public"},"OpenSSL::X509::Name::RFC2253DN.scan":{"description":"","name":"scan","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN.scan","type":"module_function","visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::AttributeType":{"description":"","name":"AttributeType","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::AttributeType","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::AttributeValue":{"description":"","name":"AttributeValue","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::AttributeValue","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::HexChar":{"description":"","name":"HexChar","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::HexChar","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::HexPair":{"description":"","name":"HexPair","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::HexPair","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::HexString":{"description":"","name":"HexString","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::HexString","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::Pair":{"description":"","name":"Pair","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::Pair","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::QuoteChar":{"description":"","name":"QuoteChar","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::QuoteChar","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::Special":{"description":"","name":"Special","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::Special","type":"constant","return":["String",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::StringChar":{"description":"","name":"StringChar","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::StringChar","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::Name::RFC2253DN::TypeAndValue":{"description":"","name":"TypeAndValue","namespace":"OpenSSL::X509::Name::RFC2253DN","path":"OpenSSL::X509::Name::RFC2253DN::TypeAndValue","type":"constant","return":["Regexp",""],"visibility":"public"},"OpenSSL::X509::NameError":{"description":"","name":"NameError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::NameError","type":"class","visibility":"public"},"OpenSSL::X509::Request":{"description":"","name":"Request","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Request","type":"class","visibility":"public"},"OpenSSL::X509::Request#add_attribute":{"description":"","name":"add_attribute","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#add_attribute","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#attributes":{"description":"","name":"attributes","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#attributes","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#attributes=":{"description":"","name":"attributes=","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#attributes=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#public_key":{"description":"","name":"public_key","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#public_key","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#public_key=":{"description":"NO DUP - OK","name":"public_key=","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#public_key=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#sign":{"description":"","name":"sign","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#sign","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#signature_algorithm":{"description":"","name":"signature_algorithm","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#signature_algorithm","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#subject":{"description":"","name":"subject","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#subject","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#subject=":{"description":"","name":"subject=","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#subject=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#to_der":{"description":"","name":"to_der","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#to_der","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#to_pem":{"description":"","name":"to_s","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#to_s":{"description":"","name":"to_s","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#to_s","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#to_text":{"description":"","name":"to_text","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#to_text","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#verify":{"description":"Checks that cert signature is made with PRIVversion of this PUBLIC 'key'","name":"verify","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#verify","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#version":{"description":"","name":"version","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#version","type":"instance_method","visibility":"public"},"OpenSSL::X509::Request#version=":{"description":"","name":"version=","namespace":"OpenSSL::X509::Request","path":"OpenSSL::X509::Request#version=","type":"instance_method","visibility":"public"},"OpenSSL::X509::RequestError":{"description":"","name":"RequestError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::RequestError","type":"class","visibility":"public"},"OpenSSL::X509::Revoked":{"description":"","name":"Revoked","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Revoked","type":"class","visibility":"public"},"OpenSSL::X509::Revoked#add_extension":{"description":"","name":"add_extension","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#add_extension","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#extensions":{"description":"Gets X509v3 extensions as array of X509Ext objects","name":"extensions","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#extensions","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#extensions=":{"description":"Sets X509_EXTENSIONs","name":"extensions=","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#extensions=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#serial":{"description":"","name":"serial","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#serial","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#serial=":{"description":"","name":"serial=","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#serial=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#time":{"description":"","name":"time","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#time","type":"instance_method","visibility":"public"},"OpenSSL::X509::Revoked#time=":{"description":"","name":"time=","namespace":"OpenSSL::X509::Revoked","path":"OpenSSL::X509::Revoked#time=","type":"instance_method","visibility":"public"},"OpenSSL::X509::RevokedError":{"description":"","name":"RevokedError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::RevokedError","type":"class","visibility":"public"},"OpenSSL::X509::Store":{"description":"The X509 certificate store holds trusted CA certificates used to verify\npeer certificates.\n\nThe easiest way to create a useful certificate store is:\n\n  cert_store = OpenSSL::X509::Store.new\n  cert_store.set_default_paths\n\nThis will use your system's built-in certificates.\n\nIf your system does not have a default set of certificates you can\nobtain a set from Mozilla here: http://curl.haxx.se/docs/caextract.html\n(Note that this set does not have an HTTPS download option so you may\nwish to use the firefox-db2pem.sh script to extract the certificates\nfrom a local install to avoid man-in-the-middle attacks.)\n\nAfter downloading or generating a cacert.pem from the above link you\ncan create a certificate store from the pem file like this:\n\n  cert_store = OpenSSL::X509::Store.new\n  cert_store.add_file 'cacert.pem'\n\nThe certificate store can be used with an SSLSocket like this:\n\n  ssl_context = OpenSSL::SSL::SSLContext.new\n  ssl_context.cert_store = cert_store\n\n  tcp_socket = TCPSocket.open 'example.com', 443\n\n  ssl_socket = OpenSSL::SSL::SSLSocket.new tcp_socket, ssl_context","name":"Store","namespace":"OpenSSL::X509","path":"OpenSSL::X509::Store","type":"class","visibility":"public"},"OpenSSL::X509::Store#add_cert":{"description":"Adds the OpenSSL::X509::Certificate +cert+ to the certificate store.","name":"add_cert","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#add_cert","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#add_crl":{"description":"","name":"add_crl","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#add_crl","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#add_file":{"description":"Adds the certificates in +file+ to the certificate store.  The +file+ can\ncontain multiple PEM-encoded certificates.","name":"add_file","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#add_file","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#add_path":{"description":"","name":"add_path","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#add_path","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#flags=":{"description":"","name":"flags=","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#flags=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#initialize":{"description":"","name":"initialize","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#initialize","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#purpose=":{"description":"","name":"purpose=","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#purpose=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#set_default_paths":{"description":"Adds the default certificates to the certificate store.  These certificates\nare loaded from the default configuration directory which can usually be\ndetermined by:\n\n  File.dirname OpenSSL::Config::DEFAULT_CONFIG_FILE","name":"set_default_paths","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#set_default_paths","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#time=":{"description":"","name":"time=","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#time=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#trust=":{"description":"","name":"trust=","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#trust=","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#verify":{"description":"","name":"verify","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#verify","type":"instance_method","visibility":"public"},"OpenSSL::X509::Store#verify_callback=":{"description":"General callback for OpenSSL verify","name":"verify_callback=","namespace":"OpenSSL::X509::Store","path":"OpenSSL::X509::Store#verify_callback=","type":"instance_method","visibility":"public"},"OpenSSL::X509::StoreContext":{"description":"","name":"StoreContext","namespace":"OpenSSL::X509","path":"OpenSSL::X509::StoreContext","type":"class","visibility":"public"},"OpenSSL::X509::StoreContext#cleanup":{"description":"","name":"cleanup","namespace":"OpenSSL::X509::StoreContext","path":"OpenSSL::X509::StoreContext#cleanup","type":"instance_method","visibility":"public"},"OpenSSL::X509::StoreError":{"description":"","name":"StoreError","namespace":"OpenSSL::X509","path":"OpenSSL::X509::StoreError","type":"class","visibility":"public"},"Integer":{"description":"Add double dispatch to Integer","name":"Integer","namespace":"","path":"Integer","type":"class","visibility":"public"},"Integer#to_bn":{"description":"Casts an Integer as an OpenSSL::BN\n\nSee `man bn` for more info.","name":"to_bn","namespace":"Integer","path":"Integer#to_bn","type":"instance_method","visibility":"public"},"Pathname":{"description":"* FileUtils *","name":"Pathname","namespace":"","path":"Pathname","type":"class","visibility":"public"},"Pathname#+":{"description":"Appends a pathname fragment to +self+ to produce a new Pathname object.\n\n  p1 = Pathname.new(\"/usr\")      # Pathname:/usr\n  p2 = p1 + \"bin/ruby\"           # Pathname:/usr/bin/ruby\n  p3 = p1 + \"/etc/passwd\"        # Pathname:/etc/passwd\n\n  # / is aliased to +.\n  p4 = p1 / \"bin/ruby\"           # Pathname:/usr/bin/ruby\n  p5 = p1 / \"/etc/passwd\"        # Pathname:/etc/passwd\n\nThis method doesn't access the file system; it is pure string manipulation.","name":"/","namespace":"Pathname","path":"Pathname#/","type":"instance_method","visibility":"public"},"Pathname#/":{"description":"Appends a pathname fragment to +self+ to produce a new Pathname object.\n\n  p1 = Pathname.new(\"/usr\")      # Pathname:/usr\n  p2 = p1 + \"bin/ruby\"           # Pathname:/usr/bin/ruby\n  p3 = p1 + \"/etc/passwd\"        # Pathname:/etc/passwd\n\n  # / is aliased to +.\n  p4 = p1 / \"bin/ruby\"           # Pathname:/usr/bin/ruby\n  p5 = p1 / \"/etc/passwd\"        # Pathname:/etc/passwd\n\nThis method doesn't access the file system; it is pure string manipulation.","name":"/","namespace":"Pathname","path":"Pathname#/","type":"instance_method","visibility":"public"},"Pathname#<=>":{"description":"Provides a case-sensitive comparison operator for pathnames.\n\nPathname.new('/usr') <=> Pathname.new('/usr/bin')\n   #=> -1\nPathname.new('/usr/bin') <=> Pathname.new('/usr/bin')\n   #=> 0\nPathname.new('/usr/bin') <=> Pathname.new('/USR/BIN')\n   #=> 1\n\nIt will return +-1+, +0+ or +1+ depending on the value of the left argument\nrelative to the right argument. Or it will return +nil+ if the arguments\nare not comparable.","name":"<=>","namespace":"Pathname","path":"Pathname#<=>","type":"instance_method","visibility":"public"},"Pathname#==":{"description":"Compare this pathname with +other+.  The comparison is string-based.\nBe aware that two different paths (<tt>foo.txt</tt> and <tt>./foo.txt</tt>)\ncan refer to the same file.","name":"==","namespace":"Pathname","path":"Pathname#==","type":"instance_method","visibility":"public"},"Pathname#===":{"description":"Compare this pathname with +other+.  The comparison is string-based.\nBe aware that two different paths (<tt>foo.txt</tt> and <tt>./foo.txt</tt>)\ncan refer to the same file.","name":"===","namespace":"Pathname","path":"Pathname#===","type":"instance_method","visibility":"public"},"Pathname#absolute?":{"description":"Predicate method for testing whether a path is absolute.\n\nIt returns +true+ if the pathname begins with a slash.\n\n  p = Pathname.new('/im/sure')\n  p.absolute?\n      #=> true\n\n  p = Pathname.new('not/so/sure')\n  p.absolute?\n      #=> false","name":"absolute?","namespace":"Pathname","path":"Pathname#absolute?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#add_trailing_separator":{"description":"add_trailing_separator(path) -> path","name":"add_trailing_separator","namespace":"Pathname","path":"Pathname#add_trailing_separator","type":"instance_method","visibility":"private"},"Pathname#ascend":{"description":"Iterates over and yields a new Pathname object\nfor each element in the given path in ascending order.\n\n Pathname.new('/path/to/some/file.rb').ascend {|v| p v}\n    #<Pathname:/path/to/some/file.rb>\n    #<Pathname:/path/to/some>\n    #<Pathname:/path/to>\n    #<Pathname:/path>\n    #<Pathname:/>\n\n Pathname.new('path/to/some/file.rb').ascend {|v| p v}\n    #<Pathname:path/to/some/file.rb>\n    #<Pathname:path/to/some>\n    #<Pathname:path/to>\n    #<Pathname:path>\n\nIt doesn't access the filesystem.","name":"ascend","namespace":"Pathname","path":"Pathname#ascend","type":"instance_method","visibility":"public"},"Pathname#atime":{"description":"Returns the last access time for the file.\n\nSee File.atime.","name":"atime","namespace":"Pathname","path":"Pathname#atime","type":"instance_method","visibility":"public"},"Pathname#basename":{"description":"Returns the last component of the path.\n\nSee File.basename.","name":"basename","namespace":"Pathname","path":"Pathname#basename","type":"instance_method","visibility":"public"},"Pathname#binread":{"description":"Returns all the bytes from the file, or the first +N+ if specified.\n\nSee IO.binread.","name":"binread","namespace":"Pathname","path":"Pathname#binread","type":"instance_method","visibility":"public"},"Pathname#binwrite":{"description":"Writes +contents+ to the file, opening it in binary mode.\n\nSee IO.binwrite.","name":"binwrite","namespace":"Pathname","path":"Pathname#binwrite","type":"instance_method","visibility":"public"},"Pathname#birthtime":{"description":"Returns the birth time for the file.\nIf the platform doesn't have birthtime, returns <i>ctime</i>.\n\nSee File.birthtime.","name":"birthtime","namespace":"Pathname","path":"Pathname#birthtime","type":"instance_method","visibility":"public"},"Pathname#blockdev?":{"description":"See FileTest.blockdev?.","name":"blockdev?","namespace":"Pathname","path":"Pathname#blockdev?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#chardev?":{"description":"See FileTest.chardev?.","name":"chardev?","namespace":"Pathname","path":"Pathname#chardev?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#children":{"description":"Returns the children of the directory (files and subdirectories, not\nrecursive) as an array of Pathname objects.\n\nBy default, the returned pathnames will have enough information to access\nthe files. If you set +with_directory+ to +false+, then the returned\npathnames will contain the filename only.\n\nFor example:\n  pn = Pathname(\"/usr/lib/ruby/1.8\")\n  pn.children\n      # -> [ Pathname:/usr/lib/ruby/1.8/English.rb,\n             Pathname:/usr/lib/ruby/1.8/Env.rb,\n             Pathname:/usr/lib/ruby/1.8/abbrev.rb, ... ]\n  pn.children(false)\n      # -> [ Pathname:English.rb, Pathname:Env.rb, Pathname:abbrev.rb, ... ]\n\nNote that the results never contain the entries +.+ and +..+ in\nthe directory because they are not children.","name":"children","namespace":"Pathname","path":"Pathname#children","type":"instance_method","visibility":"public"},"Pathname#chmod":{"description":"Changes file permissions.\n\nSee File.chmod.","name":"chmod","namespace":"Pathname","path":"Pathname#chmod","type":"instance_method","visibility":"public"},"Pathname#chop_basename":{"description":"chop_basename(path) -> [pre-basename, basename] or nil","name":"chop_basename","namespace":"Pathname","path":"Pathname#chop_basename","type":"instance_method","visibility":"private"},"Pathname#chown":{"description":"Change owner and group of the file.\n\nSee File.chown.","name":"chown","namespace":"Pathname","path":"Pathname#chown","type":"instance_method","visibility":"public"},"Pathname#cleanpath":{"description":"Returns clean pathname of +self+ with consecutive slashes and useless dots\nremoved.  The filesystem is not accessed.\n\nIf +consider_symlink+ is +true+, then a more conservative algorithm is used\nto avoid breaking symbolic linkages.  This may retain more +..+\nentries than absolutely necessary, but without accessing the filesystem,\nthis can't be avoided.\n\nSee Pathname#realpath.","name":"cleanpath","namespace":"Pathname","path":"Pathname#cleanpath","type":"instance_method","visibility":"public"},"Pathname#cleanpath_aggressive":{"description":"Clean the path simply by resolving and removing excess +.+ and +..+ entries.\nNothing more, nothing less.","name":"cleanpath_aggressive","namespace":"Pathname","path":"Pathname#cleanpath_aggressive","type":"instance_method","visibility":"private"},"Pathname#cleanpath_conservative":{"description":":nodoc:","name":"cleanpath_conservative","namespace":"Pathname","path":"Pathname#cleanpath_conservative","type":"instance_method","visibility":"private"},"Pathname#ctime":{"description":"Returns the last change time, using directory information, not the file itself.\n\nSee File.ctime.","name":"ctime","namespace":"Pathname","path":"Pathname#ctime","type":"instance_method","visibility":"public"},"Pathname#del_trailing_separator":{"description":":nodoc:","name":"del_trailing_separator","namespace":"Pathname","path":"Pathname#del_trailing_separator","type":"instance_method","visibility":"private"},"Pathname#delete":{"description":"Removes a file or directory, using File.unlink if +self+ is a file, or\nDir.unlink as necessary.","name":"delete","namespace":"Pathname","path":"Pathname#delete","type":"instance_method","visibility":"public"},"Pathname#descend":{"description":"Iterates over and yields a new Pathname object\nfor each element in the given path in descending order.\n\n Pathname.new('/path/to/some/file.rb').descend {|v| p v}\n    #<Pathname:/>\n    #<Pathname:/path>\n    #<Pathname:/path/to>\n    #<Pathname:/path/to/some>\n    #<Pathname:/path/to/some/file.rb>\n\n Pathname.new('path/to/some/file.rb').descend {|v| p v}\n    #<Pathname:path>\n    #<Pathname:path/to>\n    #<Pathname:path/to/some>\n    #<Pathname:path/to/some/file.rb>\n\nIt doesn't access the filesystem.","name":"descend","namespace":"Pathname","path":"Pathname#descend","type":"instance_method","visibility":"public"},"Pathname#directory?":{"description":"See FileTest.directory?.","name":"directory?","namespace":"Pathname","path":"Pathname#directory?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#dirname":{"description":"Returns all but the last component of the path.\n\nSee File.dirname.","name":"dirname","namespace":"Pathname","path":"Pathname#dirname","type":"instance_method","visibility":"public"},"Pathname#each_child":{"description":"Iterates over the children of the directory\n(files and subdirectories, not recursive).\n\nIt yields Pathname object for each child.\n\nBy default, the yielded pathnames will have enough information to access\nthe files.\n\nIf you set +with_directory+ to +false+, then the returned pathnames will\ncontain the filename only.\n\n  Pathname(\"/usr/local\").each_child {|f| p f }\n  #=> #<Pathname:/usr/local/share>\n  #   #<Pathname:/usr/local/bin>\n  #   #<Pathname:/usr/local/games>\n  #   #<Pathname:/usr/local/lib>\n  #   #<Pathname:/usr/local/include>\n  #   #<Pathname:/usr/local/sbin>\n  #   #<Pathname:/usr/local/src>\n  #   #<Pathname:/usr/local/man>\n\n  Pathname(\"/usr/local\").each_child(false) {|f| p f }\n  #=> #<Pathname:share>\n  #   #<Pathname:bin>\n  #   #<Pathname:games>\n  #   #<Pathname:lib>\n  #   #<Pathname:include>\n  #   #<Pathname:sbin>\n  #   #<Pathname:src>\n  #   #<Pathname:man>\n\nNote that the results never contain the entries +.+ and +..+ in\nthe directory because they are not children.\n\nSee Pathname#children","name":"each_child","namespace":"Pathname","path":"Pathname#each_child","type":"instance_method","visibility":"public"},"Pathname#each_entry":{"description":"Iterates over the entries (files and subdirectories) in the directory,\nyielding a Pathname object for each entry.","name":"each_entry","namespace":"Pathname","path":"Pathname#each_entry","type":"instance_method","visibility":"public"},"Pathname#each_filename":{"description":"Iterates over each component of the path.\n\n  Pathname.new(\"/usr/bin/ruby\").each_filename {|filename| ... }\n    # yields \"usr\", \"bin\", and \"ruby\".\n\nReturns an Enumerator if no block was given.\n\n  enum = Pathname.new(\"/usr/bin/ruby\").each_filename\n    # ... do stuff ...\n  enum.each { |e| ... }\n    # yields \"usr\", \"bin\", and \"ruby\".","name":"each_filename","namespace":"Pathname","path":"Pathname#each_filename","type":"instance_method","visibility":"public"},"Pathname#each_line":{"description":"Iterates over each line in the file and yields a String object for each.","name":"each_line","namespace":"Pathname","path":"Pathname#each_line","type":"instance_method","visibility":"public"},"Pathname#entries":{"description":"Return the entries (files and subdirectories) in the directory, each as a\nPathname object.\n\nThe results contains just the names in the directory, without any trailing\nslashes or recursive look-up.\n\n  pp Pathname.new('/usr/local').entries\n  #=> [#<Pathname:share>,\n  #    #<Pathname:lib>,\n  #    #<Pathname:..>,\n  #    #<Pathname:include>,\n  #    #<Pathname:etc>,\n  #    #<Pathname:bin>,\n  #    #<Pathname:man>,\n  #    #<Pathname:games>,\n  #    #<Pathname:.>,\n  #    #<Pathname:sbin>,\n  #    #<Pathname:src>]\n\nThe result may contain the current directory <code>#<Pathname:.></code> and\nthe parent directory <code>#<Pathname:..></code>.\n\nIf you don't want +.+ and +..+ and\nwant directories, consider Pathname#children.","name":"entries","namespace":"Pathname","path":"Pathname#entries","type":"instance_method","visibility":"public"},"Pathname#eql?":{"description":"Compare this pathname with +other+.  The comparison is string-based.\nBe aware that two different paths (<tt>foo.txt</tt> and <tt>./foo.txt</tt>)\ncan refer to the same file.","name":"eql?","namespace":"Pathname","path":"Pathname#eql?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#executable?":{"description":"See FileTest.executable?.","name":"executable?","namespace":"Pathname","path":"Pathname#executable?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#executable_real?":{"description":"See FileTest.executable_real?.","name":"executable_real?","namespace":"Pathname","path":"Pathname#executable_real?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#exist?":{"description":"See FileTest.exist?.","name":"exist?","namespace":"Pathname","path":"Pathname#exist?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#expand_path":{"description":"Returns the absolute path for the file.\n\nSee File.expand_path.","name":"expand_path","namespace":"Pathname","path":"Pathname#expand_path","type":"instance_method","visibility":"public"},"Pathname#extname":{"description":"Returns the file's extension.\n\nSee File.extname.","name":"extname","namespace":"Pathname","path":"Pathname#extname","type":"instance_method","visibility":"public"},"Pathname#file?":{"description":"See FileTest.file?.","name":"file?","namespace":"Pathname","path":"Pathname#file?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#find":{"description":"Iterates over the directory tree in a depth first manner, yielding a\nPathname for each file under \"this\" directory.\n\nReturns an Enumerator if no block is given.\n\nSince it is implemented by the standard library module Find, Find.prune can\nbe used to control the traversal.\n\nIf +self+ is +.+, yielded pathnames begin with a filename in the\ncurrent directory, not +./+.\n\nSee Find.find","name":"find","namespace":"Pathname","path":"Pathname#find","type":"instance_method","visibility":"public"},"Pathname#fnmatch":{"description":"Return +true+ if the receiver matches the given pattern.\n\nSee File.fnmatch.","name":"fnmatch","namespace":"Pathname","path":"Pathname#fnmatch","type":"instance_method","visibility":"public"},"Pathname#fnmatch?":{"description":"Return +true+ if the receiver matches the given pattern.\n\nSee File.fnmatch.","name":"fnmatch?","namespace":"Pathname","path":"Pathname#fnmatch?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#freeze":{"description":"Freezes this Pathname.\n\nSee Object.freeze.","name":"freeze","namespace":"Pathname","path":"Pathname#freeze","type":"instance_method","visibility":"public"},"Pathname#ftype":{"description":"Returns \"type\" of file (\"file\", \"directory\", etc).\n\nSee File.ftype.","name":"ftype","namespace":"Pathname","path":"Pathname#ftype","type":"instance_method","visibility":"public"},"Pathname#grpowned?":{"description":"See FileTest.grpowned?.","name":"grpowned?","namespace":"Pathname","path":"Pathname#grpowned?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#has_trailing_separator?":{"description":"has_trailing_separator?(path) -> bool","name":"has_trailing_separator?","namespace":"Pathname","path":"Pathname#has_trailing_separator?","type":"instance_method","visibility":"private","return":[["Boolean"],""]},"Pathname#hash":{"description":":nodoc:","name":"hash","namespace":"Pathname","path":"Pathname#hash","type":"instance_method","visibility":"public"},"Pathname#initialize":{"description":"Create a Pathname object from the given String (or String-like object).\nIf +path+ contains a NULL character (<tt>\\0</tt>), an ArgumentError is raised.","name":"initialize","namespace":"Pathname","path":"Pathname#initialize","type":"instance_method","visibility":"public"},"Pathname#inspect":{"description":":nodoc:","name":"inspect","namespace":"Pathname","path":"Pathname#inspect","type":"instance_method","visibility":"public"},"Pathname#join":{"description":"Joins the given pathnames onto +self+ to create a new Pathname object.\n\n  path0 = Pathname.new(\"/usr\")                # Pathname:/usr\n  path0 = path0.join(\"bin/ruby\")              # Pathname:/usr/bin/ruby\n      # is the same as\n  path1 = Pathname.new(\"/usr\") + \"bin/ruby\"   # Pathname:/usr/bin/ruby\n  path0 == path1\n      #=> true","name":"join","namespace":"Pathname","path":"Pathname#join","type":"instance_method","visibility":"public"},"Pathname#lchmod":{"description":"Same as Pathname.chmod, but does not follow symbolic links.\n\nSee File.lchmod.","name":"lchmod","namespace":"Pathname","path":"Pathname#lchmod","type":"instance_method","visibility":"public"},"Pathname#lchown":{"description":"Same as Pathname.chown, but does not follow symbolic links.\n\nSee File.lchown.","name":"lchown","namespace":"Pathname","path":"Pathname#lchown","type":"instance_method","visibility":"public"},"Pathname#lstat":{"description":"See File.lstat.","name":"lstat","namespace":"Pathname","path":"Pathname#lstat","type":"instance_method","visibility":"public"},"Pathname#make_link":{"description":"Creates a hard link at _pathname_.\n\nSee File.link.","name":"make_link","namespace":"Pathname","path":"Pathname#make_link","type":"instance_method","visibility":"public"},"Pathname#make_symlink":{"description":"Creates a symbolic link.\n\nSee File.symlink.","name":"make_symlink","namespace":"Pathname","path":"Pathname#make_symlink","type":"instance_method","visibility":"public"},"Pathname#mkdir":{"description":"Create the referenced directory.\n\nSee Dir.mkdir.","name":"mkdir","namespace":"Pathname","path":"Pathname#mkdir","type":"instance_method","visibility":"public"},"Pathname#mkpath":{"description":"Creates a full path, including any intermediate directories that don't yet\nexist.\n\nSee FileUtils.mkpath and FileUtils.mkdir_p","name":"mkpath","namespace":"Pathname","path":"Pathname#mkpath","type":"instance_method","visibility":"public"},"Pathname#mountpoint?":{"description":"Returns +true+ if +self+ points to a mountpoint.","name":"mountpoint?","namespace":"Pathname","path":"Pathname#mountpoint?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#mtime":{"description":"Returns the last modified time of the file.\n\nSee File.mtime.","name":"mtime","namespace":"Pathname","path":"Pathname#mtime","type":"instance_method","visibility":"public"},"Pathname#open":{"description":"Opens the file for reading or writing.\n\nSee File.open.","name":"open","namespace":"Pathname","path":"Pathname#open","type":"instance_method","visibility":"public"},"Pathname#opendir":{"description":"Opens the referenced directory.\n\nSee Dir.open.","name":"opendir","namespace":"Pathname","path":"Pathname#opendir","type":"instance_method","visibility":"public"},"Pathname#owned?":{"description":"See FileTest.owned?.","name":"owned?","namespace":"Pathname","path":"Pathname#owned?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#parent":{"description":"Returns the parent directory.\n\nThis is same as <code>self + '..'</code>.","name":"parent","namespace":"Pathname","path":"Pathname#parent","type":"instance_method","visibility":"public"},"Pathname#pipe?":{"description":"See FileTest.pipe?.","name":"pipe?","namespace":"Pathname","path":"Pathname#pipe?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#plus":{"description":"-> path # :nodoc:","name":"plus","namespace":"Pathname","path":"Pathname#plus","type":"instance_method","visibility":"private"},"Pathname#prepend_prefix":{"description":":nodoc:","name":"prepend_prefix","namespace":"Pathname","path":"Pathname#prepend_prefix","type":"instance_method","visibility":"private"},"Pathname#read":{"description":"Returns all data from the file, or the first +N+ bytes if specified.\n\nSee IO.read.","name":"read","namespace":"Pathname","path":"Pathname#read","type":"instance_method","visibility":"public"},"Pathname#readable?":{"description":"See FileTest.readable?.","name":"readable?","namespace":"Pathname","path":"Pathname#readable?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#readable_real?":{"description":"See FileTest.readable_real?.","name":"readable_real?","namespace":"Pathname","path":"Pathname#readable_real?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#readlines":{"description":"Returns all the lines from the file.\n\nSee IO.readlines.","name":"readlines","namespace":"Pathname","path":"Pathname#readlines","type":"instance_method","visibility":"public"},"Pathname#readlink":{"description":"Read symbolic link.\n\nSee File.readlink.","name":"readlink","namespace":"Pathname","path":"Pathname#readlink","type":"instance_method","visibility":"public"},"Pathname#realdirpath":{"description":"Returns the real (absolute) pathname of +self+ in the actual filesystem.\n\nDoes not contain symlinks or useless dots, +..+ and +.+.\n\nThe last component of the real pathname can be nonexistent.","name":"realdirpath","namespace":"Pathname","path":"Pathname#realdirpath","type":"instance_method","visibility":"public"},"Pathname#realpath":{"description":"Returns the real (absolute) pathname for +self+ in the actual\nfilesystem.\n\nDoes not contain symlinks or useless dots, +..+ and +.+.\n\nAll components of the pathname must exist when this method is\ncalled.","name":"realpath","namespace":"Pathname","path":"Pathname#realpath","type":"instance_method","visibility":"public"},"Pathname#relative?":{"description":"The opposite of Pathname#absolute?\n\nIt returns +false+ if the pathname begins with a slash.\n\n  p = Pathname.new('/im/sure')\n  p.relative?\n      #=> false\n\n  p = Pathname.new('not/so/sure')\n  p.relative?\n      #=> true","name":"relative?","namespace":"Pathname","path":"Pathname#relative?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#relative_path_from":{"description":"Returns a relative path from the given +base_directory+ to the receiver.\n\nIf +self+ is absolute, then +base_directory+ must be absolute too.\n\nIf +self+ is relative, then +base_directory+ must be relative too.\n\nThis method doesn't access the filesystem.  It assumes no symlinks.\n\nArgumentError is raised when it cannot find a relative path.","name":"relative_path_from","namespace":"Pathname","path":"Pathname#relative_path_from","type":"instance_method","visibility":"public"},"Pathname#rename":{"description":"Rename the file.\n\nSee File.rename.","name":"rename","namespace":"Pathname","path":"Pathname#rename","type":"instance_method","visibility":"public"},"Pathname#rmdir":{"description":"Remove the referenced directory.\n\nSee Dir.rmdir.","name":"rmdir","namespace":"Pathname","path":"Pathname#rmdir","type":"instance_method","visibility":"public"},"Pathname#rmtree":{"description":"Recursively deletes a directory, including all directories beneath it.\n\nSee FileUtils.rm_r","name":"rmtree","namespace":"Pathname","path":"Pathname#rmtree","type":"instance_method","visibility":"public"},"Pathname#root?":{"description":"Predicate method for root directories.  Returns +true+ if the\npathname consists of consecutive slashes.\n\nIt doesn't access the filesystem.  So it may return +false+ for some\npathnames which points to roots such as <tt>/usr/..</tt>.","name":"root?","namespace":"Pathname","path":"Pathname#root?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#setgid?":{"description":"See FileTest.setgid?.","name":"setgid?","namespace":"Pathname","path":"Pathname#setgid?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#setuid?":{"description":"See FileTest.setuid?.","name":"setuid?","namespace":"Pathname","path":"Pathname#setuid?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#size":{"description":"See FileTest.size.","name":"size","namespace":"Pathname","path":"Pathname#size","type":"instance_method","visibility":"public"},"Pathname#size?":{"description":"See FileTest.size?.","name":"size?","namespace":"Pathname","path":"Pathname#size?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#socket?":{"description":"See FileTest.socket?.","name":"socket?","namespace":"Pathname","path":"Pathname#socket?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#split":{"description":"Returns the #dirname and the #basename in an Array.\n\nSee File.split.","name":"split","namespace":"Pathname","path":"Pathname#split","type":"instance_method","visibility":"public"},"Pathname#split_names":{"description":"split_names(path) -> prefix, [name, ...]","name":"split_names","namespace":"Pathname","path":"Pathname#split_names","type":"instance_method","visibility":"private"},"Pathname#stat":{"description":"Returns a File::Stat object.\n\nSee File.stat.","name":"stat","namespace":"Pathname","path":"Pathname#stat","type":"instance_method","visibility":"public"},"Pathname#sticky?":{"description":"See FileTest.sticky?.","name":"sticky?","namespace":"Pathname","path":"Pathname#sticky?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#sub":{"description":"Return a pathname which is substituted by String#sub.\n\npath1 = Pathname.new('/usr/bin/perl')\npath1.sub('perl', 'ruby')\n    #=> #<Pathname:/usr/bin/ruby>","name":"sub","namespace":"Pathname","path":"Pathname#sub","type":"instance_method","visibility":"public"},"Pathname#sub_ext":{"description":"Return a pathname with +repl+ added as a suffix to the basename.\n\nIf self has no extension part, +repl+ is appended.\n\nPathname.new('/usr/bin/shutdown').sub_ext('.rb')\n    #=> #<Pathname:/usr/bin/shutdown.rb>","name":"sub_ext","namespace":"Pathname","path":"Pathname#sub_ext","type":"instance_method","visibility":"public"},"Pathname#symlink?":{"description":"See FileTest.symlink?.","name":"symlink?","namespace":"Pathname","path":"Pathname#symlink?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#sysopen":{"description":"See IO.sysopen.","name":"sysopen","namespace":"Pathname","path":"Pathname#sysopen","type":"instance_method","visibility":"public"},"Pathname#taint":{"description":"Taints this Pathname.\n\nSee Object.taint.","name":"taint","namespace":"Pathname","path":"Pathname#taint","type":"instance_method","visibility":"public"},"Pathname#to_path":{"description":"Return the path as a String.\n\nto_path is implemented so Pathname objects are usable with File.open, etc.","name":"to_path","namespace":"Pathname","path":"Pathname#to_path","type":"instance_method","visibility":"public"},"Pathname#to_s":{"description":"Return the path as a String.\n\nto_path is implemented so Pathname objects are usable with File.open, etc.","name":"to_s","namespace":"Pathname","path":"Pathname#to_s","type":"instance_method","visibility":"public"},"Pathname#truncate":{"description":"Truncates the file to +length+ bytes.\n\nSee File.truncate.","name":"truncate","namespace":"Pathname","path":"Pathname#truncate","type":"instance_method","visibility":"public"},"Pathname#unlink":{"description":"Removes a file or directory, using File.unlink if +self+ is a file, or\nDir.unlink as necessary.","name":"unlink","namespace":"Pathname","path":"Pathname#unlink","type":"instance_method","visibility":"public"},"Pathname#untaint":{"description":"Untaints this Pathname.\n\nSee Object.untaint.","name":"untaint","namespace":"Pathname","path":"Pathname#untaint","type":"instance_method","visibility":"public"},"Pathname#utime":{"description":"Update the access and modification times of the file.\n\nSee File.utime.","name":"utime","namespace":"Pathname","path":"Pathname#utime","type":"instance_method","visibility":"public"},"Pathname#world_readable?":{"description":"See FileTest.world_readable?.","name":"world_readable?","namespace":"Pathname","path":"Pathname#world_readable?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#world_writable?":{"description":"See FileTest.world_writable?.","name":"world_writable?","namespace":"Pathname","path":"Pathname#world_writable?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#writable?":{"description":"See FileTest.writable?.","name":"writable?","namespace":"Pathname","path":"Pathname#writable?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#writable_real?":{"description":"See FileTest.writable_real?.","name":"writable_real?","namespace":"Pathname","path":"Pathname#writable_real?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname#write":{"description":"Writes +contents+ to the file.\n\nSee IO.write.","name":"write","namespace":"Pathname","path":"Pathname#write","type":"instance_method","visibility":"public"},"Pathname#zero?":{"description":"See FileTest.zero?.","name":"zero?","namespace":"Pathname","path":"Pathname#zero?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Pathname.getwd":{"description":"Returns the current working directory as a Pathname.\n\nPathname.getwd\n    #=> #<Pathname:/home/zzak/projects/ruby>\n\nSee Dir.getwd.","name":"getwd","namespace":"Pathname","path":"Pathname.getwd","type":"class_method","visibility":"public"},"Pathname.glob":{"description":"Returns or yields Pathname objects.\n\n Pathname.glob(\"config/\" \"*.rb\")\n#=> [#<Pathname:config/environment.rb>, #<Pathname:config/routes.rb>, ..]\n\nSee Dir.glob.","name":"glob","namespace":"Pathname","path":"Pathname.glob","type":"class_method","visibility":"public"},"Pathname.pwd":{"description":"Returns the current working directory as a Pathname.\n\nPathname.getwd\n    #=> #<Pathname:/home/zzak/projects/ruby>\n\nSee Dir.getwd.","name":"pwd","namespace":"Pathname","path":"Pathname.pwd","type":"class_method","visibility":"public"},"Pathname::SAME_PATHS":{"description":"","name":"SAME_PATHS","namespace":"Pathname","path":"Pathname::SAME_PATHS","type":"constant","return":null,"visibility":"public"},"Pathname::SEPARATOR_LIST":{"description":"","name":"SEPARATOR_LIST","namespace":"Pathname","path":"Pathname::SEPARATOR_LIST","type":"constant","return":null,"visibility":"public"},"Pathname::SEPARATOR_PAT":{"description":"","name":"SEPARATOR_PAT","namespace":"Pathname","path":"Pathname::SEPARATOR_PAT","type":"constant","return":null,"visibility":"public"},"Pathname::TO_PATH":{"description":"to_path is implemented so Pathname objects are usable with File.open, etc.","name":"TO_PATH","namespace":"Pathname","path":"Pathname::TO_PATH","type":"constant","return":null,"visibility":"public"},"Readline":{"description":"The Readline module provides interface for GNU Readline.\nThis module defines a number of methods to facilitate completion\nand accesses input history from the Ruby interpreter.\nThis module supported Edit Line(libedit) too.\nlibedit is compatible with GNU Readline.\n\nGNU Readline:: http://www.gnu.org/directory/readline.html\nlibedit::      http://www.thrysoee.dk/editline/\n\nReads one inputted line with line edit by Readline.readline method.\nAt this time, the facilitatation completion and the key\nbind like Emacs can be operated like GNU Readline.\n\n  require \"readline\"\n  while buf = Readline.readline(\"> \", true)\n    p buf\n  end\n\nThe content that the user input can be recorded to the history.\nThe history can be accessed by Readline::HISTORY constant.\n\n  require \"readline\"\n  while buf = Readline.readline(\"> \", true)\n    p Readline::HISTORY.to_a\n    print(\"-> \", buf, \"\\n\")\n  end\n\nDocumented by Kouji Takao <kouji dot takao at gmail dot com>.","name":"Readline","namespace":"","path":"Readline","type":"class","visibility":"public"},"Ripper":{"description":"Ripper is a Ruby script parser.\n\nYou can get information from the parser with event-based style.\nInformation such as abstract syntax trees or simple lexical analysis of the\nRuby program.\n\n== Usage\n\nRipper provides an easy interface for parsing your program into a symbolic\nexpression tree (or S-expression).\n\nUnderstanding the output of the parser may come as a challenge, it's\nrecommended you use PP to format the output for legibility.\n\n  require 'ripper'\n  require 'pp'\n\n  pp Ripper.sexp('def hello(world) \"Hello, #{world}!\"; end')\n    #=> [:program,\n         [[:def,\n           [:@ident, \"hello\", [1, 4]],\n           [:paren,\n            [:params, [[:@ident, \"world\", [1, 10]]], nil, nil, nil, nil, nil, nil]],\n           [:bodystmt,\n            [[:string_literal,\n              [:string_content,\n               [:@tstring_content, \"Hello, \", [1, 18]],\n               [:string_embexpr, [[:var_ref, [:@ident, \"world\", [1, 27]]]]],\n               [:@tstring_content, \"!\", [1, 33]]]]],\n            nil,\n            nil,\n            nil]]]]\n\nYou can see in the example above, the expression starts with +:program+.\n\nFrom here, a method definition at +:def+, followed by the method's identifier\n<code>:@ident</code>. After the method's identifier comes the parentheses\n+:paren+ and the method parameters under +:params+.\n\nNext is the method body, starting at +:bodystmt+ (+stmt+ meaning statement),\nwhich contains the full definition of the method.\n\nIn our case, we're simply returning a String, so next we have the\n+:string_literal+ expression.\n\nWithin our +:string_literal+ you'll notice two <code>@tstring_content</code>,\nthis is the literal part for <code>Hello, </code> and <code>!</code>. Between\nthe two <code>@tstring_content</code> statements is a +:string_embexpr+,\nwhere _embexpr_ is an embedded expression. Our expression consists of a local\nvariable, or +var_ref+, with the identifier (<code>@ident</code>) of +world+.\n\n== Resources\n\n* {Ruby Inside}[http://www.rubyinside.com/using-ripper-to-see-how-ruby-is-parsing-your-code-5270.html]\n\n== Requirements\n\n* ruby 1.9 (support CVS HEAD only)\n* bison 1.28 or later (Other yaccs do not work)\n\n== License\n\n  Ruby License.\n\n                                                Minero Aoki\n                                        aamine@loveruby.net\n                                      http://i.loveruby.net","name":"Ripper","namespace":"","path":"Ripper","type":"class","visibility":"public"},"Ripper#column":{"description":"Return column number of current parsing line.\nThis number starts from 0.","name":"column","namespace":"Ripper","path":"Ripper#column","type":"instance_method","visibility":"public"},"Ripper#compile_error":{"description":"This method is called when the parser found syntax error.","name":"compile_error","namespace":"Ripper","path":"Ripper#compile_error","type":"instance_method","visibility":"private"},"Ripper#encoding":{"description":"Return encoding of the source.","name":"encoding","namespace":"Ripper","path":"Ripper#encoding","type":"instance_method","visibility":"public"},"Ripper#end_seen?":{"description":"Return true if parsed source ended by +\\_\\_END\\_\\_+.","name":"end_seen?","namespace":"Ripper","path":"Ripper#end_seen?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Ripper#error?":{"description":"Return true if parsed source has errors.","name":"error?","namespace":"Ripper","path":"Ripper#error?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Ripper#filename":{"description":"Return current parsing filename.","name":"filename","namespace":"Ripper","path":"Ripper#filename","type":"instance_method","visibility":"public"},"Ripper#initialize":{"description":"Create a new Ripper object.\n_src_ must be a String, an IO, or an Object which has #gets method.\n\nThis method does not starts parsing.\nSee also Ripper#parse and Ripper.parse.","name":"initialize","namespace":"Ripper","path":"Ripper#initialize","type":"instance_method","visibility":"public"},"Ripper#lineno":{"description":"Return line number of current parsing line.\nThis number starts from 1.","name":"lineno","namespace":"Ripper","path":"Ripper#lineno","type":"instance_method","visibility":"public"},"Ripper#parse":{"description":"Start parsing and returns the value of the root action.","name":"parse","namespace":"Ripper","path":"Ripper#parse","type":"instance_method","visibility":"public"},"Ripper#warn":{"description":"This method is called when weak warning is produced by the parser.\n+fmt+ and +args+ is printf style.","name":"warn","namespace":"Ripper","path":"Ripper#warn","type":"instance_method","visibility":"private"},"Ripper#warning":{"description":"This method is called when strong warning is produced by the parser.\n+fmt+ and +args+ is printf style.","name":"warning","namespace":"Ripper","path":"Ripper#warning","type":"instance_method","visibility":"private"},"Ripper#yydebug":{"description":"Get yydebug.","name":"yydebug","namespace":"Ripper","path":"Ripper#yydebug","type":"instance_method","visibility":"public"},"Ripper#yydebug=":{"description":"Set yydebug.","name":"yydebug=","namespace":"Ripper","path":"Ripper#yydebug=","type":"instance_method","visibility":"public"},"Ripper.lex":{"description":"Tokenizes the Ruby program and returns an array of an array,\nwhich is formatted like <code>[[lineno, column], type, token]</code>.\n\n  require 'ripper'\n  require 'pp'\n\n  pp Ripper.lex(\"def m(a) nil end\")\n    #=> [[[1,  0], :on_kw,     \"def\"],\n         [[1,  3], :on_sp,     \" \"  ],\n         [[1,  4], :on_ident,  \"m\"  ],\n         [[1,  5], :on_lparen, \"(\"  ],\n         [[1,  6], :on_ident,  \"a\"  ],\n         [[1,  7], :on_rparen, \")\"  ],\n         [[1,  8], :on_sp,     \" \"  ],\n         [[1,  9], :on_kw,     \"nil\"],\n         [[1, 12], :on_sp,     \" \"  ],\n         [[1, 13], :on_kw,     \"end\"]]","name":"lex","namespace":"Ripper","path":"Ripper.lex","type":"class_method","visibility":"public"},"Ripper.parse":{"description":"Parses the given Ruby program read from +src+.\n+src+ must be a String or an IO or a object with a #gets method.","name":"parse","namespace":"Ripper","path":"Ripper.parse","type":"class_method","visibility":"public"},"Ripper.sexp":{"description":"[EXPERIMENTAL]\nParses +src+ and create S-exp tree.\nReturns more readable tree rather than Ripper.sexp_raw.\nThis method is mainly for developer use.\n\n  require 'ripper'\n  require 'pp'\n\n  pp Ripper.sexp(\"def m(a) nil end\")\n    #=> [:program,\n         [[:def,\n          [:@ident, \"m\", [1, 4]],\n          [:paren, [:params, [[:@ident, \"a\", [1, 6]]], nil, nil, nil, nil]],\n          [:bodystmt, [[:var_ref, [:@kw, \"nil\", [1, 9]]]], nil, nil, nil]]]]","name":"sexp","namespace":"Ripper","path":"Ripper.sexp","type":"class_method","visibility":"public"},"Ripper.sexp_raw":{"description":"[EXPERIMENTAL]\nParses +src+ and create S-exp tree.\nThis method is mainly for developer use.\n\n  require 'ripper'\n  require 'pp'\n\n  pp Ripper.sexp_raw(\"def m(a) nil end\")\n    #=> [:program,\n         [:stmts_add,\n          [:stmts_new],\n          [:def,\n           [:@ident, \"m\", [1, 4]],\n           [:paren, [:params, [[:@ident, \"a\", [1, 6]]], nil, nil, nil]],\n           [:bodystmt,\n            [:stmts_add, [:stmts_new], [:var_ref, [:@kw, \"nil\", [1, 9]]]],\n            nil,\n            nil,\n            nil]]]]","name":"sexp_raw","namespace":"Ripper","path":"Ripper.sexp_raw","type":"class_method","visibility":"public"},"Ripper.slice":{"description":"[EXPERIMENTAL]\nParses +src+ and return a string which was matched to +pattern+.\n+pattern+ should be described as Regexp.\n\n  require 'ripper'\n\n  p Ripper.slice('def m(a) nil end', 'ident')                   #=> \"m\"\n  p Ripper.slice('def m(a) nil end', '[ident lparen rparen]+')  #=> \"m(a)\"\n  p Ripper.slice(\"<<EOS\\nstring\\nEOS\",\n                 'heredoc_beg nl $(tstring_content*) heredoc_end', 1)\n      #=> \"string\\n\"","name":"slice","namespace":"Ripper","path":"Ripper.slice","type":"class_method","visibility":"public"},"Ripper.token_match":{"description":":nodoc:","name":"token_match","namespace":"Ripper","path":"Ripper.token_match","type":"class_method","visibility":"public"},"Ripper.tokenize":{"description":"Tokenizes the Ruby program and returns an array of strings.\n\n  p Ripper.tokenize(\"def m(a) nil end\")\n     # => [\"def\", \" \", \"m\", \"(\", \"a\", \")\", \" \", \"nil\", \" \", \"end\"]","name":"tokenize","namespace":"Ripper","path":"Ripper.tokenize","type":"class_method","visibility":"public"},"Ripper::EVENTS":{"description":"This array contains name of all ripper events.","name":"EVENTS","namespace":"Ripper","path":"Ripper::EVENTS","type":"constant","return":null,"visibility":"public"},"Ripper::Filter":{"description":"This class handles only scanner events,\nwhich are dispatched in the 'right' order (same with input).","name":"Filter","namespace":"Ripper","path":"Ripper::Filter","type":"class","visibility":"public"},"Ripper::Filter#column":{"description":"The column number of the current token.\nThis value starts from 0.\nThis method is valid only in event handlers.","name":"column","namespace":"Ripper::Filter","path":"Ripper::Filter#column","type":"instance_method","visibility":"public"},"Ripper::Filter#filename":{"description":"The file name of the input.","name":"filename","namespace":"Ripper::Filter","path":"Ripper::Filter#filename","type":"instance_method","visibility":"public"},"Ripper::Filter#initialize":{"description":"Creates a new Ripper::Filter instance, passes parameters +src+,\n+filename+, and +lineno+ to Ripper::Lexer.new\n\nThe lexer is for internal use only.","name":"initialize","namespace":"Ripper::Filter","path":"Ripper::Filter#initialize","type":"instance_method","visibility":"public","return":[["Filter"],"a new instance of Filter"]},"Ripper::Filter#lineno":{"description":"The line number of the current token.\nThis value starts from 1.\nThis method is valid only in event handlers.","name":"lineno","namespace":"Ripper::Filter","path":"Ripper::Filter#lineno","type":"instance_method","visibility":"public"},"Ripper::Filter#on_default":{"description":"This method is called when some event handler is undefined.\n+event+ is :on_XXX, +token+ is the scanned token, and +data+ is a data\naccumulator.\n\nThe return value of this method is passed to the next event handler (as\nof Enumerable#inject).","name":"on_default","namespace":"Ripper::Filter","path":"Ripper::Filter#on_default","type":"instance_method","visibility":"private"},"Ripper::Filter#parse":{"description":"Starts the parser.\n+init+ is a data accumulator and is passed to the next event handler (as\nof Enumerable#inject).","name":"parse","namespace":"Ripper::Filter","path":"Ripper::Filter#parse","type":"instance_method","visibility":"public"},"Ripper::Lexer":{"description":":nodoc: internal use only","name":"Lexer","namespace":"Ripper","path":"Ripper::Lexer","type":"class","visibility":"public"},"Ripper::Lexer#lex":{"description":"","name":"lex","namespace":"Ripper::Lexer","path":"Ripper::Lexer#lex","type":"instance_method","visibility":"public"},"Ripper::Lexer#parse":{"description":"","name":"parse","namespace":"Ripper::Lexer","path":"Ripper::Lexer#parse","type":"instance_method","visibility":"public"},"Ripper::Lexer#tokenize":{"description":"","name":"tokenize","namespace":"Ripper::Lexer","path":"Ripper::Lexer#tokenize","type":"instance_method","visibility":"public"},"Ripper::PARSER_EVENTS":{"description":"This array contains name of parser events.","name":"PARSER_EVENTS","namespace":"Ripper","path":"Ripper::PARSER_EVENTS","type":"constant","return":null,"visibility":"public"},"Ripper::SCANNER_EVENTS":{"description":"This array contains name of scanner events.","name":"SCANNER_EVENTS","namespace":"Ripper","path":"Ripper::SCANNER_EVENTS","type":"constant","return":null,"visibility":"public"},"Ripper::SexpBuilder":{"description":":nodoc:","name":"SexpBuilder","namespace":"Ripper","path":"Ripper::SexpBuilder","type":"class","visibility":"public"},"Ripper::SexpBuilderPP":{"description":":nodoc:","name":"SexpBuilderPP","namespace":"Ripper","path":"Ripper::SexpBuilderPP","type":"class","visibility":"public"},"Ripper::TokenPattern":{"description":":nodoc:","name":"TokenPattern","namespace":"Ripper","path":"Ripper::TokenPattern","type":"class","visibility":"public"},"Ripper::TokenPattern#compile":{"description":"","name":"compile","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern#compile","type":"instance_method","visibility":"private"},"Ripper::TokenPattern#initialize":{"description":"","name":"initialize","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern#initialize","type":"instance_method","visibility":"public","return":[["TokenPattern"],"a new instance of TokenPattern"]},"Ripper::TokenPattern#map_token":{"description":"","name":"map_token","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern#map_token","type":"instance_method","visibility":"private"},"Ripper::TokenPattern#map_tokens":{"description":"","name":"map_tokens","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern#map_tokens","type":"instance_method","visibility":"private"},"Ripper::TokenPattern#match":{"description":"","name":"match","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern#match","type":"instance_method","visibility":"public"},"Ripper::TokenPattern#match_list":{"description":"","name":"match_list","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern#match_list","type":"instance_method","visibility":"public"},"Ripper::TokenPattern.compile":{"description":"","name":"compile","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern.compile","type":"class_method","visibility":"public"},"Ripper::TokenPattern::CompileError":{"description":":nodoc:","name":"CompileError","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern::CompileError","type":"class","visibility":"public"},"Ripper::TokenPattern::Error":{"description":":nodoc:","name":"Error","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern::Error","type":"class","visibility":"public"},"Ripper::TokenPattern::MAP":{"description":"","name":"MAP","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern::MAP","type":"constant","return":null,"visibility":"private"},"Ripper::TokenPattern::MatchData":{"description":":nodoc:","name":"MatchData","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern::MatchData","type":"class","visibility":"public"},"Ripper::TokenPattern::MatchData#initialize":{"description":"","name":"initialize","namespace":"Ripper::TokenPattern::MatchData","path":"Ripper::TokenPattern::MatchData#initialize","type":"instance_method","visibility":"public","return":[["MatchData"],"a new instance of MatchData"]},"Ripper::TokenPattern::MatchData#match":{"description":"","name":"match","namespace":"Ripper::TokenPattern::MatchData","path":"Ripper::TokenPattern::MatchData#match","type":"instance_method","visibility":"private"},"Ripper::TokenPattern::MatchData#string":{"description":"","name":"string","namespace":"Ripper::TokenPattern::MatchData","path":"Ripper::TokenPattern::MatchData#string","type":"instance_method","visibility":"public"},"Ripper::TokenPattern::MatchError":{"description":":nodoc:","name":"MatchError","namespace":"Ripper::TokenPattern","path":"Ripper::TokenPattern::MatchError","type":"class","visibility":"public"},"Ripper::Version":{"description":"version of Ripper","name":"Version","namespace":"Ripper","path":"Ripper::Version","type":"constant","return":null,"visibility":"public"},"SocketError":{"description":"","name":"SocketError","namespace":"","path":"SocketError","type":"class","visibility":"public"},"Addrinfo":{"description":"","name":"Addrinfo","namespace":"","path":"Addrinfo","type":"class","visibility":"public"},"Addrinfo#afamily":{"description":"returns the address family as an integer.\n\n  Addrinfo.tcp(\"localhost\", 80).afamily == Socket::AF_INET #=> true","name":"afamily","namespace":"Addrinfo","path":"Addrinfo#afamily","type":"instance_method","visibility":"public"},"Addrinfo#bind":{"description":"creates a socket bound to self.\n\nIf a block is given, it is called with the socket and the value of the block is returned.\nThe socket is returned otherwise.\n\n  Addrinfo.udp(\"0.0.0.0\", 9981).bind {|s|\n    s.local_address.connect {|s| s.send \"hello\", 0 }\n    p s.recv(10) #=> \"hello\"\n  }","name":"bind","namespace":"Addrinfo","path":"Addrinfo#bind","type":"instance_method","visibility":"public"},"Addrinfo#canonname":{"description":"returns the canonical name as an string.\n\nnil is returned if no canonical name.\n\nThe canonical name is set by Addrinfo.getaddrinfo when AI_CANONNAME is specified.\n\n  list = Addrinfo.getaddrinfo(\"www.ruby-lang.org\", 80, :INET, :STREAM, nil, Socket::AI_CANONNAME)\n  p list[0] #=> #<Addrinfo: 221.186.184.68:80 TCP carbon.ruby-lang.org (www.ruby-lang.org)>\n  p list[0].canonname #=> \"carbon.ruby-lang.org\"","name":"canonname","namespace":"Addrinfo","path":"Addrinfo#canonname","type":"instance_method","visibility":"public"},"Addrinfo#connect":{"description":":call-seq:\n  addrinfo.connect([opts]) {|socket| ... }\n  addrinfo.connect([opts])\n\ncreates a socket connected to the address of self.\n\nThe optional argument _opts_ is options represented by a hash.\n_opts_ may have following options:\n\n[:timeout] specify the timeout in seconds.\n\nIf a block is given, it is called with the socket and the value of the block is returned.\nThe socket is returned otherwise.\n\n  Addrinfo.tcp(\"www.ruby-lang.org\", 80).connect {|s|\n    s.print \"GET / HTTP/1.0\\r\\nHost: www.ruby-lang.org\\r\\n\\r\\n\"\n    puts s.read\n  }","name":"connect","namespace":"Addrinfo","path":"Addrinfo#connect","type":"instance_method","visibility":"public"},"Addrinfo#connect_from":{"description":":call-seq:\n  addrinfo.connect_from([local_addr_args], [opts]) {|socket| ... }\n  addrinfo.connect_from([local_addr_args], [opts])\n\ncreates a socket connected to the address of self.\n\nIf one or more arguments given as _local_addr_args_,\nit is used as the local address of the socket.\n_local_addr_args_ is given for family_addrinfo to obtain actual address.\n\nIf _local_addr_args_ is not given, the local address of the socket is not bound.\n\nThe optional last argument _opts_ is options represented by a hash.\n_opts_ may have following options:\n\n[:timeout] specify the timeout in seconds.\n\nIf a block is given, it is called with the socket and the value of the block is returned.\nThe socket is returned otherwise.\n\n  Addrinfo.tcp(\"www.ruby-lang.org\", 80).connect_from(\"0.0.0.0\", 4649) {|s|\n    s.print \"GET / HTTP/1.0\\r\\nHost: www.ruby-lang.org\\r\\n\\r\\n\"\n    puts s.read\n  }\n\n  # Addrinfo object can be taken for the argument.\n  Addrinfo.tcp(\"www.ruby-lang.org\", 80).connect_from(Addrinfo.tcp(\"0.0.0.0\", 4649)) {|s|\n    s.print \"GET / HTTP/1.0\\r\\nHost: www.ruby-lang.org\\r\\n\\r\\n\"\n    puts s.read\n  }","name":"connect_from","namespace":"Addrinfo","path":"Addrinfo#connect_from","type":"instance_method","visibility":"public"},"Addrinfo#connect_internal":{"description":"creates a new Socket connected to the address of +local_addrinfo+.\n\nIf _local_addrinfo_ is nil, the address of the socket is not bound.\n\nThe _timeout_ specify the seconds for timeout.\nErrno::ETIMEDOUT is raised when timeout occur.\n\nIf a block is given the created socket is yielded for each address.","name":"connect_internal","namespace":"Addrinfo","path":"Addrinfo#connect_internal","type":"instance_method","visibility":"private"},"Addrinfo#connect_to":{"description":":call-seq:\n  addrinfo.connect_to([remote_addr_args], [opts]) {|socket| ... }\n  addrinfo.connect_to([remote_addr_args], [opts])\n\ncreates a socket connected to _remote_addr_args_ and bound to self.\n\nThe optional last argument _opts_ is options represented by a hash.\n_opts_ may have following options:\n\n[:timeout] specify the timeout in seconds.\n\nIf a block is given, it is called with the socket and the value of the block is returned.\nThe socket is returned otherwise.\n\n  Addrinfo.tcp(\"0.0.0.0\", 4649).connect_to(\"www.ruby-lang.org\", 80) {|s|\n    s.print \"GET / HTTP/1.0\\r\\nHost: www.ruby-lang.org\\r\\n\\r\\n\"\n    puts s.read\n  }","name":"connect_to","namespace":"Addrinfo","path":"Addrinfo#connect_to","type":"instance_method","visibility":"public"},"Addrinfo#family_addrinfo":{"description":"creates an Addrinfo object from the arguments.\n\nThe arguments are interpreted as similar to self.\n\n  Addrinfo.tcp(\"0.0.0.0\", 4649).family_addrinfo(\"www.ruby-lang.org\", 80)\n  #=> #<Addrinfo: 221.186.184.68:80 TCP (www.ruby-lang.org:80)>\n\n  Addrinfo.unix(\"/tmp/sock\").family_addrinfo(\"/tmp/sock2\")\n  #=> #<Addrinfo: /tmp/sock2 SOCK_STREAM>","name":"family_addrinfo","namespace":"Addrinfo","path":"Addrinfo#family_addrinfo","type":"instance_method","visibility":"public"},"Addrinfo#getnameinfo":{"description":"returns nodename and service as a pair of strings.\nThis converts struct sockaddr in addrinfo to textual representation.\n\nflags should be bitwise OR of Socket::NI_??? constants.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).getnameinfo #=> [\"localhost\", \"www\"]\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).getnameinfo(Socket::NI_NUMERICSERV)\n  #=> [\"localhost\", \"80\"]","name":"getnameinfo","namespace":"Addrinfo","path":"Addrinfo#getnameinfo","type":"instance_method","visibility":"public"},"Addrinfo#initialize":{"description":"returns a new instance of Addrinfo.\nThe instance contains sockaddr, family, socktype, protocol.\nsockaddr means struct sockaddr which can be used for connect(2), etc.\nfamily, socktype and protocol are integers which is used for arguments of socket(2).\n\nsockaddr is specified as an array or a string.\nThe array should be compatible to the value of IPSocket#addr or UNIXSocket#addr.\nThe string should be struct sockaddr as generated by\nSocket.sockaddr_in or Socket.unpack_sockaddr_un.\n\nsockaddr examples:\n- [\"AF_INET\", 46102, \"localhost.localdomain\", \"127.0.0.1\"]\n- [\"AF_INET6\", 42304, \"ip6-localhost\", \"::1\"]\n- [\"AF_UNIX\", \"/tmp/sock\"]\n- Socket.sockaddr_in(\"smtp\", \"2001:DB8::1\")\n- Socket.sockaddr_in(80, \"172.18.22.42\")\n- Socket.sockaddr_in(80, \"www.ruby-lang.org\")\n- Socket.sockaddr_un(\"/tmp/sock\")\n\nIn an AF_INET/AF_INET6 sockaddr array, the 4th element,\nnumeric IP address, is used to construct socket address in the Addrinfo instance.\nIf the 3rd element, textual host name, is non-nil, it is also recorded but used only for Addrinfo#inspect.\n\nfamily is specified as an integer to specify the protocol family such as Socket::PF_INET.\nIt can be a symbol or a string which is the constant name\nwith or without PF_ prefix such as :INET, :INET6, :UNIX, \"PF_INET\", etc.\nIf omitted, PF_UNSPEC is assumed.\n\nsocktype is specified as an integer to specify the socket type such as Socket::SOCK_STREAM.\nIt can be a symbol or a string which is the constant name\nwith or without SOCK_ prefix such as :STREAM, :DGRAM, :RAW, \"SOCK_STREAM\", etc.\nIf omitted, 0 is assumed.\n\nprotocol is specified as an integer to specify the protocol such as Socket::IPPROTO_TCP.\nIt must be an integer, unlike family and socktype.\nIf omitted, 0 is assumed.\nNote that 0 is reasonable value for most protocols, except raw socket.","name":"initialize","namespace":"Addrinfo","path":"Addrinfo#initialize","type":"instance_method","visibility":"public"},"Addrinfo#inspect":{"description":"returns a string which shows addrinfo in human-readable form.\n\n  Addrinfo.tcp(\"localhost\", 80).inspect #=> \"#<Addrinfo: 127.0.0.1:80 TCP (localhost)>\"\n  Addrinfo.unix(\"/tmp/sock\").inspect    #=> \"#<Addrinfo: /tmp/sock SOCK_STREAM>\"","name":"inspect","namespace":"Addrinfo","path":"Addrinfo#inspect","type":"instance_method","visibility":"public"},"Addrinfo#inspect_sockaddr":{"description":"returns a string which shows the sockaddr in _addrinfo_ with human-readable form.\n\n  Addrinfo.tcp(\"localhost\", 80).inspect_sockaddr     #=> \"127.0.0.1:80\"\n  Addrinfo.tcp(\"ip6-localhost\", 80).inspect_sockaddr #=> \"[::1]:80\"\n  Addrinfo.unix(\"/tmp/sock\").inspect_sockaddr        #=> \"/tmp/sock\"","name":"inspect_sockaddr","namespace":"Addrinfo","path":"Addrinfo#inspect_sockaddr","type":"instance_method","visibility":"public"},"Addrinfo#ip?":{"description":"returns true if addrinfo is internet (IPv4/IPv6) address.\nreturns false otherwise.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).ip? #=> true\n  Addrinfo.tcp(\"::1\", 80).ip?       #=> true\n  Addrinfo.unix(\"/tmp/sock\").ip?    #=> false","name":"ip?","namespace":"Addrinfo","path":"Addrinfo#ip?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ip_address":{"description":"Returns the IP address as a string.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).ip_address    #=> \"127.0.0.1\"\n  Addrinfo.tcp(\"::1\", 80).ip_address          #=> \"::1\"","name":"ip_address","namespace":"Addrinfo","path":"Addrinfo#ip_address","type":"instance_method","visibility":"public"},"Addrinfo#ip_port":{"description":"Returns the port number as an integer.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).ip_port    #=> 80\n  Addrinfo.tcp(\"::1\", 80).ip_port          #=> 80","name":"ip_port","namespace":"Addrinfo","path":"Addrinfo#ip_port","type":"instance_method","visibility":"public"},"Addrinfo#ip_unpack":{"description":"Returns the IP address and port number as 2-element array.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).ip_unpack    #=> [\"127.0.0.1\", 80]\n  Addrinfo.tcp(\"::1\", 80).ip_unpack          #=> [\"::1\", 80]","name":"ip_unpack","namespace":"Addrinfo","path":"Addrinfo#ip_unpack","type":"instance_method","visibility":"public"},"Addrinfo#ipv4?":{"description":"returns true if addrinfo is IPv4 address.\nreturns false otherwise.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).ipv4? #=> true\n  Addrinfo.tcp(\"::1\", 80).ipv4?       #=> false\n  Addrinfo.unix(\"/tmp/sock\").ipv4?    #=> false","name":"ipv4?","namespace":"Addrinfo","path":"Addrinfo#ipv4?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv4_loopback?":{"description":"Returns true for IPv4 loopback address (127.0.0.0/8).\nIt returns false otherwise.","name":"ipv4_loopback?","namespace":"Addrinfo","path":"Addrinfo#ipv4_loopback?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv4_multicast?":{"description":"Returns true for IPv4 multicast address (224.0.0.0/4).\nIt returns false otherwise.","name":"ipv4_multicast?","namespace":"Addrinfo","path":"Addrinfo#ipv4_multicast?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv4_private?":{"description":"Returns true for IPv4 private address (10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16).\nIt returns false otherwise.","name":"ipv4_private?","namespace":"Addrinfo","path":"Addrinfo#ipv4_private?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6?":{"description":"returns true if addrinfo is IPv6 address.\nreturns false otherwise.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).ipv6? #=> false\n  Addrinfo.tcp(\"::1\", 80).ipv6?       #=> true\n  Addrinfo.unix(\"/tmp/sock\").ipv6?    #=> false","name":"ipv6?","namespace":"Addrinfo","path":"Addrinfo#ipv6?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_linklocal?":{"description":"Returns true for IPv6 link local address (ff80::/10).\nIt returns false otherwise.","name":"ipv6_linklocal?","namespace":"Addrinfo","path":"Addrinfo#ipv6_linklocal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_loopback?":{"description":"Returns true for IPv6 loopback address (::1).\nIt returns false otherwise.","name":"ipv6_loopback?","namespace":"Addrinfo","path":"Addrinfo#ipv6_loopback?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_mc_global?":{"description":"Returns true for IPv6 multicast global scope address.\nIt returns false otherwise.","name":"ipv6_mc_global?","namespace":"Addrinfo","path":"Addrinfo#ipv6_mc_global?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_mc_linklocal?":{"description":"Returns true for IPv6 multicast link-local scope address.\nIt returns false otherwise.","name":"ipv6_mc_linklocal?","namespace":"Addrinfo","path":"Addrinfo#ipv6_mc_linklocal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_mc_nodelocal?":{"description":"Returns true for IPv6 multicast node-local scope address.\nIt returns false otherwise.","name":"ipv6_mc_nodelocal?","namespace":"Addrinfo","path":"Addrinfo#ipv6_mc_nodelocal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_mc_orglocal?":{"description":"Returns true for IPv6 multicast organization-local scope address.\nIt returns false otherwise.","name":"ipv6_mc_orglocal?","namespace":"Addrinfo","path":"Addrinfo#ipv6_mc_orglocal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_mc_sitelocal?":{"description":"Returns true for IPv6 multicast site-local scope address.\nIt returns false otherwise.","name":"ipv6_mc_sitelocal?","namespace":"Addrinfo","path":"Addrinfo#ipv6_mc_sitelocal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_multicast?":{"description":"Returns true for IPv6 multicast address (ff00::/8).\nIt returns false otherwise.","name":"ipv6_multicast?","namespace":"Addrinfo","path":"Addrinfo#ipv6_multicast?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_sitelocal?":{"description":"Returns true for IPv6 site local address (ffc0::/10).\nIt returns false otherwise.","name":"ipv6_sitelocal?","namespace":"Addrinfo","path":"Addrinfo#ipv6_sitelocal?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_to_ipv4":{"description":"Returns IPv4 address of IPv4 mapped/compatible IPv6 address.\nIt returns nil if +self+ is not IPv4 mapped/compatible IPv6 address.\n\n  Addrinfo.ip(\"::192.0.2.3\").ipv6_to_ipv4      #=> #<Addrinfo: 192.0.2.3>\n  Addrinfo.ip(\"::ffff:192.0.2.3\").ipv6_to_ipv4 #=> #<Addrinfo: 192.0.2.3>\n  Addrinfo.ip(\"::1\").ipv6_to_ipv4              #=> nil\n  Addrinfo.ip(\"192.0.2.3\").ipv6_to_ipv4        #=> nil\n  Addrinfo.unix(\"/tmp/sock\").ipv6_to_ipv4      #=> nil","name":"ipv6_to_ipv4","namespace":"Addrinfo","path":"Addrinfo#ipv6_to_ipv4","type":"instance_method","visibility":"public"},"Addrinfo#ipv6_unique_local?":{"description":"Returns true for IPv6 unique local address (fc00::/7, RFC4193).\nIt returns false otherwise.","name":"ipv6_unique_local?","namespace":"Addrinfo","path":"Addrinfo#ipv6_unique_local?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_unspecified?":{"description":"Returns true for IPv6 unspecified address (::).\nIt returns false otherwise.","name":"ipv6_unspecified?","namespace":"Addrinfo","path":"Addrinfo#ipv6_unspecified?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_v4compat?":{"description":"Returns true for IPv4-compatible IPv6 address (::/80).\nIt returns false otherwise.","name":"ipv6_v4compat?","namespace":"Addrinfo","path":"Addrinfo#ipv6_v4compat?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#ipv6_v4mapped?":{"description":"Returns true for IPv4-mapped IPv6 address (::ffff:0:0/80).\nIt returns false otherwise.","name":"ipv6_v4mapped?","namespace":"Addrinfo","path":"Addrinfo#ipv6_v4mapped?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#listen":{"description":"creates a listening socket bound to self.","name":"listen","namespace":"Addrinfo","path":"Addrinfo#listen","type":"instance_method","visibility":"public"},"Addrinfo#marshal_dump":{"description":":nodoc:","name":"marshal_dump","namespace":"Addrinfo","path":"Addrinfo#marshal_dump","type":"instance_method","visibility":"public"},"Addrinfo#marshal_load":{"description":":nodoc:","name":"marshal_load","namespace":"Addrinfo","path":"Addrinfo#marshal_load","type":"instance_method","visibility":"public"},"Addrinfo#pfamily":{"description":"returns the protocol family as an integer.\n\n  Addrinfo.tcp(\"localhost\", 80).pfamily == Socket::PF_INET #=> true","name":"pfamily","namespace":"Addrinfo","path":"Addrinfo#pfamily","type":"instance_method","visibility":"public"},"Addrinfo#protocol":{"description":"returns the socket type as an integer.\n\n  Addrinfo.tcp(\"localhost\", 80).protocol == Socket::IPPROTO_TCP #=> true","name":"protocol","namespace":"Addrinfo","path":"Addrinfo#protocol","type":"instance_method","visibility":"public"},"Addrinfo#socktype":{"description":"returns the socket type as an integer.\n\n  Addrinfo.tcp(\"localhost\", 80).socktype == Socket::SOCK_STREAM #=> true","name":"socktype","namespace":"Addrinfo","path":"Addrinfo#socktype","type":"instance_method","visibility":"public"},"Addrinfo#to_s":{"description":"returns the socket address as packed struct sockaddr string.\n\n  Addrinfo.tcp(\"localhost\", 80).to_sockaddr\n  #=> \"\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"","name":"to_s","namespace":"Addrinfo","path":"Addrinfo#to_s","type":"instance_method","visibility":"public"},"Addrinfo#to_sockaddr":{"description":"returns the socket address as packed struct sockaddr string.\n\n  Addrinfo.tcp(\"localhost\", 80).to_sockaddr\n  #=> \"\\x02\\x00\\x00P\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"","name":"to_sockaddr","namespace":"Addrinfo","path":"Addrinfo#to_sockaddr","type":"instance_method","visibility":"public"},"Addrinfo#unix?":{"description":"returns true if addrinfo is UNIX address.\nreturns false otherwise.\n\n  Addrinfo.tcp(\"127.0.0.1\", 80).unix? #=> false\n  Addrinfo.tcp(\"::1\", 80).unix?       #=> false\n  Addrinfo.unix(\"/tmp/sock\").unix?    #=> true","name":"unix?","namespace":"Addrinfo","path":"Addrinfo#unix?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Addrinfo#unix_path":{"description":"Returns the socket path as a string.\n\n  Addrinfo.unix(\"/tmp/sock\").unix_path       #=> \"/tmp/sock\"","name":"unix_path","namespace":"Addrinfo","path":"Addrinfo#unix_path","type":"instance_method","visibility":"public"},"Addrinfo.foreach":{"description":"iterates over the list of Addrinfo objects obtained by Addrinfo.getaddrinfo.\n\n  Addrinfo.foreach(nil, 80) {|x| p x }\n  #=> #<Addrinfo: 127.0.0.1:80 TCP (:80)>\n  #   #<Addrinfo: 127.0.0.1:80 UDP (:80)>\n  #   #<Addrinfo: [::1]:80 TCP (:80)>\n  #   #<Addrinfo: [::1]:80 UDP (:80)>","name":"foreach","namespace":"Addrinfo","path":"Addrinfo.foreach","type":"class_method","visibility":"public"},"Addrinfo.getaddrinfo":{"description":"returns a list of addrinfo objects as an array.\n\nThis method converts nodename (hostname) and service (port) to addrinfo.\nSince the conversion is not unique, the result is a list of addrinfo objects.\n\nnodename or service can be nil if no conversion intended.\n\nfamily, socktype and protocol are hint for preferred protocol.\nIf the result will be used for a socket with SOCK_STREAM,\nSOCK_STREAM should be specified as socktype.\nIf so, Addrinfo.getaddrinfo returns addrinfo list appropriate for SOCK_STREAM.\nIf they are omitted or nil is given, the result is not restricted.\n\nSimilarly, PF_INET6 as family restricts for IPv6.\n\nflags should be bitwise OR of Socket::AI_??? constants such as follows.\nNote that the exact list of the constants depends on OS.\n\n  AI_PASSIVE      Get address to use with bind()\n  AI_CANONNAME    Fill in the canonical name\n  AI_NUMERICHOST  Prevent host name resolution\n  AI_NUMERICSERV  Prevent service name resolution\n  AI_V4MAPPED     Accept IPv4-mapped IPv6 addresses\n  AI_ALL          Allow all addresses\n  AI_ADDRCONFIG   Accept only if any address is assigned\n\nNote that socktype should be specified whenever application knows the usage of the address.\nSome platform causes an error when socktype is omitted and servname is specified as an integer\nbecause some port numbers, 512 for example, are ambiguous without socktype.\n\n  Addrinfo.getaddrinfo(\"www.kame.net\", 80, nil, :STREAM)\n  #=> [#<Addrinfo: 203.178.141.194:80 TCP (www.kame.net)>,\n  #    #<Addrinfo: [2001:200:dff:fff1:216:3eff:feb1:44d7]:80 TCP (www.kame.net)>]","name":"getaddrinfo","namespace":"Addrinfo","path":"Addrinfo.getaddrinfo","type":"class_method","visibility":"public"},"Addrinfo.ip":{"description":"returns an addrinfo object for IP address.\n\nThe port, socktype, protocol of the result is filled by zero.\nSo, it is not appropriate to create a socket.\n\n  Addrinfo.ip(\"localhost\") #=> #<Addrinfo: 127.0.0.1 (localhost)>","name":"ip","namespace":"Addrinfo","path":"Addrinfo.ip","type":"class_method","visibility":"public"},"Addrinfo.tcp":{"description":"returns an addrinfo object for TCP address.\n\n  Addrinfo.tcp(\"localhost\", \"smtp\") #=> #<Addrinfo: 127.0.0.1:25 TCP (localhost:smtp)>","name":"tcp","namespace":"Addrinfo","path":"Addrinfo.tcp","type":"class_method","visibility":"public"},"Addrinfo.udp":{"description":"returns an addrinfo object for UDP address.\n\n  Addrinfo.udp(\"localhost\", \"daytime\") #=> #<Addrinfo: 127.0.0.1:13 UDP (localhost:daytime)>","name":"udp","namespace":"Addrinfo","path":"Addrinfo.udp","type":"class_method","visibility":"public"},"Addrinfo.unix":{"description":"returns an addrinfo object for UNIX socket address.\n\n_socktype_ specifies the socket type.\nIf it is omitted, :STREAM is used.\n\n  Addrinfo.unix(\"/tmp/sock\")         #=> #<Addrinfo: /tmp/sock SOCK_STREAM>\n  Addrinfo.unix(\"/tmp/sock\", :DGRAM) #=> #<Addrinfo: /tmp/sock SOCK_DGRAM>","name":"unix","namespace":"Addrinfo","path":"Addrinfo.unix","type":"class_method","visibility":"public"},"TCPServer":{"description":"TCPServer represents a TCP/IP server socket.\n\nA simple TCP server may look like:\n\n  require 'socket'\n\n  server = TCPServer.new 2000 # Server bind to port 2000\n  loop do\n    client = server.accept    # Wait for a client to connect\n    client.puts \"Hello !\"\n    client.puts \"Time is #{Time.now}\"\n    client.close\n  end\n\nA more usable server (serving multiple clients):\n\n  require 'socket'\n\n  server = TCPServer.new 2000\n  loop do\n    Thread.start(server.accept) do |client|\n      client.puts \"Hello !\"\n      client.puts \"Time is #{Time.now}\"\n      client.close\n    end\n  end","name":"TCPServer","namespace":"","path":"TCPServer","type":"class","visibility":"public"},"TCPServer#accept":{"description":"Accepts an incoming connection. It returns a new TCPSocket object.\n\n  TCPServer.open(\"127.0.0.1\", 14641) {|serv|\n    s = serv.accept\n    s.puts Time.now\n    s.close\n  }","name":"accept","namespace":"TCPServer","path":"TCPServer#accept","type":"instance_method","visibility":"public"},"TCPServer#accept_nonblock":{"description":"Accepts an incoming connection using accept(2) after\nO_NONBLOCK is set for the underlying file descriptor.\nIt returns an accepted TCPSocket for the incoming connection.\n\n=== Example\n\trequire 'socket'\n\tserv = TCPServer.new(2202)\n\tbegin # emulate blocking accept\n\t  sock = serv.accept_nonblock\n\trescue IO::WaitReadable, Errno::EINTR\n\t  IO.select([serv])\n\t  retry\n\tend\n\t# sock is an accepted socket.\n\nRefer to Socket#accept for the exceptions that may be thrown if the call\nto TCPServer#accept_nonblock fails.\n\nTCPServer#accept_nonblock may raise any error corresponding to accept(2) failure,\nincluding Errno::EWOULDBLOCK.\n\nIf the exception is Errno::EWOULDBLOCK, Errno::AGAIN, Errno::ECONNABORTED, Errno::EPROTO,\nit is extended by IO::WaitReadable.\nSo IO::WaitReadable can be used to rescue the exceptions for retrying accept_nonblock.\n\n=== See\n* TCPServer#accept\n* Socket#accept","name":"accept_nonblock","namespace":"TCPServer","path":"TCPServer#accept_nonblock","type":"instance_method","visibility":"public"},"TCPServer#initialize":{"description":"Creates a new server socket bound to _port_.\n\nIf _hostname_ is given, the socket is bound to it.\n\n  serv = TCPServer.new(\"127.0.0.1\", 28561)\n  s = serv.accept\n  s.puts Time.now\n  s.close\n\nInternally, TCPServer.new calls getaddrinfo() function to\nobtain addresses.\nIf getaddrinfo() returns multiple addresses,\nTCPServer.new tries to create a server socket for each address\nand returns first one that is successful.","name":"initialize","namespace":"TCPServer","path":"TCPServer#initialize","type":"instance_method","visibility":"public"},"TCPServer#listen":{"description":"Listens for connections, using the specified +int+ as the backlog. A call\nto _listen_ only applies if the +socket+ is of type SOCK_STREAM or\nSOCK_SEQPACKET.\n\n=== Parameter\n* +backlog+ - the maximum length of the queue for pending connections.\n\n=== Example 1\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.bind( sockaddr )\n\tsocket.listen( 5 )\n\n=== Example 2 (listening on an arbitrary port, unix-based systems only):\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsocket.listen( 1 )\n\n=== Unix-based Exceptions\nOn unix based systems the above will work because a new +sockaddr+ struct\nis created on the address ADDR_ANY, for an arbitrary port number as handed\noff by the kernel. It will not work on Windows, because Windows requires that\nthe +socket+ is bound by calling _bind_ before it can _listen_.\n\nIf the _backlog_ amount exceeds the implementation-dependent maximum\nqueue length, the implementation's maximum queue length will be used.\n\nOn unix-based based systems the following system exceptions may be raised if the\ncall to _listen_ fails:\n* Errno::EBADF - the _socket_ argument is not a valid file descriptor\n* Errno::EDESTADDRREQ - the _socket_ is not bound to a local address, and\n  the protocol does not support listening on an unbound socket\n* Errno::EINVAL - the _socket_ is already connected\n* Errno::ENOTSOCK - the _socket_ argument does not refer to a socket\n* Errno::EOPNOTSUPP - the _socket_ protocol does not support listen\n* Errno::EACCES - the calling process does not have appropriate privileges\n* Errno::EINVAL - the _socket_ has been shut down\n* Errno::ENOBUFS - insufficient resources are available in the system to\n  complete the call\n\n=== Windows Exceptions\nOn Windows systems the following system exceptions may be raised if\nthe call to _listen_ fails:\n* Errno::ENETDOWN - the network is down\n* Errno::EADDRINUSE - the socket's local address is already in use. This\n  usually occurs during the execution of _bind_ but could be delayed\n  if the call to _bind_ was to a partially wildcard address (involving\n  ADDR_ANY) and if a specific address needs to be committed at the\n  time of the call to _listen_\n* Errno::EINPROGRESS - a Windows Sockets 1.1 call is in progress or the\n  service provider is still processing a callback function\n* Errno::EINVAL - the +socket+ has not been bound with a call to _bind_.\n* Errno::EISCONN - the +socket+ is already connected\n* Errno::EMFILE - no more socket descriptors are available\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOTSOC - +socket+ is not a socket\n* Errno::EOPNOTSUPP - the referenced +socket+ is not a type that supports\n  the _listen_ method\n\n=== See\n* listen manual pages on unix-based systems\n* listen function in Microsoft's Winsock functions reference","name":"listen","namespace":"TCPServer","path":"TCPServer#listen","type":"instance_method","visibility":"public"},"TCPServer#sysaccept":{"description":"Returns a file descriptor of a accepted connection.\n\n  TCPServer.open(\"127.0.0.1\", 28561) {|serv|\n    fd = serv.sysaccept\n    s = IO.for_fd(fd)\n    s.puts Time.now\n    s.close\n  }","name":"sysaccept","namespace":"TCPServer","path":"TCPServer#sysaccept","type":"instance_method","visibility":"public"},"TCPSocket":{"description":"TCPSocket represents a TCP/IP client socket.\n\nA simple client may look like:\n\n  require 'socket'\n\n  s = TCPSocket.new 'localhost', 2000\n\n  while line = s.gets # Read lines from socket\n    puts line         # and print them\n  end\n\n  s.close             # close socket when done","name":"TCPSocket","namespace":"","path":"TCPSocket","type":"class","visibility":"public"},"TCPSocket#initialize":{"description":"Opens a TCP connection to +remote_host+ on +remote_port+.  If +local_host+\nand +local_port+ are specified, then those parameters are used on the local\nend to establish the connection.","name":"initialize","namespace":"TCPSocket","path":"TCPSocket#initialize","type":"instance_method","visibility":"public"},"TCPSocket.gethostbyname":{"description":"Lookups host information by _hostname_.\n\n  TCPSocket.gethostbyname(\"localhost\")\n  #=> [\"localhost\", [\"hal\"], 2, \"127.0.0.1\"]","name":"gethostbyname","namespace":"TCPSocket","path":"TCPSocket.gethostbyname","type":"class_method","visibility":"public"},"UDPSocket":{"description":"UDPSocket represents a UDP/IP socket.","name":"UDPSocket","namespace":"","path":"UDPSocket","type":"class","visibility":"public"},"UDPSocket#bind":{"description":"Binds _udpsocket_ to _host_:_port_.\n\n  u1 = UDPSocket.new\n  u1.bind(\"127.0.0.1\", 4913)\n  u1.send \"message-to-self\", 0, \"127.0.0.1\", 4913\n  p u1.recvfrom(10) #=> [\"message-to\", [\"AF_INET\", 4913, \"localhost\", \"127.0.0.1\"]]","name":"bind","namespace":"UDPSocket","path":"UDPSocket#bind","type":"instance_method","visibility":"public"},"UDPSocket#connect":{"description":"Connects _udpsocket_ to _host_:_port_.\n\nThis makes possible to send without destination address.\n\n  u1 = UDPSocket.new\n  u1.bind(\"127.0.0.1\", 4913)\n  u2 = UDPSocket.new\n  u2.connect(\"127.0.0.1\", 4913)\n  u2.send \"uuuu\", 0\n  p u1.recvfrom(10) #=> [\"uuuu\", [\"AF_INET\", 33230, \"localhost\", \"127.0.0.1\"]]","name":"connect","namespace":"UDPSocket","path":"UDPSocket#connect","type":"instance_method","visibility":"public"},"UDPSocket#initialize":{"description":"Creates a new UDPSocket object.\n\n_address_family_ should be an integer, a string or a symbol:\nSocket::AF_INET, \"AF_INET\", :INET, etc.\n\n  UDPSocket.new                   #=> #<UDPSocket:fd 3>\n  UDPSocket.new(Socket::AF_INET6) #=> #<UDPSocket:fd 4>","name":"initialize","namespace":"UDPSocket","path":"UDPSocket#initialize","type":"instance_method","visibility":"public"},"UDPSocket#recvfrom_nonblock":{"description":"Receives up to _maxlen_ bytes from +udpsocket+ using recvfrom(2) after\nO_NONBLOCK is set for the underlying file descriptor.\nIf _maxlen_ is omitted, its default value is 65536.\n_flags_ is zero or more of the +MSG_+ options.\nThe first element of the results, _mesg_, is the data received.\nThe second element, _sender_inet_addr_, is an array to represent the sender address.\n\nWhen recvfrom(2) returns 0,\nSocket#recvfrom_nonblock returns an empty string as data.\nIt means an empty packet.\n\n=== Parameters\n* +maxlen+ - the number of bytes to receive from the socket\n* +flags+ - zero or more of the +MSG_+ options\n\n=== Example\n\trequire 'socket'\n\ts1 = UDPSocket.new\n\ts1.bind(\"127.0.0.1\", 0)\n\ts2 = UDPSocket.new\n\ts2.bind(\"127.0.0.1\", 0)\n\ts2.connect(*s1.addr.values_at(3,1))\n\ts1.connect(*s2.addr.values_at(3,1))\n\ts1.send \"aaa\", 0\n\tbegin # emulate blocking recvfrom\n\t  p s2.recvfrom_nonblock(10)  #=> [\"aaa\", [\"AF_INET\", 33302, \"localhost.localdomain\", \"127.0.0.1\"]]\n\trescue IO::WaitReadable\n\t  IO.select([s2])\n\t  retry\n\tend\n\nRefer to Socket#recvfrom for the exceptions that may be thrown if the call\nto _recvfrom_nonblock_ fails.\n\nUDPSocket#recvfrom_nonblock may raise any error corresponding to recvfrom(2) failure,\nincluding Errno::EWOULDBLOCK.\n\nIf the exception is Errno::EWOULDBLOCK or Errno::AGAIN,\nit is extended by IO::WaitReadable.\nSo IO::WaitReadable can be used to rescue the exceptions for retrying recvfrom_nonblock.\n\n=== See\n* Socket#recvfrom","name":"recvfrom_nonblock","namespace":"UDPSocket","path":"UDPSocket#recvfrom_nonblock","type":"instance_method","visibility":"public"},"UDPSocket#send":{"description":"Sends _mesg_ via _udpsocket_.\n\n_flags_ should be a bitwise OR of Socket::MSG_* constants.\n\n  u1 = UDPSocket.new\n  u1.bind(\"127.0.0.1\", 4913)\n\n  u2 = UDPSocket.new\n  u2.send \"hi\", 0, \"127.0.0.1\", 4913\n\n  mesg, addr = u1.recvfrom(10)\n  u1.send mesg, 0, addr[3], addr[1]\n\n  p u2.recv(100) #=> \"hi\"","name":"send","namespace":"UDPSocket","path":"UDPSocket#send","type":"instance_method","visibility":"public"},"UNIXServer":{"description":"UNIXServer represents a UNIX domain stream server socket.","name":"UNIXServer","namespace":"","path":"UNIXServer","type":"class","visibility":"public"},"UNIXServer#accept":{"description":"Accepts an incoming connection.\nIt returns a new UNIXSocket object.\n\n  UNIXServer.open(\"/tmp/sock\") {|serv|\n    UNIXSocket.open(\"/tmp/sock\") {|c|\n      s = serv.accept\n      s.puts \"hi\"\n      s.close\n      p c.read #=> \"hi\\n\"\n    }\n  }","name":"accept","namespace":"UNIXServer","path":"UNIXServer#accept","type":"instance_method","visibility":"public"},"UNIXServer#accept_nonblock":{"description":"Accepts an incoming connection using accept(2) after\nO_NONBLOCK is set for the underlying file descriptor.\nIt returns an accepted UNIXSocket for the incoming connection.\n\n=== Example\n\trequire 'socket'\n\tserv = UNIXServer.new(\"/tmp/sock\")\n\tbegin # emulate blocking accept\n\t  sock = serv.accept_nonblock\n\trescue IO::WaitReadable, Errno::EINTR\n\t  IO.select([serv])\n\t  retry\n\tend\n\t# sock is an accepted socket.\n\nRefer to Socket#accept for the exceptions that may be thrown if the call\nto UNIXServer#accept_nonblock fails.\n\nUNIXServer#accept_nonblock may raise any error corresponding to accept(2) failure,\nincluding Errno::EWOULDBLOCK.\n\nIf the exception is Errno::EWOULDBLOCK, Errno::AGAIN, Errno::ECONNABORTED or Errno::EPROTO,\nit is extended by IO::WaitReadable.\nSo IO::WaitReadable can be used to rescue the exceptions for retrying accept_nonblock.\n\n=== See\n* UNIXServer#accept\n* Socket#accept","name":"accept_nonblock","namespace":"UNIXServer","path":"UNIXServer#accept_nonblock","type":"instance_method","visibility":"public"},"UNIXServer#initialize":{"description":"Creates a new UNIX server socket bound to _path_.\n\n  serv = UNIXServer.new(\"/tmp/sock\")\n  s = serv.accept\n  p s.read","name":"initialize","namespace":"UNIXServer","path":"UNIXServer#initialize","type":"instance_method","visibility":"public"},"UNIXServer#listen":{"description":"Listens for connections, using the specified +int+ as the backlog. A call\nto _listen_ only applies if the +socket+ is of type SOCK_STREAM or\nSOCK_SEQPACKET.\n\n=== Parameter\n* +backlog+ - the maximum length of the queue for pending connections.\n\n=== Example 1\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsockaddr = Socket.pack_sockaddr_in( 2200, 'localhost' )\n\tsocket.bind( sockaddr )\n\tsocket.listen( 5 )\n\n=== Example 2 (listening on an arbitrary port, unix-based systems only):\n\trequire 'socket'\n\tinclude Socket::Constants\n\tsocket = Socket.new( AF_INET, SOCK_STREAM, 0 )\n\tsocket.listen( 1 )\n\n=== Unix-based Exceptions\nOn unix based systems the above will work because a new +sockaddr+ struct\nis created on the address ADDR_ANY, for an arbitrary port number as handed\noff by the kernel. It will not work on Windows, because Windows requires that\nthe +socket+ is bound by calling _bind_ before it can _listen_.\n\nIf the _backlog_ amount exceeds the implementation-dependent maximum\nqueue length, the implementation's maximum queue length will be used.\n\nOn unix-based based systems the following system exceptions may be raised if the\ncall to _listen_ fails:\n* Errno::EBADF - the _socket_ argument is not a valid file descriptor\n* Errno::EDESTADDRREQ - the _socket_ is not bound to a local address, and\n  the protocol does not support listening on an unbound socket\n* Errno::EINVAL - the _socket_ is already connected\n* Errno::ENOTSOCK - the _socket_ argument does not refer to a socket\n* Errno::EOPNOTSUPP - the _socket_ protocol does not support listen\n* Errno::EACCES - the calling process does not have appropriate privileges\n* Errno::EINVAL - the _socket_ has been shut down\n* Errno::ENOBUFS - insufficient resources are available in the system to\n  complete the call\n\n=== Windows Exceptions\nOn Windows systems the following system exceptions may be raised if\nthe call to _listen_ fails:\n* Errno::ENETDOWN - the network is down\n* Errno::EADDRINUSE - the socket's local address is already in use. This\n  usually occurs during the execution of _bind_ but could be delayed\n  if the call to _bind_ was to a partially wildcard address (involving\n  ADDR_ANY) and if a specific address needs to be committed at the\n  time of the call to _listen_\n* Errno::EINPROGRESS - a Windows Sockets 1.1 call is in progress or the\n  service provider is still processing a callback function\n* Errno::EINVAL - the +socket+ has not been bound with a call to _bind_.\n* Errno::EISCONN - the +socket+ is already connected\n* Errno::EMFILE - no more socket descriptors are available\n* Errno::ENOBUFS - no buffer space is available\n* Errno::ENOTSOC - +socket+ is not a socket\n* Errno::EOPNOTSUPP - the referenced +socket+ is not a type that supports\n  the _listen_ method\n\n=== See\n* listen manual pages on unix-based systems\n* listen function in Microsoft's Winsock functions reference","name":"listen","namespace":"UNIXServer","path":"UNIXServer#listen","type":"instance_method","visibility":"public"},"UNIXServer#sysaccept":{"description":"Accepts a new connection.\nIt returns the new file descriptor which is an integer.\n\n  UNIXServer.open(\"/tmp/sock\") {|serv|\n    UNIXSocket.open(\"/tmp/sock\") {|c|\n      fd = serv.sysaccept\n      s = IO.new(fd)\n      s.puts \"hi\"\n      s.close\n      p c.read #=> \"hi\\n\"\n    }\n  }","name":"sysaccept","namespace":"UNIXServer","path":"UNIXServer#sysaccept","type":"instance_method","visibility":"public"},"UNIXSocket":{"description":"UNIXSocket represents a UNIX domain stream client socket.","name":"UNIXSocket","namespace":"","path":"UNIXSocket","type":"class","visibility":"public"},"UNIXSocket#addr":{"description":"Returns the local address as an array which contains\naddress_family and unix_path.\n\nExample\n  serv = UNIXServer.new(\"/tmp/sock\")\n  p serv.addr #=> [\"AF_UNIX\", \"/tmp/sock\"]","name":"addr","namespace":"UNIXSocket","path":"UNIXSocket#addr","type":"instance_method","visibility":"public"},"UNIXSocket#initialize":{"description":"Creates a new UNIX client socket connected to _path_.\n\n  s = UNIXSocket.new(\"/tmp/sock\")\n  s.send \"hello\", 0","name":"initialize","namespace":"UNIXSocket","path":"UNIXSocket#initialize","type":"instance_method","visibility":"public"},"UNIXSocket#path":{"description":"Returns the path of the local address of unixsocket.\n\n  s = UNIXServer.new(\"/tmp/sock\")\n  p s.path #=> \"/tmp/sock\"","name":"path","namespace":"UNIXSocket","path":"UNIXSocket#path","type":"instance_method","visibility":"public"},"UNIXSocket#peeraddr":{"description":"Returns the remote address as an array which contains\naddress_family and unix_path.\n\nExample\n  serv = UNIXServer.new(\"/tmp/sock\")\n  c = UNIXSocket.new(\"/tmp/sock\")\n  p c.peeraddr #=> [\"AF_UNIX\", \"/tmp/sock\"]","name":"peeraddr","namespace":"UNIXSocket","path":"UNIXSocket#peeraddr","type":"instance_method","visibility":"public"},"UNIXSocket#recv_io":{"description":"Example\n\n  UNIXServer.open(\"/tmp/sock\") {|serv|\n    UNIXSocket.open(\"/tmp/sock\") {|c|\n      s = serv.accept\n\n      c.send_io STDOUT\n      stdout = s.recv_io\n\n      p STDOUT.fileno #=> 1\n      p stdout.fileno #=> 7\n\n      stdout.puts \"hello\" # outputs \"hello\\n\" to standard output.\n    }\n  }","name":"recv_io","namespace":"UNIXSocket","path":"UNIXSocket#recv_io","type":"instance_method","visibility":"public"},"UNIXSocket#recvfrom":{"description":"Receives a message via _unixsocket_.\n\n_maxlen_ is the maximum number of bytes to receive.\n\n_flags_ should be a bitwise OR of Socket::MSG_* constants.\n\n  s1 = Socket.new(:UNIX, :DGRAM, 0)\n  s1_ai = Addrinfo.unix(\"/tmp/sock1\")\n  s1.bind(s1_ai)\n\n  s2 = Socket.new(:UNIX, :DGRAM, 0)\n  s2_ai = Addrinfo.unix(\"/tmp/sock2\")\n  s2.bind(s2_ai)\n  s3 = UNIXSocket.for_fd(s2.fileno)\n\n  s1.send \"a\", 0, s2_ai\n  p s3.recvfrom(10) #=> [\"a\", [\"AF_UNIX\", \"/tmp/sock1\"]]","name":"recvfrom","namespace":"UNIXSocket","path":"UNIXSocket#recvfrom","type":"instance_method","visibility":"public"},"UNIXSocket#send_io":{"description":"Sends _io_ as file descriptor passing.\n\n  s1, s2 = UNIXSocket.pair\n\n  s1.send_io STDOUT\n  stdout = s2.recv_io\n\n  p STDOUT.fileno #=> 1\n  p stdout.fileno #=> 6\n\n  stdout.puts \"hello\" # outputs \"hello\\n\" to standard output.","name":"send_io","namespace":"UNIXSocket","path":"UNIXSocket#send_io","type":"instance_method","visibility":"public"},"UNIXSocket.pair":{"description":"Creates a pair of sockets connected to each other.\n\n_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.\n\n_protocol_ should be a protocol defined in the domain.\n0 is default protocol for the domain.\n\n  s1, s2 = UNIXSocket.pair\n  s1.send \"a\", 0\n  s1.send \"b\", 0\n  p s2.recv(10) #=> \"ab\"","name":"pair","namespace":"UNIXSocket","path":"UNIXSocket.pair","type":"class_method","visibility":"public"},"UNIXSocket.socketpair":{"description":"Creates a pair of sockets connected to each other.\n\n_socktype_ should be a socket type such as: :STREAM, :DGRAM, :RAW, etc.\n\n_protocol_ should be a protocol defined in the domain.\n0 is default protocol for the domain.\n\n  s1, s2 = UNIXSocket.pair\n  s1.send \"a\", 0\n  s1.send \"b\", 0\n  p s2.recv(10) #=> \"ab\"","name":"socketpair","namespace":"UNIXSocket","path":"UNIXSocket.socketpair","type":"class_method","visibility":"public"},"BasicSocket":{"description":"BasicSocket is the super class for all the Socket classes.","name":"BasicSocket","namespace":"","path":"BasicSocket","type":"class","visibility":"public"},"BasicSocket#close_read":{"description":"Disallows further read using shutdown system call.\n\n  s1, s2 = UNIXSocket.pair\n  s1.close_read\n  s2.puts #=> Broken pipe (Errno::EPIPE)","name":"close_read","namespace":"BasicSocket","path":"BasicSocket#close_read","type":"instance_method","visibility":"public"},"BasicSocket#close_write":{"description":"Disallows further write using shutdown system call.\n\n  UNIXSocket.pair {|s1, s2|\n    s1.print \"ping\"\n    s1.close_write\n    p s2.read        #=> \"ping\"\n    s2.print \"pong\"\n    s2.close\n    p s1.read        #=> \"pong\"\n  }","name":"close_write","namespace":"BasicSocket","path":"BasicSocket#close_write","type":"instance_method","visibility":"public"},"BasicSocket#connect_address":{"description":"Returns an address of the socket suitable for connect in the local machine.\n\nThis method returns _self_.local_address, except following condition.\n\n- IPv4 unspecified address (0.0.0.0) is replaced by IPv4 loopback address (127.0.0.1).\n- IPv6 unspecified address (::) is replaced by IPv6 loopback address (::1).\n\nIf the local address is not suitable for connect, SocketError is raised.\nIPv4 and IPv6 address which port is 0 is not suitable for connect.\nUnix domain socket which has no path is not suitable for connect.\n\n  Addrinfo.tcp(\"0.0.0.0\", 0).listen {|serv|\n    p serv.connect_address #=> #<Addrinfo: 127.0.0.1:53660 TCP>\n    serv.connect_address.connect {|c|\n      s, _ = serv.accept\n      p [c, s] #=> [#<Socket:fd 4>, #<Socket:fd 6>]\n    }\n  }","name":"connect_address","namespace":"BasicSocket","path":"BasicSocket#connect_address","type":"instance_method","visibility":"public"},"BasicSocket#do_not_reverse_lookup":{"description":"Gets the do_not_reverse_lookup flag of _basicsocket_.\n\n  TCPSocket.open(\"www.ruby-lang.org\", 80) {|sock|\n    p sock.do_not_reverse_lookup      #=> false\n    p sock.peeraddr                   #=> [\"AF_INET\", 80, \"carbon.ruby-lang.org\", \"221.186.184.68\"]\n    sock.do_not_reverse_lookup = true\n    p sock.peeraddr                   #=> [\"AF_INET\", 80, \"221.186.184.68\", \"221.186.184.68\"]\n  }","name":"do_not_reverse_lookup","namespace":"BasicSocket","path":"BasicSocket#do_not_reverse_lookup","type":"instance_method","visibility":"public"},"BasicSocket#do_not_reverse_lookup=":{"description":"Sets the do_not_reverse_lookup flag of _basicsocket_.\n\n  BasicSocket.do_not_reverse_lookup = false\n  p TCPSocket.new(\"127.0.0.1\", 80).do_not_reverse_lookup #=> false\n  BasicSocket.do_not_reverse_lookup = true\n  p TCPSocket.new(\"127.0.0.1\", 80).do_not_reverse_lookup #=> true","name":"do_not_reverse_lookup=","namespace":"BasicSocket","path":"BasicSocket#do_not_reverse_lookup=","type":"instance_method","visibility":"public"},"BasicSocket#getpeereid":{"description":"Returns the user and group on the peer of the UNIX socket.\nThe result is a two element array which contains the effective uid and the effective gid.\n\n  Socket.unix_server_loop(\"/tmp/sock\") {|s|\n    begin\n      euid, egid = s.getpeereid\n\n      # Check the connected client is myself or not.\n      next if euid != Process.uid\n\n      # do something about my resource.\n\n    ensure\n      s.close\n    end\n  }","name":"getpeereid","namespace":"BasicSocket","path":"BasicSocket#getpeereid","type":"instance_method","visibility":"public"},"BasicSocket#getpeername":{"description":"Returns the remote address of the socket as a sockaddr string.\n\n  TCPServer.open(\"127.0.0.1\", 1440) {|serv|\n    c = TCPSocket.new(\"127.0.0.1\", 1440)\n    s = serv.accept\n    p s.getpeername #=> \"\\x02\\x00\\x82u\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n  }\n\nIf Addrinfo object is preferred over the binary string,\nuse BasicSocket#remote_address.","name":"getpeername","namespace":"BasicSocket","path":"BasicSocket#getpeername","type":"instance_method","visibility":"public"},"BasicSocket#getsockname":{"description":"Returns the local address of the socket as a sockaddr string.\n\n  TCPServer.open(\"127.0.0.1\", 15120) {|serv|\n    p serv.getsockname #=> \"\\x02\\x00;\\x10\\x7F\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"\n  }\n\nIf Addrinfo object is preferred over the binary string,\nuse BasicSocket#local_address.","name":"getsockname","namespace":"BasicSocket","path":"BasicSocket#getsockname","type":"instance_method","visibility":"public"},"BasicSocket#getsockopt":{"description":"Gets a socket option. These are protocol and system specific, see your\nlocal system documentation for details. The option is returned as\na Socket::Option object.\n\n=== Parameters\n* +level+ is an integer, usually one of the SOL_ constants such as\n  Socket::SOL_SOCKET, or a protocol level.\n  A string or symbol of the name, possibly without prefix, is also\n  accepted.\n* +optname+ is an integer, usually one of the SO_ constants, such\n  as Socket::SO_REUSEADDR.\n  A string or symbol of the name, possibly without prefix, is also\n  accepted.\n\n=== Examples\n\nSome socket options are integers with boolean values, in this case\n#getsockopt could be called like this:\n\n  reuseaddr = sock.getsockopt(:SOCKET, :REUSEADDR).bool\n\n  optval = sock.getsockopt(Socket::SOL_SOCKET,Socket::SO_REUSEADDR)\n  optval = optval.unpack \"i\"\n  reuseaddr = optval[0] == 0 ? false : true\n\nSome socket options are integers with numeric values, in this case\n#getsockopt could be called like this:\n\n  ipttl = sock.getsockopt(:IP, :TTL).int\n\n  optval = sock.getsockopt(Socket::IPPROTO_IP, Socket::IP_TTL)\n  ipttl = optval.unpack(\"i\")[0]\n\nOption values may be structs. Decoding them can be complex as it involves\nexamining your system headers to determine the correct definition. An\nexample is a +struct linger+, which may be defined in your system headers\nas:\n  struct linger {\n    int l_onoff;\n    int l_linger;\n  };\n\nIn this case #getsockopt could be called like this:\n\n  # Socket::Option knows linger structure.\n  onoff, linger = sock.getsockopt(:SOCKET, :LINGER).linger\n\n  optval =  sock.getsockopt(Socket::SOL_SOCKET, Socket::SO_LINGER)\n  onoff, linger = optval.unpack \"ii\"\n  onoff = onoff == 0 ? false : true","name":"getsockopt","namespace":"BasicSocket","path":"BasicSocket#getsockopt","type":"instance_method","visibility":"public"},"BasicSocket#local_address":{"description":"Returns an Addrinfo object for local address obtained by getsockname.\n\nNote that addrinfo.protocol is filled by 0.\n\n  TCPSocket.open(\"www.ruby-lang.org\", 80) {|s|\n    p s.local_address #=> #<Addrinfo: 192.168.0.129:36873 TCP>\n  }\n\n  TCPServer.open(\"127.0.0.1\", 1512) {|serv|\n    p serv.local_address #=> #<Addrinfo: 127.0.0.1:1512 TCP>\n  }","name":"local_address","namespace":"BasicSocket","path":"BasicSocket#local_address","type":"instance_method","visibility":"public"},"BasicSocket#recv":{"description":"Receives a message.\n\n_maxlen_ is the maximum number of bytes to receive.\n\n_flags_ should be a bitwise OR of Socket::MSG_* constants.\n\n  UNIXSocket.pair {|s1, s2|\n    s1.puts \"Hello World\"\n    p s2.recv(4)                     #=> \"Hell\"\n    p s2.recv(4, Socket::MSG_PEEK)   #=> \"o Wo\"\n    p s2.recv(4)                     #=> \"o Wo\"\n    p s2.recv(10)                    #=> \"rld\\n\"\n  }","name":"recv","namespace":"BasicSocket","path":"BasicSocket#recv","type":"instance_method","visibility":"public"},"BasicSocket#recv_nonblock":{"description":"Receives up to _maxlen_ bytes from +socket+ using recvfrom(2) after\nO_NONBLOCK is set for the underlying file descriptor.\n_flags_ is zero or more of the +MSG_+ options.\nThe result, _mesg_, is the data received.\n\nWhen recvfrom(2) returns 0, Socket#recv_nonblock returns\nan empty string as data.\nThe meaning depends on the socket: EOF on TCP, empty packet on UDP, etc.\n\n=== Parameters\n* +maxlen+ - the number of bytes to receive from the socket\n* +flags+ - zero or more of the +MSG_+ options\n\n=== Example\n\tserv = TCPServer.new(\"127.0.0.1\", 0)\n\taf, port, host, addr = serv.addr\n\tc = TCPSocket.new(addr, port)\n\ts = serv.accept\n\tc.send \"aaa\", 0\n\tbegin # emulate blocking recv.\n\t  p s.recv_nonblock(10) #=> \"aaa\"\n\trescue IO::WaitReadable\n\t  IO.select([s])\n\t  retry\n\tend\n\nRefer to Socket#recvfrom for the exceptions that may be thrown if the call\nto _recv_nonblock_ fails.\n\nBasicSocket#recv_nonblock may raise any error corresponding to recvfrom(2) failure,\nincluding Errno::EWOULDBLOCK.\n\nIf the exception is Errno::EWOULDBLOCK or Errno::AGAIN,\nit is extended by IO::WaitReadable.\nSo IO::WaitReadable can be used to rescue the exceptions for retrying recv_nonblock.\n\n=== See\n* Socket#recvfrom","name":"recv_nonblock","namespace":"BasicSocket","path":"BasicSocket#recv_nonblock","type":"instance_method","visibility":"public"},"BasicSocket#recvmsg":{"description":"recvmsg receives a message using recvmsg(2) system call in blocking manner.\n\n_maxmesglen_ is the maximum length of mesg to receive.\n\n_flags_ is bitwise OR of MSG_* constants such as Socket::MSG_PEEK.\n\n_maxcontrollen_ is the maximum length of controls (ancillary data) to receive.\n\n_opts_ is option hash.\nCurrently :scm_rights=>bool is the only option.\n\n:scm_rights option specifies that application expects SCM_RIGHTS control message.\nIf the value is nil or false, application don't expects SCM_RIGHTS control message.\nIn this case, recvmsg closes the passed file descriptors immediately.\nThis is the default behavior.\n\nIf :scm_rights value is neither nil nor false, application expects SCM_RIGHTS control message.\nIn this case, recvmsg creates IO objects for each file descriptors for\nSocket::AncillaryData#unix_rights method.\n\nThe return value is 4-elements array.\n\n_mesg_ is a string of the received message.\n\n_sender_addrinfo_ is a sender socket address for connection-less socket.\nIt is an Addrinfo object.\nFor connection-oriented socket such as TCP, sender_addrinfo is platform dependent.\n\n_rflags_ is a flags on the received message which is bitwise OR of MSG_* constants such as Socket::MSG_TRUNC.\nIt will be nil if the system uses 4.3BSD style old recvmsg system call.\n\n_controls_ is ancillary data which is an array of Socket::AncillaryData objects such as:\n\n  #<Socket::AncillaryData: AF_UNIX SOCKET RIGHTS 7>\n\n_maxmesglen_ and _maxcontrollen_ can be nil.\nIn that case, the buffer will be grown until the message is not truncated.\nInternally, MSG_PEEK is used and MSG_TRUNC/MSG_CTRUNC are checked.\n\nrecvmsg can be used to implement recv_io as follows:\n\n  mesg, sender_sockaddr, rflags, *controls = sock.recvmsg(:scm_rights=>true)\n  controls.each {|ancdata|\n    if ancdata.cmsg_is?(:SOCKET, :RIGHTS)\n      return ancdata.unix_rights[0]\n    end\n  }","name":"recvmsg","namespace":"BasicSocket","path":"BasicSocket#recvmsg","type":"instance_method","visibility":"public"},"BasicSocket#recvmsg_nonblock":{"description":"recvmsg receives a message using recvmsg(2) system call in non-blocking manner.\n\nIt is similar to BasicSocket#recvmsg\nbut non-blocking flag is set before the system call\nand it doesn't retry the system call.","name":"recvmsg_nonblock","namespace":"BasicSocket","path":"BasicSocket#recvmsg_nonblock","type":"instance_method","visibility":"public"},"BasicSocket#remote_address":{"description":"Returns an Addrinfo object for remote address obtained by getpeername.\n\nNote that addrinfo.protocol is filled by 0.\n\n  TCPSocket.open(\"www.ruby-lang.org\", 80) {|s|\n    p s.remote_address #=> #<Addrinfo: 221.186.184.68:80 TCP>\n  }\n\n  TCPServer.open(\"127.0.0.1\", 1728) {|serv|\n    c = TCPSocket.new(\"127.0.0.1\", 1728)\n    s = serv.accept\n    p s.remote_address #=> #<Addrinfo: 127.0.0.1:36504 TCP>\n  }","name":"remote_address","namespace":"BasicSocket","path":"BasicSocket#remote_address","type":"instance_method","visibility":"public"},"BasicSocket#send":{"description":"send _mesg_ via _basicsocket_.\n\n_mesg_ should be a string.\n\n_flags_ should be a bitwise OR of Socket::MSG_* constants.\n\n_dest_sockaddr_ should be a packed sockaddr string or an addrinfo.\n\n  TCPSocket.open(\"localhost\", 80) {|s|\n    s.send \"GET / HTTP/1.0\\r\\n\\r\\n\", 0\n    p s.read\n  }","name":"send","namespace":"BasicSocket","path":"BasicSocket#send","type":"instance_method","visibility":"public"},"BasicSocket#sendmsg":{"description":"sendmsg sends a message using sendmsg(2) system call in blocking manner.\n\n_mesg_ is a string to send.\n\n_flags_ is bitwise OR of MSG_* constants such as Socket::MSG_OOB.\n\n_dest_sockaddr_ is a destination socket address for connection-less socket.\nIt should be a sockaddr such as a result of Socket.sockaddr_in.\nAn Addrinfo object can be used too.\n\n_controls_ is a list of ancillary data.\nThe element of _controls_ should be Socket::AncillaryData or\n3-elements array.\nThe 3-element array should contains cmsg_level, cmsg_type and data.\n\nThe return value, _numbytes_sent_ is an integer which is the number of bytes sent.\n\nsendmsg can be used to implement send_io as follows:\n\n  # use Socket::AncillaryData.\n  ancdata = Socket::AncillaryData.int(:UNIX, :SOCKET, :RIGHTS, io.fileno)\n  sock.sendmsg(\"a\", 0, nil, ancdata)\n\n  # use 3-element array.\n  ancdata = [:SOCKET, :RIGHTS, [io.fileno].pack(\"i!\")]\n  sock.sendmsg(\"\\0\", 0, nil, ancdata)","name":"sendmsg","namespace":"BasicSocket","path":"BasicSocket#sendmsg","type":"instance_method","visibility":"public"},"BasicSocket#sendmsg_nonblock":{"description":"sendmsg_nonblock sends a message using sendmsg(2) system call in non-blocking manner.\n\nIt is similar to BasicSocket#sendmsg\nbut the non-blocking flag is set before the system call\nand it doesn't retry the system call.","name":"sendmsg_nonblock","namespace":"BasicSocket","path":"BasicSocket#sendmsg_nonblock","type":"instance_method","visibility":"public"},"BasicSocket#setsockopt":{"description":"Sets a socket option. These are protocol and system specific, see your\nlocal system documentation for details.\n\n=== Parameters\n* +level+ is an integer, usually one of the SOL_ constants such as\n  Socket::SOL_SOCKET, or a protocol level.\n  A string or symbol of the name, possibly without prefix, is also\n  accepted.\n* +optname+ is an integer, usually one of the SO_ constants, such\n  as Socket::SO_REUSEADDR.\n  A string or symbol of the name, possibly without prefix, is also\n  accepted.\n* +optval+ is the value of the option, it is passed to the underlying\n  setsockopt() as a pointer to a certain number of bytes. How this is\n  done depends on the type:\n  - Fixnum: value is assigned to an int, and a pointer to the int is\n    passed, with length of sizeof(int).\n  - true or false: 1 or 0 (respectively) is assigned to an int, and the\n    int is passed as for a Fixnum. Note that +false+ must be passed,\n    not +nil+.\n  - String: the string's data and length is passed to the socket.\n* +socketoption+ is an instance of Socket::Option\n\n=== Examples\n\nSome socket options are integers with boolean values, in this case\n#setsockopt could be called like this:\n  sock.setsockopt(:SOCKET, :REUSEADDR, true)\n  sock.setsockopt(Socket::SOL_SOCKET,Socket::SO_REUSEADDR, true)\n  sock.setsockopt(Socket::Option.bool(:INET, :SOCKET, :REUSEADDR, true))\n\nSome socket options are integers with numeric values, in this case\n#setsockopt could be called like this:\n  sock.setsockopt(:IP, :TTL, 255)\n  sock.setsockopt(Socket::IPPROTO_IP, Socket::IP_TTL, 255)\n  sock.setsockopt(Socket::Option.int(:INET, :IP, :TTL, 255))\n\nOption values may be structs. Passing them can be complex as it involves\nexamining your system headers to determine the correct definition. An\nexample is an +ip_mreq+, which may be defined in your system headers as:\n  struct ip_mreq {\n    struct  in_addr imr_multiaddr;\n    struct  in_addr imr_interface;\n  };\n\nIn this case #setsockopt could be called like this:\n  optval = IPAddr.new(\"224.0.0.251\").hton +\n           IPAddr.new(Socket::INADDR_ANY, Socket::AF_INET).hton\n  sock.setsockopt(Socket::IPPROTO_IP, Socket::IP_ADD_MEMBERSHIP, optval)","name":"setsockopt","namespace":"BasicSocket","path":"BasicSocket#setsockopt","type":"instance_method","visibility":"public"},"BasicSocket#shutdown":{"description":"Calls shutdown(2) system call.\n\ns.shutdown(Socket::SHUT_RD) disallows further read.\n\ns.shutdown(Socket::SHUT_WR) disallows further write.\n\ns.shutdown(Socket::SHUT_RDWR) disallows further read and write.\n\n_how_ can be symbol or string:\n- :RD, :SHUT_RD, \"RD\" and \"SHUT_RD\" are accepted as Socket::SHUT_RD.\n- :WR, :SHUT_WR, \"WR\" and \"SHUT_WR\" are accepted as Socket::SHUT_WR.\n- :RDWR, :SHUT_RDWR, \"RDWR\" and \"SHUT_RDWR\" are accepted as Socket::SHUT_RDWR.\n\n  UNIXSocket.pair {|s1, s2|\n    s1.puts \"ping\"\n    s1.shutdown(:WR)\n    p s2.read          #=> \"ping\\n\"\n    s2.puts \"pong\"\n    s2.close\n    p s1.read          #=> \"pong\\n\"\n  }","name":"shutdown","namespace":"BasicSocket","path":"BasicSocket#shutdown","type":"instance_method","visibility":"public"},"BasicSocket.do_not_reverse_lookup":{"description":"Gets the global do_not_reverse_lookup flag.\n\n  BasicSocket.do_not_reverse_lookup  #=> false","name":"do_not_reverse_lookup","namespace":"BasicSocket","path":"BasicSocket.do_not_reverse_lookup","type":"class_method","visibility":"public"},"BasicSocket.do_not_reverse_lookup=":{"description":"Sets the global do_not_reverse_lookup flag.\n\nThe flag is used for initial value of do_not_reverse_lookup for each socket.\n\n  s1 = TCPSocket.new(\"localhost\", 80)\n  p s1.do_not_reverse_lookup                 #=> true\n  BasicSocket.do_not_reverse_lookup = false\n  s2 = TCPSocket.new(\"localhost\", 80)\n  p s2.do_not_reverse_lookup                 #=> false\n  p s1.do_not_reverse_lookup                 #=> true","name":"do_not_reverse_lookup=","namespace":"BasicSocket","path":"BasicSocket.do_not_reverse_lookup=","type":"class_method","visibility":"public"},"BasicSocket.for_fd":{"description":"Returns a socket object which contains the file descriptor, _fd_.\n\n  # If invoked by inetd, STDIN/STDOUT/STDERR is a socket.\n  STDIN_SOCK = Socket.for_fd(STDIN.fileno)\n  p STDIN_SOCK.remote_address","name":"for_fd","namespace":"BasicSocket","path":"BasicSocket.for_fd","type":"class_method","visibility":"public"},"SOCKSSocket":{"description":"SOCKS is an Internet protocol that routes packets between a client and\na server through a proxy server.  SOCKS5, if supported, additionally\nprovides authentication so only authorized users may access a server.","name":"SOCKSSocket","namespace":"","path":"SOCKSSocket","type":"class","visibility":"public"},"SOCKSSocket#close":{"description":"Closes the SOCKS connection.","name":"close","namespace":"SOCKSSocket","path":"SOCKSSocket#close","type":"instance_method","visibility":"public"},"SOCKSSocket#initialize":{"description":"Opens a SOCKS connection to +host+ via the SOCKS server +serv+.","name":"initialize","namespace":"SOCKSSocket","path":"SOCKSSocket#initialize","type":"instance_method","visibility":"public"},"StringIO":{"description":"","name":"StringIO","namespace":"","path":"StringIO","type":"class","visibility":"public"},"StringIO#binmode":{"description":"","name":"binmode","namespace":"StringIO","path":"StringIO#binmode","type":"instance_method","visibility":"public"},"StringIO#bytes":{"description":"This is a deprecated alias for #each_byte.","name":"bytes","namespace":"StringIO","path":"StringIO#bytes","type":"instance_method","visibility":"public"},"StringIO#chars":{"description":"This is a deprecated alias for <code>each_char</code>.","name":"chars","namespace":"StringIO","path":"StringIO#chars","type":"instance_method","visibility":"public"},"StringIO#close":{"description":"Closes strio.  The *strio* is unavailable for any further data\noperations; an +IOError+ is raised if such an attempt is made.","name":"close","namespace":"StringIO","path":"StringIO#close","type":"instance_method","visibility":"public"},"StringIO#close_read":{"description":"Closes the read end of a StringIO.  Will raise an +IOError+ if the\n*strio* is not readable.","name":"close_read","namespace":"StringIO","path":"StringIO#close_read","type":"instance_method","visibility":"public"},"StringIO#close_write":{"description":"Closes the write end of a StringIO.  Will raise an  +IOError+ if the\n*strio* is not writeable.","name":"close_write","namespace":"StringIO","path":"StringIO#close_write","type":"instance_method","visibility":"public"},"StringIO#closed?":{"description":"Returns +true+ if *strio* is completely closed, +false+ otherwise.","name":"closed?","namespace":"StringIO","path":"StringIO#closed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"StringIO#closed_read?":{"description":"Returns +true+ if *strio* is not readable, +false+ otherwise.","name":"closed_read?","namespace":"StringIO","path":"StringIO#closed_read?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"StringIO#closed_write?":{"description":"Returns +true+ if *strio* is not writable, +false+ otherwise.","name":"closed_write?","namespace":"StringIO","path":"StringIO#closed_write?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"StringIO#codepoints":{"description":"This is a deprecated alias for <code>each_codepoint</code>.","name":"codepoints","namespace":"StringIO","path":"StringIO#codepoints","type":"instance_method","visibility":"public"},"StringIO#each":{"description":"strio.each_line(sep=$/) {|line| block }    -> strio\n  strio.each_line(limit) {|line| block }     -> strio\n  strio.each_line(sep,limit) {|line| block } -> strio\n  strio.each_line(...)                       -> anEnumerator\n\nSee IO#each.","name":"each","namespace":"StringIO","path":"StringIO#each","type":"instance_method","visibility":"public"},"StringIO#each_byte":{"description":"See IO#each_byte.","name":"each_byte","namespace":"StringIO","path":"StringIO#each_byte","type":"instance_method","visibility":"public"},"StringIO#each_char":{"description":"See IO#each_char.","name":"each_char","namespace":"StringIO","path":"StringIO#each_char","type":"instance_method","visibility":"public"},"StringIO#each_codepoint":{"description":"See IO#each_codepoint.","name":"each_codepoint","namespace":"StringIO","path":"StringIO#each_codepoint","type":"instance_method","visibility":"public"},"StringIO#each_line":{"description":"strio.each_line(sep=$/) {|line| block }    -> strio\n  strio.each_line(limit) {|line| block }     -> strio\n  strio.each_line(sep,limit) {|line| block } -> strio\n  strio.each_line(...)                       -> anEnumerator\n\nSee IO#each.","name":"each_line","namespace":"StringIO","path":"StringIO#each_line","type":"instance_method","visibility":"public"},"StringIO#eof":{"description":"Returns true if *strio* is at end of file. The stringio must be\nopened for reading or an +IOError+ will be raised.","name":"eof","namespace":"StringIO","path":"StringIO#eof","type":"instance_method","visibility":"public"},"StringIO#eof?":{"description":"Returns true if *strio* is at end of file. The stringio must be\nopened for reading or an +IOError+ will be raised.","name":"eof?","namespace":"StringIO","path":"StringIO#eof?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"StringIO#external_encoding":{"description":"Returns the Encoding object that represents the encoding of the file.\nIf strio is write mode and no encoding is specified, returns <code>nil</code>.","name":"external_encoding","namespace":"StringIO","path":"StringIO#external_encoding","type":"instance_method","visibility":"public"},"StringIO#fcntl":{"description":"","name":"fcntl","namespace":"StringIO","path":"StringIO#fcntl","type":"instance_method","visibility":"public"},"StringIO#fileno":{"description":"","name":"fileno","namespace":"StringIO","path":"StringIO#fileno","type":"instance_method","visibility":"public"},"StringIO#flush":{"description":"","name":"flush","namespace":"StringIO","path":"StringIO#flush","type":"instance_method","visibility":"public"},"StringIO#fsync":{"description":"","name":"fsync","namespace":"StringIO","path":"StringIO#fsync","type":"instance_method","visibility":"public"},"StringIO#getbyte":{"description":"See IO#getbyte.","name":"getbyte","namespace":"StringIO","path":"StringIO#getbyte","type":"instance_method","visibility":"public"},"StringIO#getc":{"description":"See IO#getc.","name":"getc","namespace":"StringIO","path":"StringIO#getc","type":"instance_method","visibility":"public"},"StringIO#gets":{"description":"See IO#gets.","name":"gets","namespace":"StringIO","path":"StringIO#gets","type":"instance_method","visibility":"public"},"StringIO#initialize":{"description":"Creates new StringIO instance from with _string_ and _mode_.","name":"initialize","namespace":"StringIO","path":"StringIO#initialize","type":"instance_method","visibility":"public"},"StringIO#initialize_copy":{"description":":nodoc:","name":"initialize_copy","namespace":"StringIO","path":"StringIO#initialize_copy","type":"instance_method","visibility":"public"},"StringIO#internal_encoding":{"description":"Returns the Encoding of the internal string if conversion is\nspecified.  Otherwise returns nil.","name":"internal_encoding","namespace":"StringIO","path":"StringIO#internal_encoding","type":"instance_method","visibility":"public"},"StringIO#isatty":{"description":"","name":"isatty","namespace":"StringIO","path":"StringIO#isatty","type":"instance_method","visibility":"public"},"StringIO#length":{"description":"Returns the size of the buffer string.","name":"length","namespace":"StringIO","path":"StringIO#length","type":"instance_method","visibility":"public"},"StringIO#lineno":{"description":"Returns the current line number in *strio*. The stringio must be\nopened for reading. +lineno+ counts the number of times  +gets+ is\ncalled, rather than the number of newlines  encountered. The two\nvalues will differ if +gets+ is  called with a separator other than\nnewline.  See also the  <code>$.</code> variable.","name":"lineno","namespace":"StringIO","path":"StringIO#lineno","type":"instance_method","visibility":"public"},"StringIO#lineno=":{"description":"Manually sets the current line number to the given value.\n<code>$.</code> is updated only on the next read.","name":"lineno=","namespace":"StringIO","path":"StringIO#lineno=","type":"instance_method","visibility":"public"},"StringIO#lines":{"description":"This is a deprecated alias for <code>each_line</code>.","name":"lines","namespace":"StringIO","path":"StringIO#lines","type":"instance_method","visibility":"public"},"StringIO#pid":{"description":"","name":"pid","namespace":"StringIO","path":"StringIO#pid","type":"instance_method","visibility":"public"},"StringIO#pos":{"description":"Returns the current offset (in bytes) of *strio*.","name":"pos","namespace":"StringIO","path":"StringIO#pos","type":"instance_method","visibility":"public"},"StringIO#pos=":{"description":"Seeks to the given position (in bytes) in *strio*.","name":"pos=","namespace":"StringIO","path":"StringIO#pos=","type":"instance_method","visibility":"public"},"StringIO#putc":{"description":"See IO#putc.","name":"putc","namespace":"StringIO","path":"StringIO#putc","type":"instance_method","visibility":"public"},"StringIO#read":{"description":"See IO#read.","name":"read","namespace":"StringIO","path":"StringIO#read","type":"instance_method","visibility":"public"},"StringIO#readlines":{"description":"See IO#readlines.","name":"readlines","namespace":"StringIO","path":"StringIO#readlines","type":"instance_method","visibility":"public"},"StringIO#reopen":{"description":"Reinitializes *strio* with the given <i>other_StrIO</i> or _string_\nand _mode_ (see StringIO#new).","name":"reopen","namespace":"StringIO","path":"StringIO#reopen","type":"instance_method","visibility":"public"},"StringIO#rewind":{"description":"Positions *strio* to the beginning of input, resetting\n+lineno+ to zero.","name":"rewind","namespace":"StringIO","path":"StringIO#rewind","type":"instance_method","visibility":"public"},"StringIO#seek":{"description":"Seeks to a given offset _amount_ in the stream according to\nthe value of _whence_ (see IO#seek).","name":"seek","namespace":"StringIO","path":"StringIO#seek","type":"instance_method","visibility":"public"},"StringIO#set_encoding":{"description":"Specify the encoding of the StringIO as <i>ext_enc</i>.\nUse the default external encoding if <i>ext_enc</i> is nil.\n2nd argument <i>int_enc</i> and optional hash <i>opt</i> argument\nare ignored; they are for API compatibility to IO.","name":"set_encoding","namespace":"StringIO","path":"StringIO#set_encoding","type":"instance_method","visibility":"public"},"StringIO#size":{"description":"Returns the size of the buffer string.","name":"size","namespace":"StringIO","path":"StringIO#size","type":"instance_method","visibility":"public"},"StringIO#string":{"description":"Returns underlying String object, the subject of IO.","name":"string","namespace":"StringIO","path":"StringIO#string","type":"instance_method","visibility":"public"},"StringIO#string=":{"description":"Changes underlying String object, the subject of IO.","name":"string=","namespace":"StringIO","path":"StringIO#string=","type":"instance_method","visibility":"public"},"StringIO#sync":{"description":"Returns +true+ always.","name":"sync","namespace":"StringIO","path":"StringIO#sync","type":"instance_method","visibility":"public"},"StringIO#sync=":{"description":"","name":"sync=","namespace":"StringIO","path":"StringIO#sync=","type":"instance_method","visibility":"public"},"StringIO#tell":{"description":"","name":"tell","namespace":"StringIO","path":"StringIO#tell","type":"instance_method","visibility":"public"},"StringIO#truncate":{"description":"Truncates the buffer string to at most _integer_ bytes. The *strio*\nmust be opened for writing.","name":"truncate","namespace":"StringIO","path":"StringIO#truncate","type":"instance_method","visibility":"public"},"StringIO#tty?":{"description":"","name":"tty?","namespace":"StringIO","path":"StringIO#tty?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"StringIO#ungetbyte":{"description":"See IO#ungetbyte","name":"ungetbyte","namespace":"StringIO","path":"StringIO#ungetbyte","type":"instance_method","visibility":"public"},"StringIO#ungetc":{"description":"Pushes back one character (passed as a parameter) onto *strio*\nsuch that a subsequent buffered read will return it.  There is no\nlimitation for multiple pushbacks including pushing back behind the\nbeginning of the buffer string.","name":"ungetc","namespace":"StringIO","path":"StringIO#ungetc","type":"instance_method","visibility":"public"},"StringIO#write":{"description":"Appends the given string to the underlying buffer string of *strio*.\nThe stream must be opened for writing.  If the argument is not a\nstring, it will be converted to a string using <code>to_s</code>.\nReturns the number of bytes written.  See IO#write.","name":"write","namespace":"StringIO","path":"StringIO#write","type":"instance_method","visibility":"public"},"StringIO.open":{"description":"Equivalent to StringIO.new except that when it is called with a block, it\nyields with the new instance and closes it, and returns the result which\nreturned from the block.","name":"open","namespace":"StringIO","path":"StringIO.open","type":"class_method","visibility":"public"},"Win32API":{"description":"","name":"Win32API","namespace":"","path":"Win32API","type":"class","visibility":"public"},"Win32API#Call":{"description":"","name":"Call","namespace":"Win32API","path":"Win32API#Call","type":"instance_method","visibility":"public"},"Win32API#call":{"description":"","name":"Call","namespace":"Win32API","path":"Win32API#Call","type":"instance_method","visibility":"public"},"Win32API#initialize":{"description":"","name":"initialize","namespace":"Win32API","path":"Win32API#initialize","type":"instance_method","visibility":"public","return":[["Win32API"],"a new instance of Win32API"]},"Win32API::DLL":{"description":"","name":"DLL","namespace":"Win32API","path":"Win32API::DLL","type":"constant","return":null,"visibility":"public"},"Win32API::POINTER_TYPE":{"description":"","name":"POINTER_TYPE","namespace":"Win32API","path":"Win32API::POINTER_TYPE","type":"constant","return":null,"visibility":"public"},"Win32API::TYPEMAP":{"description":"","name":"TYPEMAP","namespace":"Win32API","path":"Win32API::TYPEMAP","type":"constant","return":null,"visibility":"public"},"Win32":{"description":"Implements bindings to Win32 SSPI functions, focused on authentication to a proxy server over HTTP.","name":"Win32","namespace":"","path":"Win32","type":"module","visibility":"public"},"Win32::LOCALE":{"description":"","name":"LOCALE","namespace":"Win32","path":"Win32::LOCALE","type":"constant","return":null,"visibility":"public"},"Win32::Registry":{"description":"","name":"Registry","namespace":"Win32","path":"Win32::Registry","type":"class","visibility":"public"},"Win32::Registry#[]":{"description":"Read a registry value named name and return its value data.\nThe class of value is same as #read method returns.\n\nIf the value type is REG_EXPAND_SZ, returns value data whose environment\nvariables are replaced.\nIf the value type is neither REG_SZ, REG_MULTI_SZ, REG_DWORD,\nREG_DWORD_BIG_ENDIAN, nor REG_QWORD, TypeError is raised.\n\nThe meaning of rtype is same as #read method.","name":"[]","namespace":"Win32::Registry","path":"Win32::Registry#[]","type":"instance_method","visibility":"public"},"Win32::Registry#[]=":{"description":"Write value to a registry value named name.\n\nIf wtype is specified, the value type is it.\nOtherwise, the value type is depend on class of value:\n:Integer\n  REG_DWORD\n:String\n  REG_SZ\n:Array\n  REG_MULTI_SZ","name":"[]=","namespace":"Win32::Registry","path":"Win32::Registry#[]=","type":"instance_method","visibility":"public"},"Win32::Registry#_dump":{"description":"marshalling is not allowed","name":"_dump","namespace":"Win32::Registry","path":"Win32::Registry#_dump","type":"instance_method","visibility":"public"},"Win32::Registry#close":{"description":"Close key.\n\nAfter close, most method raise an error.","name":"close","namespace":"Win32::Registry","path":"Win32::Registry#close","type":"instance_method","visibility":"public"},"Win32::Registry#create":{"description":"Same as Win32::Registry.create (self, subkey, desired, opt)","name":"create","namespace":"Win32::Registry","path":"Win32::Registry#create","type":"instance_method","visibility":"public"},"Win32::Registry#created?":{"description":"Returns if key is created ((*newly*)).\n(see Registry.create) -- basically you call create\nthen when you call created? on the instance returned\nit will tell if it was successful or not","name":"created?","namespace":"Win32::Registry","path":"Win32::Registry#created?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Win32::Registry#delete":{"description":"Delete a registry value named name.\nWe can not delete the `default' value.","name":"delete","namespace":"Win32::Registry","path":"Win32::Registry#delete","type":"instance_method","visibility":"public"},"Win32::Registry#delete_key":{"description":"Delete a subkey named name and all its values.\n\nIf recursive is false, the subkey must not have subkeys.\nOtherwise, this method deletes all subkeys and values recursively.","name":"delete_key","namespace":"Win32::Registry","path":"Win32::Registry#delete_key","type":"instance_method","visibility":"public"},"Win32::Registry#delete_value":{"description":"Delete a registry value named name.\nWe can not delete the `default' value.","name":"delete","namespace":"Win32::Registry","path":"Win32::Registry#delete","type":"instance_method","visibility":"public"},"Win32::Registry#disposition":{"description":"Disposition value (REG_CREATED_NEW_KEY or REG_OPENED_EXISTING_KEY).","name":"disposition","namespace":"Win32::Registry","path":"Win32::Registry#disposition","type":"instance_method","visibility":"public"},"Win32::Registry#each":{"description":"Enumerate values.","name":"each","namespace":"Win32::Registry","path":"Win32::Registry#each","type":"instance_method","visibility":"public"},"Win32::Registry#each_key":{"description":"Enumerate subkeys.\n\nsubkey is String which contains name of subkey.\nwtime is last write time as FILETIME (64-bit integer).\n(see Registry.wtime2time)","name":"each_key","namespace":"Win32::Registry","path":"Win32::Registry#each_key","type":"instance_method","visibility":"public"},"Win32::Registry#each_value":{"description":"Enumerate values.","name":"each","namespace":"Win32::Registry","path":"Win32::Registry#each","type":"instance_method","visibility":"public"},"Win32::Registry#export_string":{"description":":nodoc:","name":"export_string","namespace":"Win32::Registry","path":"Win32::Registry#export_string","type":"instance_method","visibility":"private"},"Win32::Registry#flush":{"description":"Write all the attributes into the registry file.","name":"flush","namespace":"Win32::Registry","path":"Win32::Registry#flush","type":"instance_method","visibility":"public"},"Win32::Registry#hkey":{"description":"Returns key handle value.","name":"hkey","namespace":"Win32::Registry","path":"Win32::Registry#hkey","type":"instance_method","visibility":"public"},"Win32::Registry#info":{"description":"Returns key information as Array of:\n:num_keys\n  The number of subkeys.\n:max_key_length\n  Maximum length of name of subkeys.\n:num_values\n  The number of values.\n:max_value_name_length\n  Maximum length of name of values.\n:max_value_length\n  Maximum length of value of values.\n:descriptor_length\n  Length of security descriptor.\n:wtime\n  Last write time as FILETIME(64-bit integer)\n\nFor detail, see RegQueryInfoKey[http://msdn.microsoft.com/library/en-us/sysinfo/base/regqueryinfokey.asp] Win32 API.","name":"info","namespace":"Win32::Registry","path":"Win32::Registry#info","type":"instance_method","visibility":"public"},"Win32::Registry#initialize":{"description":"initialize","name":"initialize","namespace":"Win32::Registry","path":"Win32::Registry#initialize","type":"instance_method","visibility":"public","return":[["Registry"],"a new instance of Registry"]},"Win32::Registry#inspect":{"description":"","name":"inspect","namespace":"Win32::Registry","path":"Win32::Registry#inspect","type":"instance_method","visibility":"public"},"Win32::Registry#keyname":{"description":"Same as subkey value of Registry.open or\nRegistry.create method.","name":"keyname","namespace":"Win32::Registry","path":"Win32::Registry#keyname","type":"instance_method","visibility":"public"},"Win32::Registry#keys":{"description":"return keys as an array","name":"keys","namespace":"Win32::Registry","path":"Win32::Registry#keys","type":"instance_method","visibility":"public"},"Win32::Registry#name":{"description":"Full path of key such as 'HKEY_CURRENT_USER\\SOFTWARE\\foo\\bar'.","name":"name","namespace":"Win32::Registry","path":"Win32::Registry#name","type":"instance_method","visibility":"public"},"Win32::Registry#open":{"description":"Same as Win32::Registry.open (self, subkey, desired, opt)","name":"open","namespace":"Win32::Registry","path":"Win32::Registry#open","type":"instance_method","visibility":"public"},"Win32::Registry#open?":{"description":"Returns if key is not closed.","name":"open?","namespace":"Win32::Registry","path":"Win32::Registry#open?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Win32::Registry#parent":{"description":"Win32::Registry object of parent key, or nil if predefeined key.","name":"parent","namespace":"Win32::Registry","path":"Win32::Registry#parent","type":"instance_method","visibility":"public"},"Win32::Registry#read":{"description":"Read a registry value named name and return array of\n[ type, data ].\nWhen name is nil, the `default' value is read.\ntype is value type. (see Win32::Registry::Constants module)\ndata is value data, its class is:\n:REG_SZ, REG_EXPAND_SZ\n   String\n:REG_MULTI_SZ\n   Array of String\n:REG_DWORD, REG_DWORD_BIG_ENDIAN, REG_QWORD\n   Integer\n:REG_BINARY\n   String (contains binary data)\n\nWhen rtype is specified, the value type must be included by\nrtype array, or TypeError is raised.","name":"read","namespace":"Win32::Registry","path":"Win32::Registry#read","type":"instance_method","visibility":"public"},"Win32::Registry#read_bin":{"description":"Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin)\nregistry value named name.\n\nIf the values type does not match, TypeError is raised.","name":"read_bin","namespace":"Win32::Registry","path":"Win32::Registry#read_bin","type":"instance_method","visibility":"public"},"Win32::Registry#read_i":{"description":"Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin)\nregistry value named name.\n\nIf the values type does not match, TypeError is raised.","name":"read_i","namespace":"Win32::Registry","path":"Win32::Registry#read_i","type":"instance_method","visibility":"public"},"Win32::Registry#read_s":{"description":"Read a REG_SZ(read_s), REG_DWORD(read_i), or REG_BINARY(read_bin)\nregistry value named name.\n\nIf the values type does not match, TypeError is raised.","name":"read_s","namespace":"Win32::Registry","path":"Win32::Registry#read_s","type":"instance_method","visibility":"public"},"Win32::Registry#read_s_expand":{"description":"Read a REG_SZ or REG_EXPAND_SZ registry value named name.\n\nIf the value type is REG_EXPAND_SZ, environment variables are replaced.\nUnless the value type is REG_SZ or REG_EXPAND_SZ, TypeError is raised.","name":"read_s_expand","namespace":"Win32::Registry","path":"Win32::Registry#read_s_expand","type":"instance_method","visibility":"public"},"Win32::Registry#values":{"description":"return values as an array","name":"values","namespace":"Win32::Registry","path":"Win32::Registry#values","type":"instance_method","visibility":"public"},"Win32::Registry#write":{"description":"Write data to a registry value named name.\nWhen name is nil, write to the `default' value.\n\ntype is type value. (see Registry::Constants module)\nClass of data must be same as which #read\nmethod returns.","name":"write","namespace":"Win32::Registry","path":"Win32::Registry#write","type":"instance_method","visibility":"public"},"Win32::Registry#write_bin":{"description":"Write value to a registry value named name.\n\nThe value type is REG_SZ(write_s), REG_DWORD(write_i), or\nREG_BINARY(write_bin).","name":"write_bin","namespace":"Win32::Registry","path":"Win32::Registry#write_bin","type":"instance_method","visibility":"public"},"Win32::Registry#write_i":{"description":"Write value to a registry value named name.\n\nThe value type is REG_SZ(write_s), REG_DWORD(write_i), or\nREG_BINARY(write_bin).","name":"write_i","namespace":"Win32::Registry","path":"Win32::Registry#write_i","type":"instance_method","visibility":"public"},"Win32::Registry#write_s":{"description":"Write value to a registry value named name.\n\nThe value type is REG_SZ(write_s), REG_DWORD(write_i), or\nREG_BINARY(write_bin).","name":"write_s","namespace":"Win32::Registry","path":"Win32::Registry#write_s","type":"instance_method","visibility":"public"},"Win32::Registry.create":{"description":"--- Registry.create(key, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED)\n\n--- Registry.create(key, subkey, desired = KEY_ALL_ACCESS, opt = REG_OPTION_RESERVED) { |reg| ... }\n\nCreate or open the registry key subkey under key.\nYou can use predefined key HKEY_* (see Constants)\n\nIf subkey is already exists, key is opened and Registry#created?\nmethod will return false.\n\nIf block is given, the key is closed automatically.","name":"create","namespace":"Win32::Registry","path":"Win32::Registry.create","type":"class_method","visibility":"public"},"Win32::Registry.expand_environ":{"description":"Replace %\\w+% into the environment value of what is contained between the %'s\nThis method is used for REG_EXPAND_SZ.\n\nFor detail, see expandEnvironmentStrings[http://msdn.microsoft.com/library/en-us/sysinfo/base/expandenvironmentstrings.asp] \\Win32 \\API.","name":"expand_environ","namespace":"Win32::Registry","path":"Win32::Registry.expand_environ","type":"class_method","visibility":"public"},"Win32::Registry.open":{"description":"--- Registry.open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED)\n\n--- Registry.open(key, subkey, desired = KEY_READ, opt = REG_OPTION_RESERVED) { |reg| ... }\n\nOpen the registry key subkey under key.\nkey is Win32::Registry object of parent key.\nYou can use predefined key HKEY_* (see Constants)\ndesired and opt is access mask and key option.\nFor detail, see the MSDN[http://msdn.microsoft.com/library/en-us/sysinfo/base/regopenkeyex.asp].\nIf block is given, the key is closed automatically.","name":"open","namespace":"Win32::Registry","path":"Win32::Registry.open","type":"class_method","visibility":"public"},"Win32::Registry.time2wtime":{"description":"Convert Time object or Integer object into 64-bit FILETIME.","name":"time2wtime","namespace":"Win32::Registry","path":"Win32::Registry.time2wtime","type":"class_method","visibility":"public"},"Win32::Registry.type2name":{"description":"Convert registry type value to readable string.","name":"type2name","namespace":"Win32::Registry","path":"Win32::Registry.type2name","type":"class_method","visibility":"public"},"Win32::Registry.wtime2time":{"description":"Convert 64-bit FILETIME integer into Time object.","name":"wtime2time","namespace":"Win32::Registry","path":"Win32::Registry.wtime2time","type":"class_method","visibility":"public"},"Win32::Registry::@@final":{"description":"finalizer","name":"@@final","namespace":"Win32::Registry","path":"Win32::Registry::@@final","type":"classvariable","visibility":"public"},"Win32::Registry::@@type2name":{"description":"","name":"@@type2name","namespace":"Win32::Registry","path":"Win32::Registry::@@type2name","type":"classvariable","visibility":"public"},"Win32::Registry::API":{"description":"Win32 APIs","name":"API","namespace":"Win32::Registry","path":"Win32::Registry::API","type":"module","visibility":"public"},"Win32::Registry::API#CloseKey":{"description":"","name":"CloseKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#CloseKey","type":"module_function","visibility":"private"},"Win32::Registry::API#CreateKey":{"description":"","name":"CreateKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#CreateKey","type":"module_function","visibility":"private"},"Win32::Registry::API#DeleteKey":{"description":"","name":"DeleteKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#DeleteKey","type":"module_function","visibility":"private"},"Win32::Registry::API#DeleteValue":{"description":"","name":"DeleteValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API#DeleteValue","type":"module_function","visibility":"private"},"Win32::Registry::API#EnumKey":{"description":"","name":"EnumKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#EnumKey","type":"module_function","visibility":"private"},"Win32::Registry::API#EnumValue":{"description":"","name":"EnumValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API#EnumValue","type":"module_function","visibility":"private"},"Win32::Registry::API#FlushKey":{"description":"","name":"FlushKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#FlushKey","type":"module_function","visibility":"private"},"Win32::Registry::API#OpenKey":{"description":"","name":"OpenKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#OpenKey","type":"module_function","visibility":"private"},"Win32::Registry::API#QueryInfoKey":{"description":"","name":"QueryInfoKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API#QueryInfoKey","type":"module_function","visibility":"private"},"Win32::Registry::API#QueryValue":{"description":"","name":"QueryValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API#QueryValue","type":"module_function","visibility":"private"},"Win32::Registry::API#SetValue":{"description":"","name":"SetValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API#SetValue","type":"module_function","visibility":"private"},"Win32::Registry::API#check":{"description":"","name":"check","namespace":"Win32::Registry::API","path":"Win32::Registry::API#check","type":"module_function","visibility":"private"},"Win32::Registry::API#make_wstr":{"description":"","name":"make_wstr","namespace":"Win32::Registry::API","path":"Win32::Registry::API#make_wstr","type":"module_function","visibility":"private"},"Win32::Registry::API#packdw":{"description":"","name":"packdw","namespace":"Win32::Registry::API","path":"Win32::Registry::API#packdw","type":"module_function","visibility":"private"},"Win32::Registry::API#packhandle":{"description":"","name":"packhandle","namespace":"Win32::Registry::API","path":"Win32::Registry::API#packhandle","type":"module_function","visibility":"private"},"Win32::Registry::API#packqw":{"description":"","name":"packqw","namespace":"Win32::Registry::API","path":"Win32::Registry::API#packqw","type":"module_function","visibility":"private"},"Win32::Registry::API#unpackdw":{"description":"","name":"unpackdw","namespace":"Win32::Registry::API","path":"Win32::Registry::API#unpackdw","type":"module_function","visibility":"private"},"Win32::Registry::API#unpackhandle":{"description":"","name":"unpackhandle","namespace":"Win32::Registry::API","path":"Win32::Registry::API#unpackhandle","type":"module_function","visibility":"private"},"Win32::Registry::API#unpackqw":{"description":"","name":"unpackqw","namespace":"Win32::Registry::API","path":"Win32::Registry::API#unpackqw","type":"module_function","visibility":"private"},"Win32::Registry::API#win64?":{"description":"","name":"win64?","namespace":"Win32::Registry::API","path":"Win32::Registry::API#win64?","type":"module_function","visibility":"private"},"Win32::Registry::API.CloseKey":{"description":"","name":"CloseKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.CloseKey","type":"module_function","visibility":"public"},"Win32::Registry::API.CreateKey":{"description":"","name":"CreateKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.CreateKey","type":"module_function","visibility":"public"},"Win32::Registry::API.DeleteKey":{"description":"","name":"DeleteKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.DeleteKey","type":"module_function","visibility":"public"},"Win32::Registry::API.DeleteValue":{"description":"","name":"DeleteValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API.DeleteValue","type":"module_function","visibility":"public"},"Win32::Registry::API.EnumKey":{"description":"","name":"EnumKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.EnumKey","type":"module_function","visibility":"public"},"Win32::Registry::API.EnumValue":{"description":"","name":"EnumValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API.EnumValue","type":"module_function","visibility":"public"},"Win32::Registry::API.FlushKey":{"description":"","name":"FlushKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.FlushKey","type":"module_function","visibility":"public"},"Win32::Registry::API.OpenKey":{"description":"","name":"OpenKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.OpenKey","type":"module_function","visibility":"public"},"Win32::Registry::API.QueryInfoKey":{"description":"","name":"QueryInfoKey","namespace":"Win32::Registry::API","path":"Win32::Registry::API.QueryInfoKey","type":"module_function","visibility":"public"},"Win32::Registry::API.QueryValue":{"description":"","name":"QueryValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API.QueryValue","type":"module_function","visibility":"public"},"Win32::Registry::API.SetValue":{"description":"","name":"SetValue","namespace":"Win32::Registry::API","path":"Win32::Registry::API.SetValue","type":"module_function","visibility":"public"},"Win32::Registry::API.check":{"description":"","name":"check","namespace":"Win32::Registry::API","path":"Win32::Registry::API.check","type":"module_function","visibility":"public"},"Win32::Registry::API.make_wstr":{"description":"","name":"make_wstr","namespace":"Win32::Registry::API","path":"Win32::Registry::API.make_wstr","type":"module_function","visibility":"public"},"Win32::Registry::API.packdw":{"description":"","name":"packdw","namespace":"Win32::Registry::API","path":"Win32::Registry::API.packdw","type":"module_function","visibility":"public"},"Win32::Registry::API.packhandle":{"description":"","name":"packhandle","namespace":"Win32::Registry::API","path":"Win32::Registry::API.packhandle","type":"module_function","visibility":"public"},"Win32::Registry::API.packqw":{"description":"","name":"packqw","namespace":"Win32::Registry::API","path":"Win32::Registry::API.packqw","type":"module_function","visibility":"public"},"Win32::Registry::API.unpackdw":{"description":"","name":"unpackdw","namespace":"Win32::Registry::API","path":"Win32::Registry::API.unpackdw","type":"module_function","visibility":"public"},"Win32::Registry::API.unpackhandle":{"description":"","name":"unpackhandle","namespace":"Win32::Registry::API","path":"Win32::Registry::API.unpackhandle","type":"module_function","visibility":"public"},"Win32::Registry::API.unpackqw":{"description":"","name":"unpackqw","namespace":"Win32::Registry::API","path":"Win32::Registry::API.unpackqw","type":"module_function","visibility":"public"},"Win32::Registry::API.win64?":{"description":"","name":"win64?","namespace":"Win32::Registry::API","path":"Win32::Registry::API.win64?","type":"module_function","visibility":"public","return":[["Boolean"],""]},"Win32::Registry::Constants":{"description":"For detail, see the MSDN[http://msdn.microsoft.com/library/en-us/sysinfo/base/registry.asp].\n\n--- HKEY_*\n\n    Predefined key ((*handle*)).\n    These are Integer, not Win32::Registry.\n\n--- REG_*\n\n    Registry value type.\n\n--- KEY_*\n\n    Security access mask.\n\n--- KEY_OPTIONS_*\n\n    Key options.\n\n--- REG_CREATED_NEW_KEY\n\n--- REG_OPENED_EXISTING_KEY\n\n    If the key is created newly or opened existing key.\n    See also Registry#disposition method.","name":"Constants","namespace":"Win32::Registry","path":"Win32::Registry::Constants","type":"module","visibility":"public"},"Win32::Registry::Constants::HKEY_CLASSES_ROOT":{"description":"","name":"HKEY_CLASSES_ROOT","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_CLASSES_ROOT","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_CURRENT_CONFIG":{"description":"","name":"HKEY_CURRENT_CONFIG","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_CURRENT_CONFIG","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_CURRENT_USER":{"description":"","name":"HKEY_CURRENT_USER","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_CURRENT_USER","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_DYN_DATA":{"description":"","name":"HKEY_DYN_DATA","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_DYN_DATA","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_LOCAL_MACHINE":{"description":"","name":"HKEY_LOCAL_MACHINE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_LOCAL_MACHINE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_PERFORMANCE_DATA":{"description":"","name":"HKEY_PERFORMANCE_DATA","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_PERFORMANCE_DATA","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_PERFORMANCE_NLSTEXT":{"description":"","name":"HKEY_PERFORMANCE_NLSTEXT","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_PERFORMANCE_NLSTEXT","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_PERFORMANCE_TEXT":{"description":"","name":"HKEY_PERFORMANCE_TEXT","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_PERFORMANCE_TEXT","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::HKEY_USERS":{"description":"","name":"HKEY_USERS","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::HKEY_USERS","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_ALL_ACCESS":{"description":"","name":"KEY_ALL_ACCESS","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_ALL_ACCESS","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_CREATE_LINK":{"description":"","name":"KEY_CREATE_LINK","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_CREATE_LINK","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_CREATE_SUB_KEY":{"description":"","name":"KEY_CREATE_SUB_KEY","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_CREATE_SUB_KEY","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_ENUMERATE_SUB_KEYS":{"description":"","name":"KEY_ENUMERATE_SUB_KEYS","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_ENUMERATE_SUB_KEYS","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_EXECUTE":{"description":"","name":"KEY_EXECUTE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_EXECUTE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_NOTIFY":{"description":"","name":"KEY_NOTIFY","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_NOTIFY","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_QUERY_VALUE":{"description":"","name":"KEY_QUERY_VALUE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_QUERY_VALUE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_READ":{"description":"","name":"KEY_READ","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_READ","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_SET_VALUE":{"description":"","name":"KEY_SET_VALUE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_SET_VALUE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::KEY_WRITE":{"description":"","name":"KEY_WRITE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::KEY_WRITE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::MAX_KEY_LENGTH":{"description":"","name":"MAX_KEY_LENGTH","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::MAX_KEY_LENGTH","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::MAX_VALUE_LENGTH":{"description":"","name":"MAX_VALUE_LENGTH","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::MAX_VALUE_LENGTH","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_BINARY":{"description":"","name":"REG_BINARY","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_BINARY","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_CREATED_NEW_KEY":{"description":"","name":"REG_CREATED_NEW_KEY","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_CREATED_NEW_KEY","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_DWORD":{"description":"","name":"REG_DWORD","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_DWORD","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_DWORD_BIG_ENDIAN":{"description":"","name":"REG_DWORD_BIG_ENDIAN","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_DWORD_BIG_ENDIAN","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_DWORD_LITTLE_ENDIAN":{"description":"","name":"REG_DWORD_LITTLE_ENDIAN","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_DWORD_LITTLE_ENDIAN","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_EXPAND_SZ":{"description":"","name":"REG_EXPAND_SZ","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_EXPAND_SZ","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_FORCE_RESTORE":{"description":"","name":"REG_FORCE_RESTORE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_FORCE_RESTORE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_FULL_RESOURCE_DESCRIPTOR":{"description":"","name":"REG_FULL_RESOURCE_DESCRIPTOR","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_FULL_RESOURCE_DESCRIPTOR","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_LEGAL_OPTION":{"description":"","name":"REG_LEGAL_OPTION","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_LEGAL_OPTION","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_LINK":{"description":"","name":"REG_LINK","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_LINK","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_MULTI_SZ":{"description":"","name":"REG_MULTI_SZ","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_MULTI_SZ","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_NONE":{"description":"","name":"REG_NONE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_NONE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_NO_LAZY_FLUSH":{"description":"","name":"REG_NO_LAZY_FLUSH","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_NO_LAZY_FLUSH","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPENED_EXISTING_KEY":{"description":"","name":"REG_OPENED_EXISTING_KEY","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPENED_EXISTING_KEY","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPTION_BACKUP_RESTORE":{"description":"","name":"REG_OPTION_BACKUP_RESTORE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPTION_BACKUP_RESTORE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPTION_CREATE_LINK":{"description":"","name":"REG_OPTION_CREATE_LINK","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPTION_CREATE_LINK","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPTION_NON_VOLATILE":{"description":"","name":"REG_OPTION_NON_VOLATILE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPTION_NON_VOLATILE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPTION_OPEN_LINK":{"description":"","name":"REG_OPTION_OPEN_LINK","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPTION_OPEN_LINK","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPTION_RESERVED":{"description":"","name":"REG_OPTION_RESERVED","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPTION_RESERVED","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_OPTION_VOLATILE":{"description":"","name":"REG_OPTION_VOLATILE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_OPTION_VOLATILE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_QWORD":{"description":"","name":"REG_QWORD","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_QWORD","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_QWORD_LITTLE_ENDIAN":{"description":"","name":"REG_QWORD_LITTLE_ENDIAN","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_QWORD_LITTLE_ENDIAN","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_REFRESH_HIVE":{"description":"","name":"REG_REFRESH_HIVE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_REFRESH_HIVE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_RESOURCE_LIST":{"description":"","name":"REG_RESOURCE_LIST","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_RESOURCE_LIST","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_RESOURCE_REQUIREMENTS_LIST":{"description":"","name":"REG_RESOURCE_REQUIREMENTS_LIST","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_RESOURCE_REQUIREMENTS_LIST","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_SZ":{"description":"","name":"REG_SZ","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_SZ","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::REG_WHOLE_HIVE_VOLATILE":{"description":"","name":"REG_WHOLE_HIVE_VOLATILE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::REG_WHOLE_HIVE_VOLATILE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::STANDARD_RIGHTS_READ":{"description":"","name":"STANDARD_RIGHTS_READ","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::STANDARD_RIGHTS_READ","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Constants::STANDARD_RIGHTS_WRITE":{"description":"","name":"STANDARD_RIGHTS_WRITE","namespace":"Win32::Registry::Constants","path":"Win32::Registry::Constants::STANDARD_RIGHTS_WRITE","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Error":{"description":"Error","name":"Error","namespace":"Win32::Registry","path":"Win32::Registry::Error","type":"class","visibility":"public"},"Win32::Registry::Error#code":{"description":"Returns the value of attribute code","name":"code","namespace":"Win32::Registry::Error","path":"Win32::Registry::Error#code","type":"instance_method","visibility":"public"},"Win32::Registry::Error#initialize":{"description":"","name":"initialize","namespace":"Win32::Registry::Error","path":"Win32::Registry::Error#initialize","type":"instance_method","visibility":"public","return":[["Error"],"a new instance of Error"]},"Win32::Registry::Error::FormatMessageW":{"description":"","name":"FormatMessageW","namespace":"Win32::Registry::Error","path":"Win32::Registry::Error::FormatMessageW","type":"constant","return":null,"visibility":"public"},"Win32::Registry::Error::Kernel32":{"description":"","name":"Kernel32","namespace":"Win32::Registry::Error","path":"Win32::Registry::Error::Kernel32","type":"module","visibility":"public"},"Win32::Registry::PredefinedKey":{"description":"Predefined Keys","name":"PredefinedKey","namespace":"Win32::Registry","path":"Win32::Registry::PredefinedKey","type":"class","visibility":"public"},"Win32::Registry::PredefinedKey#class":{"description":"Fake #class method for Registry#open, Registry#create","name":"class","namespace":"Win32::Registry::PredefinedKey","path":"Win32::Registry::PredefinedKey#class","type":"instance_method","visibility":"public"},"Win32::Registry::PredefinedKey#close":{"description":"Predefined keys cannot be closed","name":"close","namespace":"Win32::Registry::PredefinedKey","path":"Win32::Registry::PredefinedKey#close","type":"instance_method","visibility":"public"},"Win32::Registry::PredefinedKey#initialize":{"description":"","name":"initialize","namespace":"Win32::Registry::PredefinedKey","path":"Win32::Registry::PredefinedKey#initialize","type":"instance_method","visibility":"public","return":[["PredefinedKey"],"a new instance of PredefinedKey"]},"Win32::Resolv":{"description":"","name":"Resolv","namespace":"Win32","path":"Win32::Resolv","type":"module","visibility":"public"},"Win32::Resolv.get_hosts_path":{"description":"","name":"get_hosts_path","namespace":"Win32::Resolv","path":"Win32::Resolv.get_hosts_path","type":"module_function","visibility":"public"},"Win32::Resolv.get_resolv_info":{"description":"","name":"get_resolv_info","namespace":"Win32::Resolv","path":"Win32::Resolv.get_resolv_info","type":"module_function","visibility":"public"},"Win32::Resolv::API":{"description":"","name":"API","namespace":"Win32::Resolv","path":"Win32::Resolv::API","type":"constant","return":null,"visibility":"public"},"Win32::Resolv::Kernel32":{"description":"","name":"Kernel32","namespace":"Win32::Resolv","path":"Win32::Resolv::Kernel32","type":"module","visibility":"public"},"Win32::SSPI":{"description":"","name":"SSPI","namespace":"Win32","path":"Win32::SSPI","type":"module","visibility":"public"},"Win32::SSPI::API":{"description":"Win32 API Functions. Uses Win32API to bind methods to constants contained in class.","name":"API","namespace":"Win32::SSPI","path":"Win32::SSPI::API","type":"module","visibility":"public"},"Win32::SSPI::API::AcquireCredentialsHandle":{"description":"Can be called with AcquireCredentialsHandle.call()","name":"AcquireCredentialsHandle","namespace":"Win32::SSPI::API","path":"Win32::SSPI::API::AcquireCredentialsHandle","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::API::DeleteSecurityContext":{"description":"Can be called with DeleteSecurityContext.call()","name":"DeleteSecurityContext","namespace":"Win32::SSPI::API","path":"Win32::SSPI::API::DeleteSecurityContext","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::API::FreeCredentialsHandle":{"description":"Can be called with FreeCredentialsHandle.call()","name":"FreeCredentialsHandle","namespace":"Win32::SSPI::API","path":"Win32::SSPI::API::FreeCredentialsHandle","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::API::InitializeSecurityContext":{"description":"Can be called with InitializeSecurityContext.call()","name":"InitializeSecurityContext","namespace":"Win32::SSPI::API","path":"Win32::SSPI::API::InitializeSecurityContext","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::CredHandle":{"description":"Some familiar aliases for the SecHandle structure","name":"CredHandle","namespace":"Win32::SSPI","path":"Win32::SSPI::CredHandle","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::ISC_REQ_CONFIDENTIALITY":{"description":"","name":"ISC_REQ_CONFIDENTIALITY","namespace":"Win32::SSPI","path":"Win32::SSPI::ISC_REQ_CONFIDENTIALITY","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::ISC_REQ_CONNECTION":{"description":"","name":"ISC_REQ_CONNECTION","namespace":"Win32::SSPI","path":"Win32::SSPI::ISC_REQ_CONNECTION","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::ISC_REQ_PROMPT_FOR_CREDS":{"description":"","name":"ISC_REQ_PROMPT_FOR_CREDS","namespace":"Win32::SSPI","path":"Win32::SSPI::ISC_REQ_PROMPT_FOR_CREDS","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::ISC_REQ_REPLAY_DETECT":{"description":"InitializeSecurityContext Requirement flags","name":"ISC_REQ_REPLAY_DETECT","namespace":"Win32::SSPI","path":"Win32::SSPI::ISC_REQ_REPLAY_DETECT","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::ISC_REQ_SEQUENCE_DETECT":{"description":"","name":"ISC_REQ_SEQUENCE_DETECT","namespace":"Win32::SSPI","path":"Win32::SSPI::ISC_REQ_SEQUENCE_DETECT","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::ISC_REQ_USE_SESSION_KEY":{"description":"","name":"ISC_REQ_USE_SESSION_KEY","namespace":"Win32::SSPI","path":"Win32::SSPI::ISC_REQ_USE_SESSION_KEY","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::Identity":{"description":"SEC_WINNT_AUTH_IDENTITY structure","name":"Identity","namespace":"Win32::SSPI","path":"Win32::SSPI::Identity","type":"class","visibility":"public"},"Win32::SSPI::Identity#domain":{"description":"Returns the value of attribute domain","name":"domain","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#domain","type":"instance_method","visibility":"public"},"Win32::SSPI::Identity#domain=":{"description":"Sets the attribute domain","name":"domain=","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#domain=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute domain to."]]},"Win32::SSPI::Identity#initialize":{"description":"","name":"initialize","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#initialize","type":"instance_method","visibility":"public","return":[["Identity"],"a new instance of Identity"]},"Win32::SSPI::Identity#password":{"description":"Returns the value of attribute password","name":"password","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#password","type":"instance_method","visibility":"public"},"Win32::SSPI::Identity#password=":{"description":"Sets the attribute password","name":"password=","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#password=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute password to."]]},"Win32::SSPI::Identity#to_p":{"description":"","name":"to_p","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#to_p","type":"instance_method","visibility":"public"},"Win32::SSPI::Identity#user":{"description":"Returns the value of attribute user","name":"user","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#user","type":"instance_method","visibility":"public"},"Win32::SSPI::Identity#user=":{"description":"Sets the attribute user","name":"user=","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity#user=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute user to."]]},"Win32::SSPI::Identity::SEC_WINNT_AUTH_IDENTITY_ANSI":{"description":"","name":"SEC_WINNT_AUTH_IDENTITY_ANSI","namespace":"Win32::SSPI::Identity","path":"Win32::SSPI::Identity::SEC_WINNT_AUTH_IDENTITY_ANSI","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::NegotiateAuth":{"description":"Handles \"Negotiate\" type authentication. Geared towards authenticating with a proxy server over HTTP","name":"NegotiateAuth","namespace":"Win32::SSPI","path":"Win32::SSPI::NegotiateAuth","type":"class","visibility":"public"},"Win32::SSPI::NegotiateAuth#clean_up":{"description":"","name":"clean_up","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#clean_up","type":"instance_method","visibility":"private"},"Win32::SSPI::NegotiateAuth#complete_authentication":{"description":"Takes a token and gets the next token in the Negotiate authentication chain. Token can be Base64 encoded or not.\nThe token can include the \"Negotiate\" header and it will be stripped.\nDoes not indicate if SEC_I_CONTINUE or SEC_E_OK was returned.\nToken returned is Base64 encoded w/ all new lines removed.","name":"complete_authentication","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#complete_authentication","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#context":{"description":"Returns the value of attribute context","name":"context","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#context","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#context=":{"description":"Sets the attribute context","name":"context=","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#context=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute context to."]]},"Win32::SSPI::NegotiateAuth#contextAttributes":{"description":"Returns the value of attribute contextAttributes","name":"contextAttributes","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#contextAttributes","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#contextAttributes=":{"description":"Sets the attribute contextAttributes","name":"contextAttributes=","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#contextAttributes=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute contextAttributes to."]]},"Win32::SSPI::NegotiateAuth#credentials":{"description":"Returns the value of attribute credentials","name":"credentials","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#credentials","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#credentials=":{"description":"Sets the attribute credentials","name":"credentials=","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#credentials=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute credentials to."]]},"Win32::SSPI::NegotiateAuth#domain":{"description":"Returns the value of attribute domain","name":"domain","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#domain","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#domain=":{"description":"Sets the attribute domain","name":"domain=","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#domain=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute domain to."]]},"Win32::SSPI::NegotiateAuth#encode_token":{"description":"","name":"encode_token","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#encode_token","type":"instance_method","visibility":"private"},"Win32::SSPI::NegotiateAuth#get_credentials":{"description":"Gets credentials based on user, domain or both. If both are nil, an error occurs","name":"get_credentials","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#get_credentials","type":"instance_method","visibility":"private"},"Win32::SSPI::NegotiateAuth#get_initial_token":{"description":"Gets the initial Negotiate token. Returns it as a base64 encoded string suitable for use in HTTP. Can\nbe easily decoded, however.","name":"get_initial_token","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#get_initial_token","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#initialize":{"description":"Creates a new instance ready for authentication as the given user in the given domain.\nDefaults to current user and domain as defined by ENV[\"USERDOMAIN\"] and ENV[\"USERNAME\"] if\nno arguments are supplied.","name":"initialize","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#initialize","type":"instance_method","visibility":"public","return":[["NegotiateAuth"],"a new instance of NegotiateAuth"]},"Win32::SSPI::NegotiateAuth#user":{"description":"Returns the value of attribute user","name":"user","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#user","type":"instance_method","visibility":"public"},"Win32::SSPI::NegotiateAuth#user=":{"description":"Sets the attribute user","name":"user=","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth#user=","type":"instance_method","visibility":"public","parameters":[["value",null,"the value to set the attribute user to."]]},"Win32::SSPI::NegotiateAuth.proxy_auth_get":{"description":"Given a connection and a request path, performs authentication as the current user and returns\nthe response from a GET request. The connnection should be a Net::HTTP object, and it should\nhave been constructed using the Net::HTTP.Proxy method, but anything that responds to \"get\" will work.\nIf a user and domain are given, will authenticate as the given user.\nReturns the response received from the get method (usually Net::HTTPResponse)","name":"proxy_auth_get","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth.proxy_auth_get","type":"class_method","visibility":"public"},"Win32::SSPI::NegotiateAuth::B64_TOKEN_PREFIX":{"description":"NTLM tokens start with this header always. Encoding alone adds \"==\" and newline, so remove those","name":"B64_TOKEN_PREFIX","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth::B64_TOKEN_PREFIX","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::NegotiateAuth::REQUEST_FLAGS":{"description":"Default request flags for SSPI functions","name":"REQUEST_FLAGS","namespace":"Win32::SSPI::NegotiateAuth","path":"Win32::SSPI::NegotiateAuth::REQUEST_FLAGS","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SECPKG_CRED_BOTH":{"description":"","name":"SECPKG_CRED_BOTH","namespace":"Win32::SSPI","path":"Win32::SSPI::SECPKG_CRED_BOTH","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SECPKG_CRED_INBOUND":{"description":"Specifies how credential structure requested will be used. Only SECPKG_CRED_OUTBOUND is used\nhere.","name":"SECPKG_CRED_INBOUND","namespace":"Win32::SSPI","path":"Win32::SSPI::SECPKG_CRED_INBOUND","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SECPKG_CRED_OUTBOUND":{"description":"","name":"SECPKG_CRED_OUTBOUND","namespace":"Win32::SSPI","path":"Win32::SSPI::SECPKG_CRED_OUTBOUND","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SECURITY_NATIVE_DREP":{"description":"Format of token. NETWORK format is used here.","name":"SECURITY_NATIVE_DREP","namespace":"Win32::SSPI","path":"Win32::SSPI::SECURITY_NATIVE_DREP","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SECURITY_NETWORK_DREP":{"description":"","name":"SECURITY_NETWORK_DREP","namespace":"Win32::SSPI","path":"Win32::SSPI::SECURITY_NETWORK_DREP","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult":{"description":"Takes a return result from an SSPI function and interprets the value.","name":"SSPIResult","namespace":"Win32::SSPI","path":"Win32::SSPI::SSPIResult","type":"class","visibility":"public"},"Win32::SSPI::SSPIResult#==":{"description":"","name":"==","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult#==","type":"instance_method","visibility":"public"},"Win32::SSPI::SSPIResult#initialize":{"description":"","name":"initialize","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult#initialize","type":"instance_method","visibility":"public","return":[["SSPIResult"],"a new instance of SSPIResult"]},"Win32::SSPI::SSPIResult#ok?":{"description":"","name":"ok?","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult#ok?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Win32::SSPI::SSPIResult#to_s":{"description":"","name":"to_s","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult#to_s","type":"instance_method","visibility":"public"},"Win32::SSPI::SSPIResult#value":{"description":"Returns the value of attribute value","name":"value","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult#value","type":"instance_method","visibility":"public"},"Win32::SSPI::SSPIResult::@@map":{"description":"","name":"@@map","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::@@map","type":"classvariable","visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_INSUFFICIENT_MEMORY":{"description":"These are generally returned by InitializeSecurityContext","name":"SEC_E_INSUFFICIENT_MEMORY","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_INSUFFICIENT_MEMORY","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_INTERNAL_ERROR":{"description":"","name":"SEC_E_INTERNAL_ERROR","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_INTERNAL_ERROR","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_INVALID_HANDLE":{"description":"","name":"SEC_E_INVALID_HANDLE","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_INVALID_HANDLE","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_INVALID_TOKEN":{"description":"","name":"SEC_E_INVALID_TOKEN","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_INVALID_TOKEN","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_LOGON_DENIED":{"description":"","name":"SEC_E_LOGON_DENIED","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_LOGON_DENIED","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_NOT_OWNER":{"description":"These are generally returned by AcquireCredentialsHandle","name":"SEC_E_NOT_OWNER","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_NOT_OWNER","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_NO_AUTHENTICATING_AUTHORITY":{"description":"","name":"SEC_E_NO_AUTHENTICATING_AUTHORITY","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_NO_AUTHENTICATING_AUTHORITY","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_NO_CREDENTIALS":{"description":"","name":"SEC_E_NO_CREDENTIALS","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_NO_CREDENTIALS","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_OK":{"description":"Good results","name":"SEC_E_OK","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_OK","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_SECPKG_NOT_FOUND":{"description":"","name":"SEC_E_SECPKG_NOT_FOUND","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_SECPKG_NOT_FOUND","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_TARGET_UNKNOWN":{"description":"","name":"SEC_E_TARGET_UNKNOWN","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_TARGET_UNKNOWN","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_UNKNOWN_CREDENTIALS":{"description":"","name":"SEC_E_UNKNOWN_CREDENTIALS","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_UNKNOWN_CREDENTIALS","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_UNSUPPORTED_FUNCTION":{"description":"","name":"SEC_E_UNSUPPORTED_FUNCTION","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_UNSUPPORTED_FUNCTION","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_E_WRONG_PRINCIPAL":{"description":"","name":"SEC_E_WRONG_PRINCIPAL","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_E_WRONG_PRINCIPAL","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SSPIResult::SEC_I_CONTINUE_NEEDED":{"description":"","name":"SEC_I_CONTINUE_NEEDED","namespace":"Win32::SSPI::SSPIResult","path":"Win32::SSPI::SSPIResult::SEC_I_CONTINUE_NEEDED","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SecurityBuffer":{"description":"Creates binary representaiton of a SecBufferDesc structure,\nincluding the SecBuffer contained inside.","name":"SecurityBuffer","namespace":"Win32::SSPI","path":"Win32::SSPI::SecurityBuffer","type":"class","visibility":"public"},"Win32::SSPI::SecurityBuffer#bufferSize":{"description":"","name":"bufferSize","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer#bufferSize","type":"instance_method","visibility":"public"},"Win32::SSPI::SecurityBuffer#bufferType":{"description":"","name":"bufferType","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer#bufferType","type":"instance_method","visibility":"public"},"Win32::SSPI::SecurityBuffer#initialize":{"description":"","name":"initialize","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer#initialize","type":"instance_method","visibility":"public","return":[["SecurityBuffer"],"a new instance of SecurityBuffer"]},"Win32::SSPI::SecurityBuffer#to_p":{"description":"","name":"to_p","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer#to_p","type":"instance_method","visibility":"public"},"Win32::SSPI::SecurityBuffer#token":{"description":"","name":"token","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer#token","type":"instance_method","visibility":"public"},"Win32::SSPI::SecurityBuffer#unpack":{"description":"Unpacks the SecurityBufferDesc structure into member variables. We\nonly want to do this once per struct, so the struct is deleted\nafter unpacking.","name":"unpack","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer#unpack","type":"instance_method","visibility":"private"},"Win32::SSPI::SecurityBuffer::SECBUFFER_TOKEN":{"description":"Security token","name":"SECBUFFER_TOKEN","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer::SECBUFFER_TOKEN","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SecurityBuffer::SECBUFFER_VERSION":{"description":"","name":"SECBUFFER_VERSION","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer::SECBUFFER_VERSION","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SecurityBuffer::TOKENBUFSIZE":{"description":"","name":"TOKENBUFSIZE","namespace":"Win32::SSPI::SecurityBuffer","path":"Win32::SSPI::SecurityBuffer::TOKENBUFSIZE","type":"constant","return":null,"visibility":"public"},"Win32::SSPI::SecurityHandle":{"description":"SecHandle struct","name":"SecurityHandle","namespace":"Win32::SSPI","path":"Win32::SSPI::SecurityHandle","type":"class","visibility":"public"},"Win32::SSPI::SecurityHandle#lower":{"description":"","name":"lower","namespace":"Win32::SSPI::SecurityHandle","path":"Win32::SSPI::SecurityHandle#lower","type":"instance_method","visibility":"public"},"Win32::SSPI::SecurityHandle#to_p":{"description":"","name":"to_p","namespace":"Win32::SSPI::SecurityHandle","path":"Win32::SSPI::SecurityHandle#to_p","type":"instance_method","visibility":"public"},"Win32::SSPI::SecurityHandle#upper":{"description":"","name":"upper","namespace":"Win32::SSPI::SecurityHandle","path":"Win32::SSPI::SecurityHandle#upper","type":"instance_method","visibility":"public"},"Win32::SSPI::TimeStamp":{"description":"TimeStamp struct","name":"TimeStamp","namespace":"Win32::SSPI","path":"Win32::SSPI::TimeStamp","type":"class","visibility":"public"},"Win32::SSPI::TimeStamp#struct":{"description":"Returns the value of attribute struct","name":"struct","namespace":"Win32::SSPI::TimeStamp","path":"Win32::SSPI::TimeStamp#struct","type":"instance_method","visibility":"public"},"Win32::SSPI::TimeStamp#to_p":{"description":"","name":"to_p","namespace":"Win32::SSPI::TimeStamp","path":"Win32::SSPI::TimeStamp#to_p","type":"instance_method","visibility":"public"},"Win32::WCHAR":{"description":"= Win32 Registry\n\nwin32/registry is registry accessor library for Win32 platform.\nIt uses importer to call Win32 Registry APIs.\n\n== example\n  Win32::Registry::HKEY_CURRENT_USER.open('SOFTWARE\\foo') do |reg|\n    value = reg['foo']                               # read a value\n    value = reg['foo', Win32::Registry::REG_SZ]      # read a value with type\n    type, value = reg.read('foo')                    # read a value\n    reg['foo'] = 'bar'                               # write a value\n    reg['foo', Win32::Registry::REG_SZ] = 'bar'      # write a value with type\n    reg.write('foo', Win32::Registry::REG_SZ, 'bar') # write a value\n\n    reg.each_value { |name, type, data| ... }        # Enumerate values\n    reg.each_key { |key, wtime| ... }                # Enumerate subkeys\n\n    reg.delete_value(name)                         # Delete a value\n    reg.delete_key(name)                           # Delete a subkey\n    reg.delete_key(name, true)                     # Delete a subkey recursively\n  end\n\n= Reference\n\n== Win32::Registry class\n\n--- info\n\n--- num_keys\n\n--- max_key_length\n\n--- num_values\n\n--- max_value_name_length\n\n--- max_value_length\n\n--- descriptor_length\n\n--- wtime\n    Returns an item of key information.\n\n=== constants\n--- HKEY_CLASSES_ROOT\n\n--- HKEY_CURRENT_USER\n\n--- HKEY_LOCAL_MACHINE\n\n--- HKEY_PERFORMANCE_DATA\n\n--- HKEY_CURRENT_CONFIG\n\n--- HKEY_DYN_DATA\n\n    Win32::Registry object whose key is predefined key.\nFor detail, see the MSDN[http://msdn.microsoft.com/library/en-us/sysinfo/base/predefined_keys.asp] article.","name":"WCHAR","namespace":"Win32","path":"Win32::WCHAR","type":"constant","return":null,"visibility":"public"},"Win32::WCHAR_CR":{"description":"","name":"WCHAR_CR","namespace":"Win32","path":"Win32::WCHAR_CR","type":"constant","return":null,"visibility":"public"},"Win32::WCHAR_NUL":{"description":"","name":"WCHAR_NUL","namespace":"Win32","path":"Win32::WCHAR_NUL","type":"constant","return":null,"visibility":"public"},"Win32::WCHAR_SIZE":{"description":"","name":"WCHAR_SIZE","namespace":"Win32","path":"Win32::WCHAR_SIZE","type":"constant","return":null,"visibility":"public"},"WIN32OLE":{"description":"<code>WIN32OLE</code> objects represent OLE Automation object in Ruby.\n\n  By using WIN32OLE, you can access OLE server like VBScript.\n\n  Here is sample script.\n\n    require 'win32ole'\n\n    excel = WIN32OLE.new('Excel.Application')\n    excel.visible = true\n    workbook = excel.Workbooks.Add();\n    worksheet = workbook.Worksheets(1);\n    worksheet.Range(\"A1:D1\").value = [\"North\",\"South\",\"East\",\"West\"];\n    worksheet.Range(\"A2:B2\").value = [5.2, 10];\n    worksheet.Range(\"C2\").value = 8;\n    worksheet.Range(\"D2\").value = 20;\n\n    range = worksheet.Range(\"A1:D2\");\n    range.select\n    chart = workbook.Charts.Add;\n\n    workbook.saved = true;\n\n    excel.ActiveWorkbook.Close(0);\n    excel.Quit();\n\n  Unfortunately, Win32OLE doesn't support the argument passed by\n  reference directly.\n  Instead, Win32OLE provides WIN32OLE::ARGV or WIN32OLE_VARIANT object.\n  If you want to get the result value of argument passed by reference,\n  you can use WIN32OLE::ARGV or WIN32OLE_VARIANT.\n\n    oleobj.method(arg1, arg2, refargv3)\n    puts WIN32OLE::ARGV[2]   # the value of refargv3 after called oleobj.method\n\n  or\n\n    refargv3 = WIN32OLE_VARIANT.new(XXX,\n                WIN32OLE::VARIANT::VT_BYREF|WIN32OLE::VARIANT::VT_XXX)\n    oleobj.method(arg1, arg2, refargv3)\n    p refargv3.value # the value of refargv3 after called oleobj.method.","name":"WIN32OLE","namespace":"","path":"WIN32OLE","type":"class","visibility":"public"},"WIN32OLE#[]":{"description":"Returns the value of Collection specified by a1, a2,....\n\n   dict = WIN32OLE.new('Scripting.Dictionary')\n   dict.add('ruby', 'Ruby')\n   puts dict['ruby'] # => 'Ruby' (same as `puts dict.item('ruby')')\n\nRemark: You can not use this method to get the property.\n   excel = WIN32OLE.new('Excel.Application')\n   # puts excel['Visible']  This is error !!!\n   puts excel.Visible # You should to use this style to get the property.","name":"[]","namespace":"WIN32OLE","path":"WIN32OLE#[]","type":"instance_method","visibility":"public"},"WIN32OLE#[]=":{"description":"Sets the value to WIN32OLE object specified by a1, a2, ...\n\n   dict = WIN32OLE.new('Scripting.Dictionary')\n   dict.add('ruby', 'RUBY')\n   dict['ruby'] = 'Ruby'\n   puts dict['ruby'] # => 'Ruby'\n\nRemark: You can not use this method to set the property value.\n\n   excel = WIN32OLE.new('Excel.Application')\n   # excel['Visible'] = true # This is error !!!\n   excel.Visible = true # You should to use this style to set the property.","name":"[]=","namespace":"WIN32OLE","path":"WIN32OLE#[]=","type":"instance_method","visibility":"public"},"WIN32OLE#_getproperty":{"description":"Runs the early binding method to get property.\nThe 1st argument specifies dispatch ID,\nthe 2nd argument specifies the array of arguments,\nthe 3rd argument specifies the array of the type of arguments.\n\n   excel = WIN32OLE.new('Excel.Application')\n   puts excel._getproperty(558, [], []) # same effect as puts excel.visible","name":"_getproperty","namespace":"WIN32OLE","path":"WIN32OLE#_getproperty","type":"instance_method","visibility":"public"},"WIN32OLE#_invoke":{"description":"Runs the early binding method.\nThe 1st argument specifies dispatch ID,\nthe 2nd argument specifies the array of arguments,\nthe 3rd argument specifies the array of the type of arguments.\n\n   excel = WIN32OLE.new('Excel.Application')\n   excel._invoke(302, [], []) #  same effect as excel.Quit","name":"_invoke","namespace":"WIN32OLE","path":"WIN32OLE#_invoke","type":"instance_method","visibility":"public"},"WIN32OLE#_setproperty":{"description":"Runs the early binding method to set property.\nThe 1st argument specifies dispatch ID,\nthe 2nd argument specifies the array of arguments,\nthe 3rd argument specifies the array of the type of arguments.\n\n   excel = WIN32OLE.new('Excel.Application')\n   excel._setproperty(558, [true], [WIN32OLE::VARIANT::VT_BOOL]) # same effect as excel.visible = true","name":"_setproperty","namespace":"WIN32OLE","path":"WIN32OLE#_setproperty","type":"instance_method","visibility":"public"},"WIN32OLE#each":{"description":"Iterates over each item of OLE collection which has IEnumVARIANT interface.\n\n   excel = WIN32OLE.new('Excel.Application')\n   book = excel.workbooks.add\n   sheets = book.worksheets(1)\n   cells = sheets.cells(\"A1:A5\")\n   cells.each do |cell|\n     cell.value = 10\n   end","name":"each","namespace":"WIN32OLE","path":"WIN32OLE#each","type":"instance_method","visibility":"public"},"WIN32OLE#initialize":{"description":"Returns a new WIN32OLE object(OLE Automation object).\nThe first argument server specifies OLE Automation server.\nThe first argument should be CLSID or PROGID.\nIf second argument host specified, then returns OLE Automation\nobject on host.\n\n    WIN32OLE.new('Excel.Application') # => Excel OLE Automation WIN32OLE object.\n    WIN32OLE.new('{00024500-0000-0000-C000-000000000046}') # => Excel OLE Automation WIN32OLE object.","name":"initialize","namespace":"WIN32OLE","path":"WIN32OLE#initialize","type":"instance_method","visibility":"public"},"WIN32OLE#invoke":{"description":"Runs OLE method.\nThe first argument specifies the method name of OLE Automation object.\nThe others specify argument of the <i>method</i>.\nIf you can not execute <i>method</i> directly, then use this method instead.\n\n  excel = WIN32OLE.new('Excel.Application')\n  excel.invoke('Quit')  # => same as excel.Quit","name":"invoke","namespace":"WIN32OLE","path":"WIN32OLE#invoke","type":"instance_method","visibility":"public"},"WIN32OLE#method_missing":{"description":"Calls WIN32OLE#invoke method.","name":"method_missing","namespace":"WIN32OLE","path":"WIN32OLE#method_missing","type":"instance_method","visibility":"public"},"WIN32OLE#ole_activex_initialize":{"description":"Initialize WIN32OLE object(ActiveX Control) by calling\nIPersistMemory::InitNew.\n\nBefore calling OLE method, some kind of the ActiveX controls\ncreated with MFC should be initialized by calling\nIPersistXXX::InitNew.\n\nIf and only if you received the exception \"HRESULT error code:\n0x8000ffff catastrophic failure\", try this method before\ninvoking any ole_method.\n\n   obj = WIN32OLE.new(\"ProgID_or_GUID_of_ActiveX_Control\")\n   obj.ole_activex_initialize\n   obj.method(...)","name":"ole_activex_initialize","namespace":"WIN32OLE","path":"WIN32OLE#ole_activex_initialize","type":"instance_method","visibility":"public"},"WIN32OLE#ole_free":{"description":"invokes Release method of Dispatch interface of WIN32OLE object.\nUsually, you do not need to call this method because Release method\ncalled automatically when WIN32OLE object garbaged.","name":"ole_free","namespace":"WIN32OLE","path":"WIN32OLE#ole_free","type":"instance_method","visibility":"public"},"WIN32OLE#ole_func_methods":{"description":"Returns the array of WIN32OLE_METHOD object .\nThe element of the array is property (settable) of WIN32OLE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   properties = excel.ole_func_methods","name":"ole_func_methods","namespace":"WIN32OLE","path":"WIN32OLE#ole_func_methods","type":"instance_method","visibility":"public"},"WIN32OLE#ole_get_methods":{"description":"Returns the array of WIN32OLE_METHOD object .\nThe element of the array is property (gettable) of WIN32OLE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   properties = excel.ole_get_methods","name":"ole_get_methods","namespace":"WIN32OLE","path":"WIN32OLE#ole_get_methods","type":"instance_method","visibility":"public"},"WIN32OLE#ole_method":{"description":"Returns WIN32OLE_METHOD object corresponding with method\nspecified by 1st argument.\n\n   excel = WIN32OLE.new('Excel.Application')\n   method = excel.ole_method_help('Quit')","name":"ole_method_help","namespace":"WIN32OLE","path":"WIN32OLE#ole_method_help","type":"instance_method","visibility":"public"},"WIN32OLE#ole_method_help":{"description":"Returns WIN32OLE_METHOD object corresponding with method\nspecified by 1st argument.\n\n   excel = WIN32OLE.new('Excel.Application')\n   method = excel.ole_method_help('Quit')","name":"ole_method_help","namespace":"WIN32OLE","path":"WIN32OLE#ole_method_help","type":"instance_method","visibility":"public"},"WIN32OLE#ole_methods":{"description":"Returns the array of WIN32OLE_METHOD object.\nThe element is OLE method of WIN32OLE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   methods = excel.ole_methods","name":"ole_methods","namespace":"WIN32OLE","path":"WIN32OLE#ole_methods","type":"instance_method","visibility":"public"},"WIN32OLE#ole_obj_help":{"description":"Returns WIN32OLE_TYPE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   tobj = excel.ole_type","name":"ole_obj_help","namespace":"WIN32OLE","path":"WIN32OLE#ole_obj_help","type":"instance_method","visibility":"public"},"WIN32OLE#ole_put_methods":{"description":"Returns the array of WIN32OLE_METHOD object .\nThe element of the array is property (settable) of WIN32OLE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   properties = excel.ole_put_methods","name":"ole_put_methods","namespace":"WIN32OLE","path":"WIN32OLE#ole_put_methods","type":"instance_method","visibility":"public"},"WIN32OLE#ole_query_interface":{"description":"Returns WIN32OLE object for a specific dispatch or dual\ninterface specified by iid.\n\n    ie = WIN32OLE.new('InternetExplorer.Application')\n    ie_web_app = ie.ole_query_interface('{0002DF05-0000-0000-C000-000000000046}') # => WIN32OLE object for dispinterface IWebBrowserApp","name":"ole_query_interface","namespace":"WIN32OLE","path":"WIN32OLE#ole_query_interface","type":"instance_method","visibility":"public"},"WIN32OLE#ole_respond_to?":{"description":"Returns true when OLE object has OLE method, otherwise returns false.\n\n    ie = WIN32OLE.new('InternetExplorer.Application')\n    ie.ole_respond_to?(\"gohome\") => true","name":"ole_respond_to?","namespace":"WIN32OLE","path":"WIN32OLE#ole_respond_to?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE#ole_type":{"description":"Returns WIN32OLE_TYPE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   tobj = excel.ole_type","name":"ole_obj_help","namespace":"WIN32OLE","path":"WIN32OLE#ole_obj_help","type":"instance_method","visibility":"public"},"WIN32OLE#ole_typelib":{"description":"Returns the WIN32OLE_TYPELIB object. The object represents the\ntype library which contains the WIN32OLE object.\n\n   excel = WIN32OLE.new('Excel.Application')\n   tlib = excel.ole_typelib\n   puts tlib.name  # -> 'Microsoft Excel 9.0 Object Library'","name":"ole_typelib","namespace":"WIN32OLE","path":"WIN32OLE#ole_typelib","type":"instance_method","visibility":"public"},"WIN32OLE#setproperty":{"description":"Sets property of OLE object.\nWhen you want to set property with argument, you can use this method.\n\n   excel = WIN32OLE.new('Excel.Application')\n   excel.Visible = true\n   book = excel.workbooks.add\n   sheet = book.worksheets(1)\n   sheet.setproperty('Cells', 1, 2, 10) # => The B1 cell value is 10.","name":"setproperty","namespace":"WIN32OLE","path":"WIN32OLE#setproperty","type":"instance_method","visibility":"public"},"WIN32OLE.codepage":{"description":"Returns current codepage.\n   WIN32OLE.codepage # => WIN32OLE::CP_ACP","name":"codepage","namespace":"WIN32OLE","path":"WIN32OLE.codepage","type":"class_method","visibility":"public"},"WIN32OLE.codepage=":{"description":"Sets current codepage.\nThe WIN32OLE.codepage is initialized according to\nEncoding.default_internal.\nIf Encoding.default_internal is nil then WIN32OLE.codepage\nis initialized according to Encoding.default_external.\n\n   WIN32OLE.codepage = WIN32OLE::CP_UTF8\n   WIN32OLE.codepage = 65001","name":"codepage=","namespace":"WIN32OLE","path":"WIN32OLE.codepage=","type":"class_method","visibility":"public"},"WIN32OLE.connect":{"description":"Returns running OLE Automation object or WIN32OLE object from moniker.\n1st argument should be OLE program id or class id or moniker.\n\n   WIN32OLE.connect('Excel.Application') # => WIN32OLE object which represents running Excel.","name":"connect","namespace":"WIN32OLE","path":"WIN32OLE.connect","type":"class_method","visibility":"public"},"WIN32OLE.const_load":{"description":"Defines the constants of OLE Automation server as mod's constants.\nThe first argument is WIN32OLE object or type library name.\nIf 2nd argument is omitted, the default is WIN32OLE.\nThe first letter of Ruby's constant variable name is upper case,\nso constant variable name of WIN32OLE object is capitalized.\nFor example, the 'xlTop' constant of Excel is changed to 'XlTop'\nin WIN32OLE.\nIf the first letter of constant variable is not [A-Z], then\nthe constant is defined as CONSTANTS hash element.\n\n   module EXCEL_CONST\n   end\n   excel = WIN32OLE.new('Excel.Application')\n   WIN32OLE.const_load(excel, EXCEL_CONST)\n   puts EXCEL_CONST::XlTop # => -4160\n   puts EXCEL_CONST::CONSTANTS['_xlDialogChartSourceData'] # => 541\n\n   WIN32OLE.const_load(excel)\n   puts WIN32OLE::XlTop # => -4160\n\n   module MSO\n   end\n   WIN32OLE.const_load('Microsoft Office 9.0 Object Library', MSO)\n   puts MSO::MsoLineSingle # => 1","name":"const_load","namespace":"WIN32OLE","path":"WIN32OLE.const_load","type":"class_method","visibility":"public"},"WIN32OLE.create_guid":{"description":"Creates GUID.\n   WIN32OLE.create_guid # => {1CB530F1-F6B1-404D-BCE6-1959BF91F4A8}","name":"create_guid","namespace":"WIN32OLE","path":"WIN32OLE.create_guid","type":"class_method","visibility":"public"},"WIN32OLE.locale":{"description":"Returns current locale id (lcid). The default locale is\nWIN32OLE::LOCALE_SYSTEM_DEFAULT.\n\n   lcid = WIN32OLE.locale","name":"locale","namespace":"WIN32OLE","path":"WIN32OLE.locale","type":"class_method","visibility":"public"},"WIN32OLE.locale=":{"description":"Sets current locale id (lcid).\n\n   WIN32OLE.locale = 1033 # set locale English(U.S)\n   obj = WIN32OLE_VARIANT.new(\"$100,000\", WIN32OLE::VARIANT::VT_CY)","name":"locale=","namespace":"WIN32OLE","path":"WIN32OLE.locale=","type":"class_method","visibility":"public"},"WIN32OLE.ole_free":{"description":"Invokes Release method of Dispatch interface of WIN32OLE object.\nYou should not use this method because this method\nexists only for debugging WIN32OLE.\nThe return value is reference counter of OLE object.","name":"ole_free","namespace":"WIN32OLE","path":"WIN32OLE.ole_free","type":"class_method","visibility":"public"},"WIN32OLE.ole_initialize":{"description":":nodoc:","name":"ole_initialize","namespace":"WIN32OLE","path":"WIN32OLE.ole_initialize","type":"class_method","visibility":"public"},"WIN32OLE.ole_reference_count":{"description":"Returns reference counter of Dispatch interface of WIN32OLE object.\nYou should not use this method because this method\nexists only for debugging WIN32OLE.","name":"ole_reference_count","namespace":"WIN32OLE","path":"WIN32OLE.ole_reference_count","type":"class_method","visibility":"public"},"WIN32OLE.ole_show_help":{"description":"Displays helpfile. The 1st argument specifies WIN32OLE_TYPE\nobject or WIN32OLE_METHOD object or helpfile.\n\n   excel = WIN32OLE.new('Excel.Application')\n   typeobj = excel.ole_type\n   WIN32OLE.ole_show_help(typeobj)","name":"ole_show_help","namespace":"WIN32OLE","path":"WIN32OLE.ole_show_help","type":"class_method","visibility":"public"},"WIN32OLE.ole_uninitialize":{"description":":nodoc:","name":"ole_uninitialize","namespace":"WIN32OLE","path":"WIN32OLE.ole_uninitialize","type":"class_method","visibility":"public"},"WIN32OLE::ARGV":{"description":"void calcsum(int a, int b, out int c) {\n      c = a + b;\n  }\n\nthen, the Ruby OLE(COM) client script to retrieve the value of\nargument c after invoking calcsum method is following:\n\n  a = 10\n  b = 20\n  c = 0\n  comserver.calcsum(a, b, c)\n  p c # => 0\n  p WIN32OLE::ARGV # => [10, 20, 30]\n\nYou can use WIN32OLE_VARIANT object to retrieve the value of reference\narguments instead of refering WIN32OLE::ARGV.","name":"ARGV","namespace":"WIN32OLE","path":"WIN32OLE::ARGV","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_ACP":{"description":"ANSI code page. See WIN32OLE.codepage and WIN32OLE.codepage=.","name":"CP_ACP","namespace":"WIN32OLE","path":"WIN32OLE::CP_ACP","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_MACCP":{"description":"2","name":"CP_MACCP","namespace":"WIN32OLE","path":"WIN32OLE::CP_MACCP","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_OEMCP":{"description":"OEM code page. See WIN32OLE.codepage and WIN32OLE.codepage=.","name":"CP_OEMCP","namespace":"WIN32OLE","path":"WIN32OLE::CP_OEMCP","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_SYMBOL":{"description":"symbol code page. See WIN32OLE.codepage and WIN32OLE.codepage=.","name":"CP_SYMBOL","namespace":"WIN32OLE","path":"WIN32OLE::CP_SYMBOL","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_THREAD_ACP":{"description":"current thread ANSI code page. See WIN32OLE.codepage and\nWIN32OLE.codepage=.","name":"CP_THREAD_ACP","namespace":"WIN32OLE","path":"WIN32OLE::CP_THREAD_ACP","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_UTF7":{"description":"UTF-7 code page. See WIN32OLE.codepage and WIN32OLE.codepage=.","name":"CP_UTF7","namespace":"WIN32OLE","path":"WIN32OLE::CP_UTF7","type":"constant","return":null,"visibility":"public"},"WIN32OLE::CP_UTF8":{"description":"UTF-8 code page. See WIN32OLE.codepage and WIN32OLE.codepage=.","name":"CP_UTF8","namespace":"WIN32OLE","path":"WIN32OLE::CP_UTF8","type":"constant","return":null,"visibility":"public"},"WIN32OLE::LOCALE_SYSTEM_DEFAULT":{"description":"default locale for the operating system. See WIN32OLE.locale\nand WIN32OLE.locale=.","name":"LOCALE_SYSTEM_DEFAULT","namespace":"WIN32OLE","path":"WIN32OLE::LOCALE_SYSTEM_DEFAULT","type":"constant","return":null,"visibility":"public"},"WIN32OLE::LOCALE_USER_DEFAULT":{"description":"default locale for the user or process. See WIN32OLE.locale\nand WIN32OLE.locale=.","name":"LOCALE_USER_DEFAULT","namespace":"WIN32OLE","path":"WIN32OLE::LOCALE_USER_DEFAULT","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT":{"description":"The WIN32OLE::VARIANT module includes constants of VARIANT type constants.\nThe constants is used when creating WIN32OLE_VARIANT object.\n\n  obj = WIN32OLE_VARIANT.new(\"2e3\", WIN32OLE::VARIANT::VT_R4)\n  obj.value # => 2000.0","name":"VARIANT","namespace":"WIN32OLE","path":"WIN32OLE::VARIANT","type":"module","visibility":"public"},"WIN32OLE::VARIANT::VT_ARRAY":{"description":"represents VT_ARRAY type constant.","name":"VT_ARRAY","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_ARRAY","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_BOOL":{"description":"represents VT_BOOL type constant.","name":"VT_BOOL","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_BOOL","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_BSTR":{"description":"represents VT_BSTR type constant.","name":"VT_BSTR","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_BSTR","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_BYREF":{"description":"represents VT_BYREF type constant.","name":"VT_BYREF","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_BYREF","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_CY":{"description":"represents VT_CY type constant.","name":"VT_CY","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_CY","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_DATE":{"description":"represents VT_DATE type constant.","name":"VT_DATE","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_DATE","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_DISPATCH":{"description":"represents VT_DISPATCH type constant.","name":"VT_DISPATCH","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_DISPATCH","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_EMPTY":{"description":"represents VT_EMPTY type constant.","name":"VT_EMPTY","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_EMPTY","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_ERROR":{"description":"represents VT_ERROR type constant.","name":"VT_ERROR","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_ERROR","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_I1":{"description":"represents VT_I1 type constant.","name":"VT_I1","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_I1","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_I2":{"description":"represents VT_I2 type constant.","name":"VT_I2","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_I2","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_I4":{"description":"represents VT_I4 type constant.","name":"VT_I4","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_I4","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_I8":{"description":"represents VT_I8 type constant.","name":"VT_I8","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_I8","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_INT":{"description":"represents VT_INT type constant.","name":"VT_INT","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_INT","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_NULL":{"description":"represents VT_NULL type constant.","name":"VT_NULL","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_NULL","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_PTR":{"description":"represents VT_PTR type constant.","name":"VT_PTR","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_PTR","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_R4":{"description":"represents VT_R4 type constant.","name":"VT_R4","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_R4","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_R8":{"description":"represents VT_R8 type constant.","name":"VT_R8","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_R8","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_UI1":{"description":"represents VT_UI1 type constant.","name":"VT_UI1","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_UI1","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_UI2":{"description":"represents VT_UI2 type constant.","name":"VT_UI2","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_UI2","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_UI4":{"description":"represents VT_UI4 type constant.","name":"VT_UI4","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_UI4","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_UI8":{"description":"represents VT_UI8 type constant.","name":"VT_UI8","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_UI8","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_UINT":{"description":"represents VT_UINT type constant.","name":"VT_UINT","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_UINT","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_UNKNOWN":{"description":"represents VT_UNKNOWN type constant.","name":"VT_UNKNOWN","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_UNKNOWN","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_USERDEFINED":{"description":"represents VT_USERDEFINED type constant.","name":"VT_USERDEFINED","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_USERDEFINED","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VARIANT::VT_VARIANT":{"description":"represents VT_VARIANT type constant.","name":"VT_VARIANT","namespace":"WIN32OLE::VARIANT","path":"WIN32OLE::VARIANT::VT_VARIANT","type":"constant","return":null,"visibility":"public"},"WIN32OLE::VERSION":{"description":"Version string of WIN32OLE.","name":"VERSION","namespace":"WIN32OLE","path":"WIN32OLE::VERSION","type":"constant","return":null,"visibility":"public"},"IXMLDOMImplementation":{"description":"","name":"IXMLDOMImplementation","namespace":"","path":"IXMLDOMImplementation","type":"module","visibility":"public"},"IXMLDOMImplementation#hasFeature":{"description":"BOOL hasFeature\n  BSTR arg0 --- feature [IN]\n  BSTR arg1 --- version [IN]","name":"hasFeature","namespace":"IXMLDOMImplementation","path":"IXMLDOMImplementation#hasFeature","type":"module_function","visibility":"public"},"IXMLDOMImplementation#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMImplementation","path":"IXMLDOMImplementation#lastargs","type":"module_function","visibility":"public"},"IXMLDOMNode":{"description":"Core DOM node interface","name":"IXMLDOMNode","namespace":"","path":"IXMLDOMNode","type":"module","visibility":"public"},"IXMLDOMNode#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMNode","path":"IXMLDOMNode#appendChild","type":"module_function","visibility":"public"},"IXMLDOMNode#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMNode","path":"IXMLDOMNode#attributes","type":"module_function","visibility":"public"},"IXMLDOMNode#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMNode","path":"IXMLDOMNode#baseName","type":"module_function","visibility":"public"},"IXMLDOMNode#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMNode","path":"IXMLDOMNode#childNodes","type":"module_function","visibility":"public"},"IXMLDOMNode#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMNode","path":"IXMLDOMNode#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMNode#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMNode","path":"IXMLDOMNode#dataType","type":"module_function","visibility":"public"},"IXMLDOMNode#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMNode","path":"IXMLDOMNode#dataType=","type":"module_function","visibility":"public"},"IXMLDOMNode#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMNode","path":"IXMLDOMNode#definition","type":"module_function","visibility":"public"},"IXMLDOMNode#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMNode","path":"IXMLDOMNode#firstChild","type":"module_function","visibility":"public"},"IXMLDOMNode#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMNode","path":"IXMLDOMNode#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMNode#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMNode","path":"IXMLDOMNode#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMNode#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMNode","path":"IXMLDOMNode#lastChild","type":"module_function","visibility":"public"},"IXMLDOMNode#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMNode","path":"IXMLDOMNode#lastargs","type":"module_function","visibility":"public"},"IXMLDOMNode#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMNode","path":"IXMLDOMNode#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMNode#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeName","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeType","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMNode#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMNode","path":"IXMLDOMNode#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMNode#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMNode","path":"IXMLDOMNode#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMNode#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMNode","path":"IXMLDOMNode#parentNode","type":"module_function","visibility":"public"},"IXMLDOMNode#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMNode","path":"IXMLDOMNode#parsed","type":"module_function","visibility":"public"},"IXMLDOMNode#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMNode","path":"IXMLDOMNode#prefix","type":"module_function","visibility":"public"},"IXMLDOMNode#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMNode","path":"IXMLDOMNode#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMNode#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMNode","path":"IXMLDOMNode#removeChild","type":"module_function","visibility":"public"},"IXMLDOMNode#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMNode","path":"IXMLDOMNode#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMNode#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMNode","path":"IXMLDOMNode#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMNode#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMNode","path":"IXMLDOMNode#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMNode#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMNode","path":"IXMLDOMNode#specified","type":"module_function","visibility":"public"},"IXMLDOMNode#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMNode","path":"IXMLDOMNode#text","type":"module_function","visibility":"public"},"IXMLDOMNode#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMNode","path":"IXMLDOMNode#text=","type":"module_function","visibility":"public"},"IXMLDOMNode#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMNode","path":"IXMLDOMNode#transformNode","type":"module_function","visibility":"public"},"IXMLDOMNode#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMNode","path":"IXMLDOMNode#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMNode#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMNode","path":"IXMLDOMNode#xml","type":"module_function","visibility":"public"},"OLEtagDOMNodeType":{"description":"Constants that define a node's type","name":"OLEtagDOMNodeType","namespace":"","path":"OLEtagDOMNodeType","type":"module","visibility":"public"},"OLEtagDOMNodeType#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType#lastargs","type":"module_function","visibility":"public"},"OLEtagDOMNodeType::NODE_ATTRIBUTE":{"description":"","name":"NODE_ATTRIBUTE","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_ATTRIBUTE","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_CDATA_SECTION":{"description":"","name":"NODE_CDATA_SECTION","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_CDATA_SECTION","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_COMMENT":{"description":"","name":"NODE_COMMENT","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_COMMENT","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_DOCUMENT":{"description":"","name":"NODE_DOCUMENT","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_DOCUMENT","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_DOCUMENT_FRAGMENT":{"description":"","name":"NODE_DOCUMENT_FRAGMENT","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_DOCUMENT_FRAGMENT","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_DOCUMENT_TYPE":{"description":"","name":"NODE_DOCUMENT_TYPE","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_DOCUMENT_TYPE","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_ELEMENT":{"description":"","name":"NODE_ELEMENT","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_ELEMENT","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_ENTITY":{"description":"","name":"NODE_ENTITY","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_ENTITY","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_ENTITY_REFERENCE":{"description":"","name":"NODE_ENTITY_REFERENCE","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_ENTITY_REFERENCE","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_INVALID":{"description":"","name":"NODE_INVALID","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_INVALID","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_NOTATION":{"description":"","name":"NODE_NOTATION","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_NOTATION","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_PROCESSING_INSTRUCTION":{"description":"","name":"NODE_PROCESSING_INSTRUCTION","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_PROCESSING_INSTRUCTION","type":"constant","return":null,"visibility":"public"},"OLEtagDOMNodeType::NODE_TEXT":{"description":"","name":"NODE_TEXT","namespace":"OLEtagDOMNodeType","path":"OLEtagDOMNodeType::NODE_TEXT","type":"constant","return":null,"visibility":"public"},"IXMLDOMNodeList":{"description":"","name":"IXMLDOMNodeList","namespace":"","path":"IXMLDOMNodeList","type":"module","visibility":"public"},"IXMLDOMNodeList#item":{"description":"PTR item\ncollection of nodes\n  I4 arg0 --- index [IN]","name":"item","namespace":"IXMLDOMNodeList","path":"IXMLDOMNodeList#item","type":"module_function","visibility":"public"},"IXMLDOMNodeList#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMNodeList","path":"IXMLDOMNodeList#lastargs","type":"module_function","visibility":"public"},"IXMLDOMNodeList#length":{"description":"I4 length\nnumber of nodes in the collection","name":"length","namespace":"IXMLDOMNodeList","path":"IXMLDOMNodeList#length","type":"module_function","visibility":"public"},"IXMLDOMNodeList#nextNode":{"description":"IXMLDOMNode nextNode\nget next node from iterator","name":"nextNode","namespace":"IXMLDOMNodeList","path":"IXMLDOMNodeList#nextNode","type":"module_function","visibility":"public"},"IXMLDOMNodeList#reset":{"description":"VOID reset\nreset the position of iterator","name":"reset","namespace":"IXMLDOMNodeList","path":"IXMLDOMNodeList#reset","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap":{"description":"","name":"IXMLDOMNamedNodeMap","namespace":"","path":"IXMLDOMNamedNodeMap","type":"module","visibility":"public"},"IXMLDOMNamedNodeMap#getNamedItem":{"description":"IXMLDOMNode getNamedItem\nlookup item by name\n  BSTR arg0 --- name [IN]","name":"getNamedItem","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#getNamedItem","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#getQualifiedItem":{"description":"IXMLDOMNode getQualifiedItem\nlookup the item by name and namespace\n  BSTR arg0 --- baseName [IN]\n  BSTR arg1 --- namespaceURI [IN]","name":"getQualifiedItem","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#getQualifiedItem","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#item":{"description":"PTR item\ncollection of nodes\n  I4 arg0 --- index [IN]","name":"item","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#item","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#lastargs","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#length":{"description":"I4 length\nnumber of nodes in the collection","name":"length","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#length","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#nextNode":{"description":"IXMLDOMNode nextNode\nget next node from iterator","name":"nextNode","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#nextNode","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#removeNamedItem":{"description":"IXMLDOMNode removeNamedItem\nremove item by name\n  BSTR arg0 --- name [IN]","name":"removeNamedItem","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#removeNamedItem","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#removeQualifiedItem":{"description":"IXMLDOMNode removeQualifiedItem\nremove the item by name and namespace\n  BSTR arg0 --- baseName [IN]\n  BSTR arg1 --- namespaceURI [IN]","name":"removeQualifiedItem","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#removeQualifiedItem","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#reset":{"description":"VOID reset\nreset the position of iterator","name":"reset","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#reset","type":"module_function","visibility":"public"},"IXMLDOMNamedNodeMap#setNamedItem":{"description":"IXMLDOMNode setNamedItem\nset item by name\n  IXMLDOMNode arg0 --- newItem [IN]","name":"setNamedItem","namespace":"IXMLDOMNamedNodeMap","path":"IXMLDOMNamedNodeMap#setNamedItem","type":"module_function","visibility":"public"},"IXMLDOMDocument":{"description":"","name":"IXMLDOMDocument","namespace":"","path":"IXMLDOMDocument","type":"module","visibility":"public"},"IXMLDOMDocument#abort":{"description":"VOID abort\nabort an asynchronous download","name":"abort","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#abort","type":"module_function","visibility":"public"},"IXMLDOMDocument#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#appendChild","type":"module_function","visibility":"public"},"IXMLDOMDocument#async":{"description":"BOOL async\nflag for asynchronous download","name":"async","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#async","type":"module_function","visibility":"public"},"IXMLDOMDocument#async=":{"description":"VOID async\nflag for asynchronous download","name":"async=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#async=","type":"module_function","visibility":"public"},"IXMLDOMDocument#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#attributes","type":"module_function","visibility":"public"},"IXMLDOMDocument#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#baseName","type":"module_function","visibility":"public"},"IXMLDOMDocument#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#childNodes","type":"module_function","visibility":"public"},"IXMLDOMDocument#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMDocument#createAttribute":{"description":"IXMLDOMAttribute createAttribute\ncreate an attribute node\n  BSTR arg0 --- name [IN]","name":"createAttribute","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createAttribute","type":"module_function","visibility":"public"},"IXMLDOMDocument#createCDATASection":{"description":"IXMLDOMCDATASection createCDATASection\ncreate a CDATA section node\n  BSTR arg0 --- data [IN]","name":"createCDATASection","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createCDATASection","type":"module_function","visibility":"public"},"IXMLDOMDocument#createComment":{"description":"IXMLDOMComment createComment\ncreate a comment node\n  BSTR arg0 --- data [IN]","name":"createComment","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createComment","type":"module_function","visibility":"public"},"IXMLDOMDocument#createDocumentFragment":{"description":"IXMLDOMDocumentFragment createDocumentFragment\ncreate a DocumentFragment node","name":"createDocumentFragment","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createDocumentFragment","type":"module_function","visibility":"public"},"IXMLDOMDocument#createElement":{"description":"IXMLDOMElement createElement\ncreate an Element node\n  BSTR arg0 --- tagName [IN]","name":"createElement","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createElement","type":"module_function","visibility":"public"},"IXMLDOMDocument#createEntityReference":{"description":"IXMLDOMEntityReference createEntityReference\ncreate an entity reference node\n  BSTR arg0 --- name [IN]","name":"createEntityReference","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createEntityReference","type":"module_function","visibility":"public"},"IXMLDOMDocument#createNode":{"description":"IXMLDOMNode createNode\ncreate a node of the specified node type and name\n  VARIANT arg0 --- type [IN]\n  BSTR arg1 --- name [IN]\n  BSTR arg2 --- namespaceURI [IN]","name":"createNode","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createNode","type":"module_function","visibility":"public"},"IXMLDOMDocument#createProcessingInstruction":{"description":"IXMLDOMProcessingInstruction createProcessingInstruction\ncreate a processing instruction node\n  BSTR arg0 --- target [IN]\n  BSTR arg1 --- data [IN]","name":"createProcessingInstruction","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createProcessingInstruction","type":"module_function","visibility":"public"},"IXMLDOMDocument#createTextNode":{"description":"IXMLDOMText createTextNode\ncreate a text node\n  BSTR arg0 --- data [IN]","name":"createTextNode","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#createTextNode","type":"module_function","visibility":"public"},"IXMLDOMDocument#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#dataType","type":"module_function","visibility":"public"},"IXMLDOMDocument#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#dataType=","type":"module_function","visibility":"public"},"IXMLDOMDocument#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#definition","type":"module_function","visibility":"public"},"IXMLDOMDocument#doctype":{"description":"IXMLDOMDocumentType doctype\nnode corresponding to the DOCTYPE","name":"doctype","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#doctype","type":"module_function","visibility":"public"},"IXMLDOMDocument#documentElement":{"description":"IXMLDOMElement documentElement\nthe root of the tree","name":"documentElement","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#documentElement","type":"module_function","visibility":"public"},"IXMLDOMDocument#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#firstChild","type":"module_function","visibility":"public"},"IXMLDOMDocument#getElementsByTagName":{"description":"IXMLDOMNodeList getElementsByTagName\nbuild a list of elements by name\n  BSTR arg0 --- tagName [IN]","name":"getElementsByTagName","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#getElementsByTagName","type":"module_function","visibility":"public"},"IXMLDOMDocument#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMDocument#implementation":{"description":"IXMLDOMImplementation implementation\ninfo on this DOM implementation","name":"implementation","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#implementation","type":"module_function","visibility":"public"},"IXMLDOMDocument#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMDocument#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#lastChild","type":"module_function","visibility":"public"},"IXMLDOMDocument#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#lastargs","type":"module_function","visibility":"public"},"IXMLDOMDocument#load":{"description":"BOOL load\nload document from the specified XML source\n  VARIANT arg0 --- xmlSource [IN]","name":"load","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#load","type":"module_function","visibility":"public"},"IXMLDOMDocument#loadXML":{"description":"BOOL loadXML\nload the document from a string\n  BSTR arg0 --- bstrXML [IN]","name":"loadXML","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#loadXML","type":"module_function","visibility":"public"},"IXMLDOMDocument#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMDocument#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeFromID":{"description":"IXMLDOMNode nodeFromID\nretrieve node from it's ID\n  BSTR arg0 --- idString [IN]","name":"nodeFromID","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeFromID","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeName","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeType","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMDocument#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMDocument#ondataavailable=":{"description":"VOID ondataavailable\nregister an ondataavailable event handler","name":"ondataavailable=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#ondataavailable=","type":"module_function","visibility":"public"},"IXMLDOMDocument#onreadystatechange=":{"description":"VOID onreadystatechange\nregister a readystatechange event handler","name":"onreadystatechange=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#onreadystatechange=","type":"module_function","visibility":"public"},"IXMLDOMDocument#ontransformnode=":{"description":"VOID ontransformnode\nregister an ontransformnode event handler","name":"ontransformnode=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#ontransformnode=","type":"module_function","visibility":"public"},"IXMLDOMDocument#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMDocument#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#parentNode","type":"module_function","visibility":"public"},"IXMLDOMDocument#parseError":{"description":"IXMLDOMParseError parseError\nget the last parser error","name":"parseError","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#parseError","type":"module_function","visibility":"public"},"IXMLDOMDocument#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#parsed","type":"module_function","visibility":"public"},"IXMLDOMDocument#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#prefix","type":"module_function","visibility":"public"},"IXMLDOMDocument#preserveWhiteSpace":{"description":"BOOL preserveWhiteSpace\nindicates whether the parser preserves whitespace","name":"preserveWhiteSpace","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#preserveWhiteSpace","type":"module_function","visibility":"public"},"IXMLDOMDocument#preserveWhiteSpace=":{"description":"VOID preserveWhiteSpace\nindicates whether the parser preserves whitespace","name":"preserveWhiteSpace=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#preserveWhiteSpace=","type":"module_function","visibility":"public"},"IXMLDOMDocument#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMDocument#readyState":{"description":"I4 readyState\nget the state of the XML document","name":"readyState","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#readyState","type":"module_function","visibility":"public"},"IXMLDOMDocument#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#removeChild","type":"module_function","visibility":"public"},"IXMLDOMDocument#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMDocument#resolveExternals":{"description":"BOOL resolveExternals\nindicates whether the parser resolves references to external DTD/Entities/Schema","name":"resolveExternals","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#resolveExternals","type":"module_function","visibility":"public"},"IXMLDOMDocument#resolveExternals=":{"description":"VOID resolveExternals\nindicates whether the parser resolves references to external DTD/Entities/Schema","name":"resolveExternals=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#resolveExternals=","type":"module_function","visibility":"public"},"IXMLDOMDocument#save":{"description":"VOID save\nsave the document to a specified desination\n  VARIANT arg0 --- desination [IN]","name":"save","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#save","type":"module_function","visibility":"public"},"IXMLDOMDocument#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMDocument#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMDocument#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#specified","type":"module_function","visibility":"public"},"IXMLDOMDocument#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#text","type":"module_function","visibility":"public"},"IXMLDOMDocument#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#text=","type":"module_function","visibility":"public"},"IXMLDOMDocument#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#transformNode","type":"module_function","visibility":"public"},"IXMLDOMDocument#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMDocument#url":{"description":"BSTR url\nget the URL for the loaded XML document","name":"url","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#url","type":"module_function","visibility":"public"},"IXMLDOMDocument#validateOnParse":{"description":"BOOL validateOnParse\nindicates whether the parser performs validation","name":"validateOnParse","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#validateOnParse","type":"module_function","visibility":"public"},"IXMLDOMDocument#validateOnParse=":{"description":"VOID validateOnParse\nindicates whether the parser performs validation","name":"validateOnParse=","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#validateOnParse=","type":"module_function","visibility":"public"},"IXMLDOMDocument#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMDocument","path":"IXMLDOMDocument#xml","type":"module_function","visibility":"public"},"IXMLDOMDocumentType":{"description":"","name":"IXMLDOMDocumentType","namespace":"","path":"IXMLDOMDocumentType","type":"module","visibility":"public"},"IXMLDOMDocumentType#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#appendChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#attributes","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#baseName","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#childNodes","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#dataType","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#dataType=","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#definition","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#entities":{"description":"IXMLDOMNamedNodeMap entities\na list of entities in the document","name":"entities","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#entities","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#firstChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#lastChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#lastargs","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#name":{"description":"BSTR name\nname of the document type (root of the tree)","name":"name","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#name","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeName","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeType","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#notations":{"description":"IXMLDOMNamedNodeMap notations\na list of notations in the document","name":"notations","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#notations","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#parentNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#parsed","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#prefix","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#removeChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#specified","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#text","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#text=","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#transformNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMDocumentType#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMDocumentType","path":"IXMLDOMDocumentType#xml","type":"module_function","visibility":"public"},"IXMLDOMElement":{"description":"","name":"IXMLDOMElement","namespace":"","path":"IXMLDOMElement","type":"module","visibility":"public"},"IXMLDOMElement#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMElement","path":"IXMLDOMElement#appendChild","type":"module_function","visibility":"public"},"IXMLDOMElement#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMElement","path":"IXMLDOMElement#attributes","type":"module_function","visibility":"public"},"IXMLDOMElement#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMElement","path":"IXMLDOMElement#baseName","type":"module_function","visibility":"public"},"IXMLDOMElement#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMElement","path":"IXMLDOMElement#childNodes","type":"module_function","visibility":"public"},"IXMLDOMElement#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMElement#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMElement","path":"IXMLDOMElement#dataType","type":"module_function","visibility":"public"},"IXMLDOMElement#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMElement","path":"IXMLDOMElement#dataType=","type":"module_function","visibility":"public"},"IXMLDOMElement#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMElement","path":"IXMLDOMElement#definition","type":"module_function","visibility":"public"},"IXMLDOMElement#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMElement","path":"IXMLDOMElement#firstChild","type":"module_function","visibility":"public"},"IXMLDOMElement#getAttribute":{"description":"VARIANT getAttribute\nlook up the string value of an attribute by name\n  BSTR arg0 --- name [IN]","name":"getAttribute","namespace":"IXMLDOMElement","path":"IXMLDOMElement#getAttribute","type":"module_function","visibility":"public"},"IXMLDOMElement#getAttributeNode":{"description":"IXMLDOMAttribute getAttributeNode\nlook up the attribute node by name\n  BSTR arg0 --- name [IN]","name":"getAttributeNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#getAttributeNode","type":"module_function","visibility":"public"},"IXMLDOMElement#getElementsByTagName":{"description":"IXMLDOMNodeList getElementsByTagName\nbuild a list of elements by name\n  BSTR arg0 --- tagName [IN]","name":"getElementsByTagName","namespace":"IXMLDOMElement","path":"IXMLDOMElement#getElementsByTagName","type":"module_function","visibility":"public"},"IXMLDOMElement#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMElement","path":"IXMLDOMElement#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMElement#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMElement","path":"IXMLDOMElement#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMElement#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMElement","path":"IXMLDOMElement#lastChild","type":"module_function","visibility":"public"},"IXMLDOMElement#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMElement","path":"IXMLDOMElement#lastargs","type":"module_function","visibility":"public"},"IXMLDOMElement#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMElement","path":"IXMLDOMElement#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMElement#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeName","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeType","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMElement#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMElement","path":"IXMLDOMElement#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMElement#normalize":{"description":"VOID normalize\ncollapse all adjacent text nodes in sub-tree","name":"normalize","namespace":"IXMLDOMElement","path":"IXMLDOMElement#normalize","type":"module_function","visibility":"public"},"IXMLDOMElement#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMElement","path":"IXMLDOMElement#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMElement#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#parentNode","type":"module_function","visibility":"public"},"IXMLDOMElement#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMElement","path":"IXMLDOMElement#parsed","type":"module_function","visibility":"public"},"IXMLDOMElement#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMElement","path":"IXMLDOMElement#prefix","type":"module_function","visibility":"public"},"IXMLDOMElement#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMElement","path":"IXMLDOMElement#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMElement#removeAttribute":{"description":"VOID removeAttribute\nremove an attribute by name\n  BSTR arg0 --- name [IN]","name":"removeAttribute","namespace":"IXMLDOMElement","path":"IXMLDOMElement#removeAttribute","type":"module_function","visibility":"public"},"IXMLDOMElement#removeAttributeNode":{"description":"IXMLDOMAttribute removeAttributeNode\nremove the specified attribute\n  IXMLDOMAttribute arg0 --- DOMAttribute [IN]","name":"removeAttributeNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#removeAttributeNode","type":"module_function","visibility":"public"},"IXMLDOMElement#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMElement","path":"IXMLDOMElement#removeChild","type":"module_function","visibility":"public"},"IXMLDOMElement#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMElement","path":"IXMLDOMElement#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMElement#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMElement","path":"IXMLDOMElement#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMElement#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMElement#setAttribute":{"description":"VOID setAttribute\nset the string value of an attribute by name\n  BSTR arg0 --- name [IN]\n  VARIANT arg1 --- value [IN]","name":"setAttribute","namespace":"IXMLDOMElement","path":"IXMLDOMElement#setAttribute","type":"module_function","visibility":"public"},"IXMLDOMElement#setAttributeNode":{"description":"IXMLDOMAttribute setAttributeNode\nset the specified attribute on the element\n  IXMLDOMAttribute arg0 --- DOMAttribute [IN]","name":"setAttributeNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#setAttributeNode","type":"module_function","visibility":"public"},"IXMLDOMElement#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMElement","path":"IXMLDOMElement#specified","type":"module_function","visibility":"public"},"IXMLDOMElement#tagName":{"description":"BSTR tagName\nget the tagName of the element","name":"tagName","namespace":"IXMLDOMElement","path":"IXMLDOMElement#tagName","type":"module_function","visibility":"public"},"IXMLDOMElement#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMElement","path":"IXMLDOMElement#text","type":"module_function","visibility":"public"},"IXMLDOMElement#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMElement","path":"IXMLDOMElement#text=","type":"module_function","visibility":"public"},"IXMLDOMElement#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMElement","path":"IXMLDOMElement#transformNode","type":"module_function","visibility":"public"},"IXMLDOMElement#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMElement","path":"IXMLDOMElement#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMElement#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMElement","path":"IXMLDOMElement#xml","type":"module_function","visibility":"public"},"IXMLDOMAttribute":{"description":"","name":"IXMLDOMAttribute","namespace":"","path":"IXMLDOMAttribute","type":"module","visibility":"public"},"IXMLDOMAttribute#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#appendChild","type":"module_function","visibility":"public"},"IXMLDOMAttribute#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#attributes","type":"module_function","visibility":"public"},"IXMLDOMAttribute#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#baseName","type":"module_function","visibility":"public"},"IXMLDOMAttribute#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#childNodes","type":"module_function","visibility":"public"},"IXMLDOMAttribute#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMAttribute#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#dataType","type":"module_function","visibility":"public"},"IXMLDOMAttribute#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#dataType=","type":"module_function","visibility":"public"},"IXMLDOMAttribute#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#definition","type":"module_function","visibility":"public"},"IXMLDOMAttribute#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#firstChild","type":"module_function","visibility":"public"},"IXMLDOMAttribute#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMAttribute#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMAttribute#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#lastChild","type":"module_function","visibility":"public"},"IXMLDOMAttribute#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#lastargs","type":"module_function","visibility":"public"},"IXMLDOMAttribute#name":{"description":"BSTR name\nget name of the attribute","name":"name","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#name","type":"module_function","visibility":"public"},"IXMLDOMAttribute#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeName","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeType","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMAttribute#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMAttribute#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMAttribute#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#parentNode","type":"module_function","visibility":"public"},"IXMLDOMAttribute#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#parsed","type":"module_function","visibility":"public"},"IXMLDOMAttribute#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#prefix","type":"module_function","visibility":"public"},"IXMLDOMAttribute#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMAttribute#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#removeChild","type":"module_function","visibility":"public"},"IXMLDOMAttribute#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMAttribute#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMAttribute#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMAttribute#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#specified","type":"module_function","visibility":"public"},"IXMLDOMAttribute#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#text","type":"module_function","visibility":"public"},"IXMLDOMAttribute#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#text=","type":"module_function","visibility":"public"},"IXMLDOMAttribute#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#transformNode","type":"module_function","visibility":"public"},"IXMLDOMAttribute#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMAttribute#value":{"description":"VARIANT value\nstring value of the attribute","name":"value","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#value","type":"module_function","visibility":"public"},"IXMLDOMAttribute#value=":{"description":"VOID value\nstring value of the attribute","name":"value=","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#value=","type":"module_function","visibility":"public"},"IXMLDOMAttribute#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMAttribute","path":"IXMLDOMAttribute#xml","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment":{"description":"","name":"IXMLDOMDocumentFragment","namespace":"","path":"IXMLDOMDocumentFragment","type":"module","visibility":"public"},"IXMLDOMDocumentFragment#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#appendChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#attributes","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#baseName","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#childNodes","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#dataType","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#dataType=","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#definition","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#firstChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#lastChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#lastargs","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeName","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeType","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#parentNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#parsed","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#prefix","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#removeChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#specified","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#text","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#text=","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#transformNode","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMDocumentFragment#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMDocumentFragment","path":"IXMLDOMDocumentFragment#xml","type":"module_function","visibility":"public"},"IXMLDOMText":{"description":"","name":"IXMLDOMText","namespace":"","path":"IXMLDOMText","type":"module","visibility":"public"},"IXMLDOMText#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMText","path":"IXMLDOMText#appendChild","type":"module_function","visibility":"public"},"IXMLDOMText#appendData":{"description":"VOID appendData\nappend string to value\n  BSTR arg0 --- data [IN]","name":"appendData","namespace":"IXMLDOMText","path":"IXMLDOMText#appendData","type":"module_function","visibility":"public"},"IXMLDOMText#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMText","path":"IXMLDOMText#attributes","type":"module_function","visibility":"public"},"IXMLDOMText#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMText","path":"IXMLDOMText#baseName","type":"module_function","visibility":"public"},"IXMLDOMText#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMText","path":"IXMLDOMText#childNodes","type":"module_function","visibility":"public"},"IXMLDOMText#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMText","path":"IXMLDOMText#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMText#data":{"description":"BSTR data\nvalue of the node","name":"data","namespace":"IXMLDOMText","path":"IXMLDOMText#data","type":"module_function","visibility":"public"},"IXMLDOMText#data=":{"description":"VOID data\nvalue of the node","name":"data=","namespace":"IXMLDOMText","path":"IXMLDOMText#data=","type":"module_function","visibility":"public"},"IXMLDOMText#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMText","path":"IXMLDOMText#dataType","type":"module_function","visibility":"public"},"IXMLDOMText#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMText","path":"IXMLDOMText#dataType=","type":"module_function","visibility":"public"},"IXMLDOMText#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMText","path":"IXMLDOMText#definition","type":"module_function","visibility":"public"},"IXMLDOMText#deleteData":{"description":"VOID deleteData\ndelete string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"deleteData","namespace":"IXMLDOMText","path":"IXMLDOMText#deleteData","type":"module_function","visibility":"public"},"IXMLDOMText#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMText","path":"IXMLDOMText#firstChild","type":"module_function","visibility":"public"},"IXMLDOMText#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMText","path":"IXMLDOMText#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMText#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMText","path":"IXMLDOMText#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMText#insertData":{"description":"VOID insertData\ninsert string into value\n  I4 arg0 --- offset [IN]\n  BSTR arg1 --- data [IN]","name":"insertData","namespace":"IXMLDOMText","path":"IXMLDOMText#insertData","type":"module_function","visibility":"public"},"IXMLDOMText#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMText","path":"IXMLDOMText#lastChild","type":"module_function","visibility":"public"},"IXMLDOMText#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMText","path":"IXMLDOMText#lastargs","type":"module_function","visibility":"public"},"IXMLDOMText#length":{"description":"I4 length\nnumber of characters in value","name":"length","namespace":"IXMLDOMText","path":"IXMLDOMText#length","type":"module_function","visibility":"public"},"IXMLDOMText#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMText","path":"IXMLDOMText#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMText#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMText","path":"IXMLDOMText#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMText#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeName","type":"module_function","visibility":"public"},"IXMLDOMText#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeType","type":"module_function","visibility":"public"},"IXMLDOMText#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMText#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMText#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMText#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMText#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMText","path":"IXMLDOMText#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMText#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMText","path":"IXMLDOMText#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMText#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMText","path":"IXMLDOMText#parentNode","type":"module_function","visibility":"public"},"IXMLDOMText#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMText","path":"IXMLDOMText#parsed","type":"module_function","visibility":"public"},"IXMLDOMText#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMText","path":"IXMLDOMText#prefix","type":"module_function","visibility":"public"},"IXMLDOMText#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMText","path":"IXMLDOMText#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMText#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMText","path":"IXMLDOMText#removeChild","type":"module_function","visibility":"public"},"IXMLDOMText#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMText","path":"IXMLDOMText#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMText#replaceData":{"description":"VOID replaceData\nreplace string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]\n  BSTR arg2 --- data [IN]","name":"replaceData","namespace":"IXMLDOMText","path":"IXMLDOMText#replaceData","type":"module_function","visibility":"public"},"IXMLDOMText#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMText","path":"IXMLDOMText#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMText#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMText","path":"IXMLDOMText#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMText#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMText","path":"IXMLDOMText#specified","type":"module_function","visibility":"public"},"IXMLDOMText#splitText":{"description":"IXMLDOMText splitText\nsplit the text node into two text nodes at the position specified\n  I4 arg0 --- offset [IN]","name":"splitText","namespace":"IXMLDOMText","path":"IXMLDOMText#splitText","type":"module_function","visibility":"public"},"IXMLDOMText#substringData":{"description":"BSTR substringData\nretrieve substring of value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"substringData","namespace":"IXMLDOMText","path":"IXMLDOMText#substringData","type":"module_function","visibility":"public"},"IXMLDOMText#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMText","path":"IXMLDOMText#text","type":"module_function","visibility":"public"},"IXMLDOMText#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMText","path":"IXMLDOMText#text=","type":"module_function","visibility":"public"},"IXMLDOMText#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMText","path":"IXMLDOMText#transformNode","type":"module_function","visibility":"public"},"IXMLDOMText#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMText","path":"IXMLDOMText#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMText#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMText","path":"IXMLDOMText#xml","type":"module_function","visibility":"public"},"IXMLDOMCharacterData":{"description":"","name":"IXMLDOMCharacterData","namespace":"","path":"IXMLDOMCharacterData","type":"module","visibility":"public"},"IXMLDOMCharacterData#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#appendChild","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#appendData":{"description":"VOID appendData\nappend string to value\n  BSTR arg0 --- data [IN]","name":"appendData","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#appendData","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#attributes","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#baseName","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#childNodes","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#data":{"description":"BSTR data\nvalue of the node","name":"data","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#data","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#data=":{"description":"VOID data\nvalue of the node","name":"data=","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#data=","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#dataType","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#dataType=","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#definition","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#deleteData":{"description":"VOID deleteData\ndelete string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"deleteData","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#deleteData","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#firstChild","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#insertData":{"description":"VOID insertData\ninsert string into value\n  I4 arg0 --- offset [IN]\n  BSTR arg1 --- data [IN]","name":"insertData","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#insertData","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#lastChild","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#lastargs","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#length":{"description":"I4 length\nnumber of characters in value","name":"length","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#length","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeName","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeType","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#parentNode","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#parsed","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#prefix","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#removeChild","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#replaceData":{"description":"VOID replaceData\nreplace string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]\n  BSTR arg2 --- data [IN]","name":"replaceData","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#replaceData","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#specified","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#substringData":{"description":"BSTR substringData\nretrieve substring of value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"substringData","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#substringData","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#text","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#text=","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#transformNode","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMCharacterData#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMCharacterData","path":"IXMLDOMCharacterData#xml","type":"module_function","visibility":"public"},"IXMLDOMComment":{"description":"","name":"IXMLDOMComment","namespace":"","path":"IXMLDOMComment","type":"module","visibility":"public"},"IXMLDOMComment#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMComment","path":"IXMLDOMComment#appendChild","type":"module_function","visibility":"public"},"IXMLDOMComment#appendData":{"description":"VOID appendData\nappend string to value\n  BSTR arg0 --- data [IN]","name":"appendData","namespace":"IXMLDOMComment","path":"IXMLDOMComment#appendData","type":"module_function","visibility":"public"},"IXMLDOMComment#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMComment","path":"IXMLDOMComment#attributes","type":"module_function","visibility":"public"},"IXMLDOMComment#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMComment","path":"IXMLDOMComment#baseName","type":"module_function","visibility":"public"},"IXMLDOMComment#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMComment","path":"IXMLDOMComment#childNodes","type":"module_function","visibility":"public"},"IXMLDOMComment#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMComment","path":"IXMLDOMComment#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMComment#data":{"description":"BSTR data\nvalue of the node","name":"data","namespace":"IXMLDOMComment","path":"IXMLDOMComment#data","type":"module_function","visibility":"public"},"IXMLDOMComment#data=":{"description":"VOID data\nvalue of the node","name":"data=","namespace":"IXMLDOMComment","path":"IXMLDOMComment#data=","type":"module_function","visibility":"public"},"IXMLDOMComment#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMComment","path":"IXMLDOMComment#dataType","type":"module_function","visibility":"public"},"IXMLDOMComment#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMComment","path":"IXMLDOMComment#dataType=","type":"module_function","visibility":"public"},"IXMLDOMComment#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMComment","path":"IXMLDOMComment#definition","type":"module_function","visibility":"public"},"IXMLDOMComment#deleteData":{"description":"VOID deleteData\ndelete string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"deleteData","namespace":"IXMLDOMComment","path":"IXMLDOMComment#deleteData","type":"module_function","visibility":"public"},"IXMLDOMComment#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMComment","path":"IXMLDOMComment#firstChild","type":"module_function","visibility":"public"},"IXMLDOMComment#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMComment","path":"IXMLDOMComment#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMComment#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMComment","path":"IXMLDOMComment#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMComment#insertData":{"description":"VOID insertData\ninsert string into value\n  I4 arg0 --- offset [IN]\n  BSTR arg1 --- data [IN]","name":"insertData","namespace":"IXMLDOMComment","path":"IXMLDOMComment#insertData","type":"module_function","visibility":"public"},"IXMLDOMComment#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMComment","path":"IXMLDOMComment#lastChild","type":"module_function","visibility":"public"},"IXMLDOMComment#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMComment","path":"IXMLDOMComment#lastargs","type":"module_function","visibility":"public"},"IXMLDOMComment#length":{"description":"I4 length\nnumber of characters in value","name":"length","namespace":"IXMLDOMComment","path":"IXMLDOMComment#length","type":"module_function","visibility":"public"},"IXMLDOMComment#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMComment","path":"IXMLDOMComment#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMComment#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeName","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeType","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMComment#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMComment","path":"IXMLDOMComment#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMComment#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMComment","path":"IXMLDOMComment#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMComment#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMComment","path":"IXMLDOMComment#parentNode","type":"module_function","visibility":"public"},"IXMLDOMComment#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMComment","path":"IXMLDOMComment#parsed","type":"module_function","visibility":"public"},"IXMLDOMComment#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMComment","path":"IXMLDOMComment#prefix","type":"module_function","visibility":"public"},"IXMLDOMComment#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMComment","path":"IXMLDOMComment#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMComment#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMComment","path":"IXMLDOMComment#removeChild","type":"module_function","visibility":"public"},"IXMLDOMComment#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMComment","path":"IXMLDOMComment#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMComment#replaceData":{"description":"VOID replaceData\nreplace string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]\n  BSTR arg2 --- data [IN]","name":"replaceData","namespace":"IXMLDOMComment","path":"IXMLDOMComment#replaceData","type":"module_function","visibility":"public"},"IXMLDOMComment#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMComment","path":"IXMLDOMComment#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMComment#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMComment","path":"IXMLDOMComment#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMComment#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMComment","path":"IXMLDOMComment#specified","type":"module_function","visibility":"public"},"IXMLDOMComment#substringData":{"description":"BSTR substringData\nretrieve substring of value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"substringData","namespace":"IXMLDOMComment","path":"IXMLDOMComment#substringData","type":"module_function","visibility":"public"},"IXMLDOMComment#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMComment","path":"IXMLDOMComment#text","type":"module_function","visibility":"public"},"IXMLDOMComment#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMComment","path":"IXMLDOMComment#text=","type":"module_function","visibility":"public"},"IXMLDOMComment#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMComment","path":"IXMLDOMComment#transformNode","type":"module_function","visibility":"public"},"IXMLDOMComment#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMComment","path":"IXMLDOMComment#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMComment#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMComment","path":"IXMLDOMComment#xml","type":"module_function","visibility":"public"},"IXMLDOMCDATASection":{"description":"","name":"IXMLDOMCDATASection","namespace":"","path":"IXMLDOMCDATASection","type":"module","visibility":"public"},"IXMLDOMCDATASection#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#appendChild","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#appendData":{"description":"VOID appendData\nappend string to value\n  BSTR arg0 --- data [IN]","name":"appendData","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#appendData","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#attributes","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#baseName","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#childNodes","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#data":{"description":"BSTR data\nvalue of the node","name":"data","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#data","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#data=":{"description":"VOID data\nvalue of the node","name":"data=","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#data=","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#dataType","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#dataType=","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#definition","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#deleteData":{"description":"VOID deleteData\ndelete string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"deleteData","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#deleteData","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#firstChild","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#insertData":{"description":"VOID insertData\ninsert string into value\n  I4 arg0 --- offset [IN]\n  BSTR arg1 --- data [IN]","name":"insertData","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#insertData","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#lastChild","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#lastargs","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#length":{"description":"I4 length\nnumber of characters in value","name":"length","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#length","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeName","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeType","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#parentNode","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#parsed","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#prefix","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#removeChild","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#replaceData":{"description":"VOID replaceData\nreplace string within the value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]\n  BSTR arg2 --- data [IN]","name":"replaceData","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#replaceData","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#specified","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#splitText":{"description":"IXMLDOMText splitText\nsplit the text node into two text nodes at the position specified\n  I4 arg0 --- offset [IN]","name":"splitText","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#splitText","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#substringData":{"description":"BSTR substringData\nretrieve substring of value\n  I4 arg0 --- offset [IN]\n  I4 arg1 --- count [IN]","name":"substringData","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#substringData","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#text","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#text=","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#transformNode","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMCDATASection#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMCDATASection","path":"IXMLDOMCDATASection#xml","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction":{"description":"","name":"IXMLDOMProcessingInstruction","namespace":"","path":"IXMLDOMProcessingInstruction","type":"module","visibility":"public"},"IXMLDOMProcessingInstruction#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#appendChild","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#attributes","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#baseName","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#childNodes","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#data":{"description":"BSTR data\nthe data","name":"data","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#data","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#data=":{"description":"VOID data\nthe data","name":"data=","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#data=","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#dataType","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#dataType=","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#definition","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#firstChild","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#lastChild","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#lastargs","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeName","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeType","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#parentNode","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#parsed","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#prefix","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#removeChild","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#specified","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#target":{"description":"BSTR target\nthe target","name":"target","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#target","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#text","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#text=","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#transformNode","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMProcessingInstruction#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMProcessingInstruction","path":"IXMLDOMProcessingInstruction#xml","type":"module_function","visibility":"public"},"IXMLDOMEntityReference":{"description":"","name":"IXMLDOMEntityReference","namespace":"","path":"IXMLDOMEntityReference","type":"module","visibility":"public"},"IXMLDOMEntityReference#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#appendChild","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#attributes","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#baseName","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#childNodes","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#dataType","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#dataType=","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#definition","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#firstChild","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#lastChild","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#lastargs","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeName","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeType","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#parentNode","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#parsed","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#prefix","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#removeChild","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#specified","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#text","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#text=","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#transformNode","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMEntityReference#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMEntityReference","path":"IXMLDOMEntityReference#xml","type":"module_function","visibility":"public"},"IXMLDOMParseError":{"description":"structure for reporting parser errors","name":"IXMLDOMParseError","namespace":"","path":"IXMLDOMParseError","type":"module","visibility":"public"},"IXMLDOMParseError#errorCode":{"description":"I4 errorCode\nthe error code","name":"errorCode","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#errorCode","type":"module_function","visibility":"public"},"IXMLDOMParseError#filepos":{"description":"I4 filepos\nthe absolute file position in the XML document containing the error","name":"filepos","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#filepos","type":"module_function","visibility":"public"},"IXMLDOMParseError#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#lastargs","type":"module_function","visibility":"public"},"IXMLDOMParseError#line":{"description":"I4 line\nthe line number in the XML document where the error occurred","name":"line","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#line","type":"module_function","visibility":"public"},"IXMLDOMParseError#linepos":{"description":"I4 linepos\nthe character position in the line containing the error","name":"linepos","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#linepos","type":"module_function","visibility":"public"},"IXMLDOMParseError#reason":{"description":"BSTR reason\nthe cause of the error","name":"reason","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#reason","type":"module_function","visibility":"public"},"IXMLDOMParseError#srcText":{"description":"BSTR srcText\nthe data where the error occurred","name":"srcText","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#srcText","type":"module_function","visibility":"public"},"IXMLDOMParseError#url":{"description":"BSTR url\nthe URL of the XML document containing the error","name":"url","namespace":"IXMLDOMParseError","path":"IXMLDOMParseError#url","type":"module_function","visibility":"public"},"IXMLDOMNotation":{"description":"","name":"IXMLDOMNotation","namespace":"","path":"IXMLDOMNotation","type":"module","visibility":"public"},"IXMLDOMNotation#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#appendChild","type":"module_function","visibility":"public"},"IXMLDOMNotation#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#attributes","type":"module_function","visibility":"public"},"IXMLDOMNotation#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#baseName","type":"module_function","visibility":"public"},"IXMLDOMNotation#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#childNodes","type":"module_function","visibility":"public"},"IXMLDOMNotation#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMNotation#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#dataType","type":"module_function","visibility":"public"},"IXMLDOMNotation#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#dataType=","type":"module_function","visibility":"public"},"IXMLDOMNotation#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#definition","type":"module_function","visibility":"public"},"IXMLDOMNotation#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#firstChild","type":"module_function","visibility":"public"},"IXMLDOMNotation#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMNotation#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMNotation#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#lastChild","type":"module_function","visibility":"public"},"IXMLDOMNotation#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#lastargs","type":"module_function","visibility":"public"},"IXMLDOMNotation#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMNotation#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeName","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeType","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMNotation#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMNotation#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMNotation#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#parentNode","type":"module_function","visibility":"public"},"IXMLDOMNotation#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#parsed","type":"module_function","visibility":"public"},"IXMLDOMNotation#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#prefix","type":"module_function","visibility":"public"},"IXMLDOMNotation#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMNotation#publicId":{"description":"VARIANT publicId\nthe public ID","name":"publicId","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#publicId","type":"module_function","visibility":"public"},"IXMLDOMNotation#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#removeChild","type":"module_function","visibility":"public"},"IXMLDOMNotation#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMNotation#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMNotation#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMNotation#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#specified","type":"module_function","visibility":"public"},"IXMLDOMNotation#systemId":{"description":"VARIANT systemId\nthe system ID","name":"systemId","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#systemId","type":"module_function","visibility":"public"},"IXMLDOMNotation#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#text","type":"module_function","visibility":"public"},"IXMLDOMNotation#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#text=","type":"module_function","visibility":"public"},"IXMLDOMNotation#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#transformNode","type":"module_function","visibility":"public"},"IXMLDOMNotation#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMNotation#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMNotation","path":"IXMLDOMNotation#xml","type":"module_function","visibility":"public"},"IXMLDOMEntity":{"description":"","name":"IXMLDOMEntity","namespace":"","path":"IXMLDOMEntity","type":"module","visibility":"public"},"IXMLDOMEntity#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#appendChild","type":"module_function","visibility":"public"},"IXMLDOMEntity#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#attributes","type":"module_function","visibility":"public"},"IXMLDOMEntity#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#baseName","type":"module_function","visibility":"public"},"IXMLDOMEntity#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#childNodes","type":"module_function","visibility":"public"},"IXMLDOMEntity#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#cloneNode","type":"module_function","visibility":"public"},"IXMLDOMEntity#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#dataType","type":"module_function","visibility":"public"},"IXMLDOMEntity#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#dataType=","type":"module_function","visibility":"public"},"IXMLDOMEntity#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#definition","type":"module_function","visibility":"public"},"IXMLDOMEntity#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#firstChild","type":"module_function","visibility":"public"},"IXMLDOMEntity#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#hasChildNodes","type":"module_function","visibility":"public"},"IXMLDOMEntity#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#insertBefore","type":"module_function","visibility":"public"},"IXMLDOMEntity#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#lastChild","type":"module_function","visibility":"public"},"IXMLDOMEntity#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#lastargs","type":"module_function","visibility":"public"},"IXMLDOMEntity#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#namespaceURI","type":"module_function","visibility":"public"},"IXMLDOMEntity#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nextSibling","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeName","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeType","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeTypeString","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeTypedValue","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeTypedValue=","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeValue","type":"module_function","visibility":"public"},"IXMLDOMEntity#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#nodeValue=","type":"module_function","visibility":"public"},"IXMLDOMEntity#notationName":{"description":"BSTR notationName\nthe name of the notation","name":"notationName","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#notationName","type":"module_function","visibility":"public"},"IXMLDOMEntity#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#ownerDocument","type":"module_function","visibility":"public"},"IXMLDOMEntity#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#parentNode","type":"module_function","visibility":"public"},"IXMLDOMEntity#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#parsed","type":"module_function","visibility":"public"},"IXMLDOMEntity#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#prefix","type":"module_function","visibility":"public"},"IXMLDOMEntity#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#previousSibling","type":"module_function","visibility":"public"},"IXMLDOMEntity#publicId":{"description":"VARIANT publicId\nthe public ID","name":"publicId","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#publicId","type":"module_function","visibility":"public"},"IXMLDOMEntity#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#removeChild","type":"module_function","visibility":"public"},"IXMLDOMEntity#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#replaceChild","type":"module_function","visibility":"public"},"IXMLDOMEntity#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#selectNodes","type":"module_function","visibility":"public"},"IXMLDOMEntity#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#selectSingleNode","type":"module_function","visibility":"public"},"IXMLDOMEntity#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#specified","type":"module_function","visibility":"public"},"IXMLDOMEntity#systemId":{"description":"VARIANT systemId\nthe system ID","name":"systemId","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#systemId","type":"module_function","visibility":"public"},"IXMLDOMEntity#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#text","type":"module_function","visibility":"public"},"IXMLDOMEntity#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#text=","type":"module_function","visibility":"public"},"IXMLDOMEntity#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#transformNode","type":"module_function","visibility":"public"},"IXMLDOMEntity#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#transformNodeToObject","type":"module_function","visibility":"public"},"IXMLDOMEntity#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXMLDOMEntity","path":"IXMLDOMEntity#xml","type":"module_function","visibility":"public"},"IXTLRuntime":{"description":"XTL runtime object","name":"IXTLRuntime","namespace":"","path":"IXTLRuntime","type":"module","visibility":"public"},"IXTLRuntime#absoluteChildNumber":{"description":"I4 absoluteChildNumber\n  IXMLDOMNode arg0 --- pNode [IN]","name":"absoluteChildNumber","namespace":"IXTLRuntime","path":"IXTLRuntime#absoluteChildNumber","type":"module_function","visibility":"public"},"IXTLRuntime#ancestorChildNumber":{"description":"I4 ancestorChildNumber\n  BSTR arg0 --- bstrNodeName [IN]\n  IXMLDOMNode arg1 --- pNode [IN]","name":"ancestorChildNumber","namespace":"IXTLRuntime","path":"IXTLRuntime#ancestorChildNumber","type":"module_function","visibility":"public"},"IXTLRuntime#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"IXTLRuntime","path":"IXTLRuntime#appendChild","type":"module_function","visibility":"public"},"IXTLRuntime#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"IXTLRuntime","path":"IXTLRuntime#attributes","type":"module_function","visibility":"public"},"IXTLRuntime#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"IXTLRuntime","path":"IXTLRuntime#baseName","type":"module_function","visibility":"public"},"IXTLRuntime#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"IXTLRuntime","path":"IXTLRuntime#childNodes","type":"module_function","visibility":"public"},"IXTLRuntime#childNumber":{"description":"I4 childNumber\n  IXMLDOMNode arg0 --- pNode [IN]","name":"childNumber","namespace":"IXTLRuntime","path":"IXTLRuntime#childNumber","type":"module_function","visibility":"public"},"IXTLRuntime#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"IXTLRuntime","path":"IXTLRuntime#cloneNode","type":"module_function","visibility":"public"},"IXTLRuntime#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"IXTLRuntime","path":"IXTLRuntime#dataType","type":"module_function","visibility":"public"},"IXTLRuntime#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"IXTLRuntime","path":"IXTLRuntime#dataType=","type":"module_function","visibility":"public"},"IXTLRuntime#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"IXTLRuntime","path":"IXTLRuntime#definition","type":"module_function","visibility":"public"},"IXTLRuntime#depth":{"description":"I4 depth\n  IXMLDOMNode arg0 --- pNode [IN]","name":"depth","namespace":"IXTLRuntime","path":"IXTLRuntime#depth","type":"module_function","visibility":"public"},"IXTLRuntime#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"IXTLRuntime","path":"IXTLRuntime#firstChild","type":"module_function","visibility":"public"},"IXTLRuntime#formatDate":{"description":"BSTR formatDate\n  VARIANT arg0 --- varDate [IN]\n  BSTR arg1 --- bstrFormat [IN]\n  VARIANT arg2 --- varDestLocale [IN]","name":"formatDate","namespace":"IXTLRuntime","path":"IXTLRuntime#formatDate","type":"module_function","visibility":"public"},"IXTLRuntime#formatIndex":{"description":"BSTR formatIndex\n  I4 arg0 --- lIndex [IN]\n  BSTR arg1 --- bstrFormat [IN]","name":"formatIndex","namespace":"IXTLRuntime","path":"IXTLRuntime#formatIndex","type":"module_function","visibility":"public"},"IXTLRuntime#formatNumber":{"description":"BSTR formatNumber\n  R8 arg0 --- dblNumber [IN]\n  BSTR arg1 --- bstrFormat [IN]","name":"formatNumber","namespace":"IXTLRuntime","path":"IXTLRuntime#formatNumber","type":"module_function","visibility":"public"},"IXTLRuntime#formatTime":{"description":"BSTR formatTime\n  VARIANT arg0 --- varTime [IN]\n  BSTR arg1 --- bstrFormat [IN]\n  VARIANT arg2 --- varDestLocale [IN]","name":"formatTime","namespace":"IXTLRuntime","path":"IXTLRuntime#formatTime","type":"module_function","visibility":"public"},"IXTLRuntime#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"IXTLRuntime","path":"IXTLRuntime#hasChildNodes","type":"module_function","visibility":"public"},"IXTLRuntime#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"IXTLRuntime","path":"IXTLRuntime#insertBefore","type":"module_function","visibility":"public"},"IXTLRuntime#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"IXTLRuntime","path":"IXTLRuntime#lastChild","type":"module_function","visibility":"public"},"IXTLRuntime#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXTLRuntime","path":"IXTLRuntime#lastargs","type":"module_function","visibility":"public"},"IXTLRuntime#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"IXTLRuntime","path":"IXTLRuntime#namespaceURI","type":"module_function","visibility":"public"},"IXTLRuntime#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"IXTLRuntime","path":"IXTLRuntime#nextSibling","type":"module_function","visibility":"public"},"IXTLRuntime#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeName","type":"module_function","visibility":"public"},"IXTLRuntime#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeType","type":"module_function","visibility":"public"},"IXTLRuntime#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeTypeString","type":"module_function","visibility":"public"},"IXTLRuntime#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeTypedValue","type":"module_function","visibility":"public"},"IXTLRuntime#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeTypedValue=","type":"module_function","visibility":"public"},"IXTLRuntime#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeValue","type":"module_function","visibility":"public"},"IXTLRuntime#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"IXTLRuntime","path":"IXTLRuntime#nodeValue=","type":"module_function","visibility":"public"},"IXTLRuntime#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"IXTLRuntime","path":"IXTLRuntime#ownerDocument","type":"module_function","visibility":"public"},"IXTLRuntime#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"IXTLRuntime","path":"IXTLRuntime#parentNode","type":"module_function","visibility":"public"},"IXTLRuntime#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"IXTLRuntime","path":"IXTLRuntime#parsed","type":"module_function","visibility":"public"},"IXTLRuntime#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"IXTLRuntime","path":"IXTLRuntime#prefix","type":"module_function","visibility":"public"},"IXTLRuntime#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"IXTLRuntime","path":"IXTLRuntime#previousSibling","type":"module_function","visibility":"public"},"IXTLRuntime#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"IXTLRuntime","path":"IXTLRuntime#removeChild","type":"module_function","visibility":"public"},"IXTLRuntime#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"IXTLRuntime","path":"IXTLRuntime#replaceChild","type":"module_function","visibility":"public"},"IXTLRuntime#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"IXTLRuntime","path":"IXTLRuntime#selectNodes","type":"module_function","visibility":"public"},"IXTLRuntime#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"IXTLRuntime","path":"IXTLRuntime#selectSingleNode","type":"module_function","visibility":"public"},"IXTLRuntime#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"IXTLRuntime","path":"IXTLRuntime#specified","type":"module_function","visibility":"public"},"IXTLRuntime#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"IXTLRuntime","path":"IXTLRuntime#text","type":"module_function","visibility":"public"},"IXTLRuntime#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"IXTLRuntime","path":"IXTLRuntime#text=","type":"module_function","visibility":"public"},"IXTLRuntime#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"IXTLRuntime","path":"IXTLRuntime#transformNode","type":"module_function","visibility":"public"},"IXTLRuntime#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"IXTLRuntime","path":"IXTLRuntime#transformNodeToObject","type":"module_function","visibility":"public"},"IXTLRuntime#uniqueID":{"description":"I4 uniqueID\n  IXMLDOMNode arg0 --- pNode [IN]","name":"uniqueID","namespace":"IXTLRuntime","path":"IXTLRuntime#uniqueID","type":"module_function","visibility":"public"},"IXTLRuntime#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"IXTLRuntime","path":"IXTLRuntime#xml","type":"module_function","visibility":"public"},"Microsoft_XMLDOM_1_0":{"description":"W3C-DOM XML Document","name":"Microsoft_XMLDOM_1_0","namespace":"","path":"Microsoft_XMLDOM_1_0","type":"class","visibility":"public"},"Microsoft_XMLDOM_1_0#abort":{"description":"VOID abort\nabort an asynchronous download","name":"abort","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#abort","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#appendChild","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#async":{"description":"BOOL async\nflag for asynchronous download","name":"async","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#async","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#async=":{"description":"VOID async\nflag for asynchronous download","name":"async=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#async=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#attributes","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#baseName","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#childNodes","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#cloneNode","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#clsid":{"description":"Returns the value of attribute clsid","name":"clsid","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#clsid","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createAttribute":{"description":"IXMLDOMAttribute createAttribute\ncreate an attribute node\n  BSTR arg0 --- name [IN]","name":"createAttribute","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createAttribute","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createCDATASection":{"description":"IXMLDOMCDATASection createCDATASection\ncreate a CDATA section node\n  BSTR arg0 --- data [IN]","name":"createCDATASection","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createCDATASection","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createComment":{"description":"IXMLDOMComment createComment\ncreate a comment node\n  BSTR arg0 --- data [IN]","name":"createComment","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createComment","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createDocumentFragment":{"description":"IXMLDOMDocumentFragment createDocumentFragment\ncreate a DocumentFragment node","name":"createDocumentFragment","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createDocumentFragment","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createElement":{"description":"IXMLDOMElement createElement\ncreate an Element node\n  BSTR arg0 --- tagName [IN]","name":"createElement","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createElement","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createEntityReference":{"description":"IXMLDOMEntityReference createEntityReference\ncreate an entity reference node\n  BSTR arg0 --- name [IN]","name":"createEntityReference","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createEntityReference","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createNode":{"description":"IXMLDOMNode createNode\ncreate a node of the specified node type and name\n  VARIANT arg0 --- type [IN]\n  BSTR arg1 --- name [IN]\n  BSTR arg2 --- namespaceURI [IN]","name":"createNode","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createNode","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createProcessingInstruction":{"description":"IXMLDOMProcessingInstruction createProcessingInstruction\ncreate a processing instruction node\n  BSTR arg0 --- target [IN]\n  BSTR arg1 --- data [IN]","name":"createProcessingInstruction","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createProcessingInstruction","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#createTextNode":{"description":"IXMLDOMText createTextNode\ncreate a text node\n  BSTR arg0 --- data [IN]","name":"createTextNode","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#createTextNode","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#dataType","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#dataType=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#definition","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#dispatch":{"description":"Returns the value of attribute dispatch","name":"dispatch","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#dispatch","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#doctype":{"description":"IXMLDOMDocumentType doctype\nnode corresponding to the DOCTYPE","name":"doctype","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#doctype","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#documentElement":{"description":"IXMLDOMElement documentElement\nthe root of the tree","name":"documentElement","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#documentElement","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#firstChild","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#getElementsByTagName":{"description":"IXMLDOMNodeList getElementsByTagName\nbuild a list of elements by name\n  BSTR arg0 --- tagName [IN]","name":"getElementsByTagName","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#getElementsByTagName","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#hasChildNodes","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#implementation":{"description":"IXMLDOMImplementation implementation\ninfo on this DOM implementation","name":"implementation","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#implementation","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#initialize":{"description":"","name":"initialize","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#initialize","type":"instance_method","visibility":"public","return":[["Microsoft_XMLDOM_1_0"],"a new instance of Microsoft_XMLDOM_1_0"]},"Microsoft_XMLDOM_1_0#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#insertBefore","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#lastChild","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#lastargs","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#load":{"description":"BOOL load\nload document from the specified XML source\n  VARIANT arg0 --- xmlSource [IN]","name":"load","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#load","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#loadXML":{"description":"BOOL loadXML\nload the document from a string\n  BSTR arg0 --- bstrXML [IN]","name":"loadXML","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#loadXML","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#method_missing":{"description":"","name":"method_missing","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#method_missing","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#namespaceURI","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nextSibling","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeFromID":{"description":"IXMLDOMNode nodeFromID\nretrieve node from it's ID\n  BSTR arg0 --- idString [IN]","name":"nodeFromID","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeFromID","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeName","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeType","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeTypeString","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeTypedValue","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeTypedValue=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeValue","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#nodeValue=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#ondataavailable":{"description":"HRESULT ondataavailable EVENT in XMLDOMDocumentEvents","name":"ondataavailable","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#ondataavailable","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#ondataavailable=":{"description":"VOID ondataavailable\nregister an ondataavailable event handler","name":"ondataavailable=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#ondataavailable=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#onreadystatechange":{"description":"HRESULT onreadystatechange EVENT in XMLDOMDocumentEvents","name":"onreadystatechange","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#onreadystatechange","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#onreadystatechange=":{"description":"VOID onreadystatechange\nregister a readystatechange event handler","name":"onreadystatechange=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#onreadystatechange=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#ontransformnode=":{"description":"VOID ontransformnode\nregister an ontransformnode event handler","name":"ontransformnode=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#ontransformnode=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#ownerDocument","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#parentNode","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#parseError":{"description":"IXMLDOMParseError parseError\nget the last parser error","name":"parseError","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#parseError","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#parsed","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#prefix","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#preserveWhiteSpace":{"description":"BOOL preserveWhiteSpace\nindicates whether the parser preserves whitespace","name":"preserveWhiteSpace","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#preserveWhiteSpace","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#preserveWhiteSpace=":{"description":"VOID preserveWhiteSpace\nindicates whether the parser preserves whitespace","name":"preserveWhiteSpace=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#preserveWhiteSpace=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#previousSibling","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#progid":{"description":"Returns the value of attribute progid","name":"progid","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#progid","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#readyState":{"description":"I4 readyState\nget the state of the XML document","name":"readyState","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#readyState","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#removeChild","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#replaceChild","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#resolveExternals":{"description":"BOOL resolveExternals\nindicates whether the parser resolves references to external DTD/Entities/Schema","name":"resolveExternals","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#resolveExternals","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#resolveExternals=":{"description":"VOID resolveExternals\nindicates whether the parser resolves references to external DTD/Entities/Schema","name":"resolveExternals=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#resolveExternals=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#save":{"description":"VOID save\nsave the document to a specified desination\n  VARIANT arg0 --- desination [IN]","name":"save","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#save","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#selectNodes","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#selectSingleNode","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#specified","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#text","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#text=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#transformNode","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#transformNodeToObject","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#url":{"description":"BSTR url\nget the URL for the loaded XML document","name":"url","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#url","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#validateOnParse":{"description":"BOOL validateOnParse\nindicates whether the parser performs validation","name":"validateOnParse","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#validateOnParse","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#validateOnParse=":{"description":"VOID validateOnParse\nindicates whether the parser performs validation","name":"validateOnParse=","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#validateOnParse=","type":"instance_method","visibility":"public"},"Microsoft_XMLDOM_1_0#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"Microsoft_XMLDOM_1_0","path":"Microsoft_XMLDOM_1_0#xml","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0":{"description":"W3C-DOM XML Document (Apartment)","name":"Microsoft_FreeThreadedXMLDOM_1_0","namespace":"","path":"Microsoft_FreeThreadedXMLDOM_1_0","type":"class","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#abort":{"description":"VOID abort\nabort an asynchronous download","name":"abort","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#abort","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#appendChild":{"description":"IXMLDOMNode appendChild\nappend a child node\n  IXMLDOMNode arg0 --- newChild [IN]","name":"appendChild","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#appendChild","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#async":{"description":"BOOL async\nflag for asynchronous download","name":"async","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#async","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#async=":{"description":"VOID async\nflag for asynchronous download","name":"async=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#async=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#attributes":{"description":"IXMLDOMNamedNodeMap attributes\nthe collection of the node's attributes","name":"attributes","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#attributes","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#baseName":{"description":"BSTR baseName\nthe base name of the node (nodename with the prefix stripped off)","name":"baseName","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#baseName","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#childNodes":{"description":"IXMLDOMNodeList childNodes\nthe collection of the node's children","name":"childNodes","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#childNodes","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#cloneNode":{"description":"IXMLDOMNode cloneNode\n  BOOL arg0 --- deep [IN]","name":"cloneNode","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#cloneNode","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#clsid":{"description":"Returns the value of attribute clsid","name":"clsid","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#clsid","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createAttribute":{"description":"IXMLDOMAttribute createAttribute\ncreate an attribute node\n  BSTR arg0 --- name [IN]","name":"createAttribute","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createAttribute","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createCDATASection":{"description":"IXMLDOMCDATASection createCDATASection\ncreate a CDATA section node\n  BSTR arg0 --- data [IN]","name":"createCDATASection","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createCDATASection","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createComment":{"description":"IXMLDOMComment createComment\ncreate a comment node\n  BSTR arg0 --- data [IN]","name":"createComment","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createComment","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createDocumentFragment":{"description":"IXMLDOMDocumentFragment createDocumentFragment\ncreate a DocumentFragment node","name":"createDocumentFragment","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createDocumentFragment","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createElement":{"description":"IXMLDOMElement createElement\ncreate an Element node\n  BSTR arg0 --- tagName [IN]","name":"createElement","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createElement","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createEntityReference":{"description":"IXMLDOMEntityReference createEntityReference\ncreate an entity reference node\n  BSTR arg0 --- name [IN]","name":"createEntityReference","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createEntityReference","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createNode":{"description":"IXMLDOMNode createNode\ncreate a node of the specified node type and name\n  VARIANT arg0 --- type [IN]\n  BSTR arg1 --- name [IN]\n  BSTR arg2 --- namespaceURI [IN]","name":"createNode","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createNode","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createProcessingInstruction":{"description":"IXMLDOMProcessingInstruction createProcessingInstruction\ncreate a processing instruction node\n  BSTR arg0 --- target [IN]\n  BSTR arg1 --- data [IN]","name":"createProcessingInstruction","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createProcessingInstruction","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#createTextNode":{"description":"IXMLDOMText createTextNode\ncreate a text node\n  BSTR arg0 --- data [IN]","name":"createTextNode","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#createTextNode","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#dataType":{"description":"VARIANT dataType\nthe data type of the node","name":"dataType","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#dataType","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#dataType=":{"description":"VOID dataType\nthe data type of the node","name":"dataType=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#dataType=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#definition":{"description":"IXMLDOMNode definition\npointer to the definition of the node in the DTD or schema","name":"definition","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#definition","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#dispatch":{"description":"Returns the value of attribute dispatch","name":"dispatch","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#dispatch","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#doctype":{"description":"IXMLDOMDocumentType doctype\nnode corresponding to the DOCTYPE","name":"doctype","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#doctype","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#documentElement":{"description":"IXMLDOMElement documentElement\nthe root of the tree","name":"documentElement","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#documentElement","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#firstChild":{"description":"IXMLDOMNode firstChild\nfirst child of the node","name":"firstChild","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#firstChild","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#getElementsByTagName":{"description":"IXMLDOMNodeList getElementsByTagName\nbuild a list of elements by name\n  BSTR arg0 --- tagName [IN]","name":"getElementsByTagName","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#getElementsByTagName","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#hasChildNodes":{"description":"BOOL hasChildNodes","name":"hasChildNodes","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#hasChildNodes","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#implementation":{"description":"IXMLDOMImplementation implementation\ninfo on this DOM implementation","name":"implementation","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#implementation","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#initialize":{"description":"","name":"initialize","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#initialize","type":"instance_method","visibility":"public","return":[["Microsoft_FreeThreadedXMLDOM_1_0"],"a new instance of Microsoft_FreeThreadedXMLDOM_1_0"]},"Microsoft_FreeThreadedXMLDOM_1_0#insertBefore":{"description":"IXMLDOMNode insertBefore\ninsert a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  VARIANT arg1 --- refChild [IN]","name":"insertBefore","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#insertBefore","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#lastChild":{"description":"IXMLDOMNode lastChild\nfirst child of the node","name":"lastChild","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#lastChild","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#lastargs","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#load":{"description":"BOOL load\nload document from the specified XML source\n  VARIANT arg0 --- xmlSource [IN]","name":"load","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#load","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#loadXML":{"description":"BOOL loadXML\nload the document from a string\n  BSTR arg0 --- bstrXML [IN]","name":"loadXML","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#loadXML","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#method_missing":{"description":"","name":"method_missing","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#method_missing","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#namespaceURI":{"description":"BSTR namespaceURI\nthe URI for the namespace applying to the node","name":"namespaceURI","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#namespaceURI","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nextSibling":{"description":"IXMLDOMNode nextSibling\nright sibling of the node","name":"nextSibling","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nextSibling","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeFromID":{"description":"IXMLDOMNode nodeFromID\nretrieve node from it's ID\n  BSTR arg0 --- idString [IN]","name":"nodeFromID","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeFromID","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeName":{"description":"BSTR nodeName\nname of the node","name":"nodeName","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeName","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeType":{"description":"DOMNodeType nodeType\nthe node's type","name":"nodeType","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeType","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeTypeString":{"description":"BSTR nodeTypeString\nthe type of node in string form","name":"nodeTypeString","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeTypeString","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeTypedValue":{"description":"VARIANT nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeTypedValue","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeTypedValue=":{"description":"VOID nodeTypedValue\nget the strongly typed value of the node","name":"nodeTypedValue=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeTypedValue=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeValue":{"description":"VARIANT nodeValue\nvalue stored in the node","name":"nodeValue","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeValue","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#nodeValue=":{"description":"VOID nodeValue\nvalue stored in the node","name":"nodeValue=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#nodeValue=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#ondataavailable":{"description":"HRESULT ondataavailable EVENT in XMLDOMDocumentEvents","name":"ondataavailable","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#ondataavailable","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#ondataavailable=":{"description":"VOID ondataavailable\nregister an ondataavailable event handler","name":"ondataavailable=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#ondataavailable=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#onreadystatechange":{"description":"HRESULT onreadystatechange EVENT in XMLDOMDocumentEvents","name":"onreadystatechange","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#onreadystatechange","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#onreadystatechange=":{"description":"VOID onreadystatechange\nregister a readystatechange event handler","name":"onreadystatechange=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#onreadystatechange=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#ontransformnode=":{"description":"VOID ontransformnode\nregister an ontransformnode event handler","name":"ontransformnode=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#ontransformnode=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#ownerDocument":{"description":"IXMLDOMDocument ownerDocument\ndocument that contains the node","name":"ownerDocument","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#ownerDocument","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#parentNode":{"description":"IXMLDOMNode parentNode\nparent of the node","name":"parentNode","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#parentNode","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#parseError":{"description":"IXMLDOMParseError parseError\nget the last parser error","name":"parseError","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#parseError","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#parsed":{"description":"BOOL parsed\nhas sub-tree been completely parsed","name":"parsed","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#parsed","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#prefix":{"description":"BSTR prefix\nthe prefix for the namespace applying to the node","name":"prefix","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#prefix","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#preserveWhiteSpace":{"description":"BOOL preserveWhiteSpace\nindicates whether the parser preserves whitespace","name":"preserveWhiteSpace","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#preserveWhiteSpace","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#preserveWhiteSpace=":{"description":"VOID preserveWhiteSpace\nindicates whether the parser preserves whitespace","name":"preserveWhiteSpace=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#preserveWhiteSpace=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#previousSibling":{"description":"IXMLDOMNode previousSibling\nleft sibling of the node","name":"previousSibling","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#previousSibling","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#progid":{"description":"Returns the value of attribute progid","name":"progid","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#progid","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#readyState":{"description":"I4 readyState\nget the state of the XML document","name":"readyState","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#readyState","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#removeChild":{"description":"IXMLDOMNode removeChild\nremove a child node\n  IXMLDOMNode arg0 --- childNode [IN]","name":"removeChild","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#removeChild","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#replaceChild":{"description":"IXMLDOMNode replaceChild\nreplace a child node\n  IXMLDOMNode arg0 --- newChild [IN]\n  IXMLDOMNode arg1 --- oldChild [IN]","name":"replaceChild","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#replaceChild","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#resolveExternals":{"description":"BOOL resolveExternals\nindicates whether the parser resolves references to external DTD/Entities/Schema","name":"resolveExternals","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#resolveExternals","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#resolveExternals=":{"description":"VOID resolveExternals\nindicates whether the parser resolves references to external DTD/Entities/Schema","name":"resolveExternals=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#resolveExternals=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#save":{"description":"VOID save\nsave the document to a specified desination\n  VARIANT arg0 --- desination [IN]","name":"save","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#save","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#selectNodes":{"description":"IXMLDOMNodeList selectNodes\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectNodes","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#selectNodes","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#selectSingleNode":{"description":"IXMLDOMNode selectSingleNode\nexecute query on the subtree\n  BSTR arg0 --- queryString [IN]","name":"selectSingleNode","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#selectSingleNode","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#specified":{"description":"BOOL specified\nindicates whether node is a default value","name":"specified","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#specified","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#text":{"description":"BSTR text\ntext content of the node and subtree","name":"text","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#text","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#text=":{"description":"VOID text\ntext content of the node and subtree","name":"text=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#text=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#transformNode":{"description":"BSTR transformNode\napply the stylesheet to the subtree\n  IXMLDOMNode arg0 --- stylesheet [IN]","name":"transformNode","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#transformNode","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#transformNodeToObject":{"description":"VOID transformNodeToObject\napply the stylesheet to the subtree, returning the result through a document or a stream\n  IXMLDOMNode arg0 --- stylesheet [IN]\n  VARIANT arg1 --- outputObject [IN]","name":"transformNodeToObject","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#transformNodeToObject","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#url":{"description":"BSTR url\nget the URL for the loaded XML document","name":"url","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#url","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#validateOnParse":{"description":"BOOL validateOnParse\nindicates whether the parser performs validation","name":"validateOnParse","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#validateOnParse","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#validateOnParse=":{"description":"VOID validateOnParse\nindicates whether the parser performs validation","name":"validateOnParse=","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#validateOnParse=","type":"instance_method","visibility":"public"},"Microsoft_FreeThreadedXMLDOM_1_0#xml":{"description":"BSTR xml\nreturn the XML source for the node and each of its descendants","name":"xml","namespace":"Microsoft_FreeThreadedXMLDOM_1_0","path":"Microsoft_FreeThreadedXMLDOM_1_0#xml","type":"instance_method","visibility":"public"},"IXMLHttpRequest":{"description":"IXMLHttpRequest Interface","name":"IXMLHttpRequest","namespace":"","path":"IXMLHttpRequest","type":"module","visibility":"public"},"IXMLHttpRequest#abort":{"description":"VOID abort\nAbort HTTP request","name":"abort","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#abort","type":"module_function","visibility":"public"},"IXMLHttpRequest#getAllResponseHeaders":{"description":"BSTR getAllResponseHeaders\nGet all HTTP response headers","name":"getAllResponseHeaders","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#getAllResponseHeaders","type":"module_function","visibility":"public"},"IXMLHttpRequest#getResponseHeader":{"description":"BSTR getResponseHeader\nGet HTTP response header\n  BSTR arg0 --- bstrHeader [IN]","name":"getResponseHeader","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#getResponseHeader","type":"module_function","visibility":"public"},"IXMLHttpRequest#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#lastargs","type":"module_function","visibility":"public"},"IXMLHttpRequest#onreadystatechange=":{"description":"VOID onreadystatechange\nRegister a complete event handler","name":"onreadystatechange=","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#onreadystatechange=","type":"module_function","visibility":"public"},"IXMLHttpRequest#open":{"description":"VOID open\nOpen HTTP connection\n  BSTR arg0 --- bstrMethod [IN]\n  BSTR arg1 --- bstrUrl [IN]\n  VARIANT arg2 --- varAsync [IN]\n  VARIANT arg3 --- bstrUser [IN]\n  VARIANT arg4 --- bstrPassword [IN]","name":"open","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#open","type":"module_function","visibility":"public"},"IXMLHttpRequest#readyState":{"description":"I4 readyState\nGet ready state","name":"readyState","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#readyState","type":"module_function","visibility":"public"},"IXMLHttpRequest#responseBody":{"description":"VARIANT responseBody\nGet response body","name":"responseBody","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#responseBody","type":"module_function","visibility":"public"},"IXMLHttpRequest#responseStream":{"description":"VARIANT responseStream\nGet response body","name":"responseStream","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#responseStream","type":"module_function","visibility":"public"},"IXMLHttpRequest#responseText":{"description":"BSTR responseText\nGet response body","name":"responseText","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#responseText","type":"module_function","visibility":"public"},"IXMLHttpRequest#responseXML":{"description":"DISPATCH responseXML\nGet response body","name":"responseXML","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#responseXML","type":"module_function","visibility":"public"},"IXMLHttpRequest#send":{"description":"VOID send\nSend HTTP request\n  VARIANT arg0 --- varBody [IN]","name":"send","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#send","type":"module_function","visibility":"public"},"IXMLHttpRequest#setRequestHeader":{"description":"VOID setRequestHeader\nAdd HTTP request header\n  BSTR arg0 --- bstrHeader [IN]\n  BSTR arg1 --- bstrValue [IN]","name":"setRequestHeader","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#setRequestHeader","type":"module_function","visibility":"public"},"IXMLHttpRequest#status":{"description":"I4 status\nGet HTTP status code","name":"status","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#status","type":"module_function","visibility":"public"},"IXMLHttpRequest#statusText":{"description":"BSTR statusText\nGet HTTP status text","name":"statusText","namespace":"IXMLHttpRequest","path":"IXMLHttpRequest#statusText","type":"module_function","visibility":"public"},"Microsoft_XMLHTTP_1":{"description":"XML HTTP Request class.","name":"Microsoft_XMLHTTP_1","namespace":"","path":"Microsoft_XMLHTTP_1","type":"class","visibility":"public"},"Microsoft_XMLHTTP_1#abort":{"description":"VOID abort\nAbort HTTP request","name":"abort","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#abort","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#clsid":{"description":"Returns the value of attribute clsid","name":"clsid","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#clsid","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#dispatch":{"description":"Returns the value of attribute dispatch","name":"dispatch","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#dispatch","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#getAllResponseHeaders":{"description":"BSTR getAllResponseHeaders\nGet all HTTP response headers","name":"getAllResponseHeaders","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#getAllResponseHeaders","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#getResponseHeader":{"description":"BSTR getResponseHeader\nGet HTTP response header\n  BSTR arg0 --- bstrHeader [IN]","name":"getResponseHeader","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#getResponseHeader","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#initialize":{"description":"","name":"initialize","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#initialize","type":"instance_method","visibility":"public","return":[["Microsoft_XMLHTTP_1"],"a new instance of Microsoft_XMLHTTP_1"]},"Microsoft_XMLHTTP_1#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#lastargs","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#method_missing":{"description":"","name":"method_missing","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#method_missing","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#onreadystatechange=":{"description":"VOID onreadystatechange\nRegister a complete event handler","name":"onreadystatechange=","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#onreadystatechange=","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#open":{"description":"VOID open\nOpen HTTP connection\n  BSTR arg0 --- bstrMethod [IN]\n  BSTR arg1 --- bstrUrl [IN]\n  VARIANT arg2 --- varAsync [IN]\n  VARIANT arg3 --- bstrUser [IN]\n  VARIANT arg4 --- bstrPassword [IN]","name":"open","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#open","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#progid":{"description":"Returns the value of attribute progid","name":"progid","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#progid","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#readyState":{"description":"I4 readyState\nGet ready state","name":"readyState","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#readyState","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#responseBody":{"description":"VARIANT responseBody\nGet response body","name":"responseBody","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#responseBody","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#responseStream":{"description":"VARIANT responseStream\nGet response body","name":"responseStream","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#responseStream","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#responseText":{"description":"BSTR responseText\nGet response body","name":"responseText","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#responseText","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#responseXML":{"description":"DISPATCH responseXML\nGet response body","name":"responseXML","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#responseXML","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#send":{"description":"VOID send\nSend HTTP request\n  VARIANT arg0 --- varBody [IN]","name":"send","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#send","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#setRequestHeader":{"description":"VOID setRequestHeader\nAdd HTTP request header\n  BSTR arg0 --- bstrHeader [IN]\n  BSTR arg1 --- bstrValue [IN]","name":"setRequestHeader","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#setRequestHeader","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#status":{"description":"I4 status\nGet HTTP status code","name":"status","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#status","type":"instance_method","visibility":"public"},"Microsoft_XMLHTTP_1#statusText":{"description":"BSTR statusText\nGet HTTP status text","name":"statusText","namespace":"Microsoft_XMLHTTP_1","path":"Microsoft_XMLHTTP_1#statusText","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0":{"description":"XML Data Source Object","name":"Microsoft_XMLDSO_1_0","namespace":"","path":"Microsoft_XMLDSO_1_0","type":"class","visibility":"public"},"Microsoft_XMLDSO_1_0#JavaDSOCompatible":{"description":"I4 JavaDSOCompatible","name":"JavaDSOCompatible","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#JavaDSOCompatible","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#JavaDSOCompatible=":{"description":"VOID JavaDSOCompatible","name":"JavaDSOCompatible=","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#JavaDSOCompatible=","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#XMLDocument":{"description":"IXMLDOMDocument XMLDocument","name":"XMLDocument","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#XMLDocument","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#XMLDocument=":{"description":"VOID XMLDocument","name":"XMLDocument=","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#XMLDocument=","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#clsid":{"description":"Returns the value of attribute clsid","name":"clsid","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#clsid","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#dispatch":{"description":"Returns the value of attribute dispatch","name":"dispatch","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#dispatch","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#initialize":{"description":"","name":"initialize","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#initialize","type":"instance_method","visibility":"public","return":[["Microsoft_XMLDSO_1_0"],"a new instance of Microsoft_XMLDSO_1_0"]},"Microsoft_XMLDSO_1_0#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#lastargs","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#method_missing":{"description":"","name":"method_missing","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#method_missing","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#progid":{"description":"Returns the value of attribute progid","name":"progid","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#progid","type":"instance_method","visibility":"public"},"Microsoft_XMLDSO_1_0#readyState":{"description":"I4 readyState","name":"readyState","namespace":"Microsoft_XMLDSO_1_0","path":"Microsoft_XMLDSO_1_0#readyState","type":"instance_method","visibility":"public"},"OLEtagXMLEMEM_TYPE":{"description":"Constants that define types for IXMLElement.","name":"OLEtagXMLEMEM_TYPE","namespace":"","path":"OLEtagXMLEMEM_TYPE","type":"module","visibility":"public"},"OLEtagXMLEMEM_TYPE#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE#lastargs","type":"module_function","visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_COMMENT":{"description":"","name":"XMLELEMTYPE_COMMENT","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_COMMENT","type":"constant","return":null,"visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_DOCUMENT":{"description":"","name":"XMLELEMTYPE_DOCUMENT","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_DOCUMENT","type":"constant","return":null,"visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_DTD":{"description":"","name":"XMLELEMTYPE_DTD","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_DTD","type":"constant","return":null,"visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_ELEMENT":{"description":"","name":"XMLELEMTYPE_ELEMENT","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_ELEMENT","type":"constant","return":null,"visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_OTHER":{"description":"","name":"XMLELEMTYPE_OTHER","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_OTHER","type":"constant","return":null,"visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_PI":{"description":"","name":"XMLELEMTYPE_PI","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_PI","type":"constant","return":null,"visibility":"public"},"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_TEXT":{"description":"","name":"XMLELEMTYPE_TEXT","namespace":"OLEtagXMLEMEM_TYPE","path":"OLEtagXMLEMEM_TYPE::XMLELEMTYPE_TEXT","type":"constant","return":null,"visibility":"public"},"Msxml":{"description":"XMLDocument extends IXML Document.  It is obsolete.  You should use DOMDocument.  This object should not be confused with the XMLDocument property on the XML data island.","name":"Msxml","namespace":"","path":"Msxml","type":"class","visibility":"public"},"Msxml#async":{"description":"HRESULT async\nget asynchronous loading flag.\n  BOOL arg0 --- pf [OUT]","name":"async","namespace":"Msxml","path":"Msxml#async","type":"instance_method","visibility":"public"},"Msxml#async=":{"description":"HRESULT async\nget asynchronous loading flag.\n  BOOL arg0 --- pf [IN]","name":"async=","namespace":"Msxml","path":"Msxml#async=","type":"instance_method","visibility":"public"},"Msxml#charset":{"description":"HRESULT charset\nget encoding.\n  BSTR arg0 --- p [OUT]","name":"charset","namespace":"Msxml","path":"Msxml#charset","type":"instance_method","visibility":"public"},"Msxml#charset=":{"description":"HRESULT charset\nget encoding.\n  BSTR arg0 --- p [IN]","name":"charset=","namespace":"Msxml","path":"Msxml#charset=","type":"instance_method","visibility":"public"},"Msxml#clsid":{"description":"Returns the value of attribute clsid","name":"clsid","namespace":"Msxml","path":"Msxml#clsid","type":"instance_method","visibility":"public"},"Msxml#createElement":{"description":"HRESULT createElement\ncreate different types of IXMLElements.\n  VARIANT arg0 --- vType [IN]\n  VARIANT arg1 --- var1 [IN]\n  IXMLElement2,IXMLElement2 arg2 --- ppElem [OUT]","name":"createElement","namespace":"Msxml","path":"Msxml#createElement","type":"instance_method","visibility":"public"},"Msxml#dispatch":{"description":"Returns the value of attribute dispatch","name":"dispatch","namespace":"Msxml","path":"Msxml#dispatch","type":"instance_method","visibility":"public"},"Msxml#doctype":{"description":"HRESULT doctype\nget document type.\n  BSTR arg0 --- p [OUT]","name":"doctype","namespace":"Msxml","path":"Msxml#doctype","type":"instance_method","visibility":"public"},"Msxml#initialize":{"description":"","name":"initialize","namespace":"Msxml","path":"Msxml#initialize","type":"instance_method","visibility":"public","return":[["Msxml"],"a new instance of Msxml"]},"Msxml#lastargs":{"description":"Returns the value of attribute lastargs","name":"lastargs","namespace":"Msxml","path":"Msxml#lastargs","type":"instance_method","visibility":"public"},"Msxml#method_missing":{"description":"","name":"method_missing","namespace":"Msxml","path":"Msxml#method_missing","type":"instance_method","visibility":"public"},"Msxml#progid":{"description":"Returns the value of attribute progid","name":"progid","namespace":"Msxml","path":"Msxml#progid","type":"instance_method","visibility":"public"},"Msxml#readyState":{"description":"HRESULT readyState\nget ready state.\n  I4 arg0 --- pl [OUT]","name":"readyState","namespace":"Msxml","path":"Msxml#readyState","type":"instance_method","visibility":"public"},"Msxml#root":{"description":"HRESULT root\nget root IXMLElement of the XML document.\n  IXMLElement2,IXMLElement2 arg0 --- p [OUT]","name":"root","namespace":"Msxml","path":"Msxml#root","type":"instance_method","visibility":"public"},"Msxml#url":{"description":"HRESULT url\nset URL to load an XML document from the URL.\n  BSTR arg0 --- p [OUT]","name":"url","namespace":"Msxml","path":"Msxml#url","type":"instance_method","visibility":"public"},"Msxml#url=":{"description":"HRESULT url\nset URL to load an XML document from the URL.\n  BSTR arg0 --- p [IN]","name":"url=","namespace":"Msxml","path":"Msxml#url=","type":"instance_method","visibility":"public"},"Msxml#version":{"description":"HRESULT version\nget XML version number.\n  BSTR arg0 --- p [OUT]","name":"version","namespace":"Msxml","path":"Msxml#version","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE":{"description":"<code>WIN32OLE_TYPE</code> objects represent OLE type libarary information.","name":"WIN32OLE_TYPE","namespace":"","path":"WIN32OLE_TYPE","type":"class","visibility":"public"},"WIN32OLE_TYPE#default_event_sources":{"description":"Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject and having IMPLTYPEFLAG_FSOURCE and IMPLTYPEFLAG_FDEFAULT.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', \"InternetExplorer\")\n   p tobj.default_event_sources  # => [#<WIN32OLE_TYPE:DWebBrowserEvents2>]","name":"default_event_sources","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#default_event_sources","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#default_ole_types":{"description":"Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject and having IMPLTYPEFLAG_FDEFAULT.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', \"InternetExplorer\")\n   p tobj.default_ole_types\n   # => [#<WIN32OLE_TYPE:IWebBrowser2>, #<WIN32OLE_TYPE:DWebBrowserEvents2>]","name":"default_ole_types","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#default_ole_types","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#guid":{"description":"Returns GUID.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n  puts tobj.guid  # => {00024500-0000-0000-C000-000000000046}","name":"guid","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#guid","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#helpcontext":{"description":"Returns helpcontext. If helpcontext is not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   puts tobj.helpfile # => 131185","name":"helpcontext","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#helpcontext","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#helpfile":{"description":"Returns helpfile path. If helpfile is not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   puts tobj.helpfile # => C:\\...\\VBAXL9.CHM","name":"helpfile","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#helpfile","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#helpstring":{"description":"Returns help string.\n  tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', 'IWebBrowser')\n  puts tobj.helpstring # => Web Browser interface","name":"helpstring","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#helpstring","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#implemented_ole_types":{"description":"Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   p tobj.implemented_ole_types # => [_Worksheet, DocEvents]","name":"implemented_ole_types","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#implemented_ole_types","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#initialize":{"description":"Returns a new WIN32OLE_TYPE object.\nThe first argument <i>typelib</i> specifies OLE type library name.\nThe second argument specifies OLE class name.\n\n    WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n        # => WIN32OLE_TYPE object of Application class of Excel.","name":"initialize","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#inspect":{"description":"Returns the type name with class name.\n\n   ie = WIN32OLE.new('InternetExplorer.Application')\n   ie.ole_type.inspect => #<WIN32OLE_TYPE:IWebBrowser2>","name":"inspect","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#inspect","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#major_version":{"description":"Returns major version.\n   tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\n   puts tobj.major_version # => 8","name":"major_version","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#major_version","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#minor_version":{"description":"Returns minor version.\n   tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\n   puts tobj.minor_version # => 2","name":"minor_version","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#minor_version","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#name":{"description":"Returns OLE type name.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n   puts tobj.name  # => Application","name":"to_s","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#to_s":{"description":"Returns OLE type name.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n   puts tobj.name  # => Application","name":"to_s","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#ole_methods":{"description":"Returns array of WIN32OLE_METHOD objects which represent OLE method defined in\nOLE type library.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n  methods = tobj.ole_methods.collect{|m|\n    m.name\n  }\n  # => ['Activate', 'Copy', 'Delete',....]","name":"ole_methods","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#ole_methods","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#ole_type":{"description":"returns type of OLE class.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n  puts tobj.ole_type  # => Class","name":"ole_type","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#ole_type","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#ole_typelib":{"description":"Returns the WIN32OLE_TYPELIB object which is including the WIN32OLE_TYPE\nobject. If it is not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Worksheet')\n   puts tobj.ole_typelib # => 'Microsoft Excel 9.0 Object Library'","name":"ole_typelib","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#ole_typelib","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#progid":{"description":"Returns ProgID if it exists. If not found, then returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n   puts tobj.progid  # =>   Excel.Application.9","name":"progid","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#progid","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#source_ole_types":{"description":"Returns the array of WIN32OLE_TYPE object which is implemented by the WIN32OLE_TYPE\nobject and having IMPLTYPEFLAG_FSOURCE.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', \"InternetExplorer\")\n   p tobj.source_ole_types\n   # => [#<WIN32OLE_TYPE:DWebBrowserEvents2>, #<WIN32OLE_TYPE:DWebBrowserEvents>]","name":"source_ole_types","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#source_ole_types","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#src_type":{"description":"Returns source class when the OLE class is 'Alias'.\n   tobj =  WIN32OLE_TYPE.new('Microsoft Office 9.0 Object Library', 'MsoRGBType')\n   puts tobj.src_type # => I4","name":"src_type","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#src_type","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#typekind":{"description":"Returns number which represents type.\n  tobj = WIN32OLE_TYPE.new('Microsoft Word 10.0 Object Library', 'Documents')\n  puts tobj.typekind # => 4","name":"typekind","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#typekind","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#variables":{"description":"Returns array of WIN32OLE_VARIABLE objects which represent variables\ndefined in OLE class.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   vars = tobj.variables\n   vars.each do |v|\n     puts \"#{v.name} = #{v.value}\"\n   end\n\n   The result of above sample script is follows:\n     xlChart = -4109\n     xlDialogSheet = -4116\n     xlExcel4IntlMacroSheet = 4\n     xlExcel4MacroSheet = 3\n     xlWorksheet = -4167","name":"variables","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#variables","type":"instance_method","visibility":"public"},"WIN32OLE_TYPE#visible?":{"description":"Returns true if the OLE class is public.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Application')\n  puts tobj.visible  # => true","name":"visible?","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_TYPE.ole_classes":{"description":"Returns array of WIN32OLE_TYPE objects defined by the <i>typelib</i> type library.\nThis method will be OBSOLETE. Use WIN32OLE_TYPELIB.new(typelib).ole_classes instead.","name":"ole_classes","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE.ole_classes","type":"class_method","visibility":"public"},"WIN32OLE_TYPE.progids":{"description":"Returns array of ProgID.","name":"progids","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE.progids","type":"class_method","visibility":"public"},"WIN32OLE_TYPE.typelibs":{"description":"Returns array of type libraries.\nThis method will be OBSOLETE. Use WIN32OLE_TYPELIB.typelibs.collect{|t| t.name} instead.","name":"typelibs","namespace":"WIN32OLE_TYPE","path":"WIN32OLE_TYPE.typelibs","type":"class_method","visibility":"public"},"WIN32COMGen":{"description":"","name":"WIN32COMGen","namespace":"","path":"WIN32COMGen","type":"class","visibility":"public"},"WIN32COMGen#class_name":{"description":"","name":"class_name","namespace":"WIN32COMGen","path":"WIN32COMGen#class_name","type":"instance_method","visibility":"public"},"WIN32COMGen#define_class":{"description":"","name":"define_class","namespace":"WIN32COMGen","path":"WIN32COMGen#define_class","type":"instance_method","visibility":"public"},"WIN32COMGen#define_include":{"description":"","name":"define_include","namespace":"WIN32COMGen","path":"WIN32COMGen#define_include","type":"instance_method","visibility":"public"},"WIN32COMGen#define_initialize":{"description":"","name":"define_initialize","namespace":"WIN32COMGen","path":"WIN32COMGen#define_initialize","type":"instance_method","visibility":"public"},"WIN32COMGen#define_instance_variables":{"description":"","name":"define_instance_variables","namespace":"WIN32COMGen","path":"WIN32COMGen#define_instance_variables","type":"instance_method","visibility":"public"},"WIN32COMGen#define_method_missing":{"description":"","name":"define_method_missing","namespace":"WIN32COMGen","path":"WIN32COMGen#define_method_missing","type":"instance_method","visibility":"public"},"WIN32COMGen#define_module":{"description":"","name":"define_module","namespace":"WIN32COMGen","path":"WIN32COMGen#define_module","type":"instance_method","visibility":"public"},"WIN32COMGen#generate":{"description":"","name":"generate","namespace":"WIN32COMGen","path":"WIN32COMGen#generate","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_args":{"description":"","name":"generate_args","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_args","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_argtype":{"description":"","name":"generate_argtype","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_argtype","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_argtypes":{"description":"","name":"generate_argtypes","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_argtypes","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_class":{"description":"","name":"generate_class","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_class","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_constants":{"description":"","name":"generate_constants","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_constants","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_func_methods":{"description":"","name":"generate_func_methods","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_func_methods","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_method":{"description":"","name":"generate_method","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_method","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_method_args_help":{"description":"","name":"generate_method_args_help","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_method_args_help","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_method_body":{"description":"","name":"generate_method_body","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_method_body","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_method_help":{"description":"","name":"generate_method_help","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_method_help","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_methods":{"description":"","name":"generate_methods","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_methods","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_properties_with_args":{"description":"","name":"generate_properties_with_args","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_properties_with_args","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_propget_methods":{"description":"","name":"generate_propget_methods","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_propget_methods","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_propput_methods":{"description":"","name":"generate_propput_methods","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_propput_methods","type":"instance_method","visibility":"public"},"WIN32COMGen#generate_propputref_methods":{"description":"","name":"generate_propputref_methods","namespace":"WIN32COMGen","path":"WIN32COMGen#generate_propputref_methods","type":"instance_method","visibility":"public"},"WIN32COMGen#initialize":{"description":"","name":"initialize","namespace":"WIN32COMGen","path":"WIN32COMGen#initialize","type":"instance_method","visibility":"public","return":[["WIN32COMGen"],"a new instance of WIN32COMGen"]},"WIN32COMGen#ole_classes":{"description":"","name":"ole_classes","namespace":"WIN32COMGen","path":"WIN32COMGen#ole_classes","type":"instance_method","visibility":"public"},"WIN32COMGen#typelib":{"description":"Returns the value of attribute typelib","name":"typelib","namespace":"WIN32COMGen","path":"WIN32COMGen#typelib","type":"instance_method","visibility":"public"},"WIN32OLERuntimeError":{"description":"Raised when OLE processing failed.\n\nEX:\n\n  obj = WIN32OLE.new(\"NonExistProgID\")\n\nraises the exception:\n\n  WIN32OLERuntimeError: unknown OLE server: `NonExistProgID'\n      HRESULT error code:0x800401f3\n        Invalid class string","name":"WIN32OLERuntimeError","namespace":"","path":"WIN32OLERuntimeError","type":"class","visibility":"public"},"WIN32OLE_EVENT":{"description":"<code>WIN32OLE_EVENT</code> objects controls OLE event.","name":"WIN32OLE_EVENT","namespace":"","path":"WIN32OLE_EVENT","type":"class","visibility":"public"},"WIN32OLE_EVENT#handler":{"description":"returns handler object.","name":"handler","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#handler","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT#handler=":{"description":"sets event handler object. If handler object has onXXX\nmethod according to XXX event, then onXXX method is called\nwhen XXX event occurs.\n\nIf handler object has method_missing and there is no\nmethod according to the event, then method_missing\ncalled and 1-st argument is event name.\n\nIf handler object has onXXX method and there is block\ndefined by WIN32OLE_EVENT#on_event('XXX'){},\nthen block is executed but handler object method is not called\nwhen XXX event occurs.\n\n    class Handler\n      def onStatusTextChange(text)\n        puts \"StatusTextChanged\"\n      end\n      def onPropertyChange(prop)\n        puts \"PropertyChanged\"\n      end\n      def method_missing(ev, *arg)\n        puts \"other event #{ev}\"\n      end\n    end\n\n    handler = Handler.new\n    ie = WIN32OLE.new('InternetExplorer.Application')\n    ev = WIN32OLE_EVENT.new(ie)\n    ev.on_event(\"StatusTextChange\") {|*args|\n      puts \"this block executed.\"\n      puts \"handler.onStatusTextChange method is not called.\"\n    }\n    ev.handler = handler","name":"handler=","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#handler=","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT#initialize":{"description":"Returns OLE event object.\nThe first argument specifies WIN32OLE object.\nThe second argument specifies OLE event name.\n   ie = WIN32OLE.new('InternetExplorer.Application')\n   ev = WIN32OLE_EVENT.new(ie, 'DWebBrowserEvents')","name":"initialize","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT#off_event":{"description":"removes the callback of event.\n\n  ie = WIN32OLE.new('InternetExplorer.Application')\n  ev = WIN32OLE_EVENT.new(ie)\n  ev.on_event('BeforeNavigate2') {|*args|\n    args.last[6] = true\n  }\n    ...\n  ev.off_event('BeforeNavigate2')\n    ...","name":"off_event","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#off_event","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT#on_event":{"description":"Defines the callback event.\nIf argument is omitted, this method defines the callback of all events.\nIf you want to modify reference argument in callback, return hash in\ncallback. If you want to return value to OLE server as result of callback\nuse `return' or :return.\n\n  ie = WIN32OLE.new('InternetExplorer.Application')\n  ev = WIN32OLE_EVENT.new(ie)\n  ev.on_event(\"NavigateComplete\") {|url| puts url}\n  ev.on_event() {|ev, *args| puts \"#{ev} fired\"}\n\n  ev.on_event(\"BeforeNavigate2\") {|*args|\n    ...\n    # set true to BeforeNavigate reference argument `Cancel'.\n    # Cancel is 7-th argument of BeforeNavigate,\n    # so you can use 6 as key of hash instead of 'Cancel'.\n    # The argument is counted from 0.\n    # The hash key of 0 means first argument.)\n    {:Cancel => true}  # or {'Cancel' => true} or {6 => true}\n  }\n\n  ev.on_event(...) {|*args|\n    {:return => 1, :xxx => yyy}\n  }","name":"on_event","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#on_event","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT#on_event_with_outargs":{"description":"Defines the callback of event.\nIf you want modify argument in callback,\nyou could use this method instead of WIN32OLE_EVENT#on_event.\n\n  ie = WIN32OLE.new('InternetExplorer.Application')\n  ev = WIN32OLE_EVENT.new(ie)\n  ev.on_event_with_outargs('BeforeNavigate2') {|*args|\n    args.last[6] = true\n  }","name":"on_event_with_outargs","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#on_event_with_outargs","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT#unadvise":{"description":"disconnects OLE server. If this method called, then the WIN32OLE_EVENT object\ndoes not receive the OLE server event any more.\nThis method is trial implementation.\n\n    ie = WIN32OLE.new('InternetExplorer.Application')\n    ev = WIN32OLE_EVENT.new(ie)\n    ev.on_event() {...}\n       ...\n    ev.unadvise","name":"unadvise","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT#unadvise","type":"instance_method","visibility":"public"},"WIN32OLE_EVENT.message_loop":{"description":"Translates and dispatches Windows message.","name":"message_loop","namespace":"WIN32OLE_EVENT","path":"WIN32OLE_EVENT.message_loop","type":"class_method","visibility":"public"},"WIN32OLE_PARAM":{"description":"<code>WIN32OLE_PARAM</code> objects represent param information of\n  the OLE method.","name":"WIN32OLE_PARAM","namespace":"","path":"WIN32OLE_PARAM","type":"class","visibility":"public"},"WIN32OLE_PARAM#default":{"description":"Returns default value. If the default value does not exist,\nthis method returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   method.params.each do |param|\n     if param.default\n       puts \"#{param.name} (= #{param.default})\"\n     else\n       puts \"#{param}\"\n     end\n   end\n\n   The above script result is following:\n       Filename\n       FileFormat\n       Password\n       WriteResPassword\n       ReadOnlyRecommended\n       CreateBackup\n       AccessMode (= 1)\n       ConflictResolution\n       AddToMru\n       TextCodepage\n       TextVisualLayout","name":"default","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#default","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#initialize":{"description":"Returns WIN32OLE_PARAM object which represents OLE parameter information.\n1st argument should be WIN32OLE_METHOD object.\n2nd argument `n' is n-th parameter of the method specified by 1st argument.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Scripting Runtime', 'IFileSystem')\n   method = WIN32OLE_METHOD.new(tobj, 'CreateTextFile')\n   param = WIN32OLE_PARAM.new(method, 2) # => #<WIN32OLE_PARAM:Overwrite=true>","name":"initialize","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#input?":{"description":"Returns true if the parameter is input.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   param1 = method.params[0]\n   puts param1.input? # => true","name":"input?","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#input?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_PARAM#inspect":{"description":"Returns the parameter name with class name. If the parameter has default value,\nthen returns name=value string with class name.","name":"inspect","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#inspect","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#name":{"description":"Returns name.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   param1 = method.params[0]\n   puts param1.name # => Filename","name":"to_s","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#to_s":{"description":"Returns name.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   param1 = method.params[0]\n   puts param1.name # => Filename","name":"to_s","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#ole_type":{"description":"Returns OLE type of WIN32OLE_PARAM object(parameter of OLE method).\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   param1 = method.params[0]\n   puts param1.ole_type # => VARIANT","name":"ole_type","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#ole_type","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#ole_type_detail":{"description":"Returns detail information of type of argument.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'IWorksheetFunction')\n   method = WIN32OLE_METHOD.new(tobj, 'SumIf')\n   param1 = method.params[0]\n   p param1.ole_type_detail # => [\"PTR\", \"USERDEFINED\", \"Range\"]","name":"ole_type_detail","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#ole_type_detail","type":"instance_method","visibility":"public"},"WIN32OLE_PARAM#optional?":{"description":"Returns true if argument is optional.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   param1 = method.params[0]\n   puts \"#{param1.name} #{param1.optional?}\" # => Filename true","name":"optional?","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#optional?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_PARAM#output?":{"description":"Returns true if argument is output.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', 'DWebBrowserEvents')\n   method = WIN32OLE_METHOD.new(tobj, 'NewWindow')\n   method.params.each do |param|\n     puts \"#{param.name} #{param.output?}\"\n   end\n\n   The result of above script is following:\n     URL false\n     Flags false\n     TargetFrameName false\n     PostData false\n     Headers false\n     Processed true","name":"output?","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#output?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_PARAM#retval?":{"description":"Returns true if argument is return value.\n   tobj = WIN32OLE_TYPE.new('DirectX 7 for Visual Basic Type Library',\n                            'DirectPlayLobbyConnection')\n   method = WIN32OLE_METHOD.new(tobj, 'GetPlayerShortName')\n   param = method.params[0]\n   puts \"#{param.name} #{param.retval?}\"  # => name true","name":"retval?","namespace":"WIN32OLE_PARAM","path":"WIN32OLE_PARAM#retval?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"IE_CONST":{"description":"WIN32OLE.const_load(ie)\nWIN32OLE.constants.sort.each do |c|\n  puts \"#{c} = #{WIN32OLE.const_get(c)}\"\nend","name":"IE_CONST","namespace":"","path":"IE_CONST","type":"module","visibility":"public"},"IEHandler":{"description":"","name":"IEHandler","namespace":"","path":"IEHandler","type":"class","visibility":"public"},"IEHandler#initialize":{"description":"","name":"initialize","namespace":"IEHandler","path":"IEHandler#initialize","type":"instance_method","visibility":"public","return":[["IEHandler"],"a new instance of IEHandler"]},"IEHandler#loop":{"description":"Returns the value of attribute loop","name":"loop","namespace":"IEHandler","path":"IEHandler#loop","type":"instance_method","visibility":"public"},"IEHandler#method_missing":{"description":"","name":"method_missing","namespace":"IEHandler","path":"IEHandler#method_missing","type":"instance_method","visibility":"public"},"IEHandler#onNavigateComplete2":{"description":"","name":"onNavigateComplete2","namespace":"IEHandler","path":"IEHandler#onNavigateComplete2","type":"instance_method","visibility":"public"},"IEHandler#onOnQuit":{"description":"","name":"onOnQuit","namespace":"IEHandler","path":"IEHandler#onOnQuit","type":"instance_method","visibility":"public"},"IEHandler#put_urls":{"description":"","name":"put_urls","namespace":"IEHandler","path":"IEHandler#put_urls","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD":{"description":"<code>WIN32OLE_METHOD</code> objects represent OLE method information.","name":"WIN32OLE_METHOD","namespace":"","path":"WIN32OLE_METHOD","type":"class","visibility":"public"},"WIN32OLE_METHOD#dispid":{"description":"Returns dispatch ID.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.dispid # => 181","name":"dispid","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#dispid","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#event?":{"description":"Returns true if the method is event.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SheetActivate')\n   puts method.event? # => true","name":"event?","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#event?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_METHOD#event_interface":{"description":"Returns event interface name if the method is event.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n  method = WIN32OLE_METHOD.new(tobj, 'SheetActivate')\n  puts method.event_interface # =>  WorkbookEvents","name":"event_interface","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#event_interface","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#helpcontext":{"description":"Returns help context.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.helpcontext # => 65717","name":"helpcontext","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#helpcontext","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#helpfile":{"description":"Returns help file. If help file is not found, then\nthe method returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.helpfile # => C:\\...\\VBAXL9.CHM","name":"helpfile","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#helpfile","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#helpstring":{"description":"Returns help string of OLE method. If the help string is not found,\nthen the method returns nil.\n   tobj = WIN32OLE_TYPE.new('Microsoft Internet Controls', 'IWebBrowser')\n   method = WIN32OLE_METHOD.new(tobj, 'Navigate')\n   puts method.helpstring # => Navigates to a URL or file.","name":"helpstring","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#helpstring","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#initialize":{"description":"Returns a new WIN32OLE_METHOD object which represents the information\nabout OLE method.\nThe first argument <i>ole_type</i> specifies WIN32OLE_TYPE object.\nThe second argument <i>method</i> specifies OLE method name defined OLE class\nwhich represents WIN32OLE_TYPE object.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')","name":"initialize","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#inspect":{"description":"Returns the method name with class name.","name":"inspect","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#inspect","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#invkind":{"description":"Returns the method invoke kind.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n  method = WIN32OLE_METHOD.new(tobj, 'Add')\n  puts method.invkind # => 1","name":"invkind","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#invkind","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#invoke_kind":{"description":"Returns the method kind string. The string is \"UNKNOWN\" or \"PROPERTY\"\nor \"PROPERTY\" or \"PROPERTYGET\" or \"PROPERTYPUT\" or \"PROPERTYPPUTREF\"\nor \"FUNC\".\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.invoke_kind # => \"FUNC\"","name":"invoke_kind","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#invoke_kind","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#name":{"description":"call-seq\n   WIN32OLE_METHOD#name\n\nReturns the name of the method.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   puts method.name # => SaveAs","name":"to_s","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#to_s":{"description":"call-seq\n   WIN32OLE_METHOD#name\n\nReturns the name of the method.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   puts method.name # => SaveAs","name":"to_s","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#offset_vtbl":{"description":"Returns the offset ov VTBL.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.offset_vtbl # => 40","name":"offset_vtbl","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#offset_vtbl","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#params":{"description":"returns array of WIN32OLE_PARAM object corresponding with method parameters.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   p method.params # => [Filename, FileFormat, Password, WriteResPassword,\n                         ReadOnlyRecommended, CreateBackup, AccessMode,\n                         ConflictResolution, AddToMru, TextCodepage,\n                         TextVisualLayout]","name":"params","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#params","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#return_type":{"description":"Returns string of return value type of method.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.return_type # => Workbook","name":"return_type","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#return_type","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#return_type_detail":{"description":"Returns detail information of return value type of method.\nThe information is array.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   p method.return_type_detail # => [\"PTR\", \"USERDEFINED\", \"Workbook\"]","name":"return_type_detail","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#return_type_detail","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#return_vtype":{"description":"Returns number of return value type of method.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.return_vtype # => 26","name":"return_vtype","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#return_vtype","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#size_opt_params":{"description":"Returns the size of optional parameters.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   puts method.size_opt_params # => 4","name":"size_opt_params","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#size_opt_params","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#size_params":{"description":"Returns the size of arguments of the method.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbook')\n   method = WIN32OLE_METHOD.new(tobj, 'SaveAs')\n   puts method.size_params # => 11","name":"size_params","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#size_params","type":"instance_method","visibility":"public"},"WIN32OLE_METHOD#visible?":{"description":"Returns true if the method is public.\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'Workbooks')\n   method = WIN32OLE_METHOD.new(tobj, 'Add')\n   puts method.visible? # => true","name":"visible?","namespace":"WIN32OLE_METHOD","path":"WIN32OLE_METHOD#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_RECORD":{"description":"<code>WIN32OLE_RECORD</code> objects represents VT_RECORD OLE variant.\n  Win32OLE returns WIN32OLE_RECORD object if the result value of invoking\n  OLE methods.\n\n  If COM server in VB.NET ComServer project is the following:\n\n    Imports System.Runtime.InteropServices\n    Public Class ComClass\n        Public Structure Book\n            <MarshalAs(UnmanagedType.BStr)> _\n            Public title As String\n            Public cost As Integer\n        End Structure\n        Public Function getBook() As Book\n            Dim book As New Book\n            book.title = \"The Ruby Book\"\n            book.cost = 20\n            Return book\n        End Function\n    End Class\n\n  then, you can retrieve getBook return value from the following\n  Ruby script:\n\n    require 'win32ole'\n    obj = WIN32OLE.new('ComServer.ComClass')\n    book = obj.getBook\n    book.class # => WIN32OLE_RECORD\n    book.title # => \"The Ruby Book\"\n    book.cost  # => 20","name":"WIN32OLE_RECORD","namespace":"","path":"WIN32OLE_RECORD","type":"class","visibility":"public"},"WIN32OLE_RECORD#initialize":{"description":"Returns WIN32OLE_RECORD object. The first argument is struct name (String\nor Symbol).\nThe second parameter obj should be WIN32OLE object or WIN32OLE_TYPELIB object.\nIf COM server in VB.NET ComServer project is the following:\n\n  Imports System.Runtime.InteropServices\n  Public Class ComClass\n      Public Structure Book\n          <MarshalAs(UnmanagedType.BStr)> _\n          Public title As String\n          Public cost As Integer\n      End Structure\n  End Class\n\nthen, you can create WIN32OLE_RECORD object is as following:\n\n  require 'win32ole'\n  obj = WIN32OLE.new('ComServer.ComClass')\n  book1 = WIN32OLE_RECORD.new('Book', obj) # => WIN32OLE_RECORD object\n  tlib = obj.ole_typelib\n  book2 = WIN32OLE_RECORD.new('Book', tlib) # => WIN32OLE_RECORD object","name":"initialize","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_RECORD#inspect":{"description":"Returns the OLE struct name and member name and the value of member\n\nIf COM server in VB.NET ComServer project is the following:\n\n   Imports System.Runtime.InteropServices\n   Public Class ComClass\n       <MarshalAs(UnmanagedType.BStr)> _\n       Public title As String\n       Public cost As Integer\n   End Class\n\nthen\n\n   srver = WIN32OLE.new('ComServer.ComClass')\n   obj = WIN32OLE_RECORD.new('Book', server)\n   obj.inspect # => <WIN32OLE_RECORD(ComClass) {\"title\" => nil, \"cost\" => nil}>","name":"inspect","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#inspect","type":"instance_method","visibility":"public"},"WIN32OLE_RECORD#method_missing":{"description":"Returns value specified by the member name of VT_RECORD OLE variable.\nOr sets value specified by the member name of VT_RECORD OLE variable.\nIf the member name is not correct, KeyError exception is raised.\n\nIf COM server in VB.NET ComServer project is the following:\n\n   Imports System.Runtime.InteropServices\n   Public Class ComClass\n       Public Structure Book\n           <MarshalAs(UnmanagedType.BStr)> _\n           Public title As String\n           Public cost As Integer\n       End Structure\n   End Class\n\nThen getting/setting value from Ruby is as the following:\n\n   obj = WIN32OLE.new('ComServer.ComClass')\n   book = WIN32OLE_RECORD.new('Book', obj)\n   book.title # => nil ( book.method_missing(:title) is invoked. )\n   book.title = \"Ruby\" # ( book.method_missing(:title=, \"Ruby\") is invoked. )","name":"method_missing","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#method_missing","type":"instance_method","visibility":"public"},"WIN32OLE_RECORD#ole_instance_variable_get":{"description":"Returns value specified by the member name of VT_RECORD OLE object.\nIf the member name is not correct, KeyError exception is raised.\nIf you can't access member variable of VT_RECORD OLE object directly,\nuse this method.\n\nIf COM server in VB.NET ComServer project is the following:\n\n   Imports System.Runtime.InteropServices\n   Public Class ComClass\n       Public Structure ComObject\n           Public object_id As Ineger\n       End Structure\n   End Class\n\nand Ruby Object class has title attribute:\n\nthen accessing object_id of ComObject from Ruby is as the following:\n\n   srver = WIN32OLE.new('ComServer.ComClass')\n   obj = WIN32OLE_RECORD.new('ComObject', server)\n   # obj.object_id returns Ruby Object#object_id\n   obj.ole_instance_variable_get(:object_id) # => nil","name":"ole_instance_variable_get","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#ole_instance_variable_get","type":"instance_method","visibility":"public"},"WIN32OLE_RECORD#ole_instance_variable_set":{"description":"Sets value specified by the member name of VT_RECORD OLE object.\nIf the member name is not correct, KeyError exception is raised.\nIf you can't set value of member of VT_RECORD OLE object directly,\nuse this method.\n\nIf COM server in VB.NET ComServer project is the following:\n\n   Imports System.Runtime.InteropServices\n   Public Class ComClass\n       <MarshalAs(UnmanagedType.BStr)> _\n       Public title As String\n       Public cost As Integer\n   End Class\n\nthen setting value of the `title' member is as following:\n\n   srver = WIN32OLE.new('ComServer.ComClass')\n   obj = WIN32OLE_RECORD.new('Book', server)\n   obj.ole_instance_variable_set(:title, \"The Ruby Book\")","name":"ole_instance_variable_set","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#ole_instance_variable_set","type":"instance_method","visibility":"public"},"WIN32OLE_RECORD#to_h":{"description":"Returns Ruby Hash object which represents VT_RECORD variable.\nThe keys of Hash object are member names of VT_RECORD OLE variable and\nthe values of Hash object are values of VT_RECORD OLE variable.\n\nIf COM server in VB.NET ComServer project is the following:\n\n   Imports System.Runtime.InteropServices\n   Public Class ComClass\n       Public Structure Book\n           <MarshalAs(UnmanagedType.BStr)> _\n           Public title As String\n           Public cost As Integer\n       End Structure\n       Public Function getBook() As Book\n           Dim book As New Book\n           book.title = \"The Ruby Book\"\n           book.cost = 20\n           Return book\n       End Function\n   End Class\n\nthen, the result of WIN32OLE_RECORD#to_h is the following:\n\n   require 'win32ole'\n   obj = WIN32OLE.new('ComServer.ComClass')\n   book = obj.getBook\n   book.to_h # => {\"title\"=>\"The Ruby Book\", \"cost\"=>20}","name":"to_h","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#to_h","type":"instance_method","visibility":"public"},"WIN32OLE_RECORD#typename":{"description":"Returns the type name of VT_RECORD OLE variable.\n\nIf COM server in VB.NET ComServer project is the following:\n\n   Imports System.Runtime.InteropServices\n   Public Class ComClass\n       Public Structure Book\n           <MarshalAs(UnmanagedType.BStr)> _\n           Public title As String\n           Public cost As Integer\n       End Structure\n       Public Function getBook() As Book\n           Dim book As New Book\n           book.title = \"The Ruby Book\"\n           book.cost = 20\n           Return book\n       End Function\n   End Class\n\nthen, the result of WIN32OLE_RECORD#typename is the following:\n\n   require 'win32ole'\n   obj = WIN32OLE.new('ComServer.ComClass')\n   book = obj.getBook\n   book.typename # => \"Book\"","name":"typename","namespace":"WIN32OLE_RECORD","path":"WIN32OLE_RECORD#typename","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB":{"description":"<code>WIN32OLE_TYPELIB</code> objects represent OLE tyblib information.","name":"WIN32OLE_TYPELIB","namespace":"","path":"WIN32OLE_TYPELIB","type":"class","visibility":"public"},"WIN32OLE_TYPELIB#guid":{"description":"Returns guid string which specifies type library.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   guid = tlib.guid # -> '{00020813-0000-0000-C000-000000000046}'","name":"guid","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#guid","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#initialize":{"description":"Returns a new WIN32OLE_TYPELIB object.\n\nThe first argument <i>typelib</i>  specifies OLE type library name or GUID or\nOLE library file.\nThe second argument is major version or version of the type library.\nThe third argument is minor version.\nThe second argument and third argument are optional.\nIf the first argument is type library name, then the second and third argument\nare ignored.\n\n    tlib1 = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n    tlib2 = WIN32OLE_TYPELIB.new('{00020813-0000-0000-C000-000000000046}')\n    tlib3 = WIN32OLE_TYPELIB.new('{00020813-0000-0000-C000-000000000046}', 1.3)\n    tlib4 = WIN32OLE_TYPELIB.new('{00020813-0000-0000-C000-000000000046}', 1, 3)\n    tlib5 = WIN32OLE_TYPELIB.new(\"C:\\\\WINNT\\\\SYSTEM32\\\\SHELL32.DLL\")\n    puts tlib1.name  # -> 'Microsoft Excel 9.0 Object Library'\n    puts tlib2.name  # -> 'Microsoft Excel 9.0 Object Library'\n    puts tlib3.name  # -> 'Microsoft Excel 9.0 Object Library'\n    puts tlib4.name  # -> 'Microsoft Excel 9.0 Object Library'\n    puts tlib5.name  # -> 'Microsoft Shell Controls And Automation'","name":"initialize","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#inspect":{"description":"Returns the type library name with class name.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   tlib.inspect # => \"<#WIN32OLE_TYPELIB:Microsoft Excel 9.0 Object Library>\"","name":"inspect","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#inspect","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#library_name":{"description":"Returns library name.\nIf the method fails to access library name, WIN32OLERuntimeError is raised.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   tlib.library_name # => Excel","name":"library_name","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#library_name","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#major_version":{"description":"Returns the type library major version.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   puts tlib.major_version # -> 1","name":"major_version","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#major_version","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#minor_version":{"description":"Returns the type library minor version.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   puts tlib.minor_version # -> 3","name":"minor_version","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#minor_version","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#name":{"description":"Returns the type library name.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   name = tlib.name # -> 'Microsoft Excel 9.0 Object Library'","name":"to_s","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#to_s":{"description":"Returns the type library name.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   name = tlib.name # -> 'Microsoft Excel 9.0 Object Library'","name":"to_s","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#ole_classes":{"description":"Returns the type library file path.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   classes = tlib.ole_types.collect{|k| k.name} # -> ['AddIn', 'AddIns' ...]","name":"ole_classes","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#ole_classes","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#ole_types":{"description":"Returns the type library file path.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   classes = tlib.ole_types.collect{|k| k.name} # -> ['AddIn', 'AddIns' ...]","name":"ole_classes","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#ole_classes","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#path":{"description":"Returns the type library file path.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   puts tlib.path #-> 'C:\\...\\EXCEL9.OLB'","name":"path","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#path","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#version":{"description":"Returns the type library version.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   puts tlib.version #-> \"1.3\"","name":"version","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#version","type":"instance_method","visibility":"public"},"WIN32OLE_TYPELIB#visible?":{"description":"Returns true if the type library information is not hidden.\nIf wLibFlags of TLIBATTR is 0 or LIBFLAG_FRESTRICTED or LIBFLAG_FHIDDEN,\nthe method returns false, otherwise, returns true.\nIf the method fails to access the TLIBATTR information, then\nWIN32OLERuntimeError is raised.\n\n   tlib = WIN32OLE_TYPELIB.new('Microsoft Excel 9.0 Object Library')\n   tlib.visible? # => true","name":"visible?","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"WIN32OLE_TYPELIB.typelibs":{"description":"Returns the array of WIN32OLE_TYPELIB object.\n\n   tlibs = WIN32OLE_TYPELIB.typelibs","name":"typelibs","namespace":"WIN32OLE_TYPELIB","path":"WIN32OLE_TYPELIB.typelibs","type":"class_method","visibility":"public"},"WIN32OLE_VARIANT":{"description":"<code>WIN32OLE_VARIANT</code> objects represents OLE variant.\n\n  Win32OLE converts Ruby object into OLE variant automatically when\n  invoking OLE methods. If OLE method requires the argument which is\n  different from the variant by automatic conversion of Win32OLE, you\n  can convert the specfied variant type by using WIN32OLE_VARIANT class.\n\n    param = WIN32OLE_VARIANT.new(10, WIN32OLE::VARIANT::VT_R4)\n    oleobj.method(param)\n\n  WIN32OLE_VARIANT does not support VT_RECORD variant. Use WIN32OLE_RECORD\n  class instead of WIN32OLE_VARIANT if the VT_RECORD variant is needed.","name":"WIN32OLE_VARIANT","namespace":"","path":"WIN32OLE_VARIANT","type":"class","visibility":"public"},"WIN32OLE_VARIANT#[]":{"description":"Returns the element of WIN32OLE_VARIANT object(OLE array).\nThis method is available only when the variant type of\nWIN32OLE_VARIANT object is VT_ARRAY.\n\nREMARK:\n   The all indicies should be 0 or natural number and\n   lower than or equal to max indicies.\n   (This point is different with Ruby Array indicies.)\n\n   obj = WIN32OLE_VARIANT.new([[1,2,3],[4,5,6]])\n   p obj[0,0] # => 1\n   p obj[1,0] # => 4\n   p obj[2,0] # => WIN32OLERuntimeError\n   p obj[0, -1] # => WIN32OLERuntimeError","name":"[]","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT#[]","type":"instance_method","visibility":"public"},"WIN32OLE_VARIANT#[]=":{"description":"Set the element of WIN32OLE_VARIANT object(OLE array) to val.\nThis method is available only when the variant type of\nWIN32OLE_VARIANT object is VT_ARRAY.\n\nREMARK:\n   The all indicies should be 0 or natural number and\n   lower than or equal to max indicies.\n   (This point is different with Ruby Array indicies.)\n\n   obj = WIN32OLE_VARIANT.new([[1,2,3],[4,5,6]])\n   obj[0,0] = 7\n   obj[1,0] = 8\n   p obj.value # => [[7,2,3], [8,5,6]]\n   obj[2,0] = 9 # => WIN32OLERuntimeError\n   obj[0, -1] = 9 # => WIN32OLERuntimeError","name":"[]=","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT#[]=","type":"instance_method","visibility":"public"},"WIN32OLE_VARIANT#initialize":{"description":"Returns Ruby object wrapping OLE variant.\nThe first argument specifies Ruby object to convert OLE variant variable.\nThe second argument specifies VARIANT type.\nIn some situation, you need the WIN32OLE_VARIANT object to pass OLE method\n\n   shell = WIN32OLE.new(\"Shell.Application\")\n   folder = shell.NameSpace(\"C:\\\\Windows\")\n   item = folder.ParseName(\"tmp.txt\")\n   # You can't use Ruby String object to call FolderItem.InvokeVerb.\n   # Instead, you have to use WIN32OLE_VARIANT object to call the method.\n   shortcut = WIN32OLE_VARIANT.new(\"Create Shortcut(\\&S)\")\n   item.invokeVerb(shortcut)","name":"initialize","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT#initialize","type":"instance_method","visibility":"public"},"WIN32OLE_VARIANT#value":{"description":"Returns Ruby object value from OLE variant.\n   obj = WIN32OLE_VARIANT.new(1, WIN32OLE::VARIANT::VT_BSTR)\n   obj.value # => \"1\" (not Fixnum object, but String object \"1\")","name":"value","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT#value","type":"instance_method","visibility":"public"},"WIN32OLE_VARIANT#value=":{"description":"Sets variant value to val. If the val type does not match variant value\ntype(vartype), then val is changed to match variant value type(vartype)\nbefore setting val.\nThie method is not available when vartype is VT_ARRAY(except VT_UI1|VT_ARRAY).\nIf the vartype is VT_UI1|VT_ARRAY, the val should be String object.\n\n   obj = WIN32OLE_VARIANT.new(1) # obj.vartype is WIN32OLE::VARIANT::VT_I4\n   obj.value = 3.2 # 3.2 is changed to 3 when setting value.\n   p obj.value # => 3","name":"value=","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT#value=","type":"instance_method","visibility":"public"},"WIN32OLE_VARIANT#vartype":{"description":"Returns OLE variant type.\n   obj = WIN32OLE_VARIANT.new(\"string\")\n   obj.vartype # => WIN32OLE::VARIANT::VT_BSTR","name":"vartype","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT#vartype","type":"instance_method","visibility":"public"},"WIN32OLE_VARIANT.array":{"description":"Returns Ruby object wrapping OLE variant whose variant type is VT_ARRAY.\nThe first argument should be Array object which specifies dimensions\nand each size of dimensions of OLE array.\nThe second argument specifies variant type of the element of OLE array.\n\nThe following create 2 dimensions OLE array. The first dimensions size\nis 3, and the second is 4.\n\n   ole_ary = WIN32OLE_VARIANT.array([3,4], VT_I4)\n   ruby_ary = ole_ary.value # => [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]","name":"array","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT.array","type":"class_method","visibility":"public"},"WIN32OLE_VARIANT::Empty":{"description":"represents VT_EMPTY OLE object.","name":"Empty","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT::Empty","type":"constant","return":null,"visibility":"public"},"WIN32OLE_VARIANT::NoParam":{"description":":NoParam, false)","name":"NoParam","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT::NoParam","type":"constant","return":null,"visibility":"public"},"WIN32OLE_VARIANT::Nothing":{"description":"represents Nothing of VB.NET or VB.","name":"Nothing","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT::Nothing","type":"constant","return":null,"visibility":"public"},"WIN32OLE_VARIANT::Null":{"description":"represents VT_NULL OLE object.","name":"Null","namespace":"WIN32OLE_VARIANT","path":"WIN32OLE_VARIANT::Null","type":"constant","return":null,"visibility":"public"},"WIN32OLE_VARIABLE":{"description":"<code>WIN32OLE_VARIABLE</code> objects represent OLE variable information.","name":"WIN32OLE_VARIABLE","namespace":"","path":"WIN32OLE_VARIABLE","type":"class","visibility":"public"},"WIN32OLE_VARIABLE#inspect":{"description":"Returns the OLE variable name and the value with class name.","name":"inspect","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#inspect","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#name":{"description":"Returns the name of variable.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   variables = tobj.variables\n   variables.each do |variable|\n     puts \"#{variable.name}\"\n   end\n\n   The result of above script is following:\n     xlChart\n     xlDialogSheet\n     xlExcel4IntlMacroSheet\n     xlExcel4MacroSheet\n     xlWorksheet","name":"to_s","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#to_s":{"description":"Returns the name of variable.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   variables = tobj.variables\n   variables.each do |variable|\n     puts \"#{variable.name}\"\n   end\n\n   The result of above script is following:\n     xlChart\n     xlDialogSheet\n     xlExcel4IntlMacroSheet\n     xlExcel4MacroSheet\n     xlWorksheet","name":"to_s","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#to_s","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#ole_type":{"description":"Returns OLE type string.\n\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n  variables = tobj.variables\n  variables.each do |variable|\n    puts \"#{variable.ole_type} #{variable.name}\"\n  end\n\n  The result of above script is following:\n    INT xlChart\n    INT xlDialogSheet\n    INT xlExcel4IntlMacroSheet\n    INT xlExcel4MacroSheet\n    INT xlWorksheet","name":"ole_type","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#ole_type","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#ole_type_detail":{"description":"Returns detail information of type. The information is array of type.\n\n   tobj = WIN32OLE_TYPE.new('DirectX 7 for Visual Basic Type Library', 'D3DCLIPSTATUS')\n   variable = tobj.variables.find {|variable| variable.name == 'lFlags'}\n   tdetail  = variable.ole_type_detail\n   p tdetail # => [\"USERDEFINED\", \"CONST_D3DCLIPSTATUSFLAGS\"]","name":"ole_type_detail","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#ole_type_detail","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#value":{"description":"Returns value if value is exists. If the value does not exist,\nthis method returns nil.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   variables = tobj.variables\n   variables.each do |variable|\n     puts \"#{variable.name} #{variable.value}\"\n   end\n\n   The result of above script is following:\n     xlChart = -4109\n     xlDialogSheet = -4116\n     xlExcel4IntlMacroSheet = 4\n     xlExcel4MacroSheet = 3\n     xlWorksheet = -4167","name":"value","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#value","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#variable_kind":{"description":"Returns variable kind string.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   variables = tobj.variables\n   variables.each do |variable|\n     puts \"#{variable.name} #{variable.variable_kind}\"\n   end\n\n   The result of above script is following:\n     xlChart CONSTANT\n     xlDialogSheet CONSTANT\n     xlExcel4IntlMacroSheet CONSTANT\n     xlExcel4MacroSheet CONSTANT\n     xlWorksheet CONSTANT","name":"variable_kind","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#variable_kind","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#varkind":{"description":"Returns the number which represents variable kind.\n  tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n  variables = tobj.variables\n  variables.each do |variable|\n    puts \"#{variable.name} #{variable.varkind}\"\n  end\n\n  The result of above script is following:\n     xlChart 2\n     xlDialogSheet 2\n     xlExcel4IntlMacroSheet 2\n     xlExcel4MacroSheet 2\n     xlWorksheet 2","name":"varkind","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#varkind","type":"instance_method","visibility":"public"},"WIN32OLE_VARIABLE#visible?":{"description":"Returns true if the variable is public.\n\n   tobj = WIN32OLE_TYPE.new('Microsoft Excel 9.0 Object Library', 'XlSheetType')\n   variables = tobj.variables\n   variables.each do |variable|\n     puts \"#{variable.name} #{variable.visible?}\"\n   end\n\n   The result of above script is following:\n     xlChart true\n     xlDialogSheet true\n     xlExcel4IntlMacroSheet true\n     xlExcel4MacroSheet true\n     xlWorksheet true","name":"visible?","namespace":"WIN32OLE_VARIABLE","path":"WIN32OLE_VARIABLE#visible?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"OLEProperty":{"description":"OLEProperty\nhelper class of Property with arguments.","name":"OLEProperty","namespace":"","path":"OLEProperty","type":"class","visibility":"public"},"OLEProperty#[]":{"description":"","name":"[]","namespace":"OLEProperty","path":"OLEProperty#[]","type":"instance_method","visibility":"public"},"OLEProperty#[]=":{"description":"","name":"[]=","namespace":"OLEProperty","path":"OLEProperty#[]=","type":"instance_method","visibility":"public"},"OLEProperty#initialize":{"description":"","name":"initialize","namespace":"OLEProperty","path":"OLEProperty#initialize","type":"instance_method","visibility":"public","return":[["OLEProperty"],"a new instance of OLEProperty"]},"Zlib":{"description":"This module provides access to the {zlib library}[http://zlib.net]. Zlib is\ndesigned to be a portable, free, general-purpose, legally unencumbered --\nthat is, not covered by any patents -- lossless data-compression library\nfor use on virtually any computer hardware and operating system.\n\nThe zlib compression library provides in-memory compression and\ndecompression functions, including integrity checks of the uncompressed\ndata.\n\nThe zlib compressed data format is described in RFC 1950, which is a\nwrapper around a deflate stream which is described in RFC 1951.\n\nThe library also supports reading and writing files in gzip (.gz) format\nwith an interface similar to that of IO. The gzip format is described in\nRFC 1952 which is also a wrapper around a deflate stream.\n\nThe zlib format was designed to be compact and fast for use in memory and on\ncommunications channels. The gzip format was designed for single-file\ncompression on file systems, has a larger header than zlib to maintain\ndirectory information, and uses a different, slower check method than zlib.\n\nSee your system's zlib.h for further information about zlib\n\n== Sample usage\n\nUsing the wrapper to compress strings with default parameters is quite\nsimple:\n\n  require \"zlib\"\n\n  data_to_compress = File.read(\"don_quixote.txt\")\n\n  puts \"Input size: #{data_to_compress.size}\"\n  #=> Input size: 2347740\n\n  data_compressed = Zlib::Deflate.deflate(data_to_compress)\n\n  puts \"Compressed size: #{data_compressed.size}\"\n  #=> Compressed size: 887238\n\n  uncompressed_data = Zlib::Inflate.inflate(data_compressed)\n\n  puts \"Uncompressed data is: #{uncompressed_data}\"\n  #=> Uncompressed data is: The Project Gutenberg EBook of Don Quixote...\n\n== Class tree\n\n- Zlib::Deflate\n- Zlib::Inflate\n- Zlib::ZStream\n- Zlib::Error\n  - Zlib::StreamEnd\n  - Zlib::NeedDict\n  - Zlib::DataError\n  - Zlib::StreamError\n  - Zlib::MemError\n  - Zlib::BufError\n  - Zlib::VersionError\n\n(if you have GZIP_SUPPORT)\n- Zlib::GzipReader\n- Zlib::GzipWriter\n- Zlib::GzipFile\n- Zlib::GzipFile::Error\n  - Zlib::GzipFile::LengthError\n  - Zlib::GzipFile::CRCError\n  - Zlib::GzipFile::NoFooter","name":"Zlib","namespace":"","path":"Zlib","type":"module","visibility":"public"},"Zlib#adler32":{"description":"call-seq: Zlib.adler32(string, adler)\n\nCalculates Adler-32 checksum for +string+, and returns updated value of\n+adler+. If +string+ is omitted, it returns the Adler-32 initial value. If\n+adler+ is omitted, it assumes that the initial value is given to +adler+.\n\nExample usage:\n\n  require \"zlib\"\n\n  data = \"foo\"\n  puts \"Adler32 checksum: #{Zlib.adler32(data).to_s(16)}\"\n  #=> Adler32 checksum: 2820145","name":"adler32","namespace":"Zlib","path":"Zlib#adler32","type":"module_function","visibility":"private"},"Zlib#adler32_combine":{"description":"call-seq: Zlib.adler32_combine(adler1, adler2, len2)\n\nCombine two Adler-32 check values in to one.  +alder1+ is the first Adler-32\nvalue, +adler2+ is the second Adler-32 value.  +len2+ is the length of the\nstring used to generate +adler2+.","name":"adler32_combine","namespace":"Zlib","path":"Zlib#adler32_combine","type":"module_function","visibility":"private"},"Zlib#crc32":{"description":"call-seq: Zlib.crc32(string, crc)\n\nCalculates CRC checksum for +string+, and returns updated value of +crc+. If\n+string+ is omitted, it returns the CRC initial value. If +crc+ is omitted, it\nassumes that the initial value is given to +crc+.\n\nFIXME: expression.","name":"crc32","namespace":"Zlib","path":"Zlib#crc32","type":"module_function","visibility":"private"},"Zlib#crc32_combine":{"description":"call-seq: Zlib.crc32_combine(crc1, crc2, len2)\n\nCombine two CRC-32 check values in to one.  +crc1+ is the first CRC-32\nvalue, +crc2+ is the second CRC-32 value.  +len2+ is the length of the\nstring used to generate +crc2+.","name":"crc32_combine","namespace":"Zlib","path":"Zlib#crc32_combine","type":"module_function","visibility":"private"},"Zlib#crc_table":{"description":"Returns the table for calculating CRC checksum as an array.","name":"crc_table","namespace":"Zlib","path":"Zlib#crc_table","type":"module_function","visibility":"private"},"Zlib#zlib_version":{"description":"Returns the string which represents the version of zlib library.","name":"zlib_version","namespace":"Zlib","path":"Zlib#zlib_version","type":"module_function","visibility":"private"},"Zlib.adler32":{"description":"call-seq: Zlib.adler32(string, adler)\n\nCalculates Adler-32 checksum for +string+, and returns updated value of\n+adler+. If +string+ is omitted, it returns the Adler-32 initial value. If\n+adler+ is omitted, it assumes that the initial value is given to +adler+.\n\nExample usage:\n\n  require \"zlib\"\n\n  data = \"foo\"\n  puts \"Adler32 checksum: #{Zlib.adler32(data).to_s(16)}\"\n  #=> Adler32 checksum: 2820145","name":"adler32","namespace":"Zlib","path":"Zlib.adler32","type":"module_function","visibility":"public"},"Zlib.adler32_combine":{"description":"call-seq: Zlib.adler32_combine(adler1, adler2, len2)\n\nCombine two Adler-32 check values in to one.  +alder1+ is the first Adler-32\nvalue, +adler2+ is the second Adler-32 value.  +len2+ is the length of the\nstring used to generate +adler2+.","name":"adler32_combine","namespace":"Zlib","path":"Zlib.adler32_combine","type":"module_function","visibility":"public"},"Zlib.crc32":{"description":"call-seq: Zlib.crc32(string, crc)\n\nCalculates CRC checksum for +string+, and returns updated value of +crc+. If\n+string+ is omitted, it returns the CRC initial value. If +crc+ is omitted, it\nassumes that the initial value is given to +crc+.\n\nFIXME: expression.","name":"crc32","namespace":"Zlib","path":"Zlib.crc32","type":"module_function","visibility":"public"},"Zlib.crc32_combine":{"description":"call-seq: Zlib.crc32_combine(crc1, crc2, len2)\n\nCombine two CRC-32 check values in to one.  +crc1+ is the first CRC-32\nvalue, +crc2+ is the second CRC-32 value.  +len2+ is the length of the\nstring used to generate +crc2+.","name":"crc32_combine","namespace":"Zlib","path":"Zlib.crc32_combine","type":"module_function","visibility":"public"},"Zlib.crc_table":{"description":"Returns the table for calculating CRC checksum as an array.","name":"crc_table","namespace":"Zlib","path":"Zlib.crc_table","type":"module_function","visibility":"public"},"Zlib.deflate":{"description":"call-seq:\n  Zlib.deflate(string[, level])\n  Zlib::Deflate.deflate(string[, level])\n\nCompresses the given +string+. Valid values of level are\nZlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION,\nZlib::DEFAULT_COMPRESSION, or an integer from 0 to 9.\n\nThis method is almost equivalent to the following code:\n\n  def deflate(string, level)\n    z = Zlib::Deflate.new(level)\n    dst = z.deflate(string, Zlib::FINISH)\n    z.close\n    dst\n  end\n\nSee also Zlib.inflate","name":"deflate","namespace":"Zlib","path":"Zlib.deflate","type":"module_function","visibility":"public"},"Zlib.inflate":{"description":"call-seq:\n  Zlib.inflate(string)\n  Zlib::Inflate.inflate(string)\n\nDecompresses +string+. Raises a Zlib::NeedDict exception if a preset\ndictionary is needed for decompression.\n\nThis method is almost equivalent to the following code:\n\n  def inflate(string)\n    zstream = Zlib::Inflate.new\n    buf = zstream.inflate(string)\n    zstream.finish\n    zstream.close\n    buf\n  end\n\nSee also Zlib.deflate","name":"inflate","namespace":"Zlib","path":"Zlib.inflate","type":"module_function","visibility":"public"},"Zlib.zlib_version":{"description":"Returns the string which represents the version of zlib library.","name":"zlib_version","namespace":"Zlib","path":"Zlib.zlib_version","type":"module_function","visibility":"public"},"Zlib::ASCII":{"description":"The underlying constant Z_ASCII was deprecated in favor of Z_TEXT\nin zlib 1.2.2.  New applications should not use this constant.\n\nSee Zlib::Deflate#data_type.","name":"ASCII","namespace":"Zlib","path":"Zlib::ASCII","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::BEST_COMPRESSION":{"description":"Slowest compression level, but with the best space savings.","name":"BEST_COMPRESSION","namespace":"Zlib","path":"Zlib::BEST_COMPRESSION","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::BEST_SPEED":{"description":"Fastest compression level, but with with lowest space savings.","name":"BEST_SPEED","namespace":"Zlib","path":"Zlib::BEST_SPEED","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::BINARY":{"description":":Deflate#data_type.","name":"BINARY","namespace":"Zlib","path":"Zlib::BINARY","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::BufError":{"description":"Subclass of Zlib::Error when zlib returns a Z_BUF_ERROR.\n\nUsually if no progress is possible.","name":"BufError","namespace":"Zlib","path":"Zlib::BufError","type":"class","visibility":"public"},"Zlib::DEFAULT_COMPRESSION":{"description":"Default compression level which is a good trade-off between space and\ntime","name":"DEFAULT_COMPRESSION","namespace":"Zlib","path":"Zlib::DEFAULT_COMPRESSION","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::DEFAULT_STRATEGY":{"description":"Default deflate strategy which is used for normal data.","name":"DEFAULT_STRATEGY","namespace":"Zlib","path":"Zlib::DEFAULT_STRATEGY","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::DEF_MEM_LEVEL":{"description":"The default memory level for allocating zlib deflate compression state.","name":"DEF_MEM_LEVEL","namespace":"Zlib","path":"Zlib::DEF_MEM_LEVEL","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::DataError":{"description":"Subclass of Zlib::Error when zlib returns a Z_DATA_ERROR.\n\nUsually if a stream was prematurely freed.","name":"DataError","namespace":"Zlib","path":"Zlib::DataError","type":"class","visibility":"public"},"Zlib::Deflate":{"description":"Zlib::Deflate is the class for compressing data.  See Zlib::ZStream for more\ninformation.","name":"Deflate","namespace":"Zlib","path":"Zlib::Deflate","type":"class","visibility":"public"},"Zlib::Deflate#<<":{"description":"call-seq: << string\n\nInputs +string+ into the deflate stream just like Zlib::Deflate#deflate, but\nreturns the Zlib::Deflate object itself.  The output from the stream is\npreserved in output buffer.","name":"<<","namespace":"Zlib::Deflate","path":"Zlib::Deflate#<<","type":"instance_method","visibility":"public"},"Zlib::Deflate#deflate":{"description":"call-seq:\n  z.deflate(string, flush = Zlib::NO_FLUSH)                 -> String\n  z.deflate(string, flush = Zlib::NO_FLUSH) { |chunk| ... } -> nil\n\nInputs +string+ into the deflate stream and returns the output from the\nstream.  On calling this method, both the input and the output buffers of\nthe stream are flushed.  If +string+ is nil, this method finishes the\nstream, just like Zlib::ZStream#finish.\n\nIf a block is given consecutive deflated chunks from the +string+ are\nyielded to the block and +nil+ is returned.\n\nThe +flush+ parameter specifies the flush mode.  The following constants\nmay be used:\n\nZlib::NO_FLUSH:: The default\nZlib::SYNC_FLUSH:: Flushes the output to a byte boundary\nZlib::FULL_FLUSH:: SYNC_FLUSH + resets the compression state\nZlib::FINISH:: Pending input is processed, pending output is flushed.\n\nSee the constants for further description.","name":"deflate","namespace":"Zlib::Deflate","path":"Zlib::Deflate#deflate","type":"instance_method","visibility":"public"},"Zlib::Deflate#flush":{"description":"call-seq:\n  flush(flush = Zlib::SYNC_FLUSH)                 -> String\n  flush(flush = Zlib::SYNC_FLUSH) { |chunk| ... } -> nil\n\nThis method is equivalent to <tt>deflate('', flush)</tt>. This method is\njust provided to improve the readability of your Ruby program.  If a block\nis given chunks of deflate output are yielded to the block until the buffer\nis flushed.\n\nSee Zlib::Deflate#deflate for detail on the +flush+ constants NO_FLUSH,\nSYNC_FLUSH, FULL_FLUSH and FINISH.","name":"flush","namespace":"Zlib::Deflate","path":"Zlib::Deflate#flush","type":"instance_method","visibility":"public"},"Zlib::Deflate#initialize":{"description":"call-seq:\n  Zlib::Deflate.new(level=DEFAULT_COMPRESSION, window_bits=MAX_WBITS, mem_level=DEF_MEM_LEVEL, strategy=DEFAULT_STRATEGY)\n\nCreates a new deflate stream for compression. If a given argument is nil,\nthe default value of that argument is used.\n\nThe +level+ sets the compression level for the deflate stream between 0 (no\ncompression) and 9 (best compression). The following constants have been\ndefined to make code more readable:\n\n* Zlib::DEFAULT_COMPRESSION\n* Zlib::NO_COMPRESSION\n* Zlib::BEST_SPEED\n* Zlib::BEST_COMPRESSION\n\nSee http://www.zlib.net/manual.html#Constants for further information.\n\nThe +window_bits+ sets the size of the history buffer and should be between\n8 and 15.  Larger values of this parameter result in better compression at\nthe expense of memory usage.\n\nThe +mem_level+ specifies how much memory should be allocated for the\ninternal compression state.  1 uses minimum memory but is slow and reduces\ncompression ratio while 9 uses maximum memory for optimal speed.  The\ndefault value is 8. Two constants are defined:\n\n* Zlib::DEF_MEM_LEVEL\n* Zlib::MAX_MEM_LEVEL\n\nThe +strategy+ sets the deflate compression strategy.  The following\nstrategies are available:\n\nZlib::DEFAULT_STRATEGY:: For normal data\nZlib::FILTERED:: For data produced by a filter or predictor\nZlib::FIXED:: Prevents dynamic Huffman codes\nZlib::HUFFMAN_ONLY:: Prevents string matching\nZlib::RLE:: Designed for better compression of PNG image data\n\nSee the constants for further description.\n\n== Examples\n\n=== Basic\n\n  open \"compressed.file\", \"w+\" do |io|\n    io << Zlib::Deflate.new.deflate(File.read(\"big.file\"))\n  end\n\n=== Custom compression\n\n  open \"compressed.file\", \"w+\" do |compressed_io|\n    deflate = Zlib::Deflate.new(Zlib::BEST_COMPRESSION,\n                                Zlib::MAX_WBITS,\n                                Zlib::MAX_MEM_LEVEL,\n                                Zlib::HUFFMAN_ONLY)\n\n    begin\n      open \"big.file\" do |big_io|\n        until big_io.eof? do\n          compressed_io << zd.deflate(big_io.read(16384))\n        end\n      end\n    ensure\n      deflate.close\n    end\n  end\n\nWhile this example will work, for best optimization review the flags for\nyour specific time, memory usage and output space requirements.","name":"initialize","namespace":"Zlib::Deflate","path":"Zlib::Deflate#initialize","type":"instance_method","visibility":"public"},"Zlib::Deflate#initialize_copy":{"description":"Duplicates the deflate stream.","name":"initialize_copy","namespace":"Zlib::Deflate","path":"Zlib::Deflate#initialize_copy","type":"instance_method","visibility":"public"},"Zlib::Deflate#params":{"description":"call-seq: params(level, strategy)\n\nChanges the parameters of the deflate stream to allow changes between\ndifferent types of data that require different types of compression.  Any\nunprocessed data is flushed before changing the params.\n\nSee Zlib::Deflate.new for a description of +level+ and +strategy+.","name":"params","namespace":"Zlib::Deflate","path":"Zlib::Deflate#params","type":"instance_method","visibility":"public"},"Zlib::Deflate#set_dictionary":{"description":"call-seq: set_dictionary(string)\n\nSets the preset dictionary and returns +string+. This method is available\njust only after Zlib::Deflate.new or Zlib::ZStream#reset method was called.\nSee zlib.h for details.\n\nCan raise errors of Z_STREAM_ERROR if a parameter is invalid (such as\nNULL dictionary) or the stream state is inconsistent, Z_DATA_ERROR if\nthe given dictionary doesn't match the expected one (incorrect adler32 value)","name":"set_dictionary","namespace":"Zlib::Deflate","path":"Zlib::Deflate#set_dictionary","type":"instance_method","visibility":"public"},"Zlib::Deflate.deflate":{"description":"call-seq:\n  Zlib.deflate(string[, level])\n  Zlib::Deflate.deflate(string[, level])\n\nCompresses the given +string+. Valid values of level are\nZlib::NO_COMPRESSION, Zlib::BEST_SPEED, Zlib::BEST_COMPRESSION,\nZlib::DEFAULT_COMPRESSION, or an integer from 0 to 9.\n\nThis method is almost equivalent to the following code:\n\n  def deflate(string, level)\n    z = Zlib::Deflate.new(level)\n    dst = z.deflate(string, Zlib::FINISH)\n    z.close\n    dst\n  end\n\nSee also Zlib.inflate","name":"deflate","namespace":"Zlib::Deflate","path":"Zlib::Deflate.deflate","type":"class_method","visibility":"public"},"Zlib::Error":{"description":"The superclass for all exceptions raised by Ruby/zlib.\n\nThe following exceptions are defined as subclasses of Zlib::Error. These\nexceptions are raised when zlib library functions return with an error\nstatus.\n\n- Zlib::StreamEnd\n- Zlib::NeedDict\n- Zlib::DataError\n- Zlib::StreamError\n- Zlib::MemError\n- Zlib::BufError\n- Zlib::VersionError","name":"Error","namespace":"Zlib","path":"Zlib::Error","type":"class","visibility":"public"},"Zlib::FILTERED":{"description":"Deflate strategy for data produced by a filter (or predictor). The\neffect of FILTERED is to force more Huffman codes and less string\nmatching; it is somewhat intermediate between DEFAULT_STRATEGY and\nHUFFMAN_ONLY. Filtered data consists mostly of small values with a\nsomewhat random distribution.","name":"FILTERED","namespace":"Zlib","path":"Zlib::FILTERED","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::FINISH":{"description":"Processes all pending input and flushes pending output.","name":"FINISH","namespace":"Zlib","path":"Zlib::FINISH","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::FIXED":{"description":"Deflate strategy which prevents the use of dynamic Huffman codes,\nallowing for a simpler decoder for specialized applications.","name":"FIXED","namespace":"Zlib","path":"Zlib::FIXED","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::FULL_FLUSH":{"description":"Flushes all output as with SYNC_FLUSH, and the compression state is\nreset so that decompression can restart from this point if previous\ncompressed data has been damaged or if random access is desired. Like\nSYNC_FLUSH, using FULL_FLUSH too often can seriously degrade\ncompression.","name":"FULL_FLUSH","namespace":"Zlib","path":"Zlib::FULL_FLUSH","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::GzipFile":{"description":"Zlib::GzipFile is an abstract class for handling a gzip formatted\ncompressed file. The operations are defined in the subclasses,\nZlib::GzipReader for reading, and Zlib::GzipWriter for writing.\n\nGzipReader should be used by associating an IO, or IO-like, object.\n\n== Method Catalogue\n\n- ::wrap\n- ::open (Zlib::GzipReader::open and Zlib::GzipWriter::open)\n- #close\n- #closed?\n- #comment\n- comment= (Zlib::GzipWriter#comment=)\n- #crc\n- eof? (Zlib::GzipReader#eof?)\n- #finish\n- #level\n- lineno (Zlib::GzipReader#lineno)\n- lineno= (Zlib::GzipReader#lineno=)\n- #mtime\n- mtime= (Zlib::GzipWriter#mtime=)\n- #orig_name\n- orig_name (Zlib::GzipWriter#orig_name=)\n- #os_code\n- path (when the underlying IO supports #path)\n- #sync\n- #sync=\n- #to_io\n\n(due to internal structure, documentation may appear under Zlib::GzipReader\nor Zlib::GzipWriter)","name":"GzipFile","namespace":"Zlib","path":"Zlib::GzipFile","type":"class","visibility":"public"},"Zlib::GzipFile#close":{"description":"Closes the GzipFile object. This method calls close method of the\nassociated IO object. Returns the associated IO object.","name":"close","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#close","type":"instance_method","visibility":"public"},"Zlib::GzipFile#closed?":{"description":"Same as IO#closed?","name":"closed?","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#closed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::GzipFile#comment":{"description":"Returns comments recorded in the gzip file header, or nil if the comments\nis not present.","name":"comment","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#comment","type":"instance_method","visibility":"public"},"Zlib::GzipFile#crc":{"description":"Returns CRC value of the uncompressed data.","name":"crc","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#crc","type":"instance_method","visibility":"public"},"Zlib::GzipFile#finish":{"description":"Closes the GzipFile object. Unlike Zlib::GzipFile#close, this method never\ncalls the close method of the associated IO object. Returns the associated IO\nobject.","name":"finish","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#finish","type":"instance_method","visibility":"public"},"Zlib::GzipFile#level":{"description":"Returns compression level.","name":"level","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#level","type":"instance_method","visibility":"public"},"Zlib::GzipFile#mtime":{"description":"Returns last modification time recorded in the gzip file header.","name":"mtime","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#mtime","type":"instance_method","visibility":"public"},"Zlib::GzipFile#orig_name":{"description":"Returns original filename recorded in the gzip file header, or +nil+ if\noriginal filename is not present.","name":"orig_name","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#orig_name","type":"instance_method","visibility":"public"},"Zlib::GzipFile#os_code":{"description":"Returns OS code number recorded in the gzip file header.","name":"os_code","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#os_code","type":"instance_method","visibility":"public"},"Zlib::GzipFile#sync":{"description":"Same as IO#sync","name":"sync","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#sync","type":"instance_method","visibility":"public"},"Zlib::GzipFile#sync=":{"description":"call-seq: sync = flag\n\nSame as IO.  If flag is +true+, the associated IO object must respond to the\n+flush+ method.  While +sync+ mode is +true+, the compression ratio\ndecreases sharply.","name":"sync=","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#sync=","type":"instance_method","visibility":"public"},"Zlib::GzipFile#to_io":{"description":"Same as IO.","name":"to_io","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile#to_io","type":"instance_method","visibility":"public"},"Zlib::GzipFile.wrap":{"description":"call-seq:\n  Zlib::GzipReader.wrap(io, ...) { |gz| ... }\n  Zlib::GzipWriter.wrap(io, ...) { |gz| ... }\n\nCreates a GzipReader or GzipWriter associated with +io+, passing in any\nnecessary extra options, and executes the block with the newly created\nobject just like File.open.\n\nThe GzipFile object will be closed automatically after executing the block.\nIf you want to keep the associated IO object open, you may call\nZlib::GzipFile#finish method in the block.","name":"wrap","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile.wrap","type":"class_method","visibility":"public"},"Zlib::GzipFile::CRCError":{"description":"Raised when the CRC checksum recorded in gzip file footer is not equivalent\nto the CRC checksum of the actual uncompressed data.","name":"CRCError","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile::CRCError","type":"class","visibility":"public"},"Zlib::GzipFile::Error":{"description":"Base class of errors that occur when processing GZIP files.","name":"Error","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile::Error","type":"class","visibility":"public"},"Zlib::GzipFile::Error#input":{"description":"input gzipped string","name":"input","namespace":"Zlib::GzipFile::Error","path":"Zlib::GzipFile::Error#input","type":"instance_method","visibility":"public"},"Zlib::GzipFile::Error#inspect":{"description":"Constructs a String of the GzipFile Error","name":"inspect","namespace":"Zlib::GzipFile::Error","path":"Zlib::GzipFile::Error#inspect","type":"instance_method","visibility":"public"},"Zlib::GzipFile::LengthError":{"description":"Raised when the data length recorded in the gzip file footer is not equivalent\nto the length of the actual uncompressed data.","name":"LengthError","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile::LengthError","type":"class","visibility":"public"},"Zlib::GzipFile::NoFooter":{"description":"Raised when gzip file footer is not found.","name":"NoFooter","namespace":"Zlib::GzipFile","path":"Zlib::GzipFile::NoFooter","type":"class","visibility":"public"},"Zlib::GzipReader":{"description":"Zlib::GzipReader is the class for reading a gzipped file.  GzipReader should\nbe used an IO, or -IO-like, object.\n\n  Zlib::GzipReader.open('hoge.gz') {|gz|\n    print gz.read\n  }\n\n  File.open('hoge.gz') do |f|\n    gz = Zlib::GzipReader.new(f)\n    print gz.read\n    gz.close\n  end\n\n== Method Catalogue\n\nThe following methods in Zlib::GzipReader are just like their counterparts\nin IO, but they raise Zlib::Error or Zlib::GzipFile::Error exception if an\nerror was found in the gzip file.\n- #each\n- #each_line\n- #each_byte\n- #gets\n- #getc\n- #lineno\n- #lineno=\n- #read\n- #readchar\n- #readline\n- #readlines\n- #ungetc\n\nBe careful of the footer of the gzip file. A gzip file has the checksum of\npre-compressed data in its footer. GzipReader checks all uncompressed data\nagainst that checksum at the following cases, and if it fails, raises\n<tt>Zlib::GzipFile::NoFooter</tt>, <tt>Zlib::GzipFile::CRCError</tt>, or\n<tt>Zlib::GzipFile::LengthError</tt> exception.\n\n- When an reading request is received beyond the end of file (the end of\n  compressed data). That is, when Zlib::GzipReader#read,\n  Zlib::GzipReader#gets, or some other methods for reading returns nil.\n- When Zlib::GzipFile#close method is called after the object reaches the\n  end of file.\n- When Zlib::GzipReader#unused method is called after the object reaches\n  the end of file.\n\nThe rest of the methods are adequately described in their own\ndocumentation.","name":"GzipReader","namespace":"Zlib","path":"Zlib::GzipReader","type":"class","visibility":"public"},"Zlib::GzipReader#bytes":{"description":"This is a deprecated alias for <code>each_byte</code>.","name":"bytes","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#bytes","type":"instance_method","visibility":"public"},"Zlib::GzipReader#each":{"description":"See Zlib::GzipReader documentation for a description.","name":"each","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#each","type":"instance_method","visibility":"public"},"Zlib::GzipReader#each_byte":{"description":"See Zlib::GzipReader documentation for a description.","name":"each_byte","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#each_byte","type":"instance_method","visibility":"public"},"Zlib::GzipReader#each_char":{"description":"See Zlib::GzipReader documentation for a description.","name":"each_char","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#each_char","type":"instance_method","visibility":"public"},"Zlib::GzipReader#each_line":{"description":"See Zlib::GzipReader documentation for a description.","name":"each_line","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#each_line","type":"instance_method","visibility":"public"},"Zlib::GzipReader#eof":{"description":"Returns +true+ or +false+ whether the stream has reached the end.","name":"eof","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#eof","type":"instance_method","visibility":"public"},"Zlib::GzipReader#eof?":{"description":"Returns +true+ or +false+ whether the stream has reached the end.","name":"eof?","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#eof?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::GzipReader#getbyte":{"description":"See Zlib::GzipReader documentation for a description.","name":"getbyte","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#getbyte","type":"instance_method","visibility":"public"},"Zlib::GzipReader#getc":{"description":"See Zlib::GzipReader documentation for a description.","name":"getc","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#getc","type":"instance_method","visibility":"public"},"Zlib::GzipReader#gets":{"description":"See Zlib::GzipReader documentation for a description.","name":"gets","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#gets","type":"instance_method","visibility":"public"},"Zlib::GzipReader#initialize":{"description":"call-seq:\n  Zlib::GzipReader.new(io, options = {})\n\nCreates a GzipReader object associated with +io+. The GzipReader object reads\ngzipped data from +io+, and parses/decompresses it.  The +io+ must\nhave a +read+ method that behaves same as the IO#read.\n\nThe +options+ hash may be used to set the encoding of the data.\n+:external_encoding+, +:internal_encoding+ and +:encoding+ may be set as in\nIO::new.\n\nIf the gzip file header is incorrect, raises an Zlib::GzipFile::Error\nexception.","name":"initialize","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#initialize","type":"instance_method","visibility":"public"},"Zlib::GzipReader#lineno":{"description":"The line number of the last row read from this file.","name":"lineno","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#lineno","type":"instance_method","visibility":"public"},"Zlib::GzipReader#lineno=":{"description":"Specify line number of the last row read from this file.","name":"lineno=","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#lineno=","type":"instance_method","visibility":"public"},"Zlib::GzipReader#lines":{"description":"This is a deprecated alias for <code>each_line</code>.","name":"lines","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#lines","type":"instance_method","visibility":"public"},"Zlib::GzipReader#pos":{"description":"Total number of output bytes output so far.","name":"pos","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#pos","type":"instance_method","visibility":"public"},"Zlib::GzipReader#read":{"description":"See Zlib::GzipReader documentation for a description.","name":"read","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#read","type":"instance_method","visibility":"public"},"Zlib::GzipReader#readbyte":{"description":"See Zlib::GzipReader documentation for a description.","name":"readbyte","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#readbyte","type":"instance_method","visibility":"public"},"Zlib::GzipReader#readchar":{"description":"See Zlib::GzipReader documentation for a description.","name":"readchar","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#readchar","type":"instance_method","visibility":"public"},"Zlib::GzipReader#readline":{"description":"See Zlib::GzipReader documentation for a description.","name":"readline","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#readline","type":"instance_method","visibility":"public"},"Zlib::GzipReader#readlines":{"description":"See Zlib::GzipReader documentation for a description.","name":"readlines","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#readlines","type":"instance_method","visibility":"public"},"Zlib::GzipReader#readpartial":{"description":"call-seq:\n    gzipreader.readpartial(maxlen [, outbuf]) => string, outbuf\n\n Reads at most <i>maxlen</i> bytes from the gziped stream but\n it blocks only if <em>gzipreader</em> has no data immediately available.\n If the optional <i>outbuf</i> argument is present,\n it must reference a String, which will receive the data.\n It raises <code>EOFError</code> on end of file.","name":"readpartial","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#readpartial","type":"instance_method","visibility":"public"},"Zlib::GzipReader#rewind":{"description":"Resets the position of the file pointer to the point created the GzipReader\nobject.  The associated IO object needs to respond to the +seek+ method.","name":"rewind","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#rewind","type":"instance_method","visibility":"public"},"Zlib::GzipReader#tell":{"description":"Total number of output bytes output so far.","name":"tell","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#tell","type":"instance_method","visibility":"public"},"Zlib::GzipReader#ungetbyte":{"description":"See Zlib::GzipReader documentation for a description.","name":"ungetbyte","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#ungetbyte","type":"instance_method","visibility":"public"},"Zlib::GzipReader#ungetc":{"description":"See Zlib::GzipReader documentation for a description.","name":"ungetc","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#ungetc","type":"instance_method","visibility":"public"},"Zlib::GzipReader#unused":{"description":"Returns the rest of the data which had read for parsing gzip format, or\n+nil+ if the whole gzip file is not parsed yet.","name":"unused","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader#unused","type":"instance_method","visibility":"public"},"Zlib::GzipReader.open":{"description":"call-seq: Zlib::GzipReader.open(filename) {|gz| ... }\n\nOpens a file specified by +filename+ as a gzipped file, and returns a\nGzipReader object associated with that file.  Further details of this method\nare in Zlib::GzipReader.new and ZLib::GzipFile.wrap.","name":"open","namespace":"Zlib::GzipReader","path":"Zlib::GzipReader.open","type":"class_method","visibility":"public"},"Zlib::GzipWriter":{"description":"Zlib::GzipWriter is a class for writing gzipped files.  GzipWriter should\nbe used with an instance of IO, or IO-like, object.\n\nFollowing two example generate the same result.\n\n  Zlib::GzipWriter.open('hoge.gz') do |gz|\n    gz.write 'jugemu jugemu gokou no surikire...'\n  end\n\n  File.open('hoge.gz', 'w') do |f|\n    gz = Zlib::GzipWriter.new(f)\n    gz.write 'jugemu jugemu gokou no surikire...'\n    gz.close\n  end\n\nTo make like gzip(1) does, run following:\n\n  orig = 'hoge.txt'\n  Zlib::GzipWriter.open('hoge.gz') do |gz|\n    gz.mtime = File.mtime(orig)\n    gz.orig_name = orig\n    gz.write IO.binread(orig)\n  end\n\nNOTE: Due to the limitation of Ruby's finalizer, you must explicitly close\nGzipWriter objects by Zlib::GzipWriter#close etc.  Otherwise, GzipWriter\nwill be not able to write the gzip footer and will generate a broken gzip\nfile.","name":"GzipWriter","namespace":"Zlib","path":"Zlib::GzipWriter","type":"class","visibility":"public"},"Zlib::GzipWriter#<<":{"description":"Same as IO.","name":"<<","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#<<","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#comment=":{"description":"Specify the comment (+str+) in the gzip header.","name":"comment=","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#comment=","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#flush":{"description":"Flushes all the internal buffers of the GzipWriter object.  The meaning of\n+flush+ is same as in Zlib::Deflate#deflate.  <tt>Zlib::SYNC_FLUSH</tt> is used if\n+flush+ is omitted.  It is no use giving flush <tt>Zlib::NO_FLUSH</tt>.","name":"flush","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#flush","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#initialize":{"description":"Creates a GzipWriter object associated with +io+. +level+ and +strategy+\nshould be the same as the arguments of Zlib::Deflate.new.  The GzipWriter\nobject writes gzipped data to +io+.  +io+ must respond to the\n+write+ method that behaves the same as IO#write.\n\nThe +options+ hash may be used to set the encoding of the data.\n+:external_encoding+, +:internal_encoding+ and +:encoding+ may be set as in\nIO::new.","name":"initialize","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#initialize","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#mtime=":{"description":"Specify the modification time (+mtime+) in the gzip header.\nUsing a Fixnum or Integer","name":"mtime=","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#mtime=","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#orig_name=":{"description":"Specify the original name (+str+) in the gzip header.","name":"orig_name=","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#orig_name=","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#pos":{"description":"Total number of input bytes read so far.","name":"pos","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#pos","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#print":{"description":"Same as IO.","name":"print","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#print","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#printf":{"description":"Same as IO.","name":"printf","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#printf","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#putc":{"description":"Same as IO.","name":"putc","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#putc","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#puts":{"description":"Same as IO.","name":"puts","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#puts","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#tell":{"description":"Total number of input bytes read so far.","name":"tell","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#tell","type":"instance_method","visibility":"public"},"Zlib::GzipWriter#write":{"description":"Same as IO.","name":"write","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter#write","type":"instance_method","visibility":"public"},"Zlib::GzipWriter.open":{"description":"Opens a file specified by +filename+ for writing gzip compressed data, and\nreturns a GzipWriter object associated with that file.  Further details of\nthis method are found in Zlib::GzipWriter.new and Zlib::GzipFile.wrap.","name":"open","namespace":"Zlib::GzipWriter","path":"Zlib::GzipWriter.open","type":"class_method","visibility":"public"},"Zlib::HUFFMAN_ONLY":{"description":"Deflate strategy which uses Huffman codes only (no string matching).","name":"HUFFMAN_ONLY","namespace":"Zlib","path":"Zlib::HUFFMAN_ONLY","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::Inflate":{"description":"Zlib:Inflate is the class for decompressing compressed data.  Unlike\nZlib::Deflate, an instance of this class is not able to duplicate (clone,\ndup) itself.","name":"Inflate","namespace":"Zlib","path":"Zlib::Inflate","type":"class","visibility":"public"},"Zlib::Inflate#<<":{"description":"Inputs +string+ into the inflate stream just like Zlib::Inflate#inflate, but\nreturns the Zlib::Inflate object itself.  The output from the stream is\npreserved in output buffer.","name":"<<","namespace":"Zlib::Inflate","path":"Zlib::Inflate#<<","type":"instance_method","visibility":"public"},"Zlib::Inflate#add_dictionary":{"description":"call-seq: add_dictionary(string)\n\nProvide the inflate stream with a dictionary that may be required in the\nfuture.  Multiple dictionaries may be provided.  The inflate stream will\nautomatically choose the correct user-provided dictionary based on the\nstream's required dictionary.","name":"add_dictionary","namespace":"Zlib::Inflate","path":"Zlib::Inflate#add_dictionary","type":"instance_method","visibility":"public"},"Zlib::Inflate#inflate":{"description":"call-seq:\n  inflate(deflate_string)                 -> String\n  inflate(deflate_string) { |chunk| ... } -> nil\n\nInputs +deflate_string+ into the inflate stream and returns the output from\nthe stream.  Calling this method, both the input and the output buffer of\nthe stream are flushed.  If string is +nil+, this method finishes the\nstream, just like Zlib::ZStream#finish.\n\nIf a block is given consecutive inflated chunks from the +deflate_string+\nare yielded to the block and +nil+ is returned.\n\nRaises a Zlib::NeedDict exception if a preset dictionary is needed to\ndecompress.  Set the dictionary by Zlib::Inflate#set_dictionary and then\ncall this method again with an empty string to flush the stream:\n\n  inflater = Zlib::Inflate.new\n\n  begin\n    out = inflater.inflate compressed\n  rescue Zlib::NeedDict\n    # ensure the dictionary matches the stream's required dictionary\n    raise unless inflater.adler == Zlib.adler32(dictionary)\n\n    inflater.set_dictionary dictionary\n    inflater.inflate ''\n  end\n\n  # ...\n\n  inflater.close\n\nSee also Zlib::Inflate.new","name":"inflate","namespace":"Zlib::Inflate","path":"Zlib::Inflate#inflate","type":"instance_method","visibility":"public"},"Zlib::Inflate#initialize":{"description":"call-seq:\n  Zlib::Inflate.new(window_bits = Zlib::MAX_WBITS)\n\nCreates a new inflate stream for decompression.  +window_bits+ sets the\nsize of the history buffer and can have the following values:\n\n0::\n  Have inflate use the window size from the zlib header of the compressed\n  stream.\n\n(8..15)::\n  Overrides the window size of the inflate header in the compressed stream.\n  The window size must be greater than or equal to the window size of the\n  compressed stream.\n\nGreater than 15::\n  Add 32 to window_bits to enable zlib and gzip decoding with automatic\n  header detection, or add 16 to decode only the gzip format (a\n  Zlib::DataError will be raised for a non-gzip stream).\n\n(-8..-15)::\n  Enables raw deflate mode which will not generate a check value, and will\n  not look for any check values for comparison at the end of the stream.\n\n  This is for use with other formats that use the deflate compressed data\n  format such as zip which provide their own check values.\n\n== Example\n\n  open \"compressed.file\" do |compressed_io|\n    zi = Zlib::Inflate.new(Zlib::MAX_WBITS + 32)\n\n    begin\n      open \"uncompressed.file\", \"w+\" do |uncompressed_io|\n        uncompressed_io << zi.inflate(compressed_io.read)\n      end\n    ensure\n      zi.close\n    end\n  end","name":"initialize","namespace":"Zlib::Inflate","path":"Zlib::Inflate#initialize","type":"instance_method","visibility":"public"},"Zlib::Inflate#set_dictionary":{"description":"Sets the preset dictionary and returns +string+.  This method is available just\nonly after a Zlib::NeedDict exception was raised.  See zlib.h for details.","name":"set_dictionary","namespace":"Zlib::Inflate","path":"Zlib::Inflate#set_dictionary","type":"instance_method","visibility":"public"},"Zlib::Inflate#sync":{"description":"Inputs +string+ into the end of input buffer and skips data until a full\nflush point can be found.  If the point is found in the buffer, this method\nflushes the buffer and returns false.  Otherwise it returns +true+ and the\nfollowing data of full flush point is preserved in the buffer.","name":"sync","namespace":"Zlib::Inflate","path":"Zlib::Inflate#sync","type":"instance_method","visibility":"public"},"Zlib::Inflate#sync_point?":{"description":"Quoted verbatim from original documentation:\n\n  What is this?\n\n<tt>:)</tt>","name":"sync_point?","namespace":"Zlib::Inflate","path":"Zlib::Inflate#sync_point?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::Inflate.inflate":{"description":"call-seq:\n  Zlib.inflate(string)\n  Zlib::Inflate.inflate(string)\n\nDecompresses +string+. Raises a Zlib::NeedDict exception if a preset\ndictionary is needed for decompression.\n\nThis method is almost equivalent to the following code:\n\n  def inflate(string)\n    zstream = Zlib::Inflate.new\n    buf = zstream.inflate(string)\n    zstream.finish\n    zstream.close\n    buf\n  end\n\nSee also Zlib.deflate","name":"inflate","namespace":"Zlib::Inflate","path":"Zlib::Inflate.inflate","type":"class_method","visibility":"public"},"Zlib::MAX_MEM_LEVEL":{"description":"The maximum memory level for allocating zlib deflate compression state.","name":"MAX_MEM_LEVEL","namespace":"Zlib","path":"Zlib::MAX_MEM_LEVEL","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::MAX_WBITS":{"description":":Inflate.new\nfor details.","name":"MAX_WBITS","namespace":"Zlib","path":"Zlib::MAX_WBITS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::MemError":{"description":"Subclass of Zlib::Error\n\nWhen zlib returns a Z_MEM_ERROR,\nusually if there was not enough memory.","name":"MemError","namespace":"Zlib","path":"Zlib::MemError","type":"class","visibility":"public"},"Zlib::NO_COMPRESSION":{"description":"No compression, passes through data untouched.  Use this for appending\npre-compressed data to a deflate stream.","name":"NO_COMPRESSION","namespace":"Zlib","path":"Zlib::NO_COMPRESSION","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::NO_FLUSH":{"description":"NO_FLUSH is the default flush method and allows deflate to decide how\nmuch data to accumulate before producing output in order to maximize\ncompression.","name":"NO_FLUSH","namespace":"Zlib","path":"Zlib::NO_FLUSH","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::NeedDict":{"description":"Subclass of Zlib::Error\n\nWhen zlib returns a Z_NEED_DICT\nif a preset dictionary is needed at this point.\n\nUsed by Zlib::Inflate.inflate and <tt>Zlib.inflate</tt>","name":"NeedDict","namespace":"Zlib","path":"Zlib::NeedDict","type":"class","visibility":"public"},"Zlib::OS_AMIGA":{"description":"OS code for Amiga hosts","name":"OS_AMIGA","namespace":"Zlib","path":"Zlib::OS_AMIGA","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_ATARI":{"description":"OS code for Atari hosts","name":"OS_ATARI","namespace":"Zlib","path":"Zlib::OS_ATARI","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_CODE":{"description":"The OS code of current host","name":"OS_CODE","namespace":"Zlib","path":"Zlib::OS_CODE","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_CPM":{"description":"OS code for CP/M hosts","name":"OS_CPM","namespace":"Zlib","path":"Zlib::OS_CPM","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_MACOS":{"description":"OS code for Mac OS hosts","name":"OS_MACOS","namespace":"Zlib","path":"Zlib::OS_MACOS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_MSDOS":{"description":"OS code for MSDOS hosts","name":"OS_MSDOS","namespace":"Zlib","path":"Zlib::OS_MSDOS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_OS2":{"description":"OS code for OS2 hosts","name":"OS_OS2","namespace":"Zlib","path":"Zlib::OS_OS2","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_QDOS":{"description":"OS code for QDOS hosts","name":"OS_QDOS","namespace":"Zlib","path":"Zlib::OS_QDOS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_RISCOS":{"description":"OS code for RISC OS hosts","name":"OS_RISCOS","namespace":"Zlib","path":"Zlib::OS_RISCOS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_TOPS20":{"description":"OS code for TOPS-20 hosts","name":"OS_TOPS20","namespace":"Zlib","path":"Zlib::OS_TOPS20","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_UNIX":{"description":"OS code for UNIX hosts","name":"OS_UNIX","namespace":"Zlib","path":"Zlib::OS_UNIX","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_UNKNOWN":{"description":"OS code for unknown hosts","name":"OS_UNKNOWN","namespace":"Zlib","path":"Zlib::OS_UNKNOWN","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_VMCMS":{"description":"OS code for VM OS hosts","name":"OS_VMCMS","namespace":"Zlib","path":"Zlib::OS_VMCMS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_VMS":{"description":"OS code for VMS hosts","name":"OS_VMS","namespace":"Zlib","path":"Zlib::OS_VMS","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_WIN32":{"description":"OS code for Win32 hosts","name":"OS_WIN32","namespace":"Zlib","path":"Zlib::OS_WIN32","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::OS_ZSYSTEM":{"description":"OS code for Z-System hosts","name":"OS_ZSYSTEM","namespace":"Zlib","path":"Zlib::OS_ZSYSTEM","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::RLE":{"description":"Deflate compression strategy designed to be almost as fast as\nHUFFMAN_ONLY, but give better compression for PNG image data.","name":"RLE","namespace":"Zlib","path":"Zlib::RLE","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::SYNC_FLUSH":{"description":"The SYNC_FLUSH method flushes all pending output to the output buffer\nand the output is aligned on a byte boundary. Flushing may degrade\ncompression so it should be used only when necessary, such as at a\nrequest or response boundary for a network stream.","name":"SYNC_FLUSH","namespace":"Zlib","path":"Zlib::SYNC_FLUSH","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::StreamEnd":{"description":"Subclass of Zlib::Error\n\nWhen zlib returns a Z_STREAM_END\nis return if the end of the compressed data has been reached\nand all uncompressed out put has been produced.","name":"StreamEnd","namespace":"Zlib","path":"Zlib::StreamEnd","type":"class","visibility":"public"},"Zlib::StreamError":{"description":"Subclass of Zlib::Error\n\nWhen zlib returns a Z_STREAM_ERROR,\nusually if the stream state was inconsistent.","name":"StreamError","namespace":"Zlib","path":"Zlib::StreamError","type":"class","visibility":"public"},"Zlib::TEXT":{"description":":Deflate#data_type.","name":"TEXT","namespace":"Zlib","path":"Zlib::TEXT","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::UNKNOWN":{"description":":Deflate#data_type.","name":"UNKNOWN","namespace":"Zlib","path":"Zlib::UNKNOWN","type":"constant","return":["Fixnum",""],"visibility":"public"},"Zlib::VERSION":{"description":"The Ruby/zlib version string.","name":"VERSION","namespace":"Zlib","path":"Zlib::VERSION","type":"constant","return":["String",""],"visibility":"public"},"Zlib::VersionError":{"description":"Subclass of Zlib::Error\n\nWhen zlib returns a Z_VERSION_ERROR,\nusually if the zlib library version is incompatible with the\nversion assumed by the caller.","name":"VersionError","namespace":"Zlib","path":"Zlib::VersionError","type":"class","visibility":"public"},"Zlib::ZLIB_VERSION":{"description":"The string which represents the version of zlib.h","name":"ZLIB_VERSION","namespace":"Zlib","path":"Zlib::ZLIB_VERSION","type":"constant","return":["String",""],"visibility":"public"},"Zlib::ZStream":{"description":"Zlib::ZStream is the abstract class for the stream which handles the\ncompressed data. The operations are defined in the subclasses:\nZlib::Deflate for compression, and Zlib::Inflate for decompression.\n\nAn instance of Zlib::ZStream has one stream (struct zstream in the source)\nand two variable-length buffers which associated to the input (next_in) of\nthe stream and the output (next_out) of the stream. In this document,\n\"input buffer\" means the buffer for input, and \"output buffer\" means the\nbuffer for output.\n\nData input into an instance of Zlib::ZStream are temporally stored into\nthe end of input buffer, and then data in input buffer are processed from\nthe beginning of the buffer until no more output from the stream is\nproduced (i.e. until avail_out > 0 after processing).  During processing,\noutput buffer is allocated and expanded automatically to hold all output\ndata.\n\nSome particular instance methods consume the data in output buffer and\nreturn them as a String.\n\nHere is an ascii art for describing above:\n\n   +================ an instance of Zlib::ZStream ================+\n   ||                                                            ||\n   ||     +--------+          +-------+          +--------+      ||\n   ||  +--| output |<---------|zstream|<---------| input  |<--+  ||\n   ||  |  | buffer |  next_out+-------+next_in   | buffer |   |  ||\n   ||  |  +--------+                             +--------+   |  ||\n   ||  |                                                      |  ||\n   +===|======================================================|===+\n       |                                                      |\n       v                                                      |\n   \"output data\"                                         \"input data\"\n\nIf an error occurs during processing input buffer, an exception which is a\nsubclass of Zlib::Error is raised.  At that time, both input and output\nbuffer keep their conditions at the time when the error occurs.\n\n== Method Catalogue\n\nMany of the methods in this class are fairly low-level and unlikely to be\nof interest to users.  In fact, users are unlikely to use this class\ndirectly; rather they will be interested in Zlib::Inflate and\nZlib::Deflate.\n\nThe higher level methods are listed below.\n\n- #total_in\n- #total_out\n- #data_type\n- #adler\n- #reset\n- #finish\n- #finished?\n- #close\n- #closed?","name":"ZStream","namespace":"Zlib","path":"Zlib::ZStream","type":"class","visibility":"public"},"Zlib::ZStream#adler":{"description":"Returns the adler-32 checksum.","name":"adler","namespace":"Zlib::ZStream","path":"Zlib::ZStream#adler","type":"instance_method","visibility":"public"},"Zlib::ZStream#avail_in":{"description":"Returns bytes of data in the input buffer. Normally, returns 0.","name":"avail_in","namespace":"Zlib::ZStream","path":"Zlib::ZStream#avail_in","type":"instance_method","visibility":"public"},"Zlib::ZStream#avail_out":{"description":"Returns number of bytes of free spaces in output buffer.  Because the free\nspace is allocated automatically, this method returns 0 normally.","name":"avail_out","namespace":"Zlib::ZStream","path":"Zlib::ZStream#avail_out","type":"instance_method","visibility":"public"},"Zlib::ZStream#avail_out=":{"description":"Allocates +size+ bytes of free space in the output buffer. If there are more\nthan +size+ bytes already in the buffer, the buffer is truncated. Because\nfree space is allocated automatically, you usually don't need to use this\nmethod.","name":"avail_out=","namespace":"Zlib::ZStream","path":"Zlib::ZStream#avail_out=","type":"instance_method","visibility":"public"},"Zlib::ZStream#close":{"description":"Closes the stream. All operations on the closed stream will raise an\nexception.","name":"close","namespace":"Zlib::ZStream","path":"Zlib::ZStream#close","type":"instance_method","visibility":"public"},"Zlib::ZStream#closed?":{"description":"Returns true if the stream is closed.","name":"closed?","namespace":"Zlib::ZStream","path":"Zlib::ZStream#closed?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::ZStream#data_type":{"description":"Guesses the type of the data which have been inputed into the stream. The\nreturned value is either <tt>BINARY</tt>, <tt>ASCII</tt>, or\n<tt>UNKNOWN</tt>.","name":"data_type","namespace":"Zlib::ZStream","path":"Zlib::ZStream#data_type","type":"instance_method","visibility":"public"},"Zlib::ZStream#end":{"description":"Closes the stream. All operations on the closed stream will raise an\nexception.","name":"end","namespace":"Zlib::ZStream","path":"Zlib::ZStream#end","type":"instance_method","visibility":"public"},"Zlib::ZStream#ended?":{"description":"Returns true if the stream is closed.","name":"ended?","namespace":"Zlib::ZStream","path":"Zlib::ZStream#ended?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::ZStream#finish":{"description":"Finishes the stream and flushes output buffer.  If a block is given each\nchunk is yielded to the block until the input buffer has been flushed to\nthe output buffer.","name":"finish","namespace":"Zlib::ZStream","path":"Zlib::ZStream#finish","type":"instance_method","visibility":"public"},"Zlib::ZStream#finished?":{"description":"Returns true if the stream is finished.","name":"finished?","namespace":"Zlib::ZStream","path":"Zlib::ZStream#finished?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::ZStream#flush_next_in":{"description":"","name":"flush_next_in","namespace":"Zlib::ZStream","path":"Zlib::ZStream#flush_next_in","type":"instance_method","visibility":"public"},"Zlib::ZStream#flush_next_out":{"description":"Flushes output buffer and returns all data in that buffer.  If a block is\ngiven each chunk is yielded to the block until the current output buffer\nhas been flushed.","name":"flush_next_out","namespace":"Zlib::ZStream","path":"Zlib::ZStream#flush_next_out","type":"instance_method","visibility":"public"},"Zlib::ZStream#reset":{"description":"Resets and initializes the stream. All data in both input and output buffer\nare discarded.","name":"reset","namespace":"Zlib::ZStream","path":"Zlib::ZStream#reset","type":"instance_method","visibility":"public"},"Zlib::ZStream#stream_end?":{"description":"Returns true if the stream is finished.","name":"stream_end?","namespace":"Zlib::ZStream","path":"Zlib::ZStream#stream_end?","type":"instance_method","visibility":"public","return":[["Boolean"],""]},"Zlib::ZStream#total_in":{"description":"Returns the total bytes of the input data to the stream.  FIXME","name":"total_in","namespace":"Zlib::ZStream","path":"Zlib::ZStream#total_in","type":"instance_method","visibility":"public"},"Zlib::ZStream#total_out":{"description":"Returns the total bytes of the output data from the stream.  FIXME","name":"total_out","namespace":"Zlib::ZStream","path":"Zlib::ZStream#total_out","type":"instance_method","visibility":"public"}}
